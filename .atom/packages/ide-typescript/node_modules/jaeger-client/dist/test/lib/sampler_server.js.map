{"version":3,"sources":["../../../test/lib/sampler_server.js"],"names":["SamplingServer","port","_port","_app","_strategies","Object","create","get","_handle","bind","serviceName","response","req","res","service","query","strategy","send","status","err","_server","listen","close"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;IAEqBA,c;AAMnB,4BAAiC;AAAA,QAArBC,IAAqB,uEAAN,IAAM;;AAAA;;AAC/B,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,IAAL,GAAY,wBAAZ;AACA,SAAKC,WAAL,GAAmBC,OAAOC,MAAP,CAAc,IAAd,CAAnB;AACA,SAAKH,IAAL,CAAUI,GAAV,CAAc,WAAd,EAA2B,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA3B;AACD;;;;gCAEWC,W,EAAqBC,Q,EAA0C;AACzE,WAAKP,WAAL,CAAiBM,WAAjB,IAAgCC,QAAhC;AACD;;;sCAEuB;AACtB,WAAKP,WAAL,GAAmBC,OAAOC,MAAP,CAAc,IAAd,CAAnB;AACD;;;4BAEOM,G,EAAUC,G,EAAU;AAC1B,UAAIC,UAAUF,IAAIG,KAAJ,CAAUD,OAAxB;AACA,UAAIE,WAAW,KAAKZ,WAAL,CAAiBU,OAAjB,CAAf;AACA,UAAIE,QAAJ,EAAc;AACZH,YAAII,IAAJ,CAASD,QAAT;AACD,OAFD,MAEO;AACLH,YAAIK,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAAEE,iCAA8BL,OAA9B,OAAF,EAArB;AACD;AACF;;;4BAEuB;AACtB,WAAKM,OAAL,GAAe,KAAKjB,IAAL,CAAUkB,MAAV,CAAiB,KAAKnB,KAAtB,CAAf;AACA,aAAO,IAAP;AACD;;;4BAEa;AACZ,WAAKkB,OAAL,CAAaE,KAAb;AACD;;;;;;kBAtCkBtB,c","file":"sampler_server.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport express from 'express';\n\nexport default class SamplingServer {\n  _port: number;\n  _app: any;\n  _server: any;\n  _strategies: { [service: string]: SamplingStrategyResponse };\n\n  constructor(port: number = 5778) {\n    this._port = port;\n    this._app = express();\n    this._strategies = Object.create(null);\n    this._app.get('/sampling', this._handle.bind(this));\n  }\n\n  addStrategy(serviceName: string, response: SamplingStrategyResponse): void {\n    this._strategies[serviceName] = response;\n  }\n\n  clearStrategies(): void {\n    this._strategies = Object.create(null);\n  }\n\n  _handle(req: any, res: any) {\n    let service = req.query.service;\n    let strategy = this._strategies[service];\n    if (strategy) {\n      res.send(strategy);\n    } else {\n      res.status(404).send({ err: `unknown service name '${service}'` });\n    }\n  }\n\n  start(): SamplingServer {\n    this._server = this._app.listen(this._port);\n    return this;\n  }\n\n  close(): void {\n    this._server.close();\n  }\n}\n"]}