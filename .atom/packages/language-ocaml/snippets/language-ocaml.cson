'.source':
  'CR':
    'prefix': 'cr'
    'body': '(* CR `whoami`: $1 *)$0'
'.source.ocaml':
  'Document':
    'prefix': 'doc'
    'body': '(** [$1] $0 *)'
  'for loop':
    'prefix': 'for'
    'body': 'for ${1:i} = ${2:startval} to ${3:endval} do\n\t$4\ndone\n$0'
  'while loop':
    'prefix': 'while'
    'body': 'while ${1:condition} do\n\t$0\ndone'
  'begin':
    'prefix': 'begin'
    'body': 'begin\n\t$0\nend'
  'class':
    'prefix': 'class'
    'body': 'class ${1:name} =\n\tobject ${2:(self)}\n\t\t${3:contents}\n\tend'
  'function':
    'prefix': 'fun'
    'body': '(fun ${1:()} -> ${2:body})'
  'function alt':
    'prefix': 'func'
    'body': '(function\n| ${1:patt1} -> ${2:expr1}\n| ${3:patt2} -> ${4:expr2})'
  'function label':
    'prefix': '~f'
    'body': '~f:(fun ${1:()} -> ${2:body})'
  'let in':
    'prefix': 'lin'
    'body': 'let ${1:var(s)} = ${2:expr} in ${3:expr2}'
  'let':
    'prefix': 'let'
    'body': 'let ${1:var(s)} = ${0:expr}'
  'match pattern':
    'prefix': '|'
    'body': '| ${1:pattern} -> $0'
  'match':
    'prefix': 'match'
    'body': 'match ${1:value} with\n| ${2:patt} -> ${3:expr}\n| ${4:_} -> ${5:expr2}'
  'method':
    'prefix': 'method'
    'body': 'method ${1:name} = $0'
  'module signature':
    'prefix': 'sig'
    'body': 'module ${1:Name} : sig\n\t$0\nend'
  'module type':
    'prefix': 'mtype'
    'body': 'module type ${1:Name} = sig\n\t$0\nend'
  'module':
    'prefix': 'module'
    'body': 'module ${1:Name} = struct\n\t$0\nend'
  'try':
    'prefix': 'try'
    'body': 'try\n\t$0\nwith\n| _ -> failwith "Unknown"'
  'type':
    'prefix': 'type'
    'body': 'type ${1:name} = $0'
  'untitled':
    'prefix': 'thread'
    'body': 'ignore (Thread.create (fun () -> \n    $0\n  ) ())'
