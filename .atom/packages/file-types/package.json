{
  "_args": [
    [
      {
        "raw": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
        "spec": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
        "type": "local"
      },
      "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/apm-install-dir-11821-90473-986n9p.yo9307ldi"
    ]
  ],
  "_from": "../d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
  "_id": "file-types@0.5.5",
  "_inCache": true,
  "_location": "/file-types",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
    "spec": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
  "_shasum": "5e70dd6e932487b3f0cc5750901d738fda4262a0",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/d-11821-90473-10ub356.mb4h5dygb9/package.tgz",
  "_where": "/private/var/folders/3g/y_vrj7ms74s854vvm885d4c00000gn/T/apm-install-dir-11821-90473-986n9p.yo9307ldi",
  "bugs": {
    "url": "https://github.com/execjosh/atom-file-types/issues"
  },
  "dependencies": {},
  "description": "Specify additional file types for languages.",
  "devDependencies": {},
  "engines": {
    "atom": ">=0.185.0 <2.0.0"
  },
  "homepage": "https://github.com/execjosh/atom-file-types#readme",
  "license": "MIT",
  "main": "./lib/file-types",
  "name": "file-types",
  "optionalDependencies": {},
  "readme": "# file-types package\n\n[![Installs!](https://img.shields.io/apm/dm/file-types.svg)](https://atom.io/packages/file-types)\n[![Version!](https://img.shields.io/apm/v/file-types.svg)](https://atom.io/packages/file-types)\n[![License](https://img.shields.io/apm/l/file-types.svg)](https://github.com/execjosh/atom-file-types/blob/master/LICENSE.md)\n\nSpecify additional file types for languages.\n\n_Note:_ A subset of this functionality is now available directly in Atom--see [Customizing Language Recognition](http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_language_recognition) in the Flight Manual.\n\n## Extension Matchers\n\nTo map a filetype to a new language, use the `file-types` option. Specify the extension (without a dot) as a key, and the new default extension as the value.\n\nFor example, the `.hbs` extension defaults to the `handlebars` grammar. To change it to default to `html-htmlbars` (installed separately), open your `config.cson` (via the `Atom -> Config...` menu) and add the following rule:\n\n```cson\n\"*\": # make sure to put all \"file-types\" options under the \"*\" key\n  \"file-types\":\n    \"hbs\": \"text.html.htmlbars\"\n```\n\nAn extension matcher will be converted into a RegExp matcher. The example above is equivalent to the following:\n\n```coffee\n\"*\":\n  \"file-types\":\n    \"\\\\.hbs$\": \"text.html.htmlbars\"\n```\n\nTo see all available grammars registered in your Atom instance, open the Developer Tools Console and execute the following:\n\n```javascript\nconsole.log(Object.keys(atom.grammars.grammarsByScopeName).sort().join(\"\\n\"))\n```\n\n## RegExp Matchers\n\nYou can match with regular expressions, too. Most JavaScript regular expressions should work; but, the system looks for a dot (`.`), a pipe (`|`), a caret (`^`) at the start, or a dollar (`$`) at the end to identify RegExp matchers.\n\nThe RegExp is currently matched against the base name of the file, as opposed to the entire path.\n\nFor example, you can associate `/.*_steps\\.rb$/` with `source.cucumber.steps` in your `config.cson` as follows:\n\n```cson\n\"*\": # make sure to put all \"file-types\" options under the \"*\" key\n  \"file-types\":\n    \"_steps\\\\.rb$\": \"source.cucumber.steps\"\n```\n\nThe longest match is given precedence. If there are multiple matches of equal length, then a warning is displayed and the \"last\" (alphabetically) match is used.\n\n# Scope Names\n\nThe scope name for a grammar can be found in the settings for the corresponding language package. For example, the scope name for CoffeeScript's grammar (as provided by the [language-coffee-script package](https://github.com/atom/language-coffee-script)) is `source.coffee`.\n\nTo get a list of all scope names registered in your Atom instance, open the Developer Tools Console and execute the following:\n\n```javascript\nObject.keys(atom.grammars.grammarsByScopeName).sort().join('\\n')\n```\n\nHere is a list of the scope names available by default in Atom v1.8.0:\n\n- source.c\n- source.cake\n- source.clojure\n- source.coffee\n- source.coffee.jsx\n- source.cpp\n- source.cs\n- source.css\n- source.css.less\n- source.css.scss\n- source.csx\n- source.gfm\n- source.git-config\n- source.go\n- source.gotemplate\n- source.java\n- source.java-properties\n- source.js\n- source.js.jsx\n- source.js.rails source.js.jquery\n- source.js.regexp\n- source.js.regexp.replacement\n- source.json\n- source.litcoffee\n- source.makefile\n- source.nant-build\n- source.objc\n- source.objcpp\n- source.perl\n- source.perl6\n- source.plist\n- source.python\n- source.regexp.python\n- source.ruby\n- source.ruby.rails\n- source.ruby.rails.rjs\n- source.sass\n- source.shell\n- source.sql\n- source.sql.mustache\n- source.sql.ruby\n- source.strings\n- source.toml\n- source.yaml\n- text.git-commit\n- text.git-rebase\n- text.html.basic\n- text.html.erb\n- text.html.gohtml\n- text.html.jsp\n- text.html.mustache\n- text.html.php\n- text.html.ruby\n- text.hyperlink\n- text.junit-test-report\n- text.plain\n- text.plain.null-grammar\n- text.python.console\n- text.python.traceback\n- text.shell-session\n- text.todo\n- text.xml\n- text.xml.plist\n- text.xml.xsl\n\n# Caveats\n\nYou probably don't want to assign the same file type to multiple languages...\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/execjosh/atom-file-types.git"
  },
  "version": "0.5.5"
}
