@import "syntax-variables";
@import "ruby";
@import "coffee";

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
     color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      width: 100%;
      &.syntax--cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.syntax--cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .syntax--marker .syntax--region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .syntax--region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @light-gray;
}

.syntax--entity {
  &.syntax--name.syntax--type {
    color: @light-orange;
  }

  &.syntax--other.syntax--inherited-class {
    color: @orange;
  }

  &.syntax--name {
    &.syntax--accessor {
      color: @white;
    }
  }
}

.syntax--keyword {
  color: @purple;

  &.syntax--control {
    color: @purple;
  }

  &.syntax--operator {
    color: @light-orange;

    &.syntax--new {
      color: @blue;
    }
  }

  &.syntax--other.syntax--special-method {
    color: @blue;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }
}

.syntax--storage {
  color: @purple;

  &.syntax--type {
    color: @blue;

    &.syntax--flowtype {
      color: @very-light-gray;

      &.syntax--variable {
        color: @light-orange;
      }
    }
  }

  &.syntax--function {
    color: @blue;
  }
}

.syntax--constant {
  color: @orange;

  &.syntax--dom {
      color: @very-light-gray;
  }

  &.syntax--character.syntax--escape {
    color: @cyan;
  }

  &.syntax--numeric {
    /*color: @orange;*/
    color: @light-orange;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @orange;
  }
}

.syntax--variable {
  color: @very-light-gray;

  &.syntax--interpolation {
    color: darken(@very-light-gray, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @light-orange;
  }

  &.syntax--other {
    color: @blue;

    &.syntax--instance,
    &.syntax--class {
      color: @light-orange
    }

    &.syntax--readwrite,
    &.syntax--property,
    &.syntax--object {
      color: @very-light-gray;
    }

    &.syntax--constant {
      color: @light-orange;
    }
  }

  &.syntax--type {
    color: @light-orange;
  }

  &.syntax--prototype {
    color: @orange;
  }

  &.syntax--this,
  &.syntax--super {
    color: @blue;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @orange;


  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
  }

  &.syntax--unquoted.syntax--js {
    color: @light-orange;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @light-gray;
    }

    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--string {
      &.syntax--begin,
      &.syntax--end {
        color: @red;
      }
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--tag {
      color: saturate(spin(darken(@blue, 16%), 6), 13%);
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.syntax--class {
      color: @very-light-gray;
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

  &.syntax--terminator,
  &.syntax--key-value {
      color: @light-orange;
  }
}

.syntax--support {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--function  {
    color: @light-orange;

    &.syntax--any-method {
      color: @very-light-gray;
    }

    &.syntax--misc {
      color: @orange;
    }
  }

  &.syntax--constant {
    color: @very-light-gray;
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    //color: @blue;
    color: @white;
  }

  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @light-orange;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @blue;
  }

  &.syntax--other.syntax--attribute-name {
    color: @light-orange;
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;

    .syntax--inherited-class {
      color: @light-orange;
    }
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.syntax--brace {
    color: @very-light-gray;
  }

  &.syntax--import,
  &.syntax--export {
    .syntax--module {
      color: @light-orange;
    }
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source.syntax--css {
    .syntax--support.syntax--constant.syntax--property-value {
        color: @orange;
    }
}

.syntax--source.syntax--less {
    .syntax--support.syntax--function {
        color: @orange;
    }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @orange;
  }
}

.syntax--source.syntax--glsl {
  .syntax--storage {
    &.syntax--modifier {
        color: @blue;
    }
  }
  .syntax--support {
    &.syntax--function {
      color: @blue;
    }

    &.syntax--variable {
      color: @orange;
    }
  }
}

.syntax--source.syntax--ts {
  .syntax--storage {
    &.syntax--type {
      color: @blue;
    }
  }

  .syntax--entity {
    &.syntax--name {
      color: @blue;

      &.syntax--function {
        color: @white;
      }
    }

    &.syntax--instance {
      color: @light-orange;
    }

    &.syntax--inherited-class {
      color: @light-orange;
    }
  }

  .syntax--parameter {
    &.syntax--function {
      color: @very-light-gray;
    }
  }

  .syntax--language {
    &.syntax--variable {
      color: @blue;
    }
  }
}

.syntax--source.syntax--jsx {
    .syntax--es {
        .syntax--meta.syntax--scope.syntax--tag {
            .syntax--embedded.syntax--expression {
                .syntax--punctuation.syntax--section {
                    color: @white;
                }
            }
            .syntax--meta.syntax--tag {
                color: saturate(spin(darken(@blue, 16%), 6), 13%);

                .syntax--embedded.syntax--expression {
                    .syntax--source {
                        color: @very-light-gray;
                    }
                }
            }
        }
    }
    .syntax--other {
        &.syntax--object.syntax--key {
            .syntax--js-label {
                color: @very-light-gray;
            }
        }
    }
}

.xhtml,
.syntax--sgml,
.syntax--html {
  &.syntax--doctype {
    color: @orange;
  }

  &.syntax--custom {
    &.syntax--elements {
      color: @light-orange;
    }
  }
}


.syntax--c {
    &.syntax--dot-access {
        color: @syntax-text-color;
    }
}

.syntax--objc {
    &.syntax--punctuation {
        &.syntax--scope {
            color: @syntax-text-color;
        }
    }

    &.syntax--support {
        &.syntax--function {
            color: @light-orange;
        }
    }
}

.syntax--objcpp {
    .syntax--support {
        color: @light-orange;
    }
}

.syntax--cs {
    &.syntax--meta {
        &.syntax--body {
            color: @syntax-text-color;
        }

        &.syntax--method,
        &.syntax--namespace {
            &.syntax--body {
                color: @syntax-text-color;
            }
            color: @light-orange;
        }

        &.syntax--keyword {
            &.syntax--using {
                color: @light-orange;

                &.syntax--other {
                    color: @cyan;
                }
            }
        }

        .syntax--variable {
            &.syntax--parameter {
                &.syntax--function {
                    color: @syntax-text-color;
                }
            }
        }
    }
}

.syntax--java {
    &.syntax--source {
        .syntax--variable {
            &.syntax--definition {
                color: @very-light-gray;
            }
        }

        .syntax--meta {
            &.syntax--class {
                &.syntax--meta.syntax--body {
                    color: @very-light-gray;
                }
            }

            &.syntax--package {
                .syntax--storage.syntax--modifier {
                    color: @light-orange;
                }
            }
        }
    }
}

.syntax--uno {
    &.syntax--source {
        &.syntax--keyword {
            color: @cyan;
        }

        &.syntax--meta {
            &.syntax--class {
                &.syntax--body {
                    color: @syntax-text-color;
                }

                &.syntax--identifier {
                    .syntax--entity {
                        &.syntax--name {
                            color: @syntax-text-color;
                        }
                    }
                }

                .syntax--storage {
                    &.syntax--type {
                        color: @light-orange;
                    }
                }
            }
            &.syntax--method {
                &.syntax--return-type {
                    color: @light-orange;
                }
            }
            &.syntax--method-call {
                .syntax--meta {
                    &.syntax--method {
                        color: @light-orange;
                    }
                }
            }

            &.syntax--meta {
                .syntax--meta {
                    &.syntax--method {
                        &.syntax--annotation {
                            color: @light-orange;
                        }
                    }
                }
            }
        }
    }
}

.syntax--shell {
  &.syntax--builtin {
    &.syntax--function {
      color: @light-orange;
    }
  }

  &.syntax--definition {
    &.syntax--variable {
      color: @orange;
    }
  }
}

.syntax--dots {
  .syntax--constant {
    &.syntax--other {
      color: @blue;
    }
  }
}

.syntax--regexp {
  color: @orange !important;
}
