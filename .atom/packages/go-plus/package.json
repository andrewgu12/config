{
  "_args": [
    [
      {
        "raw": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
        "spec": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/apm-install-dir-11809-16475-y86yub.yff4huayvi"
    ]
  ],
  "_from": "../d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
  "_id": "go-plus@5.7.2",
  "_inCache": true,
  "_location": "/go-plus",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
    "spec": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
  "_shasum": "a5287ec7e0eb48c6ad019b73b8eb20e724aa86fd",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/d-11809-16475-18xdavv.8xm7psyvi/package.tgz",
  "_where": "/private/var/folders/2z/h6wmtcdn6ml7293p_19xsscm0000gn/T/apm-install-dir-11809-16475-y86yub.yff4huayvi",
  "activationCommands": {
    "atom-workspace": [
      "golang:get-package",
      "golang:update-tools",
      "golang:toggle-panel",
      "golang:gofmt",
      "golang:goimports",
      "golang:goreturns",
      "golang:showdoc"
    ],
    "atom-text-editor[data-grammar~=\"go\"]:not([mini])": [
      "golang:run-tests",
      "golang:hide-coverage",
      "golang:gorename"
    ]
  },
  "activationHooks": [
    "core:loaded-shell-environment"
  ],
  "atomTranspilers": [
    {
      "glob": "{lib,spec}/**/*.js",
      "transpiler": "atom-babel6-transpiler",
      "options": {
        "cacheKeyFiles": [
          "package.json",
          ".babelrc"
        ]
      }
    }
  ],
  "author": {
    "name": "Joe Fitzgerald",
    "email": "jfitzgerald@pivotal.io",
    "url": "http://github.com/joefitzgerald"
  },
  "bugs": {
    "url": "https://github.com/joefitzgerald/go-plus/issues"
  },
  "configSchema": {
    "disabledBundledPackages": {
      "title": "Disabled Bundled Packages",
      "description": "go-plus bundles some third party packages; if you indicate that you do not want to be prompted for package installation, this comma separated list of package names will be updated",
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      }
    },
    "panel": {
      "title": "Panel",
      "type": "object",
      "properties": {
        "displayMode": {
          "title": "Panel Display Mode",
          "description": "Control the behavior of the go-plus panel when a new Atom window is opened",
          "type": "string",
          "default": "open",
          "enum": [
            "open",
            "closed"
          ],
          "order": 1
        },
        "focusOnFailure": {
          "title": "Focus the go-plus panel on failure ",
          "description": "If the panel is hidden, or the panel is showing a different tab, the panel will be expanded and the output tab focused when a failure occurs.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "fontSize": {
          "title": "Panel Font Size",
          "description": "Control the font size for content displayed in the panel",
          "type": "string",
          "default": "1.2em",
          "order": 3
        }
      }
    },
    "config": {
      "title": "Config",
      "type": "object",
      "properties": {
        "gopath": {
          "title": "GOPATH",
          "description": "(Not Recommended For Use) If you have issues setting your GOPATH in your environment, you can use this to establish a fallback value. See https://github.com/joefitzgerald/go-config/wiki/GOPATH for more information.",
          "type": "string",
          "default": "",
          "order": 1
        }
      }
    },
    "autocomplete": {
      "title": "Autocomplete",
      "type": "object",
      "properties": {
        "scopeBlacklist": {
          "title": "Scope Blacklist",
          "description": "Suggestions will not be shown when the cursor is inside the following comma-delimited scope(s).",
          "type": "string",
          "default": ".source.go .comment, .source.go .constant.numeric, .source.go .string.quoted",
          "order": 1
        },
        "suppressBuiltinAutocompleteProvider": {
          "title": "Suppress The Provider Built-In To autocomplete-plus",
          "description": "Suppress the provider built-in to the autocomplete-plus package when editing .go files.",
          "type": "boolean",
          "default": true,
          "order": 2
        },
        "suppressActivationForCharacters": {
          "title": "Suppress Activation For Characters",
          "description": "Suggestions will not be provided when you type one of these characters.",
          "type": "array",
          "default": [
            "comma",
            "newline",
            "space",
            "tab",
            "/",
            "\\",
            "(",
            ")",
            "\"",
            "'",
            ":",
            ";",
            "<",
            ">",
            "~",
            "!",
            "@",
            "#",
            "$",
            "%",
            "^",
            "&",
            "*",
            "|",
            "+",
            "=",
            "[",
            "]",
            "{",
            "}",
            "`",
            "~",
            "?",
            "-"
          ],
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "snippetMode": {
          "title": "Snippet Mode",
          "description": "When inserting suggestions for funcs, generate a snippet that includes parenthesis only (none), argument name (name), or argument name and type (nameAndType).",
          "type": "string",
          "default": "name",
          "enum": [
            "name",
            "nameAndType",
            "none"
          ],
          "order": 4
        },
        "proposeBuiltins": {
          "title": "Propose Builtins",
          "description": "Add built-in types, functions and constants to an autocompletion proposals. Default: true.",
          "type": "boolean",
          "default": true,
          "order": 5
        },
        "unimportedPackages": {
          "title": "Unimported Packages",
          "description": "Provide suggestions for unimported packages. Default: true.",
          "type": "boolean",
          "default": true,
          "order": 6
        }
      }
    },
    "format": {
      "title": "Format",
      "type": "object",
      "properties": {
        "formatOnSave": {
          "title": "Run Format Tool On Save",
          "description": "Run the configured format tool each time a file is saved",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "tool": {
          "title": "Format Tool",
          "description": "Choose one: goimports, goreturns, or gofmt",
          "type": "string",
          "default": "goimports",
          "enum": [
            "goimports",
            "goreturns",
            "gofmt"
          ],
          "order": 2
        }
      }
    },
    "get": {
      "title": "Go Get",
      "type": "object",
      "properties": {
        "timeout": {
          "title": "Timeout",
          "description": "Stop trying to update tools after this number of milliseconds",
          "type": "integer",
          "default": 60000,
          "order": 1
        }
      }
    },
    "guru": {
      "title": "Guru",
      "type": "object",
      "properties": {
        "highlightIdentifiers": {
          "title": "Highlight Identifiers When Cursor Moves",
          "description": "When a cursor is moved, highlight all occurrences of the identifier in the document",
          "type": "boolean",
          "default": true,
          "order": 1
        }
      }
    },
    "lint": {
      "title": "Lint",
      "type": "object",
      "properties": {
        "args": {
          "title": "gometalinter Arguments",
          "description": "Arguments to be passed when invoking `gometalinter`. Please ensure the `--json` argument is always included. Arguments are comma-separated.",
          "type": "array",
          "default": [
            "--vendor",
            "--disable-all",
            "--enable=vet",
            "--enable=vetshadow",
            "--enable=golint",
            "--enable=ineffassign",
            "--enable=goconst",
            "--tests",
            "--json",
            "."
          ],
          "items": {
            "type": "string"
          },
          "order": 1
        }
      }
    },
    "navigator": {
      "title": "Navigator",
      "type": "object",
      "properties": {
        "mode": {
          "title": "Mode",
          "description": "Use guru or godef for go to definition",
          "type": "string",
          "default": "godef",
          "enum": [
            "guru",
            "godef"
          ],
          "order": 1
        }
      }
    },
    "test": {
      "title": "Test",
      "type": "object",
      "properties": {
        "runTestsOnSave": {
          "title": "Run Tests On Save",
          "description": "Run `go test -coverprofile` each time a file is saved",
          "type": "boolean",
          "default": true,
          "order": 1
        },
        "timeout": {
          "title": "Timeout",
          "description": "Stop running tests after this number of milliseconds",
          "type": "integer",
          "default": 60000,
          "order": 2
        },
        "runTestsWithCoverage": {
          "title": "Run Tests With Coverage",
          "description": "Runs `go test` with `-coverprofile` flag set, enabling coverage to be shown in the editor",
          "type": "boolean",
          "default": true,
          "order": 3
        },
        "runTestsWithShortFlag": {
          "title": "Run Tests With Short Flag Set",
          "description": "Runs `go test` with `-short` flag set",
          "type": "boolean",
          "default": true,
          "order": 4
        },
        "runTestsWithVerboseFlag": {
          "title": "Run Tests With Verbose Flag Set",
          "description": "Runs `go test` with `-v` flag set",
          "type": "boolean",
          "default": false,
          "order": 5
        },
        "coverageHighlightMode": {
          "title": "Coverage Highlight Mode",
          "description": "Control the way that coverage highlighting occurs",
          "type": "string",
          "default": "uncovered",
          "enum": [
            "covered-and-uncovered",
            "covered",
            "uncovered",
            "disabled"
          ],
          "order": 6
        },
        "coverageDisplayMode": {
          "title": "Coverage Display Mode",
          "description": "Control the way that coverage is displayed in the editor: gutter, or highlight",
          "type": "string",
          "default": "highlight",
          "enum": [
            "highlight",
            "gutter"
          ],
          "order": 7
        }
      }
    }
  },
  "consumedServices": {
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    },
    "go-plus.view": {
      "versions": {
        "0.1.0": "consumeViewProvider"
      }
    },
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinter"
      }
    }
  },
  "dependencies": {
    "ansi-style-parser": "^1.1.0",
    "atom-babel6-transpiler": "^1.1.2",
    "atom-select-list": "^0.7.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "etch": "0.12.7",
    "etch-octicon": "^2.0.0",
    "fs-extra": "^5.0.0",
    "fuzzaldrin-plus": "^0.6.0",
    "lodash": "^4.17.4",
    "resize-observer-polyfill": "^1.5.0",
    "semver": "^5.4.1",
    "temp": "^0.8.3"
  },
  "description": "Makes working with Go in Atom awesome.",
  "devDependencies": {
    "babel-eslint": "^8.0.3",
    "eslint": "^4.13.1",
    "eslint-config-standard": "^11.0.0-beta.0",
    "eslint-config-standard-flow": "^1.0.1",
    "eslint-config-standard-jsx": "^4.0.2",
    "eslint-plugin-flowtype": "^2.40.1",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-node": "^5.2.1",
    "eslint-plugin-promise": "^3.6.0",
    "eslint-plugin-react": "^7.5.1",
    "eslint-plugin-standard": "^3.0.1",
    "flow-bin": "^0.61.0"
  },
  "engines": {
    "atom": ">=1.12.7 <2.0.0",
    "node": ">= 6"
  },
  "homepage": "https://atom.io/packages/go-plus",
  "keywords": [
    "go",
    "golang",
    "autocomplete",
    "gofmt",
    "gocode",
    "format",
    "fmt",
    "godef",
    "godoc",
    "goimports",
    "gorename",
    "goreturns",
    "lint",
    "vet",
    "gometalinter",
    "go-debug",
    "delve",
    "hyperclick",
    "guru"
  ],
  "license": "Apache-2.0",
  "main": "./lib/main",
  "name": "go-plus",
  "optionalDependencies": {},
  "providedServices": {
    "go-config": {
      "versions": {
        "1.0.0": "provideGoConfig"
      }
    },
    "go-get": {
      "versions": {
        "2.0.0": "provideGoGet"
      }
    },
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "hyperclick.provider": {
      "versions": {
        "0.0.0": "provideHyperclick"
      }
    }
  },
  "readme": "# [go-plus](https://atom.io/packages/go-plus) [![Build Status](https://travis-ci.org/joefitzgerald/go-plus.svg?branch=master)](https://travis-ci.org/joefitzgerald/go-plus) [![Build status](https://ci.appveyor.com/api/projects/status/d0cekvaprt9wo1et/branch/master?svg=true)](https://ci.appveyor.com/project/joefitzgerald/go-plus/branch/master) [![Slack](https://img.shields.io/badge/atom_slack-%23go--plus-blue.svg?style=flat)](https://atom-slack.herokuapp.com) [![Slack](https://img.shields.io/badge/gophers_slack-%23go--plus-blue.svg?style=flat)](https://gophersinvite.herokuapp.com)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/joefitzgerald/go-plus.svg)](https://greenkeeper.io/)\n\n> An Improved [Go](https://www.golang.org) Experience For The [Atom Editor](https://atom.io)\n\n* Github: https://github.com/joefitzgerald/go-plus\n* Atom: https://atom.io/packages/go-plus\n\n## Overview\n\nThis package includes the following functionality:\n\n* Display information about your current go installation, by running `go version` and `go env`\n* Autocomplete using `gocode`\n* Format your code with `gofmt`, `goimports`, or `goreturns`;\n  optionally run one of these tools on save of any `.go` file\n* Run `go install .` and `go test -c -o {tempdir} .` to verify your code compiles\n  and to keep `gocode` suggestions up to date\n* Run a variety of linters (e.g. `golint`, `vet`, etc.) against your code using `gometalinter`\n* Run tests, display test output, and display test coverage using `go test -coverprofile`\n* Display documentation for identifiers in source code using\n  [`gogetdoc`](https://github.com/zmb3/gogetdoc)\n* Rename the symbol under your cursor using `gorename`\n* Go to definition using `guru` or `godef`\n* Highlight occurrences of an identifier using `guru`\n* Find usages of an identifier using `guru`\n\nYou can add debug functionality to Atom by installing the following package:\n\n* [go-debug](https://atom.io/packages/go-debug): Debug your package / tests using [`delve`](https://github.com/derekparker/delve)\n\n## Builds\n\n### How Are The Builds Performed?\n\nThe following commands are run for the directory of the current file:\n* `go install .` (for normal `.go` files)\n* `go test -o {tmpdir} -c .` (for `_test.go` files)\n\n### Why Are You Running `go install` Instead Of `go build`?\n\n`gocode` (and a few other tools, like `gotype`) work on `.a` files (i.e. the package object archive), and the way to keep these up to date is to run `go install` periodically. This ensures your autocomplete suggestions are kept up to date without having to resort to `gocode set autobuild true` :tada:.\n\n### But What About `gb`?\n\nWe are open to suggestions for detecting a package which is built with gb; please feel free to submit a pull request that detects a gb package without any explicit configuration and runs it.\n\n## Platforms\n\nThe package has CI for OS X, Windows and Ubuntu.\n\n## Installing Missing Tools\n\nIf you are missing any required tools, you may be prompted to install them. You can also manually install the required tools in your terminal:\n\n```\ngo get -u golang.org/x/tools/cmd/goimports\ngo get -u golang.org/x/tools/cmd/gorename\ngo get -u github.com/sqs/goreturns\ngo get -u github.com/nsf/gocode\ngo get -u github.com/alecthomas/gometalinter\ngo get -u github.com/zmb3/gogetdoc\ngo get -u github.com/rogpeppe/godef\ngo get -u golang.org/x/tools/cmd/guru\n```\n\n## Having Issues?\n\nPlease consult the [FAQ](https://github.com/joefitzgerald/go-plus/wiki/FAQ) prior to [opening an issue](https://github.com/joefitzgerald/go-plus/issues/new): https://github.com/joefitzgerald/go-plus/wiki/FAQ\n\nIf you have an issue with debugging, file an issue with  [`go-debug`](https://github.com/lloiser/go-debug) [here](https://github.com/lloiser/go-debug/issues/new).\n\n## Maintainers\n* Joe Fitzgerald ([@joefitzgerald](https://github.com/joefitzgerald))\n* Zac Bergquist ([@zmb3](https://github.com/zmb3))\n* Lukas Beranek ([@lloiser](https://github.com/lloiser))\n\n## Contributors\nA list of contributors can be found at https://github.com/joefitzgerald/go-plus/graphs/contributors. Thank you so much to everyone has contributed to the package :heart:. You are awesome!\n\n## Contributing\n\nContributions are greatly appreciated. Please fork this repository, make your\nchanges, and open a pull request. See [Contributing](https://github.com/joefitzgerald/go-plus/wiki/Contributing) for detailed instructions.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joefitzgerald/go-plus.git"
  },
  "scripts": {
    "flow": "flow",
    "lint": "eslint ./lib ./spec"
  },
  "version": "5.7.2"
}
