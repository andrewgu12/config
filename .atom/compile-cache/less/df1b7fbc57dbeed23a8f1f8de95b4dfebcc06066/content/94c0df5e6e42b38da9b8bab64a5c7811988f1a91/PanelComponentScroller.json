{"digest":"acfd5e1013693beb624715a102a76be77d48fff3","css":".nuclide-ui-panel-component-scroller {\n  display: flex;\n  flex: 1 1 auto;\n  min-width: 0;\n  min-height: 0;\n  /*\n   * Chromium on OS X with a Touchpad acts like scrolling containers have\n   * `overflow-scrolling: touch;` content, which creates large, extraneous layers in the\n   * nuclide-file-tree because of the new stacking context. Force a new stacking context and\n   * wrapping layer to prevent Chromium from creating those extraneous layers.\n   *\n   * This dramatically reduces the cost of layer tree updates (\"Update Layer Tree\" events in the\n   * devtools \"Timeline\" tab) that occur frequently while typing.\n   */\n  isolation: isolate;\n  overflow: scroll;\n}\n/**\n * A silly no-op style that forces custom scrollbars when scrollbars are set to \"always show\".\n * A Chromium bug prevents custom scrollbars from triggering a redraw if they load after render.\n * Themes are loaded *after* Nuclide has finished activating, so we're stuck with ugly scrollbars.\n * If we pre-emptively create a custom scrollbar, this mitigates the bug...\n * All major Atom themes use custom scrollbars in \"always show\" mode.. so this is fairly safe.\n *\n * Will likely be fixed when this patch lands in Electron (Committed on 2017/08/11)\n * https://bugs.chromium.org/p/chromium/issues/detail?id=454346\n */\n.scrollbars-visible-always .nuclide-ui-panel-component-scroller::-webkit-scrollbar {\n  display: block;\n}\n.nuclide-ui-panel-component-scroller--column {\n  flex-direction: column;\n}\n","imports":[],"version":1}