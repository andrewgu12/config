'use babel';

var _require = require('immutable');

var fromJS = _require.fromJS;

module.exports = function output(state, action) {
  if (state === undefined) state = [];

  switch (action.type) {
    case "LOG_RECEIVED":
      var immutableState = fromJS(state);
      var outputString = action.output;
      var splitedOutputString = outputString.split('\n');
      splitedOutputString.forEach(function (stringWithoutNewline) {
        if (stringWithoutNewline != "") {
          immutableState = immutableState.push(stringWithoutNewline);
          if (state.length > 1000) immutableState = immutableState.shift();
        }
      });
      return immutableState.toJS();
      break;
    case "LOG_RESET":
      return [];
      break;
    default:
      return state;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taW5nYm8vY29uZmlnLy5hdG9tL3BhY2thZ2VzL2RvY2tlci9saWIvcmVkdXgvcmVkdWNlcnMvb3V0cHV0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQTs7ZUFFSSxPQUFPLENBQUMsV0FBVyxDQUFDOztJQUE5QixNQUFNLFlBQU4sTUFBTTs7QUFFWCxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsTUFBTSxDQUFDLEtBQUssRUFBTyxNQUFNLEVBQUU7TUFBcEIsS0FBSyxnQkFBTCxLQUFLLEdBQUcsRUFBRTs7QUFDekMsVUFBTyxNQUFNLENBQUMsSUFBSTtBQUNoQixTQUFLLGNBQWM7QUFDakIsVUFBSSxjQUFjLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ25DLFVBQUksWUFBWSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDakMsVUFBSSxtQkFBbUIsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ25ELHlCQUFtQixDQUFDLE9BQU8sQ0FBQyxVQUFDLG9CQUFvQixFQUFLO0FBQ3BELFlBQUksb0JBQW9CLElBQUksRUFBRSxFQUFFO0FBQzlCLHdCQUFjLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQzNELGNBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLEVBQ3JCLGNBQWMsR0FBRyxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDM0M7T0FDRixDQUFDLENBQUM7QUFDSCxhQUFPLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUM3QixZQUFNO0FBQUEsQUFDUixTQUFLLFdBQVc7QUFDZCxhQUFPLEVBQUUsQ0FBQztBQUNWLFlBQU07QUFBQSxBQUNSO0FBQ0UsYUFBTyxLQUFLLENBQUM7QUFBQSxHQUNoQjtDQUNGLENBQUMiLCJmaWxlIjoiL1VzZXJzL21pbmdiby9jb25maWcvLmF0b20vcGFja2FnZXMvZG9ja2VyL2xpYi9yZWR1eC9yZWR1Y2Vycy9vdXRwdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJ1xuXG52YXIge2Zyb21KU30gPSByZXF1aXJlKCdpbW11dGFibGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBvdXRwdXQoc3RhdGUgPSBbXSwgYWN0aW9uKSB7XG4gIHN3aXRjaChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJMT0dfUkVDRUlWRURcIjpcbiAgICAgIGxldCBpbW11dGFibGVTdGF0ZSA9IGZyb21KUyhzdGF0ZSk7XG4gICAgICBsZXQgb3V0cHV0U3RyaW5nID0gYWN0aW9uLm91dHB1dDtcbiAgICAgIGxldCBzcGxpdGVkT3V0cHV0U3RyaW5nID0gb3V0cHV0U3RyaW5nLnNwbGl0KCdcXG4nKTtcbiAgICAgIHNwbGl0ZWRPdXRwdXRTdHJpbmcuZm9yRWFjaCgoc3RyaW5nV2l0aG91dE5ld2xpbmUpID0+IHtcbiAgICAgICAgaWYgKHN0cmluZ1dpdGhvdXROZXdsaW5lICE9IFwiXCIpIHtcbiAgICAgICAgICBpbW11dGFibGVTdGF0ZSA9IGltbXV0YWJsZVN0YXRlLnB1c2goc3RyaW5nV2l0aG91dE5ld2xpbmUpO1xuICAgICAgICAgIGlmIChzdGF0ZS5sZW5ndGggPiAxMDAwKVxuICAgICAgICAgICAgaW1tdXRhYmxlU3RhdGUgPSBpbW11dGFibGVTdGF0ZS5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBpbW11dGFibGVTdGF0ZS50b0pTKCk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiTE9HX1JFU0VUXCI6XG4gICAgICByZXR1cm4gW107XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuIl19