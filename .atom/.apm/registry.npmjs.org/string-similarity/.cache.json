{"_id":"string-similarity","_rev":"22-2be9ae8af7857e7f796e396cc514d208","name":"string-similarity","description":"Finds degree of similarity between strings, based on Dice's Coefficient, which is mostly better than Levenshtein distance.","dist-tags":{"latest":"1.2.0"},"versions":{"1.0.0":{"name":"string-similarity","version":"1.0.0","description":"Finds degree of similarity between strings, based on Dice's Coefficient, which is mostly better than Levenshtein distance.","main":"compare-strings.js","scripts":{"test":"gulp test"},"repository":{"type":"git","url":"git://github.com/aceakash/string-similarity.git"},"keywords":["strings","similar","difference","similarity","compare","comparison","degree","match","matching","dice","levenshtein"],"author":{"name":"Akash Kurdekar","email":"npm@kurdekar.com","url":"http://untilfalse.com/"},"license":"ISC","devDependencies":{"gulp":"^3.8.10","gulp-jasmine":"^1.0.1","gulp-watch":"^2.0.0"},"dependencies":{"lodash":"^2.4.1"},"gitHead":"42d3430251c9658c0fe9b2b24d9016ef9744693e","bugs":{"url":"https://github.com/aceakash/string-similarity/issues"},"homepage":"https://github.com/aceakash/string-similarity","_id":"string-similarity@1.0.0","_shasum":"cf316603aec15729714582f5ecf5c5683ec82033","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"aceakash","email":"npm@kurdekar.com"},"maintainers":[{"name":"aceakash","email":"npm@kurdekar.com"}],"dist":{"shasum":"cf316603aec15729714582f5ecf5c5683ec82033","tarball":"https://registry.npmjs.org/string-similarity/-/string-similarity-1.0.0.tgz"},"directories":{}},"1.1.0":{"name":"string-similarity","version":"1.1.0","description":"Finds degree of similarity between strings, based on Dice's Coefficient, which is mostly better than Levenshtein distance.","main":"compare-strings.js","scripts":{"test":"gulp test"},"repository":{"type":"git","url":"git://github.com/aceakash/string-similarity.git"},"keywords":["strings","similar","difference","similarity","compare","comparison","degree","match","matching","dice","levenshtein"],"author":{"name":"Akash Kurdekar","email":"npm@kurdekar.com","url":"http://untilfalse.com/"},"license":"ISC","devDependencies":{"gulp":"^3.9.1","gulp-jasmine":"^2.3.0","gulp-watch":"^4.3.6"},"dependencies":{"lodash":"^4.13.1"},"gitHead":"8352ccafbfdbccebc87946a6a99b06d85f34d15e","bugs":{"url":"https://github.com/aceakash/string-similarity/issues"},"homepage":"https://github.com/aceakash/string-similarity#readme","_id":"string-similarity@1.1.0","_shasum":"3c66498858a465ec7c40c7d81739bbd995904914","_from":".","_npmVersion":"3.8.3","_nodeVersion":"4.2.6","_npmUser":{"name":"aceakash","email":"npm@kurdekar.com"},"dist":{"shasum":"3c66498858a465ec7c40c7d81739bbd995904914","tarball":"https://registry.npmjs.org/string-similarity/-/string-similarity-1.1.0.tgz"},"maintainers":[{"name":"aceakash","email":"npm@kurdekar.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/string-similarity-1.1.0.tgz_1465227395762_0.2918381483759731"},"directories":{}},"1.2.0":{"name":"string-similarity","version":"1.2.0","description":"Finds degree of similarity between strings, based on Dice's Coefficient, which is mostly better than Levenshtein distance.","main":"compare-strings.js","scripts":{"test":"gulp test"},"repository":{"type":"git","url":"git://github.com/aceakash/string-similarity.git"},"keywords":["strings","similar","difference","similarity","compare","comparison","degree","match","matching","dice","levenshtein"],"author":{"name":"Akash Kurdekar","email":"npm@kurdekar.com","url":"http://untilfalse.com/"},"license":"ISC","devDependencies":{"gulp":"^3.9.1","gulp-jasmine":"^2.3.0","gulp-watch":"^4.3.6"},"dependencies":{"lodash":"^4.13.1"},"gitHead":"d8cae66a2c78d525b13cf766bc6de879d63f79c9","bugs":{"url":"https://github.com/aceakash/string-similarity/issues"},"homepage":"https://github.com/aceakash/string-similarity#readme","_id":"string-similarity@1.2.0","_shasum":"d75153cb383846318b7a39a8d9292bb4db4e9c30","_from":".","_npmVersion":"4.0.2","_nodeVersion":"6.7.0","_npmUser":{"name":"aceakash","email":"npm@kurdekar.com"},"dist":{"shasum":"d75153cb383846318b7a39a8d9292bb4db4e9c30","tarball":"https://registry.npmjs.org/string-similarity/-/string-similarity-1.2.0.tgz"},"maintainers":[{"name":"aceakash","email":"npm@kurdekar.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/string-similarity-1.2.0.tgz_1495466172115_0.3841619931627065"},"directories":{}}},"readme":"string-similarity\n=================\n\nFinds degree of similarity between two strings, based on [Dice's Coefficient](http://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient), which is mostly better than [Levenshtein distance](http://en.wikipedia.org/wiki/Levenshtein_distance).\n\n## Usage\nInstall using:\n\n```shell\nnpm install string-similarity --save\n```\n\nIn your code:\n\n```javascript\nvar stringSimilarity = require('string-similarity');\n\nvar similarity = stringSimilarity.compareTwoStrings('healed', 'sealed'); \n\nvar matches = stringSimilarity.findBestMatch('healed', ['edward', 'sealed', 'theatre']);\n```\n## API\n\nRequiring the module gives an object with two methods:\n\n### compareTwoStrings(string1, string2)\n\nReturns a fraction between 0 and 1, which indicates the degree of similarity between the two strings. 0 indicates completely different strings, 1 indicates identical strings. The comparison is case-insensitive.\n\n##### Arguments\n  \n1. string1 (string): The first string\n2. string2 (string): The second string\n  \nOrder does not make a difference.\n  \n##### Returns\n  \n(number): A fraction from 0 to 1, both inclusive. Higher number indicates more similarity.\n\n##### Examples\n  \n```javascript\nstringSimilarity.compareTwoStrings('healed', 'sealed');\n// → 0.8\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'For sale: table in very good  condition, olive green in colour.');\n// → 0.7073170731707317\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'For sale: green Subaru Impreza, 210,000 miles');\n// → 0.3013698630136986\n\nstringSimilarity.compareTwoStrings('Olive-green table for sale, in extremely good condition.', \n  'Wanted: mountain bike with at least 21 gears.');\n// → 0.11267605633802817\n```\n\n### findBestMatch(mainString, targetStrings)\n\nCompares `mainString` against each string in `targetStrings`.\n\n##### Arguments\n\n1. mainString (string): The string to match each target string against.\n2. targetStrings (Array): Each string in this array will be matched against the main string.\n\n##### Returns\n(Object): An object with a `ratings` property, which gives a similarity rating for each target string, and a `bestMatch` property, which specifies which target string was most similar to the main string.\n\n##### Examples\n```javascript\nstringSimilarity.findBestMatch('Olive-green table for sale, in extremely good condition.', [\n  'For sale: green Subaru Impreza, 210,000 miles', \n  'For sale: table in very good condition, olive green in colour.', \n  'Wanted: mountain bike with at least 21 gears.'\n]);\n// → \n{ ratings:\n   [ { target: 'For sale: green Subaru Impreza, 210,000 miles',\n       rating: 0.3013698630136986 },\n     { target: 'For sale: table in very good condition, olive green in colour.',\n       rating: 0.7073170731707317 },\n     { target: 'Wanted: mountain bike with at least 21 gears.',\n       rating: 0.11267605633802817 } ],\n  bestMatch:\n   { target: 'For sale: table in very good condition, olive green in colour.',\n     rating: 0.7073170731707317 } }\n```\n\n##Build Status\n![Build status](https://codeship.com/projects/2aa453d0-0959-0134-8a76-4abcb29fe9b4/status?branch=master)\n","maintainers":[{"name":"aceakash","email":"npm@kurdekar.com"}],"time":{"modified":"2018-02-06T03:08:49.975Z","created":"2014-11-27T00:28:42.024Z","1.0.0":"2014-11-27T00:28:42.024Z","1.1.0":"2016-06-06T15:36:37.590Z","1.2.0":"2017-05-22T15:16:13.057Z"},"homepage":"https://github.com/aceakash/string-similarity#readme","keywords":["strings","similar","difference","similarity","compare","comparison","degree","match","matching","dice","levenshtein"],"repository":{"type":"git","url":"git://github.com/aceakash/string-similarity.git"},"author":{"name":"Akash Kurdekar","email":"npm@kurdekar.com","url":"http://untilfalse.com/"},"bugs":{"url":"https://github.com/aceakash/string-similarity/issues"},"license":"ISC","readmeFilename":"README.md","users":{"hugo-cornu":true,"diegoperini":true,"alcovegan":true,"recursion_excursion":true,"albinekb":true,"visualheuristics":true,"danielo515":true,"mfaraday":true,"gggauravgandhi":true,"thuanhai":true,"khaledalyawad":true,"thetimmaeh":true,"hani":true,"hoanganh25991":true},"_attachments":{},"_etag":"W/\"f61c842cc3a78b0b937e32e0f139e265\"","_lastModified":"Sun, 27 May 2018 18:25:20 GMT","_cached":true}