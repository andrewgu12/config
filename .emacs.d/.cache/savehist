;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(buffer-name-history helm-grep-history grep-files-history grep-regexp-history helm-M-x-input-history minibuffer-history))
(setq buffer-name-history '("hw2.asm" "prob1.s" "prob1.c" "*Packages*"))
(setq helm-grep-history '("PROJECT_SIGNALS"))
(setq grep-files-history '("*.[ch]"))
(setq grep-regexp-history '("PROJECT_SIGNALS"))
(setq helm-M-x-input-history '("new frame" "full scre" "undo" "load " "undo" "grep" "new fram" "undo" "udno" "full " "new fra" "undo" "kill " #("push" 0 4 (face font-lock-function-name-face fontified t)) "kill " "undo" "full scree" "org mode" "full scre" "new fram" "undo" "pack" "company mode" "company " "load theme" "instal" "load theme" "install p" "load theme" "emacs-" "undo" "insta" "load theme" "install pack" "load theme" "company mode" "kill buff" #("be" 0 2 (font-lock-face package-description help-echo #("Description: an Emacs 24 theme which may well be fully awesome..." 13 65 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc clues-theme (20161213 327) "an Emacs 24 theme which may well be fully awesome..." ((emacs (24 0))) single "melpa" nil ((:commit . "abd61f2b7f3e98de58ca26e6d1230e70c6406cc7") (:url . "https://github.com/emacsfodder/emacs-clues-theme")) nil) tabulated-list-entry [("clues-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc clues-theme (20161213 327) "an Emacs 24 theme which may well be fully awesome..." ((emacs (24 0))) single "melpa" nil ((:commit . "abd61f2b7f3e98de58ca26e6d1230e70c6406cc7") (:url . "https://github.com/emacsfodder/emacs-clues-theme")) nil) action package-menu-describe-package) #("20161213.327" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("an Emacs 24 theme which may well be fully awesome..." 0 52 (font-lock-face package-description))])) "list buffer" "list package" "undo" "install pa" "undo" "newfra" "undo" "fullscree" "load file" "undo" "full " "load theme" "package" "package insta" "load theme" "package" "package instal" "select" "fullscre" "undo" "fullsc" "reload" "offset" "projectile project" "helm projectile find dir" "helm projectile grep" "rgrep" "fullscreen" "customize group" "fullscre" "fullscren"))
(setq minibuffer-history '("bst_test" "/Users/mingbo/Documents/school/senior/enee459b/hw2/" "binary" "/Users/mingbo/.space" "user.h" "kthread.h" "lowl" "sys" "sign" "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall." "bst_" "/Users/mingbo/Documents/projects/interviews/ctci/lib/" "/Users/mingbo/Documents/school/senior/enee459b/hw2/" "/Users/mingbo/Documents/school/senior/enee459b/hw2/prob6.c" "/Users/mingbo/Documents/school/senior/enee459b/hw2/" "/Users/mingbo/Documents/projects/interviews/ctci/lib/binary" "/Users/mingbo/Documents/projects/interviews/ctci/test/" "/Users/mingbo/Documents/school/senior/enee459b/hw2/" "/Users/mingbo/Documents/school/senior/enee459b/hw2/prob1.c" "/Users/mingbo/Documents/school/senior/enee459b/hw2/" "syscall" "atom one" "/Users/mingbo/.spacemacs" "atom one dark" "atom on" "atom one" "/Users/mingbo/.emacs" "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/signal" "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/sysc" "/Users/mingbo/Documents/projects/interviews/ctci/test/" "/Users/mingbo/Documents/projects/interviews/ctci/lib/binary" "/Users/mingbo/.space" "/Users/mingbo/.spacemacs" "/Users/mingbo/Documents/projects/interviews/ctci/lib/" "/Users/mingbo/Documents/projects/interviews/ctci/test/" "/Users/mingbo/Documents/projects/interviews/ctci/lib/" "atom" "atom-one" "atom one" "atom-one-" "atom-one" #("xconstructor" 0 1 (font-lock-face font-lock-function-name-face fontified t) 1 12 (font-lock-face font-lock-function-name-face fontified t)) "/Users/mingbo/Documents/projects/interviews/ctci/lib/" "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/user" "statement" "user.c" "ns" "sys" "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/alarm" "/Users/mingbo/Documents/school/senior/cmsc"))
(setq evil-jumps-history '((1149 "/Users/mingbo/Documents/projects/interviews/ctci/lib/BST.js") (644 "/Users/mingbo/Documents/projects/interviews/ctci/lib/BST.js") (1 "/Users/mingbo/Documents/projects/interviews/ctci/lib/BST.js") (5547 "/Users/mingbo/.spacemacs") (6561 "/Users/mingbo/.spacemacs") (1 "/Users/mingbo/.spacemacs") (1628 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/libc/signal.c") (2544 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/include/geekos/kthread.h") (1 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/include/geekos/kthread.h") (2651 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/lowlevel.asm") (2650 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/lowlevel.asm") (1615 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/lowlevel.asm") (1 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/lowlevel.asm") (9123 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (9124 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (9123 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (9178 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (1 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/libc/signal.c") (8915 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (1 "/Users/mingbo/Documents/school/senior/cmsc412/412-mgu123/src/geekos/syscall.c") (228 "/Users/mingbo/Documents/school/senior/enee459b/hw2/hw2.txt")))
(setq mark-ring 'nil)
(setq search-ring '("struct user_context" "PROJECT_SIGN" "PROJECT_SIGNALS" "atom-one-dark-theme" "theme" "editing-style" "spacemacs/init" "space" "init" "user-config" "company" "user" "load-theme" "PROEJCT_SIGNALS" "PROJECT_SIGNALS" "PROJECT"))
(setq regexp-search-ring 'nil)
(setq extended-command-history '("new-frame" "toggle-frame-fullscreen" "load-file" "undo" "helm-projectile-grep" "package-build-minor-mode" "kill-buffer" "org-mode" "company-mode" "package-install" "dotspacemacs-mode" "load-theme" "list-buffers" "list-packages" "org-reload"))
