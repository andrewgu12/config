"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Variable {
    constructor(name, nameRange, range, defined, buildVariable) {
        this.name = name;
        this.nameRange = nameRange;
        this.range = range;
        this.defined = defined;
        this.buildVariable = buildVariable;
    }
    getName() {
        return this.name;
    }
    getNameRange() {
        return this.nameRange;
    }
    /**
     * Returns the range of the entire variable. This includes the symbols for
     * the declaration of the variable such as the $, {, and } symbols.
     *
     * @return the range in the document that this variable encompasses in its
     *         entirety
     */
    getRange() {
        return this.range;
    }
    /**
     * Returns whether this variable has been defined or not.
     *
     * @return true if this variable has been defined, false otherwise
     */
    isDefined() {
        return this.buildVariable !== undefined;
    }
    isBuildVariable() {
        return this.buildVariable === true;
    }
    isEnvironmentVariable() {
        return this.buildVariable === false;
    }
}
exports.Variable = Variable;
