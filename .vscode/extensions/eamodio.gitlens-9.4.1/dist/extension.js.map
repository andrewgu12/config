{"version":3,"sources":["file:///webpack/bootstrap","file:///external \"vscode\"","file:///external \"path\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\parse\\index.js","file:///external \"fs\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\safer-buffer\\safer.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_asc\\index.js","file:///external \"buffer\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\vsls\\vscode.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_desc\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_week\\index.js","file:///external \"stream\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\index.js","file:///external \"crypto\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_valid\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_leap_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_month\\index.js","file:///external \"child_process\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\_lib\\getTimezoneOffsetInMilliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\are_ranges_overlapping\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_index_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_distance_in_words_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_format_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\_lib\\build_formatting_tokens_reg_exp\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_strict\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_to_now\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\each_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\format\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_weeks_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_overlapping_days_in_ranges\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_time\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_after\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_before\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_equal\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_first_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_friday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_future\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_monday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_past\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_saturday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_sunday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_thursday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tuesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_wednesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_weekend\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_within_range\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\max\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\min\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\bom-handling.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\internal.js","file:///external \"string_decoder\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf16.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf7.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\streams.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\extend-node.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\tslib\\tslib.es6.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\comparers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\config.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\constants.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\object.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\array.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\date.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObject.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_freeGlobal.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_root.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\now.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_Symbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_getRawTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_objectToString.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_baseGetTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObjectLike.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isSymbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toNumber.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\debounce.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toFinite.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toInteger.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\before.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\once.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\function.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\gate.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\string.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\log.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\iterable.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\version.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\searchTree.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\logger.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\messages.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\trackedDocument.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\documentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitDocumentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\shell.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\locator.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\formatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\commitFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitUri.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\file.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\statusFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\commit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\blameCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\status.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\branch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\diffParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\diff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\logCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\remote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\provider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\azure-devops.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket-server.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\custom.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\github.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\gitlab.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\factory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\repository.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\stashCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\tag.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\blameParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\branchParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\logParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\remoteParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\stashParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\statusParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\tagParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\treeParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\git.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\protocol.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\host.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\guest.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\vsls.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitService.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\shared\\colors.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\blameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\gutterBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\heatmapBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\recentChangesAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\fileAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\lineAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\fsProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\hovers\\lineHoverController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\keyboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\statusbar\\statusBarController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\lineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitLineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\viewNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\folderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\helpers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchTrackingStatusNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchOrTagFolderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commonQuickPicks.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchesAndTagsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\remotesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitFileQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\fileHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repositoriesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repoStatusQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\stashListQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remoteNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remotesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoriesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareResultsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\comparePickerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchResultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewBase.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\compareView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\fileHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\lineHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\repositoriesView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\searchView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewCommands.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\webviewEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\settingsEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\welcomeEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\container.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\configuration.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\closeUnchangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyMessageToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyRemoteFileUrlToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyShaToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffBranchWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffDirectory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWith.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithNext.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\externalDiff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchesInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openChangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openCommitInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openRepoInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openWorkingFile.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\repositories.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\resetSuppressedWarnings.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\searchCommits.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showLastQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitFileDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCurrentBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickFileHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickRepoStatus.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickStashList.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashApply.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashDelete.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashSave.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\supportGitLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\switchMode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\modesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\toggleCodeLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","getTimezoneOffsetInMilliseconds","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","offsetDiff","parse","startOfISOWeek","dirtyDate","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfWeek","weekStartsOn","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","dirtyAmount","amount","getISOYear","fourthOfJanuary","dirtyDateLeft","dirtyDateRight","timeLeft","timeRight","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","format","getDay","startOfDay","MILLISECONDS_IN_DAY","startOfDayLeft","startOfDayRight","timestampLeft","getTimezoneOffset","timestampRight","Math","round","getDaysInMonth","desiredMonth","getMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","dateLeft","dateRight","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","options","encoder","getEncoder","res","write","trail","end","concat","decode","skipDecodeWarning","console","error","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","type","Error","toLowerCase","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","map","vscode","async","getApi","liveshareExtension","extensions","getExtension","extensionId","extensionApi","isActive","activate","getApiAsync","Role","Access","View","ViewItem","monthIndex","lastDayOfMonth","addDays","differenceInCalendarMonths","compareAsc","sign","difference","abs","differenceInMilliseconds","floor","ceil","startOfISOYear","MILLISECONDS_IN_WEEK","dateLeftStartOfWeek","dateRightStartOfWeek","addHours","addISOYears","addMilliseconds","addMinutes","addMonths","addQuarters","addSeconds","addWeeks","addYears","areRangesOverlapping","closestIndexTo","closestTo","compareDesc","differenceInCalendarDays","differenceInCalendarISOWeeks","differenceInCalendarISOYears","differenceInCalendarQuarters","differenceInCalendarWeeks","differenceInCalendarYears","differenceInDays","differenceInHours","differenceInISOYears","differenceInMinutes","differenceInMonths","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","distanceInWordsStrict","distanceInWordsToNow","eachDay","endOfDay","endOfHour","endOfISOWeek","endOfISOYear","endOfMinute","endOfMonth","endOfQuarter","endOfSecond","endOfToday","endOfTomorrow","endOfWeek","endOfYear","endOfYesterday","getDayOfYear","getDaysInYear","getHours","getISODay","getISOWeek","getISOWeeksInYear","getMilliseconds","getMinutes","getOverlappingDaysInRanges","getQuarter","getSeconds","getYear","isAfter","isBefore","isEqual","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isLeapYear","isMonday","isPast","isSameDay","isSameHour","isSameISOWeek","isSameISOYear","isSameMinute","isSameMonth","isSameQuarter","isSameSecond","isSameWeek","isSameYear","isSaturday","isSunday","isThisHour","isThisISOWeek","isThisISOYear","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isValid","isWednesday","isWeekend","isWithinRange","isYesterday","lastDayOfISOWeek","lastDayOfISOYear","lastDayOfQuarter","lastDayOfWeek","lastDayOfYear","max","setDay","setDayOfYear","setISODay","setISOWeek","setISOYear","setMilliseconds","setMinutes","setQuarter","setSeconds","setYear","startOfHour","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfToday","startOfTomorrow","startOfYear","startOfYesterday","subDays","subHours","subISOYears","subMilliseconds","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","dirtyISOYear","enLocale","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDateToCompare","comparison","locale","localize","localizeOptions","addSuffix","Boolean","months","includeSeconds","monthsSinceStartOfYear","years","cleanDate","isNaN","toString","dateLeftStartOfHour","dateRightStartOfHour","dateLeftStartOfYear","dateRightStartOfYear","dateLeftStartOfMinute","dateRightStartOfMinute","dateLeftStartOfQuarter","dateRightStartOfQuarter","currentMonth","dateLeftStartOfSecond","dateRightStartOfSecond","dirtyMonth","baseTimezoneOffset","dirtyInitialRangeStartDate","dirtyInitialRangeEndDate","dirtyComparedRangeStartDate","dirtyComparedRangeEndDate","initialStartTime","initialEndTime","comparedStartTime","comparedEndTime","dirtyDatesArray","Array","result","minDistance","timeToCompare","forEach","index","currentDate","distance","undefined","startOfISOWeekLeft","startOfISOWeekRight","startOfWeekLeft","startOfWeekRight","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","MMMM","dd","ddd","dddd","A","a","aa","formatterToken","number","rem100","ordinal","formattingTokensRegExp","commonFormatterKeys","formatterKeys","push","formattingTokens","sort","reverse","RegExp","join","MINUTES_IN_YEAR","unit","mathPartial","partialMethod","String","now","dirtyStartDate","dirtyEndDate","dirtyStep","startDate","step","endTime","dates","M","MM","addLeadingZeros","Q","D","DD","DDD","DDDD","E","W","WW","YY","substr","YYYY","GG","GGGG","H","HH","h","hh","mm","ss","S","SS","SSS","Z","formatTimezone","ZZ","X","x","delimeter","absOffset","targetLength","output","dirtyFormatStr","formatStr","localeFormatters","formatter","input","match","Function","buildFormatFn","formatFn","thisYear","valueOf","differenceInMs","dateToCompare","dirtyLeftDate","dirtyRightDate","dateLeftStartOfDay","dateRightStartOfDay","tomorrow","startTime","yesterday","arguments","latestTimestamp","apply","earliestTimestamp","dirtyDayOfMonth","dayOfMonth","dirtyDay","currentDay","dirtyDayOfYear","dirtyHours","dirtyISOWeek","isoWeek","dirtyMilliseconds","milliseconds","dirtyMinutes","dirtyQuarter","dirtySeconds","dirtyYear","PrependBOMWrapper","this","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","j","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","addr","bytes","curAddr","writeTable","k","part","code","codeTrail","len","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","constructor","_transform","done","_flush","cb","chunks","on","isBuffer","original","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","__rest","indexOf","getOwnPropertySymbols","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","Comparer","textDocumentComparer","TextDocumentComparer","[object Object]","lhs","rhs","textEditorComparer","TextEditorComparer","useId","usePosition","viewColumn","document","equals","id","uriComparer","UriComparer","scheme","fsPath","AnnotationsToggleMode","CodeLensCommand","CodeLensScopes","CustomRemoteType","DateStyle","FileAnnotationType","GravatarDefaultStyle","HighlightLocations","KeyMap","LogLevel","StatusBarCommand","ViewBranchesLayout","ViewFilesLayout","extensionOutputChannelName","extensionQualifiedId","extensionTerminalName","BuiltInCommands","CommandContext","DocumentSchemes","GlyphChars","GlobalState","setCommandContext","external_vscode_","executeCommand","SetContext","isActiveDocument","editor","activeTextEditor","isTextEditor","uri","Output","DebugConsole","ImageMimetypes",".png",".gif",".jpg",".jpeg",".jpe",".webp",".tif",".tiff",".bmp","WorkspaceState","Objects","array_Arrays","entries","flatten","stringify","flattened","_flatten","JSON","isArray","isEmpty","paths","path","results","child","values","Arrays","compactHierarchy","root","joinPath","isRoot","children","relativePath","countUniques","source","accessor","uniqueCounts","item","filterMap","predicateMapper","reduce","accumulator","current","mapped","filterMapAsync","groupBy","groupings","groupByMap","group","set","Map","groupByFilterMap","makeHierarchical","splitPath","compact","seed","descendants","hierarchy","folder","folderName","f","uniqueBy","predicate","uniqueValues","filter","date_patch","formatterOptions","date_Dates","Dates","newDate","MillisecondsPerMinute","MillisecondsPerHour","MillisecondsPerDay","dateDaysFromNow","toFormatter","fromNow","date_fns","lodash_es_isObject","_freeGlobal","global","freeSelf","self","lodash_es_root","lodash_es_now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","tag","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","isBinary","FUNC_ERROR_TEXT","nativeMax","nativeMin","lodash_es_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","args","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","clearTimeout","flush","INFINITY","MAX_INTEGER","lodash_es_toFinite","lodash_es_toInteger","remainder","before_FUNC_ERROR_TEXT","lodash_es_before","function_Functions","lodash_es_once","gate","descriptor","fn","gateKey","configurable","writable","promise","isPromise","then","Functions","cachedOnce","cached","Promise","resolve","cancellable","reject","onCancellationRequested","debounce","_a","assign","track","opts","pending","tracked","comma","empty","openBrace","openParen","closeParen","fnBodyRegex","fnBodyStripCommentsRegex","fnBodyStripParamDefaultValueRegex","ms","getParameters","fnBody","open","close","param","trim","once","propOf","propOfCore","interval","timer","disposable","dispose","clearInterval","setInterval","waitUntil","timeout","counter","string_Strings","Strings","getDurationMilliseconds","secs","nanosecs","hrtime","pathNormalizeRegex","pathStripTrailingSlashRegex","tokenRegex","tokenSanitizeRegex","padLeft","padTo","padding","width","getWidth","repeat","padRight","getTokensFromTemplate","template","tokens","truncateTo","option","suffix","collapseWhitespace","padDirection","interpolate","context","lines","substring","md5","external_crypto_","update","digest","normalizePath","fileName","stripTrailingSlash","normalized","addLeadingSlash","pad","before","after","padLeftOrTruncate","truncate","padOrTruncate","left","padRightOrTruncate","pluralize","zero","plural","illegalCharsForFSRegex","ellipsis","sanitizeForFileSystem","replacement","sha1","ansiRegex","containsNonAsciiRegex","emoji","joiners","graphemes","codePointAt","isFullwidthCodePoint","cp","log_correlationContext","correlationCounter","clearCorrelationContext","correlationId","delete","LogInstanceNameFn","log_debug","timed","log_log","debug","logFn","logger_Logger","log","parameters","MAX_SAFE_INTEGER","isDebugging","level","Debug","Verbose","condition","instanceName","toLoggableName","correlate","correlationContext","instance","setCorrelationContext","enter","loggableParams","singleLine","argFns","argFn","loggable","v","toLoggable","sanitize","logWithDebugParams","exit","logError","ex","timing","exitDetails","logResult","catch","Iterables","Versions","some","next","every","find","first","iterator","flatMap","mapper","has","isIterable","separator","last","skip","take","union","sources","StringIterator","_value","_pos","PathIterator","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","right","searchTree_TernarySearchTree","segments","_iter","_root","element","iter","reset","segment","hasNext","oldElement","stack","dir","parent","pop","candidate","limit","_nodeIterator","data","_forEach","callback","_iterator","major","minor","patch","pre","compare","v1","v2","localeCompare","fromString","version","ver","ConsolePrefix","isDebuggingRegex","loggableFn","customLoggableFn","subscriptions","configuration","onDidChange","onConfigurationChanged","initializingChangeEvent","section","changed","Silent","createOutputChannel","contextOrMessage","params","message","shift","appendLine","toLoggableParams","warn","show","toISOString","getUTCMilliseconds","command","gitOutput","debugOnly","_isDebugging","env","VSCODE_DEBUGGING_EXTENSION","AnnotationStatus","annotationProvider_AnnotationProviderBase","trackedDocument","decoration","highlightDecoration","correlationKey","getCorrelationKey","onDidChangeTextEditorSelection","onTextEditorSelectionChanged","clear","textEditor","selection","selections","active","line","editorId","editorUri","status","setDecorations","additionalDecorations","_b","_c","changes","_resetDebounced","onReset","provideAnnotation","_disposed","Computing","decorations","ranges","Computed","shaOrLine","onProvideAnnotation","SuppressedMessages","messages_Messages","commit","showMessage","CommitHasNoPreviousCommitWarning","shortSha","author","formattedDate","CommitNotFoundWarning","title","showOutputChannel","FileNotUnderSourceControlWarning","GitDisabledWarning","GitVersionWarning","LineUncommittedWarning","NoRepositoryWarning","actions","ViewsHideSupportGitLens","suppressedMessage","SupportGitLensNotification","Open","Commands","ShowWelcomePage","suppressionKey","dontShowAgain","showInformationMessage","showWarningMessage","showErrorMessage","messages","Global","trackedDocument_TrackedDocument","_document","dirty","_eventDelegates","_onDidBlameStateChange","_forceDirtyStateChangeOnNextDocumentChange","_hasRemotes","_isDirtyIdle","_isTracked","_blameFailed","_repo","initialize","onDidBlameStateChange","event","_disposable","container_Container","git","_uri","gitUri_GitUri","fromUri","repo","getRepository","onRepositoryChanged","initializing","RepositoryChange","Repository","forceDirtyStateChangeOnNextDocumentChange","hasRemotes","isBlameable","isDirtyIdle","isRevision","sha","isTracked","lineCount","ActiveFileStatus","getStatus","reason","state","wasBlameable","forceBlameChange","getEditorIfActive","blameable","fire","documentTracker_DocumentTracker","_onDidChangeBlameState","_onDidChangeDirtyState","_onDidTriggerDirtyIdle","_documentMap","onDidChangeActiveTextEditor","onActiveTextEditorChanged","onDidChangeTextDocument","onTextDocumentChanged","onDidCloseTextDocument","onTextDocumentClosed","onDidSaveTextDocument","onTextDocumentSaved","onDidChangeBlameState","onDidChangeDirtyState","onDidTriggerDirtyIdle","_dirtyIdleTriggerDelay","_dirtyIdleTriggeredDebounced","_timer","doc","addCore","File","Vsls","isDirty","resetForceDirtyStateChangeOnNextDocumentChange","fireDocumentDirtyStateChanged","documentOrId","_add","_get","toKey","openTextDocument","documentUri","useVersionedPath","msg","includes","BinaryTextDocument","MissingRevisionTextDocument","ensureInitialized","setImmediate","_dirtyStateChangedDebounced","documentTracker_EmptyTextDocument","gitUri","eol","LF","isClosed","isUntitled","languageId","range","position","regex","GitDocumentState","cache","gitDocumentTracker_GitDocumentTracker","isWindows","platform","runDownPath","exe","external_path_","external_fs_","haystack","PATH","needle","RunError","exitCode","super","captureStackTrace","run","maxBuffer","stdin","stdinEncoding","proc","external_child_process_","err","stdout","stderr","lib","findSpecificGit","findExecutable","cmd","possibleExts","ext","possibleFullPath","SYSTEMROOT","execPath","raw","findSystemGitWin32","basePath","findGitPath","findGitDarwin","spaceReplacementRegex","formatter_Formatter","collapsableWhitespace","_item","_options","dateFormat","tokenOptions","dateFormatOrOptions","_formatter","emojiMap","emojiRegex","commitFormatter_CommitFormatter","_ago","_date","formatDate","_agoOrDate","dateStyle","config","defaultDateStyle","Absolute","ago","_padOrTruncate","agoOrDate","authorAgo","authorAgoOrDate","logCommit_GitLogCommit","GitCommitType","getFormattedDiffStatus","changesShort","isStagedUncommitted","isUncommitted","truncateMessageAtNewLine","Space","Ellipsis","fromTemplateCore","gitUri_empty","slash","commitOrRepoPath","GitLens","query","authority","fragment","repoPath","gitService_GitService","ref","ensureValidUNCPath","versionedPath","shortenSha","file","relativeTo","getDirectory","Dot","directory","useVslsScheme","vsls","isMaybeGuest","with","previous","previousUri","previousSha","fileOrName","resolveToUri","originalFileName","isTrackable","Git","getRepoPath","stagedUncommittedSha","fileNameOrUri","getFormattedPath","getRelativePath","normalizedFileName","normalizedRepoPath","startsWith","uriOrRef","fileNameOrFile","repoName","filePath","file_GitFile","GitFile","getFormattedDirectory","includeOriginal","ArrowLeft","statusIconsMap","!","?","C","R","T","U","B","getStatusIcon","statusOcticonsMap","getStatusOcticon","missing","statusTextMap","getStatusText","statusFormatter_StatusFileFormatter","working","statusFile","files","icon","workingTreeStatus","indexStatus","Pencil","SpaceThinnest","Check","SpaceThin","EnDash","gravatarCache","missingGravatarHash","CommitFormatting","commit_GitCommit","email","previousFileName","_fileName","_previousSha","isFile","_shortSha","git_Git","Blame","StashFile","isStash","Stash","_isStagedUncommitted","_isUncommitted","previousFileShortSha","previousFileSha","_resolvedPreviousFileSha","previousShortSha","workingUri","workingFileName","_dateFormatter","fallback","hash","gravatar","fromTemplate","resolveReference","fromCommit","change","blameCommit_GitBlameCommit","getChangedValue","status_GitStatus","branch","upstream","detached","branch_GitBranch","isDetached","formatDetached","_diff","added","deleted","getDiffStatus","expand","getUpstreamStatus","behind","ahead","ArrowDown","ArrowUp","status_GitStatusFile","staged","workTreeStatus","tracking","remote","_basename","getName","lastIndexOf","_name","getRemote","starred","workspaceState","StarredBranches","updateStarred","star","nameStatusDiffRegex","shortStatDiffRegex","unifiedDiffRegex","diffParser_GitDiffParser","currentStart","previousStart","diff_GitDiffChunk","currentLines","previousLines","removed","chunkLines","chunkLine","insertions","deletions","currentPosition","previousPosition","_chunk","_lines","parseChunk","committedDate","parentShas","isMerge","nextShortSha","nextSha","nextUri","nextFileName","GitRemoteType","RemoteResourceType","remote_GitRemote","domain","provider","types","default","defaultRemote","DefaultRemote","getNameFromRemoteResource","resource","Branch","Branches","Commit","Repo","Revision","provider_RemoteProvider","protocol","custom","baseUrl","url","clipboard","writeText","showGenericErrorMessage","openUrl","getUrlForBranch","encodeURIComponent","getUrlForBranches","getUrlForCommit","getUrlForFile","getUrlForRepository","issueEnricherRegex","stripGitRegex","sshDomainRegex","sshPathRegex","azure_devops_AzureDevOpsRemote","bitbucket_issueEnricherRegex","prEnricherRegex","bitbucket_BitbucketRemote","formatName","bitbucket_server_issueEnricherRegex","bitbucket_server_prEnricherRegex","bitbucket_server_BitbucketServerRemote","project","custom_CustomRemote","urls","repository","getContext","branches","fileLine","fileRange","fileInCommit","fileInBranch","repoBase","github_issueEnricherRegex","issueEnricher3rdParyRegex","github_GitHubRemote","gitlab_issueEnricherRegex","gitlab_GitLabRemote","defaultProviders","factory_RemoteProviderFactory","providers","matcher","creator","cfg","rc","getCustomProvider","Bitbucket","BitbucketServer","Custom","GitHub","GitLab","RepositoryChangeEvent","solely","repository_Repository","onAnyRepositoryChanged","suspended","closed","_onDidChange","_onDidChangeFileSystem","supportsChangeEvents","_fireChangeDebounced","_fireFileSystemChangeDebounced","_fsWatchCounter","_pendingChanges","_closed","getWorkspaceFolder","fromRepoPath","formattedName","normalizedPath","endsWith","_suspended","watcher","createFileSystemWatcher","onDidCreate","onDidDelete","onDidChangeFileSystem","stopWatchingFileSystem","_providers","loadProviders","_remotes","fireChange","Remotes","fireFileSystemChange","Stashes","_branch","Tags","Config","Closed","progress","fetchCore","withProgress","location","Notification","fetch","getBranch","getBranches","getChangedFilesCount","stat","mtime","remotesCfg","getRemotesCore","getStashList","getStatusForRepo","getTags","remotes","getRemotes","pullCore","force","pushCore","fs","StarredRepositories","_fsWatcherDisposable","onFileSystemChanged","reasons","fireChangeCore","fireFileSystemChangeCore","uris","stashCommit_GitStashCommit","stashName","GitTag","annotation","blameParser_GitBlameParser","currentUser","authors","commits","lineParts","relativeFileName","entry","authorEmail","authorDate","authorTimeZone","summary","parseEntry","originalLine","b","branchWithTrackingRegex","branchWithTrackingStateRegex","branchParser_GitBranchParser","parseState","diffRegex","emptyEntry","logParser_GitLogParser","maxCount","recentCommit","truncationCount","parseFileName","matches","truncated","remoteRegex","urlRegex","remoteParser_GitRemoteParser","providerFactory","groups","parseGitUrl","uniqueness","stashParser_emptyEntry","stashParser_GitStashParser","fileNames","aheadStatusV1Regex","behindStatusV1Regex","statusParser_GitStatusParser","porcelainVersion","parseV1","parseV2","upstreamStatus","aheadStatus","behindStatus","rawStatus","file1","file2","parseStatusFile","tagWithRefRegex","tagWithAnnotationRegex","tagParser_GitTagParser","tags","treeRegex","GitTreeParser","trees","commitSha","rootSha","defaultBlameParams","defaultLogParams","defaultStashParams","GitErrors","badRevision","notAValidObjectName","GitWarnings","notARepository","outsideRepository","noPath","noCommits","notFound","foundButNotInRevision","headNotABranch","noUpstream","unknownRevision","mustRunInWorkTree","patchWithConflicts","noRemoteRepositorySpecified","remoteConnectionError","notAGitCommand","GitErrorHandling","pendingCommands","emptyArray","emptyObj","local","guest","cwd","configs","errors","errorHandling","runOpts","GCM_INTERACTIVE","GCM_PRESERVE_CREDS","LC_ALL","gitCommand","waiting","exception","splice","gitInfo","Ignore","Throw","defaultExceptionHandler","duration","logGitCommand","warning","gitPath","shaRegex","shaLikeRegex","stagedUncommittedRegex","uncommittedRegex","strings","stagedUncommitted","uncommitted","advanced","abbreviatedShaLength","shaShortenRegex","rev","extract","gitMajor","gitMinor","pathspec","allowConflicts","ignoreWhitespace","startLine","endLine","contents","all","deletedOrMissingSha","pattern","ref1","ref2","tool","renames","search","forkPoint","deleteAfter","pathspecs","GIT_OPTIONAL_LOCKS","uncommittedSha","RequestType","GitCommandRequestType","RepositoriesInFolderRequestType","WorkspaceFileExistsRequestType","defaultWhitelistFn","gitWhitelist","leadingSlashRegex","host_VslsHostService","_api","_service","_localToSharedPaths","_sharedToLocalPaths","onDidChangeIsServiceAvailable","onAvailabilityChanged","onDidChangeWorkspaceFolders","onWorkspaceFoldersChanged","onRequest","onGitCommandRequest","onRepositoriesInFolderRequest","onWorkspaceFileExistsRequest","api","service","shareService","ServiceId","unshareService","requestType","handler","cancellation","available","workspaceFolders","cc","getCorrelationContext","localPath","sharedPath","convertLocalUriToShared","localPaths","_localPathsRegex","sharedPaths","_sharedPathsRegex","request","isRootWorkspace","shared","localCwd","arg","convertSharedUriToLocal","folderUri","repositories","getRepositories","vslsUri","exists","fileExists","localUri","sharedUri","vslsUriRootRegex","guest_VslsGuestService","isServiceAvailable","getSharedService","Enabled","response","sendRequest","ensureCase","vslsUriPrefixRegex","vsls_VslsController","_host","_guest","Readonly","_waitForReady","_onReady","onDidChangeSession","onLiveShareSessionChanged","session","role","Host","liveshare","allowGuestAccess","share","Guest","connect","RepoSearchWarnings","doesNotExist","userConfigRegex","mappedAuthorRegex","GitRepoSearchBy","_onDidChangeRepositories","_branchesCache","_tagsCache","_tagsWithRefsCache","_trackedCache","_userMapCache","_repositoryTree","forPaths","onDidChangeWindowState","onWindowStateChanged","_repositoriesLoadingPromise","onDidChangeRepositories","UseCaching","caching","enabled","updateContext","fireRepositoriesChanged","focused","resume","suspend","getRepositoriesInFolder","repositorySearch","repos","findSuperstr","reposToDelete","depth","anyRepoChangedFn","rootPath","getRepoPathCore","excludes","getConfiguration","repoPaths","repositorySearchCore","rp","folders","promises","rej","isDirectory","repositoryTree","hasRepository","any","HasRemotes","isCloseAffordance","checkout","getOrderedRepositories","total","report","increment","isCancellationRequested","pull","fileExistsWithCase","repoPathLength","getLogForFile","findNextFileName","findNextFileNameCore","getRecentShaForFile","getLog","commitOrFileName","tracker","getOrAdd","getHighlanderRepoPath","highlander","cachedBlame","getBlameForFileCore","emptyPromise","blame","customArguments","getCurrentUser","errorMessage","setBlameFailure","getBlameForFileContentsCore","blame_contents","skipCache","getBlameForFile","blameLine","lineToBlame","getBlameForFileContents","getBlameForRangeSync","allLines","shas","Set","revparse_currentBranch","diff_shortstat","parseShortStat","config_get","user","config_getRegex","mappedAuthor","check_mailmap","cachedDiff","getDiffForFileCore","getEncoding","getDiffForFile","diff_nameStatus","parseNameStatus","show_status","getLogCommitForFile","log_recent","firstIfNotFound","isSha","maxListItems","searchBy","searchArgs","Author","ChangedLines","Changes","Files","Message","Sha","log_search","getLogForSearch","fileHistoryFollowsRenames","fromFile","cachedLog","getLogForFileCore","log_file","hasTrackingBranch","merge_base","includeAll","factory","filePathOrUri","skipCacheUpdate","isVslsScheme","findRepositoryForPath","parts","revparse_toplevel","getActiveRepoPath","getRepositoryTree","repoPathOrUri","findSubstr","vslsPath","stash_list","validateVersion","status_file","includeRefs","showref_tag","parseWithRef","ls_tree","toRevisionUri","schemeOruri","cacheKey","isTrackedCore","ls_files","getDiffTool","difftool_fileDiff","difftool_dirDiff","resolved","isShaLike","revparse","ensuredRef","cat_file_validate","cat_validate","add","directoryOrUri","stash_apply","stash_delete","stash_save","ensureGitVersion","u","stash_push","gitExtension","getAPI","setOrFindGitPath","getGitPath","getGitVersion","deletedOrMissing","throwIfLessThan","feature","gitVersion","0","1","2","cssColorRegex","toRgba","color","defaultHeatmapHotColor","defaultHeatmapColdColor","escapeMarkdownRegex","markdownHeaderReplacement","ZeroWidthSpace","computedHeatmapColor","annotations_Annotations","heatmap","getHeatmapColor","renderOptions","borderColor","baseColor","cold","colors","hot","age","computeAge","rgba","g","rgb","toFixed","hasRemote","annotationType","commandBar","MuchGreaterThan","diffWith_DiffWithCommand","getMarkdownCommandArgs","RecentChanges","SquareWithTopShadow","openFileRevision_OpenFileRevisionCommand","ArrowUpRight","openCommitInRemote_OpenCommitInRemoteCommand","MiddleEllipsis","showQuickCommitFileDetails_ShowQuickCommitFileDetailsCommand","showCommitDetailsCommand","avatar","getHoverCommandBar","showQuickCommitDetails_ShowQuickCommitDetailsCommand","enrichMessage","hovers","avatars","getGravatarUri","defaultGravatarsStyle","markdown","isTrusted","codeDiff","getCodeDiff","Dash","ArrowLeftRightLong","getDiffForLine","hoverMessage","getHoverDiffMessage","dateFormatOrFormatOptions","uncommittedColor","contentText","separateLines","borderStyle","borderWidth","spacing","backgroundColor","fontWeight","fontStyle","height","margin","textDecoration","applyHeatmap","scrollable","blameAnnotationProvider_BlameAnnotationProviderBase","_blame","getText","setForceDirtyStateChangeOnNextDocumentChange","_hoverProviderDisposable","commitLine","highlightDecorationRanges","validateRange","half","median","lookup","newest","oldest","ageThreshold","coldColor","hotColor","annotations","details","registerHoverProvider","provideHover","provideChangesHover","provideDetailsHover","getCommitForHover","logCommit","getHoverMessage","defaultDateFormat","hover","changesHover","over","character","getBlame","gutterBlameAnnotationProvider_GutterBlameAnnotationProvider","gravatarDefault","gutterRenderOptions","decorationsMap","avatarDecorationsMap","gutter","computedHeatmap","compacted","getComputedHeatmap","addOrUpdateGravatarDecoration","registerHoverProviders","avatarDecoration","createTextEditorDecorationType","gutterIconPath","gutterIconSize","heatmapBlameAnnotationProvider_HeatmapBlameAnnotationProvider","Heatmap","heatmapRenderOptions","recentChangesAnnotationProvider_RecentChangesAnnotationProvider","getRecentLogCommitForFile","AnnotationClearReason","Decorations","blameAnnotation","rangeBehavior","ClosedOpen","blameHighlight","heatmapAnnotation","heatmapHighlight","recentChangesAnnotation","recentChangesHighlight","fileAnnotationController_FileAnnotationController","_onDidToggleAnnotations","_annotationProviders","_keyboardScope","_annotationType","_toggleModes","onDidToggleAnnotations","clearAll","_annotationsDisposable","cfgHighlight","highlight","isWholeLine","overviewRulerLane","Right","locations","Line","overviewRulerColor","Overview","dark","Gutter","asAbsolutePath","light","recentChanges","toggleMode","_editor","isInWindowToggle","getProvider","detachKeyboardHook","attachKeyboardHook","BlameabilityChanged","is","clearCore","DocumentChanged","DocumentClosed","restore","fuzzyProvider","ColumnChanged","editors","getToggleMode","Window","User","Disposing","visibleTextEditors","currentProvider","computingAnnotations","showAnnotationsCore","reopen","keyboard","beginScope","escape","onDidPressKey","annotationsLabel","validate","onDidChangeTextEditorViewColumn","onTextEditorViewColumnChanged","onDidChangeVisibleTextEditors","onVisibleTextEditorsChanged","onBlameStateChanged","onDirtyStateChanged","annotationDecoration","lineAnnotationController_LineAnnotationController","_enabled","fileAnnotations","onFileAnnotationsToggled","onDidStartDebugSession","onDebugSessionStarted","clearAnnotations","_debugSessionEndDisposable","lineTracker","stop","currentLine","setLineTracker","refresh","onDidTerminateDebugSession","onDebugSessionEnded","includesAll","getState","isSubscribed","onDidChangeActiveLines","onActiveLinesChanged","codeLensProvider_GitRecentChangeCodeLens","symbol","blameRange","isFullRange","desiredCommand","codeLensProvider_GitAuthorsCodeLens","codeLensProvider_GitCodeLensProvider","_git","_tracker","_onDidChangeCodeLenses","onDidChangeCodeLenses","maxLines","sizeThresholdAfterEdit","languageScope","scopesByLanguage","ll","language","scopes","symbolScopes","lenses","symbols","Document","ExecuteDocumentSymbolProvider","documentRangeFn","dirtyCommand","getDirtyTitle","sym","provideCodeLens","blameForRangeFn","recentChange","fileSymbol","getFilename","getRangeFromSymbol","includeSingleLineSymbols","valid","symbolName","kind","Containers","Package","Class","Interface","Module","Namespace","Struct","isSingleLine","Constructor","Enum","Method","Property","Blocks","getValidateSymbolRange","lineAt","lineNumber","startChar","multiline","isDocumentSymbol","lens","resolveGitRecentChangeCodeLens","resolveGitAuthorsCodeLens","containerName","DiffWithPrevious","applyDiffWithPreviousCommand","ShowQuickCommitDetails","applyShowQuickCommitDetailsCommand","ShowQuickCommitFileDetails","applyShowQuickCommitFileDetailsCommand","ShowQuickCurrentBranchHistory","applyShowQuickCurrentBranchHistoryCommand","ShowQuickFileHistory","applyShowQuickFileHistoryCommand","ToggleFileBlame","applyToggleFileBlameCommand","toFileUri","codeLens","unsavedChanges","recentChangeAndAuthors","recentChangeOnly","authorsOnly","selector","codeLensController_GitCodeLensController","_canToggle","_providerDisposable","_provider","createProvider","CanToggleCodeLens","registerCodeLensProvider","onDirtyIdleTriggered","fromGitLensFSUri","fromRevisionUri","fsProvider_emptyArray","fsProvider_GitFileSystemProvider","_searchTreeMap","_onDidChangeFile","registerFileSystemProvider","isCaseSensitive","isReadonly","onDidChangeFile","NoPermissions","tree","getTree","FileNotFound","typeToFileType","getVersionedFileBuffer","ctime","treeItem","searchTree","Directory","getTreeFileForRevision","getTreeForRevision","createSearchTree","getOrCreateSearchTree","Unknown","lineHoverController_LineHoverController","unregister","register","debugging","lineState","getAnnotationType","wholeLine","lineAnnotations","keyNoopCommand","keys","mappings","keyboard_KeyboardScope","mapping","updateKeyCommandsContext","Key","keyboard_Keyboard","registerCommand","execute","begin","statusBarController_StatusBarController","clearBlame","_blameStatusBarItem","_modeStatusBarItem","statusBar","modes","statusBarItemName","alignment","Left","createStatusBarItem","SwitchMode","text","tooltip","reduceFlicker","updateBlame","hide","DiffLineWithPrevious","DiffWithWorking","DiffLineWithWorking","ToggleCodeLens","lineTracker_LineTracker","_onDidChangeActiveLines","_state","trigger","subscriber","subscription","_linesChangedDebounced","onLinesChanged","fireLinesChanged","lines1","lines2","GitLineState","gitLineTracker_GitLineTracker","_count","_subscriptions","updated","updateState","getBlameForLineContents","getBlameForLine","setState","ResourceType","unknownGitUri","viewNode_ViewNode","ViewNode","view","_instanceId","refreshNode","CommitFileNodeDisplayAs","ViewRefNode","supportsAutoRefresh","onDidChangeAutoRefresh","viewNode_SubscribeableViewNode","_canSubscribe","disposables","onDidChangeVisibility","onVisibilityChanged","onDidChangeNodeState","onNodeStateChanged","onAutoRefreshChanged","unsubscribe","canSubscribe","ensureSubscription","triggerChange","_subscription","subscriptionPromise","visible","onStateChanged","onParentStateChanged","autoRefresh","subscribe","nodeSupportsConditionalDismissal","canDismiss","commitFileNode_CommitFileNode","_displayAs","_selection","priority","toFileCommit","label","None","contextValue","resourceType","description","CommitIcon","iconPath","StatusIcon","Gravatar","getCommand","_label","_description","_tooltip","CommitLabel","getCommitDescriptionTemplate","getCommitFileDescriptionTemplate","_folderName","getCommitTemplate","getCommitFileTemplate","_relativePath","CommitFile","commitFormat","commitDescriptionFormat","commitFileFormat","commitFileDescriptionFormat","showOptions","preserveFocus","preview","folderNode_FolderNode","containsWorkingFiles","getFileNesting","List","numeric","sensitivity","Collapsed","Folder","nesting","layout","Auto","nestingThreshold","threshold","Tree","commitNode_CommitNode","getBranchAndTagTips","toGitUri","getChildren","branchAndTagTips","AngleBracketLeftHeavy","AngleBracketRightHeavy","ArrowHeadRight","common_MessageNode","_message","_iconPath","common_CommandMessageNode","_command","getTreeItem","common_PagerNode","_args","Pager","common_ShowMoreNode","getBranchesAndTagTipsFn","currentName","branchesAndTagsBySha","bt","branchesAndTags","markers","insertDateMarkers","iterable","showRelativeDateMarkers","daysAgo","marker","setUTCHours","nextDate","branchTrackingStatusNode_BranchTrackingStatusNode","direction","supportsPaging","defaultItemLimit","previousLog","StatusAheadOfUpstream","StatusBehindUpstream","BranchStatusAheadOfUpstream","BranchStatusBehindUpstream","iconSuffix","branchNode_BranchNode","branchName","getBasename","treeHierarchy","_children","showTrackingBranch","getTrackingStatus","unstar","branchOrTagFolderNode_BranchOrTagFolderNode","_expanded","expanded","Expanded","branchesNode_BranchesNode","branchNodes","fileHistoryNode_FileHistoryNode","displayAs","getStatusForFile","FileHistory","onRepoChanged","onRepoFileSystemChanged","startWatchingFileSystem","getQuickPickIgnoreFocusOut","showQuickPickProgress","scope","showQuickPick","_getInfiniteCancellablePromise","placeHolder","ignoreFocusOut","_showQuickPickProgress","commonQuickPicks_CommandQuickPickItem","commandOrArgs","commonQuickPicks_CommitQuickPickItem","getShortMessage","detail","commonQuickPicks_ChooseFromBranchesAndTagsQuickPickItem","_goBack","branchesAndTagsQuickPick_BranchesAndTagsQuickPick","allowCommitId","goBack","KeyCommandQuickPickItem","MessageQuickPickItem","commonQuickPicks_OpenFileCommandQuickPickItem","openEditor","commonQuickPicks_OpenFilesCommandQuickPickItem","commonQuickPicks_ShowCommitInViewQuickPickItem","searchView","commonQuickPicks_ShowCommitSearchResultsInViewQuickPickItem","resultsLabel","showSearchResults","commonQuickPicks_ShowFileHistoryInViewQuickPickItem","baseRef","fileHistoryView","showHistoryForUri","branchesAndTagsQuickPick_RefQuickPickItem","checked","branchesAndTagsQuickPick_BranchQuickPickItem","branchesAndTagsQuickPick_TagQuickPickItem","autoPick","pick","items","getItems","itms","quickpick","createQuickPick","busy","placeholder","onDidHide","onDidChangeValue","onDidAccept","selectedItems","validateReference","filters","include","remotesQuickPick_OpenRemoteCommandQuickPickItem","remotesQuickPick_OpenRemotesCommandQuickPickItem","goBackCommand","shortFileSha","OpenInRemote","branchHistoryQuickPick_BranchHistoryQuickPick",",",".","progressCancellation","nextPageCommand","currentCommand","ArrowBack","ShowQuickBranchHistory","previousPageCommand","npc","matchOnDescription","matchOnDetail","commitFileQuickPick_ApplyCommitFileChangesCommandQuickPickItem","applyChangesToWorkingFile","commitFileQuickPick_OpenCommitFileCommandQuickPickItem","commitFileQuickPick_OpenCommitFileRevisionCommandQuickPickItem","commitQuickPick_CommitWithFileStatusQuickPickItem","octicon","commitQuickPick_OpenCommitFilesCommandQuickPickItem","versioned","commitQuickPick_OpenCommitFileRevisionsCommandQuickPickItem","commitsQuickPick_CommitsQuickPick","showInViewCommand","showAllCommand","fileHistoryQuickPick_FileHistoryQuickPick","pickerOnly","findWorkingFileName","RepositoryQuickPickItem","repositoriesQuickPick_RepositoriesQuickPick","repoStatusQuickPick_OpenStatusFileCommandQuickPickItem","realIndexStatus","getOcticon","repoStatusQuickPick_OpenStatusFilesCommandQuickPickItem","OpenChangedFiles","stashListQuickPick_StashListQuickPick","stash","StashSave","fileHistoryTrackerNode_FileHistoryTrackerNode","resetChild","_child","_fileUri","fileUri","_baseRef","ActiveFileHistory","onActiveEditorChanged","lineHistoryNode_LineHistoryNode","LineHistory","lineHistoryTrackerNode_LineHistoryTrackerNode","_base","ActiveLineHistory","remoteNode_RemoteNode","rt","Fetch","Push","ArrowRight","Remote","setAsDefault","remotesNode_RemotesNode","stashFileNode_StashFileNode","stashFormat","stashDescriptionFormat","stashFileFormat","stashFileDescriptionFormat","stashNode_StashNode","stashesNode_StashesNode","statusFileNode_StatusFileNode","_hasStagedChanges","_hasUnstagedChanges","resourceUri","collapsibleState","StatusFileCommits","getChangedIn","statusFileDescriptionFormat","statusFileFormat","changedIn","statusFilesNode_StatusFilesNode","includeWorkingTree","older","toStatusFile","aheadFiles","uniques","stats","StatusFiles","previousRef","tagNode_TagNode","Tag","tagsNode_TagsNode","tagNodes","repositoryNode_RepositoryNode","_lastFetched","_status","getLastFetched","lastFetchedTooltip","formatLastFetched","workingStatus","Relative","updateLastFetched","triggerNodeChange","defaultDateShortFormat","prevLastFetched","repositoriesNode_RepositoriesNode","resetChildren","Repositories","onRepositoriesChanged","autoReveal","containsUri","getParent","reveal","resultsCommitsNode_ResultsCommitsNode","_commitsQuery","ResultsCommits","getCommitsQueryResults","getRepositoryCount","_commitsQueryResults","resultsFileNode_ResultsFileNode","ResultsFile","statusIcon","DiffWith","resultsFilesNode_ResultsFilesNode","_ref1","_ref2","getFilesQueryResults","ResultsFiles","_filesQueryResults","getFilesQueryResultsCore","compareResultsNode_CompareResultsNode","_pinned","pinned","getCommitsQuery","CompareResults","updatePinnedComparison","getPinnableId","currentId","comparePickerNode_ComparePickerNode","selectedRef","ComparePicker","getQualifiedCommand","ComparePickerWithRef","compareNode_CompareNode","_selectedRef","_comparePickerNode","getPinnedComparisons","focus","select","Compare","ViewsCanCompare","selectForCompare","getRefName","getRepoPathOrPrompt","autoCompare","compareWithSelected","searchNode_SearchNode","Search","findIndex","registrableCommands","common_command","getCommandUri","getRepoPathOrActiveOrPrompt","getRepoPathOrActive","isCommandViewContextWithBranch","isCommandViewContextWithCommit","isCommandViewContextWithRemote","isCommandViewContextWithRepo","isScmResourceGroup","handle","resourceStates","isScmResourceState","common_Command","contextParsingOptions","_execute","rest","parseContext","preExecute","firstArg","edit","common_isTextEditor","states","scmResourceStates","scmResourceGroups","common_ActiveEditorCommand","lastCommand","ActiveEditorCachedCommand","rethrow","showTextDocument","Active","searchResultsCommitsNode_SearchResultsCommitsNode","commitsQuery","SearchResults","prefillOnly","SearchCommitsInView","viewBase_ViewBase","_onDidChangeTreeData","_onDidChangeVisibility","_onDidChangeNodeState","registerCommands","onDidChangeTreeData","container","_tree","createTreeView","treeDataProvider","onDidCollapseElement","onElementCollapsed","onDidExpandElement","onElementExpanded","getRoot","ensureRoot","isPageable","compareView_CompareView","ViewsCompareKeepResults","keepResults","viewCommands","setFilesLayout","setKeepResults","pinComparison","unpinComparison","swapComparison","showCollapseAll","views","dismiss","addResults","PinnedComparisons","pin","addOrReplace","updateEffective","unpin","fileHistoryView_FileHistoryView","changeBase","setEditorFollowing","setRenameFollowing","ViewsFileHistoryEditorFollowing","fileHistory","lineHistoryView_LineHistoryView","ViewsLineHistoryEditorFollowing","lineHistory","repositoriesView_RepositoriesView","_onDidChangeAutoRefresh","setAutoRefresh","ViewsRepositoriesAutoRefresh","workspaceEnabled","searchView_SearchView","ViewsSearchKeepResults","searchQueryFn","getSearchQueryFn","getSearchLabel","resultsType","singular","viewCommands_ViewCommands","dismissNode","viewSupportsNodeDismissal","closeRepository","unsetAsDefault","openInTerminal","exploreRepoRevision","openChanges","openChangesWithWorking","openFile","openFileRevision","openFileRevisionInRemote","openChangedFiles","openChangedFileChanges","openChangedFileChangesWithWorking","openChangedFileRevisions","applyChanges","stageDirectory","stageFile","unstageDirectory","unstageFile","compareAncestryWithWorking","compareWithHead","compareWithRemote","compareFileWithSelected","selectFileForCompare","compareWithWorking","terminalCheckoutBranch","terminalCreateBranch","terminalDeleteBranch","terminalMergeBranch","terminalRebaseBranch","terminalRebaseBranchToRemote","terminalSquashBranchIntoCommit","terminalCheckoutCommit","terminalCherryPickCommit","terminalPushCommit","terminalRebaseCommit","terminalResetCommit","terminalRevertCommit","terminalRemoveRemote","terminalCreateTag","terminalDeleteTag","compareView","commonAncestor","getMergeBase","_selectedFile","selected","ViewsCanCompareFile","diffArgs","openInNewWindow","OpenFolder","updateWorkspaceFolders","openWorkspace","FocusFilesExplorer","openDiffWith","OpenFileInRemote","OpenInTerminal","unStageDirectory","unStageFile","sendTerminalCommand","remoteBranch","showInputBox","prompt","_terminal","createTerminal","onDidCloseTerminal","_terminalCwd","sendText","terminal","ensureTerminal","webviewEditor_WebviewEditor","_disposablePanel","postUpdatedConfiguration","_panel","webviewPanel","Workspace","inspect","defaultValue","removes","html","getHtml","createWebviewPanel","retainContextWhenHidden","enableFindWidget","enableCommandUris","enableScripts","onDidDispose","onPanelDisposed","onDidChangeViewState","onViewStateChanged","webview","onDidReceiveMessage","onMessageReceived","content","filename","_html","getBootstrap","postMessage","settingsEditor_SettingsEditor","getAvailableScopes","ShowSettingsPage","welcomeEditor_WelcomeEditor","_context","_config","applyMode","_lineTracker","_vsls","_fileAnnotationController","_lineAnnotationController","_lineHoverController","_statusBarController","_codeLensController","_keyboard","_settingsEditor","_welcomeEditor","_compareView","_fileHistoryView","_lineHistoryView","_repositoriesView","_searchView","lineHistoryView","lineHovers","repositoriesView","settingsEditor","_viewCommands","welcomeEditor","ToggleFileHeatmap","ToggleFileRecentChanges","emptyConfig","Proxy","propKey","receiver","configuration_Configuration","affectsConfiguration","_configAffectedByMode","onDidChangeConfiguration","resetConfig","inspection","migrated","globalValue","migrationFn","workspaceValue","workspaceFolderValue","WorkspaceFolder","fallbackValue","fromInspection","toInspection","annotations_ClearFileAnnotationsCommand","ClearFileAnnotationsCommand","common_EditorCommand","registerTextEditorCommand","executeCore","ClearFileAnnotations","ComputingFileAnnotations","annotations_ToggleFileBlameCommand","ToggleFileBlameCommand","toggle","annotations_ToggleFileHeatmapCommand","ToggleFileHeatmapCommand","annotations_ToggleFileRecentChangesCommand","ToggleFileRecentChangesCommand","annotations_ToggleLineBlameCommand","ToggleLineBlameCommand","ToggleLineBlame","closeUnchangedFiles_CloseUnchangedFilesCommand","CloseUnchangedFilesCommand","CloseUnchangedFiles","CloseAllEditors","_onEditorChangedFn","loopCount","found","nextEditor","closeEditor","CloseActiveEditor","waitForEditorChange","NextEditor","copyMessageToClipboard_CopyMessageToClipboardCommand","CopyMessageToClipboardCommand","CopyMessageToClipboard","blameline","getLogCommit","copyRemoteFileUrlToClipboard_CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboard","copyShaToClipboard_CopyShaToClipboardCommand","CopyShaToClipboardCommand","CopyShaToClipboard","diffBranchWithBranch_DiffBranchWithBranchCommand","DiffBranchWithBranchCommand","DiffHeadWithBranch","DiffWorkingWithBranch","diffDirectory_DiffDirectoryCommand","DiffDirectoryCommand","DiffDirectory","DiffDirectoryWithHead","ViewsOpenDirectoryDiff","ViewsOpenDirectoryDiffWithWorking","isCommandViewContextWithRef","openDirectoryDiff","diffLineWithPrevious_DiffLineWithPreviousCommand","DiffLineWithPreviousCommand","showFileNotUnderSourceControlWarningMessage","diffLineWithWorking_DiffLineWithWorkingCommand","DiffLineWithWorkingCommand","DiffWithCommand","argsOrCommit1","commit2","commit1","getMarkdownCommandArgsCore","lhsSha","rhsSha","getFileStatusForCommit","getVersionedUri","rhsSuffix","lhsSuffix","Diff","diffWithBranch_DiffWithBranchCommand","DiffWithBranchCommand","DiffWithBranch","showNoRepositoryWarningMessage","renamedUri","renamedTitle","rename","diffWithNext_DiffWithNextCommand","DiffWithNextCommand","DiffWithNext","diffWithPrevious_DiffWithPreviousCommand","DiffWithPreviousCommand","DiffWithPreviousInDiff","inDiffEditor","showCommitHasNoPreviousCommitWarningMessage","originalSha","diffWithRevision_DiffWithRevisionCommand","DiffWithRevisionCommand","DiffWithRevision","branchOrTag","showProgress","diffWithWorking_DiffWithWorkingCommand","DiffWithWorkingCommand","Status","ResourceGroupType","externalDiff_ExternalDiffCommand","ExternalDiffCommand","ExternalDiff","ExternalDiffAll","isCommandViewContextWithFileCommit","isCommandViewContextWithFileRefs","resourceGroupType","Index","isModified","BOTH_MODIFIED","INDEX_MODIFIED","MODIFIED","openDiffTool","openBranchesInRemote_OpenBranchesInRemoteCommand","OpenBranchesInRemoteCommand","OpenBranchesInRemote","openBranchInRemote_OpenBranchInRemoteCommand","OpenBranchInRemoteCommand","OpenBranchInRemote","openChangedFiles_OpenChangedFilesCommand","OpenChangedFilesCommand","OpenCommitInRemoteCommand","OpenCommitInRemote","argsOrSha","openFileInRemote_OpenFileInRemoteCommand","OpenFileInRemoteCommand","OpenFileRevisionCommand","OpenFileRevision","argsOrUri","openInRemote_OpenInRemoteCommand","OpenInRemoteCommand","ensureRemoteBranchName","verb","shaSuffix","remotesQuickPick_RemotesQuickPick","remoteName","openRepoInRemote_OpenRepoInRemoteCommand","OpenRepoInRemoteCommand","OpenRepoInRemote","openWorkingFile_OpenWorkingFileCommand","OpenWorkingFileCommand","OpenWorkingFile","repositories_FetchRepositoriesCommand","FetchRepositoriesCommand","FetchRepositories","fetchAll","repositories_PullRepositoriesCommand","PullRepositoriesCommand","PullRepositories","pullAll","repositories_PushRepositoriesCommand","PushRepositoriesCommand","PushRepositories","pushAll","resetSuppressedWarnings_ResetSuppressedWarningsCommand","ResetSuppressedWarningsCommand","ResetSuppressedWarnings","searchByRegex","symbolToSearchByMap","searchByToSymbolMap","searchCommits_SearchCommitsCommand","SearchCommitsCommand","SearchCommits","showInView","originalArgs","_lastSearch","valueSelection","searchLabel","showLastQuickPick_ShowLastQuickPickCommand","ShowLastQuickPickCommand","ShowLastQuickPick","showQuickBranchHistory_ShowQuickBranchHistoryCommand","ShowQuickBranchHistoryCommand","repoLog","ShowQuickCommitDetailsCommand","ShowCommitInView","showLineUncommittedWarningMessage","showCommitNotFoundWarningMessage","commitQuickPick_CommitQuickPick","resolvePreviousFileSha","StashApply","confirm","stashItem","StashDelete","previousCommand","nextCommand","nextLog","onDidSelectItem","setKeyCommand","onDidSelect","ShowQuickCommitFileDetailsCommand","ShowQuickRevisionDetails","fileLog","commitFileQuickPick_CommitFileQuickPick","workingName","findNextCommit","ArrowRightHollow","showQuickCurrentBranchHistory_ShowQuickCurrentBranchHistoryCommand","ShowQuickCurrentBranchHistoryCommand","showQuickFileHistory_ShowQuickFileHistoryCommand","ShowQuickFileHistoryCommand","ShowFileHistoryInView","showQuickRepoStatus_ShowQuickRepoStatusCommand","ShowQuickRepoStatusCommand","ShowQuickRepoStatus","repoStatusQuickPick_RepoStatusQuickPick","stagedAdds","unstagedAdds","stagedChanges","unstagedChanges","stagedDeletes","unstagedDeletes","stagedAddsAndChanges","unstagedAddsAndChanges","unstaged","stagedStatus","unstagedStatus","computed","computeStatus","unstagedIndex","ShowQuickStashList","showQuickStashList_ShowQuickStashListCommand","ShowQuickStashListCommand","showView_ShowViewCommand","ShowViewCommand","ShowCompareView","ShowFileHistoryView","ShowLineHistoryView","ShowRepositoriesView","ShowSearchView","stashApply_StashApplyCommand","StashApplyCommand","stashApply","stashDelete_StashDeleteCommand","StashDeleteCommand","stashDelete","stashSave_StashSaveCommand","StashSaveCommand","StashSaveFiles","isCommandViewContextWithFile","isCommandViewContextWithRepoPath","stashSave","supportGitLens_SupportGitLensCommand","SupportGitLensCommand","SupportGitLens","showSupportGitLensMessage","switchMode_SwitchModeCommand","SwitchModeCommand","modesQuickPick_ModesQuickPick","modeCfg","activeAnnotations","switchMode_ToggleReviewModeCommand","ToggleReviewModeCommand","ToggleReviewMode","switchMode_ToggleZenModeCommand","ToggleZenModeCommand","ToggleZenMode","toggleCodeLens_ToggleCodeLensCommand","ToggleCodeLensCommand","toggleCodeLens","configure","gitlensVersion","packageJSON","showGitDisabledErrorMessage","previousVersion","globalState","GitLensVersion","migrate","explorers","migrateSettings","compareGitVersion","showGitVersionUnsupportedErrorMessage","notifyOnUnsupportedGitVersion","showWhatsNewAfterUpgrades","prevMajor","prevMinor","showWhatsNewMessage","showWelcomePage","deactivate","__webpack_exports__"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 192);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js')\nvar isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","module.exports = require(\"fs\");","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n","module.exports = require(\"buffer\");","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Entrypoint and type definitions for Live Share for VS Code extension API\n */\nconst path = require(\"path\");\nconst vscode = require(\"vscode\");\n/**\n * Extension ID of the Live Share extension for VS Code.\n */\nexports.extensionId = 'ms-vsliveshare.vsliveshare';\n/**\n * Entrypoint for access to the Live Share API.\n *\n * @returns an instance of the Live Share API, or `null` if the Live Share extension\n * is not installed or failed to activate.\n *\n * @example To access the Live Share API from another extension:\n *\n *     import * as vsls from 'vsls/vscode';\n *     const liveshare = await vsls.getApi();\n */\nasync function getApi() {\n    const liveshareExtension = vscode.extensions.getExtension(exports.extensionId);\n    if (!liveshareExtension) {\n        // The extension is not installed.\n        return null;\n    }\n    const extensionApi = liveshareExtension.isActive ?\n        liveshareExtension.exports : await liveshareExtension.activate();\n    if (!extensionApi) {\n        // The extensibility API is not enabled.\n        return null;\n    }\n    const liveShareApiVersion = '0.3.967'; // require(path.join(__dirname, 'package.json')).version;\n    // Support deprecated function name to preserve compatibility with older versions of VSLS.\n    if (!extensionApi.getApi)\n        return extensionApi.getApiAsync(liveShareApiVersion);\n    return extensionApi.getApi(liveShareApiVersion);\n}\nexports.getApi = getApi;\n/** @deprecated */\nfunction getApiAsync() { return getApi(); }\nexports.getApiAsync = getApiAsync;\nvar Role;\n(function (Role) {\n    Role[Role[\"None\"] = 0] = \"None\";\n    Role[Role[\"Host\"] = 1] = \"Host\";\n    Role[Role[\"Guest\"] = 2] = \"Guest\";\n})(Role = exports.Role || (exports.Role = {}));\n/** This is just a placeholder for a richer access control model to be added later. */\nvar Access;\n(function (Access) {\n    Access[Access[\"None\"] = 0] = \"None\";\n    Access[Access[\"ReadOnly\"] = 1] = \"ReadOnly\";\n    Access[Access[\"ReadWrite\"] = 3] = \"ReadWrite\";\n    Access[Access[\"Owner\"] = 255] = \"Owner\";\n})(Access = exports.Access || (exports.Access = {}));\n/**\n * Identifiers for Live Share tree views. These identifiers may be used by other extensions\n * to extend Live Share tree views with additional nodes via the `registerTreeDataProvider()`\n * API.\n */\nvar View;\n(function (View) {\n    View[\"Session\"] = \"liveshare.session\";\n    View[\"ExplorerSession\"] = \"liveshare.session.explorer\";\n    View[\"Contacts\"] = \"liveshare.contacts\";\n    View[\"Feedback\"] = \"liveshare.feedback\";\n})(View = exports.View || (exports.View = {}));\n/**\n * Identifiers for Live Share tree view items. These identifiers may be used by other\n * extensions to extend Live Share tree items with additional commands using conditional\n * expressions in the `view/item/context` section of their own package.json.\n */\nvar ViewItem;\n(function (ViewItem) {\n    // session item groups\n    ViewItem[\"Participants\"] = \"participants\";\n    ViewItem[\"Servers\"] = \"servers\";\n    ViewItem[\"Terminals\"] = \"terminals\";\n    // participants\n    ViewItem[\"CurrentUser\"] = \"participants.currentuser\";\n    ViewItem[\"Guest\"] = \"participants.guest\";\n    ViewItem[\"FollowedGuest\"] = \"participants.guest.followed\";\n    ViewItem[\"Participant\"] = \"participants.participant\";\n    ViewItem[\"FollowedParticipant\"] = \"participants.participant.followed\";\n    // servers\n    ViewItem[\"LocalServer\"] = \"servers.local\";\n    ViewItem[\"RemoteServer\"] = \"servers.remote\";\n    // terminals\n    ViewItem[\"LocalTerminalReadOnly\"] = \"terminals.local.readonly\";\n    ViewItem[\"LocalTerminalReadWrite\"] = \"terminals.local.readwrite\";\n    ViewItem[\"RemoteTerminal\"] = \"terminals.remote\";\n    // contacts\n    ViewItem[\"SuggestedContacts\"] = \"contacts.suggested\";\n    ViewItem[\"AvailableContacts\"] = \"contacts.available\";\n    ViewItem[\"ContactsProvider\"] = \"contacts.provider\";\n    ViewItem[\"ContactsStatus\"] = \"contacts.status\";\n    ViewItem[\"Contact\"] = \"contacts.contact\";\n    // feedback\n    ViewItem[\"SessionFeedbackQuestion\"] = \"feedback.sessionFeedback\";\n    ViewItem[\"ReportAProblem\"] = \"feedback.reportAProblem\";\n    ViewItem[\"TweetUsYourFeedback\"] = \"feedback.tweetUsYourFeedback\";\n    ViewItem[\"Survey\"] = \"feedback.survey\";\n    ViewItem[\"GoodFeedback\"] = \"feedback.goodFeedback\";\n    ViewItem[\"BadFeedback\"] = \"feedback.badFeedback\";\n    ViewItem[\"DontAskAgain\"] = \"feedback.dontAskAgain\";\n    ViewItem[\"Thankyou\"] = \"feedback.thankyou\";\n    // Shown while session sharing / joining is in progress\n    ViewItem[\"Loading\"] = \"loading\";\n    // Other / unspecified item type\n    ViewItem[\"Other\"] = \"other\";\n})(ViewItem = exports.ViewItem || (exports.ViewItem = {}));\n\n//# sourceMappingURL=liveShare.js.map\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var days = amount * 7\n  return addDays(dirtyDate, days)\n}\n\nmodule.exports = addWeeks\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n","var parse = require('../parse/index.js')\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nfunction endOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4)\n * )\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4),\n *   {weekStartsOn: 1}\n * )\n * //=> false\n */\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\n}\n\nmodule.exports = isSameWeek\n","module.exports = require(\"stream\");","module.exports = {\n  addDays: require('./add_days/index.js'),\n  addHours: require('./add_hours/index.js'),\n  addISOYears: require('./add_iso_years/index.js'),\n  addMilliseconds: require('./add_milliseconds/index.js'),\n  addMinutes: require('./add_minutes/index.js'),\n  addMonths: require('./add_months/index.js'),\n  addQuarters: require('./add_quarters/index.js'),\n  addSeconds: require('./add_seconds/index.js'),\n  addWeeks: require('./add_weeks/index.js'),\n  addYears: require('./add_years/index.js'),\n  areRangesOverlapping: require('./are_ranges_overlapping/index.js'),\n  closestIndexTo: require('./closest_index_to/index.js'),\n  closestTo: require('./closest_to/index.js'),\n  compareAsc: require('./compare_asc/index.js'),\n  compareDesc: require('./compare_desc/index.js'),\n  differenceInCalendarDays: require('./difference_in_calendar_days/index.js'),\n  differenceInCalendarISOWeeks: require('./difference_in_calendar_iso_weeks/index.js'),\n  differenceInCalendarISOYears: require('./difference_in_calendar_iso_years/index.js'),\n  differenceInCalendarMonths: require('./difference_in_calendar_months/index.js'),\n  differenceInCalendarQuarters: require('./difference_in_calendar_quarters/index.js'),\n  differenceInCalendarWeeks: require('./difference_in_calendar_weeks/index.js'),\n  differenceInCalendarYears: require('./difference_in_calendar_years/index.js'),\n  differenceInDays: require('./difference_in_days/index.js'),\n  differenceInHours: require('./difference_in_hours/index.js'),\n  differenceInISOYears: require('./difference_in_iso_years/index.js'),\n  differenceInMilliseconds: require('./difference_in_milliseconds/index.js'),\n  differenceInMinutes: require('./difference_in_minutes/index.js'),\n  differenceInMonths: require('./difference_in_months/index.js'),\n  differenceInQuarters: require('./difference_in_quarters/index.js'),\n  differenceInSeconds: require('./difference_in_seconds/index.js'),\n  differenceInWeeks: require('./difference_in_weeks/index.js'),\n  differenceInYears: require('./difference_in_years/index.js'),\n  distanceInWords: require('./distance_in_words/index.js'),\n  distanceInWordsStrict: require('./distance_in_words_strict/index.js'),\n  distanceInWordsToNow: require('./distance_in_words_to_now/index.js'),\n  eachDay: require('./each_day/index.js'),\n  endOfDay: require('./end_of_day/index.js'),\n  endOfHour: require('./end_of_hour/index.js'),\n  endOfISOWeek: require('./end_of_iso_week/index.js'),\n  endOfISOYear: require('./end_of_iso_year/index.js'),\n  endOfMinute: require('./end_of_minute/index.js'),\n  endOfMonth: require('./end_of_month/index.js'),\n  endOfQuarter: require('./end_of_quarter/index.js'),\n  endOfSecond: require('./end_of_second/index.js'),\n  endOfToday: require('./end_of_today/index.js'),\n  endOfTomorrow: require('./end_of_tomorrow/index.js'),\n  endOfWeek: require('./end_of_week/index.js'),\n  endOfYear: require('./end_of_year/index.js'),\n  endOfYesterday: require('./end_of_yesterday/index.js'),\n  format: require('./format/index.js'),\n  getDate: require('./get_date/index.js'),\n  getDay: require('./get_day/index.js'),\n  getDayOfYear: require('./get_day_of_year/index.js'),\n  getDaysInMonth: require('./get_days_in_month/index.js'),\n  getDaysInYear: require('./get_days_in_year/index.js'),\n  getHours: require('./get_hours/index.js'),\n  getISODay: require('./get_iso_day/index.js'),\n  getISOWeek: require('./get_iso_week/index.js'),\n  getISOWeeksInYear: require('./get_iso_weeks_in_year/index.js'),\n  getISOYear: require('./get_iso_year/index.js'),\n  getMilliseconds: require('./get_milliseconds/index.js'),\n  getMinutes: require('./get_minutes/index.js'),\n  getMonth: require('./get_month/index.js'),\n  getOverlappingDaysInRanges: require('./get_overlapping_days_in_ranges/index.js'),\n  getQuarter: require('./get_quarter/index.js'),\n  getSeconds: require('./get_seconds/index.js'),\n  getTime: require('./get_time/index.js'),\n  getYear: require('./get_year/index.js'),\n  isAfter: require('./is_after/index.js'),\n  isBefore: require('./is_before/index.js'),\n  isDate: require('./is_date/index.js'),\n  isEqual: require('./is_equal/index.js'),\n  isFirstDayOfMonth: require('./is_first_day_of_month/index.js'),\n  isFriday: require('./is_friday/index.js'),\n  isFuture: require('./is_future/index.js'),\n  isLastDayOfMonth: require('./is_last_day_of_month/index.js'),\n  isLeapYear: require('./is_leap_year/index.js'),\n  isMonday: require('./is_monday/index.js'),\n  isPast: require('./is_past/index.js'),\n  isSameDay: require('./is_same_day/index.js'),\n  isSameHour: require('./is_same_hour/index.js'),\n  isSameISOWeek: require('./is_same_iso_week/index.js'),\n  isSameISOYear: require('./is_same_iso_year/index.js'),\n  isSameMinute: require('./is_same_minute/index.js'),\n  isSameMonth: require('./is_same_month/index.js'),\n  isSameQuarter: require('./is_same_quarter/index.js'),\n  isSameSecond: require('./is_same_second/index.js'),\n  isSameWeek: require('./is_same_week/index.js'),\n  isSameYear: require('./is_same_year/index.js'),\n  isSaturday: require('./is_saturday/index.js'),\n  isSunday: require('./is_sunday/index.js'),\n  isThisHour: require('./is_this_hour/index.js'),\n  isThisISOWeek: require('./is_this_iso_week/index.js'),\n  isThisISOYear: require('./is_this_iso_year/index.js'),\n  isThisMinute: require('./is_this_minute/index.js'),\n  isThisMonth: require('./is_this_month/index.js'),\n  isThisQuarter: require('./is_this_quarter/index.js'),\n  isThisSecond: require('./is_this_second/index.js'),\n  isThisWeek: require('./is_this_week/index.js'),\n  isThisYear: require('./is_this_year/index.js'),\n  isThursday: require('./is_thursday/index.js'),\n  isToday: require('./is_today/index.js'),\n  isTomorrow: require('./is_tomorrow/index.js'),\n  isTuesday: require('./is_tuesday/index.js'),\n  isValid: require('./is_valid/index.js'),\n  isWednesday: require('./is_wednesday/index.js'),\n  isWeekend: require('./is_weekend/index.js'),\n  isWithinRange: require('./is_within_range/index.js'),\n  isYesterday: require('./is_yesterday/index.js'),\n  lastDayOfISOWeek: require('./last_day_of_iso_week/index.js'),\n  lastDayOfISOYear: require('./last_day_of_iso_year/index.js'),\n  lastDayOfMonth: require('./last_day_of_month/index.js'),\n  lastDayOfQuarter: require('./last_day_of_quarter/index.js'),\n  lastDayOfWeek: require('./last_day_of_week/index.js'),\n  lastDayOfYear: require('./last_day_of_year/index.js'),\n  max: require('./max/index.js'),\n  min: require('./min/index.js'),\n  parse: require('./parse/index.js'),\n  setDate: require('./set_date/index.js'),\n  setDay: require('./set_day/index.js'),\n  setDayOfYear: require('./set_day_of_year/index.js'),\n  setHours: require('./set_hours/index.js'),\n  setISODay: require('./set_iso_day/index.js'),\n  setISOWeek: require('./set_iso_week/index.js'),\n  setISOYear: require('./set_iso_year/index.js'),\n  setMilliseconds: require('./set_milliseconds/index.js'),\n  setMinutes: require('./set_minutes/index.js'),\n  setMonth: require('./set_month/index.js'),\n  setQuarter: require('./set_quarter/index.js'),\n  setSeconds: require('./set_seconds/index.js'),\n  setYear: require('./set_year/index.js'),\n  startOfDay: require('./start_of_day/index.js'),\n  startOfHour: require('./start_of_hour/index.js'),\n  startOfISOWeek: require('./start_of_iso_week/index.js'),\n  startOfISOYear: require('./start_of_iso_year/index.js'),\n  startOfMinute: require('./start_of_minute/index.js'),\n  startOfMonth: require('./start_of_month/index.js'),\n  startOfQuarter: require('./start_of_quarter/index.js'),\n  startOfSecond: require('./start_of_second/index.js'),\n  startOfToday: require('./start_of_today/index.js'),\n  startOfTomorrow: require('./start_of_tomorrow/index.js'),\n  startOfWeek: require('./start_of_week/index.js'),\n  startOfYear: require('./start_of_year/index.js'),\n  startOfYesterday: require('./start_of_yesterday/index.js'),\n  subDays: require('./sub_days/index.js'),\n  subHours: require('./sub_hours/index.js'),\n  subISOYears: require('./sub_iso_years/index.js'),\n  subMilliseconds: require('./sub_milliseconds/index.js'),\n  subMinutes: require('./sub_minutes/index.js'),\n  subMonths: require('./sub_months/index.js'),\n  subQuarters: require('./sub_quarters/index.js'),\n  subSeconds: require('./sub_seconds/index.js'),\n  subWeeks: require('./sub_weeks/index.js'),\n  subYears: require('./sub_years/index.js')\n}\n","module.exports = require(\"crypto\");","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nfunction addHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR)\n}\n\nmodule.exports = addHours\n","var getISOYear = require('../get_iso_year/index.js')\nvar setISOYear = require('../set_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nfunction addISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return setISOYear(dirtyDate, getISOYear(dirtyDate) + amount)\n}\n\nmodule.exports = addISOYears\n","var parse = require('../parse/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year setted\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOYear (dirtyDate, dirtyISOYear) {\n  var date = parse(dirtyDate)\n  var isoYear = Number(dirtyISOYear)\n  var diff = differenceInCalendarDays(date, startOfISOYear(date))\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(isoYear, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  date = startOfISOYear(fourthOfJanuary)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = setISOYear\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nfunction addMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE)\n}\n\nmodule.exports = addMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nfunction addQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var months = amount * 3\n  return addMonths(dirtyDate, months)\n}\n\nmodule.exports = addQuarters\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * 1000)\n}\n\nmodule.exports = addSeconds\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nfunction addYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, amount * 12)\n}\n\nmodule.exports = addYears\n","var getISOYear = require('../get_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nfunction differenceInCalendarISOYears (dirtyDateLeft, dirtyDateRight) {\n  return getISOYear(dirtyDateLeft) - getISOYear(dirtyDateRight)\n}\n\nmodule.exports = differenceInCalendarISOYears\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nfunction getQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var quarter = Math.floor(date.getMonth() / 3) + 1\n  return quarter\n}\n\nmodule.exports = getQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInCalendarYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  return dateLeft.getFullYear() - dateRight.getFullYear()\n}\n\nmodule.exports = differenceInCalendarYears\n","var parse = require('../parse/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n","var addISOYears = require('../add_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nfunction subISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addISOYears(dirtyDate, -amount)\n}\n\nmodule.exports = subISOYears\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar differenceInMonths = require('../difference_in_months/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setDate(date.getDate() + diff)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nfunction isLeapYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0\n}\n\nmodule.exports = isLeapYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n\n  if (day === 0) {\n    day = 7\n  }\n\n  return day\n}\n\nmodule.exports = getISODay\n","var startOfHour = require('../start_of_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 6, 30)\n * )\n * //=> true\n */\nfunction isSameHour (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft)\n  var dateRightStartOfHour = startOfHour(dirtyDateRight)\n\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()\n}\n\nmodule.exports = isSameHour\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nfunction startOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfHour\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 8, 7)\n * )\n * //=> true\n */\nfunction isSameISOWeek (dirtyDateLeft, dirtyDateRight) {\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {weekStartsOn: 1})\n}\n\nmodule.exports = isSameISOWeek\n","var startOfISOYear = require('../start_of_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOYear(\n *   new Date(2003, 11, 29),\n *   new Date(2005, 0, 2)\n * )\n * //=> true\n */\nfunction isSameISOYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfYear = startOfISOYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n\nmodule.exports = isSameISOYear\n","var startOfMinute = require('../start_of_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\nfunction isSameMinute (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft)\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight)\n\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()\n}\n\nmodule.exports = isSameMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nfunction startOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(0, 0)\n  return date\n}\n\nmodule.exports = startOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfQuarter = require('../start_of_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(\n *   new Date(2014, 0, 1),\n *   new Date(2014, 2, 8)\n * )\n * //=> true\n */\nfunction isSameQuarter (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft)\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight)\n\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime()\n}\n\nmodule.exports = isSameQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nfunction startOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3\n  date.setMonth(month, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfQuarter\n","var startOfSecond = require('../start_of_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\nfunction isSameSecond (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft)\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight)\n\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()\n}\n\nmodule.exports = isSameSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nfunction startOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(0)\n  return date\n}\n\nmodule.exports = startOfSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear()\n}\n\nmodule.exports = isSameYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setHours(0, 0, 0, 0)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = lastDayOfWeek\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month setted\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth (dirtyDate, dirtyMonth) {\n  var date = parse(dirtyDate)\n  var month = Number(dirtyMonth)\n  var year = date.getFullYear()\n  var day = date.getDate()\n\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(year, month, 15)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth))\n  return date\n}\n\nmodule.exports = setMonth\n","module.exports = require(\"child_process\");","var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date range overlapping with another date range?\n *\n * @description\n * Is the given date range overlapping with another date range?\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Boolean} whether the date ranges are overlapping\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> false\n */\nfunction areRangesOverlapping (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n}\n\nmodule.exports = areRangesOverlapping\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate, index) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = index\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestIndexTo\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nfunction closestTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = currentDate\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestTo\n","var startOfISOWeek = require('../start_of_iso_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nfunction differenceInCalendarISOWeeks (dirtyDateLeft, dirtyDateRight) {\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft)\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight)\n\n  var timestampLeft = startOfISOWeekLeft.getTime() -\n    startOfISOWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfISOWeekRight.getTime() -\n    startOfISOWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarISOWeeks\n","var getQuarter = require('../get_quarter/index.js')\nvar parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nfunction differenceInCalendarQuarters (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight)\n\n  return yearDiff * 4 + quarterDiff\n}\n\nmodule.exports = differenceInCalendarQuarters\n","var startOfWeek = require('../start_of_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   {weekStartsOn: 1}\n * )\n * //=> 2\n */\nfunction differenceInCalendarWeeks (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  var timestampLeft = startOfWeekLeft.getTime() -\n    startOfWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfWeekRight.getTime() -\n    startOfWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarWeeks\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nfunction differenceInHours (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInHours\n","var parse = require('../parse/index.js')\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\nvar subISOYears = require('../sub_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\n  dateLeft = subISOYears(dateLeft, sign * difference)\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastISOYearNotFull)\n}\n\nmodule.exports = differenceInISOYears\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\nfunction differenceInMinutes (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInMinutes\n","var differenceInMonths = require('../difference_in_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInQuarters (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInQuarters\n","var differenceInDays = require('../difference_in_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 2\n */\nfunction differenceInWeeks (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInWeeks\n","var parse = require('../parse/index.js')\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 1\n */\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastYearNotFull)\n}\n\nmodule.exports = differenceInYears\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_YEAR = 525600\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWordsStrict(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {unit: 'm'}\n * )\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 28 January 2015, in months, rounded up?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 28),\n *   new Date(2015, 0, 1),\n *   {unit: 'M', partialMethod: 'ceil'}\n * )\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsStrict(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var unit\n  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = mathPartial(seconds / 60) - offset\n  var hours, days, months, years\n\n  if (options.unit) {\n    unit = String(options.unit)\n  } else {\n    if (minutes < 1) {\n      unit = 's'\n    } else if (minutes < 60) {\n      unit = 'm'\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'h'\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'd'\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'M'\n    } else {\n      unit = 'Y'\n    }\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 's') {\n    return localize('xSeconds', seconds, localizeOptions)\n\n  // 1 up to 60 mins\n  } else if (unit === 'm') {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 1 up to 24 hours\n  } else if (unit === 'h') {\n    hours = mathPartial(minutes / 60)\n    return localize('xHours', hours, localizeOptions)\n\n  // 1 up to 30 days\n  } else if (unit === 'd') {\n    days = mathPartial(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 up to 12 months\n  } else if (unit === 'M') {\n    months = mathPartial(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', months, localizeOptions)\n\n  // 1 year up to max Date\n  } else if (unit === 'Y') {\n    years = mathPartial(minutes / MINUTES_IN_YEAR)\n    return localize('xYears', years, localizeOptions)\n  }\n\n  throw new Error('Unknown unit: ' + unit)\n}\n\nmodule.exports = distanceInWordsStrict\n","var distanceInWords = require('../distance_in_words/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nfunction endOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfHour\n","var endOfWeek = require('../end_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfISOWeek (dirtyDate) {\n  return endOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = endOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear)\n  date.setMilliseconds(date.getMilliseconds() - 1)\n  return date\n}\n\nmodule.exports = endOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nfunction endOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(59, 999)\n  return date\n}\n\nmodule.exports = endOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nfunction endOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(999)\n  return date\n}\n\nmodule.exports = endOfSecond\n","var endOfDay = require('../end_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of today.\n *\n * @description\n * Return the end of today.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday () {\n  return endOfDay(new Date())\n}\n\nmodule.exports = endOfToday\n","/**\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n *\n * @description\n * Return the end of tomorrow.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nfunction endOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nfunction endOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYear\n","/**\n * @category Day Helpers\n * @summary Return the end of yesterday.\n *\n * @description\n * Return the end of yesterday.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYesterday\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate (dirtyDate) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = date.getDate()\n  return dayOfMonth\n}\n\nmodule.exports = getDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n","var isLeapYear = require('../is_leap_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear (dirtyDate) {\n  return isLeapYear(dirtyDate) ? 366 : 365\n}\n\nmodule.exports = getDaysInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nfunction getHours (dirtyDate) {\n  var date = parse(dirtyDate)\n  var hours = date.getHours()\n  return hours\n}\n\nmodule.exports = getHours\n","var startOfISOYear = require('../start_of_iso_year/index.js')\nvar addWeeks = require('../add_weeks/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nfunction getMilliseconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var milliseconds = date.getMilliseconds()\n  return milliseconds\n}\n\nmodule.exports = getMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nfunction getMinutes (dirtyDate) {\n  var date = parse(dirtyDate)\n  var minutes = date.getMinutes()\n  return minutes\n}\n\nmodule.exports = getMinutes\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var parse = require('../parse/index.js')\n\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @category Range Helpers\n * @summary Get the number of days that overlap in two date ranges\n *\n * @description\n * Get the number of days that overlap in two date ranges\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Number} the number of days that overlap in two date ranges\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges adds 1 for each started overlapping day:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping date ranges returns 0:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> 0\n */\nfunction getOverlappingDaysInRanges (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  var isOverlapping = initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n\n  if (!isOverlapping) {\n    return 0\n  }\n\n  var overlapStartDate = comparedStartTime < initialStartTime\n    ? initialStartTime\n    : comparedStartTime\n\n  var overlapEndDate = comparedEndTime > initialEndTime\n    ? initialEndTime\n    : comparedEndTime\n\n  var differenceInMs = overlapEndDate - overlapStartDate\n\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = getOverlappingDaysInRanges\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the seconds\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nfunction getSeconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var seconds = date.getSeconds()\n  return seconds\n}\n\nmodule.exports = getSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the year\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nfunction getYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year\n}\n\nmodule.exports = getYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() > dateToCompare.getTime()\n}\n\nmodule.exports = isAfter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual (dirtyLeftDate, dirtyRightDate) {\n  var dateLeft = parse(dirtyLeftDate)\n  var dateRight = parse(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\nmodule.exports = isEqual\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nfunction isFirstDayOfMonth (dirtyDate) {\n  return parse(dirtyDate).getDate() === 1\n}\n\nmodule.exports = isFirstDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nfunction isFriday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 5\n}\n\nmodule.exports = isFriday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the future?\n *\n * @description\n * Is the given date in the future?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture (dirtyDate) {\n  return parse(dirtyDate).getTime() > new Date().getTime()\n}\n\nmodule.exports = isFuture\n","var parse = require('../parse/index.js')\nvar endOfDay = require('../end_of_day/index.js')\nvar endOfMonth = require('../end_of_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nfunction isLastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  return endOfDay(date).getTime() === endOfMonth(date).getTime()\n}\n\nmodule.exports = isLastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isMonday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 1\n}\n\nmodule.exports = isMonday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nfunction isSaturday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 6\n}\n\nmodule.exports = isSaturday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nfunction isSunday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 0\n}\n\nmodule.exports = isSunday\n","var isSameHour = require('../is_same_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nfunction isThisHour (dirtyDate) {\n  return isSameHour(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisHour\n","var isSameISOWeek = require('../is_same_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isThisISOWeek (dirtyDate) {\n  return isSameISOWeek(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOWeek\n","var isSameISOYear = require('../is_same_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Is the given date in the same ISO week-numbering year as the current date?\n *\n * @description\n * Is the given date in the same ISO week-numbering year as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week-numbering year\n *\n * @example\n * // If today is 25 September 2014,\n * // is 30 December 2013 in this ISO week-numbering year?\n * var result = isThisISOYear(new Date(2013, 11, 30))\n * //=> true\n */\nfunction isThisISOYear (dirtyDate) {\n  return isSameISOYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOYear\n","var isSameMinute = require('../is_same_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nfunction isThisMinute (dirtyDate) {\n  return isSameMinute(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMinute\n","var isSameMonth = require('../is_same_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nfunction isThisMonth (dirtyDate) {\n  return isSameMonth(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMonth\n","var isSameQuarter = require('../is_same_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisQuarter (dirtyDate) {\n  return isSameQuarter(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisQuarter\n","var isSameSecond = require('../is_same_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nfunction isThisSecond (dirtyDate) {\n  return isSameSecond(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisSecond\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), {weekStartsOn: 1})\n * //=> false\n */\nfunction isThisWeek (dirtyDate, dirtyOptions) {\n  return isSameWeek(new Date(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = isThisWeek\n","var isSameYear = require('../is_same_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisYear (dirtyDate) {\n  return isSameYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nfunction isThursday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 4\n}\n\nmodule.exports = isThursday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow (dirtyDate) {\n  var tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(tomorrow).getTime()\n}\n\nmodule.exports = isTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nfunction isTuesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 2\n}\n\nmodule.exports = isTuesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nfunction isWednesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 3\n}\n\nmodule.exports = isWednesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nfunction isWeekend (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day === 0 || day === 6\n}\n\nmodule.exports = isWeekend\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date within the range?\n *\n * @description\n * Is the given date within the range?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Date|String|Number} startDate - the start of range\n * @param {Date|String|Number} endDate - the end of range\n * @returns {Boolean} the date is within the range\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // For the date within the range:\n * isWithinRange(\n *   new Date(2014, 0, 3), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> true\n *\n * @example\n * // For the date outside of the range:\n * isWithinRange(\n *   new Date(2014, 0, 10), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> false\n */\nfunction isWithinRange (dirtyDate, dirtyStartDate, dirtyEndDate) {\n  var time = parse(dirtyDate).getTime()\n  var startTime = parse(dirtyStartDate).getTime()\n  var endTime = parse(dirtyEndDate).getTime()\n\n  if (startTime > endTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return time >= startTime && time <= endTime\n}\n\nmodule.exports = isWithinRange\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date yesterday?\n *\n * @description\n * Is the given date yesterday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday (dirtyDate) {\n  var yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(yesterday).getTime()\n}\n\nmodule.exports = isYesterday\n","var lastDayOfWeek = require('../last_day_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfISOWeek (dirtyDate) {\n  return lastDayOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = lastDayOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year + 1, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  date.setDate(date.getDate() - 1)\n  return date\n}\n\nmodule.exports = lastDayOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a quarter\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a year\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nfunction lastDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month setted\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction setDate (dirtyDate, dirtyDayOfMonth) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = Number(dirtyDayOfMonth)\n  date.setDate(dayOfMonth)\n  return date\n}\n\nmodule.exports = setDate\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year setted\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nfunction setDayOfYear (dirtyDate, dirtyDayOfYear) {\n  var date = parse(dirtyDate)\n  var dayOfYear = Number(dirtyDayOfYear)\n  date.setMonth(0)\n  date.setDate(dayOfYear)\n  return date\n}\n\nmodule.exports = setDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours setted\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nfunction setHours (dirtyDate, dirtyHours) {\n  var date = parse(dirtyDate)\n  var hours = Number(dirtyHours)\n  date.setHours(hours)\n  return date\n}\n\nmodule.exports = setHours\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\nvar getISODay = require('../get_iso_day/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setISODay (dirtyDate, dirtyDay) {\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = getISODay(date)\n  var diff = day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setISODay\n","var parse = require('../parse/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week setted\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nfunction setISOWeek (dirtyDate, dirtyISOWeek) {\n  var date = parse(dirtyDate)\n  var isoWeek = Number(dirtyISOWeek)\n  var diff = getISOWeek(date) - isoWeek\n  date.setDate(date.getDate() - diff * 7)\n  return date\n}\n\nmodule.exports = setISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds setted\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nfunction setMilliseconds (dirtyDate, dirtyMilliseconds) {\n  var date = parse(dirtyDate)\n  var milliseconds = Number(dirtyMilliseconds)\n  date.setMilliseconds(milliseconds)\n  return date\n}\n\nmodule.exports = setMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes setted\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nfunction setMinutes (dirtyDate, dirtyMinutes) {\n  var date = parse(dirtyDate)\n  var minutes = Number(dirtyMinutes)\n  date.setMinutes(minutes)\n  return date\n}\n\nmodule.exports = setMinutes\n","var parse = require('../parse/index.js')\nvar setMonth = require('../set_month/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter setted\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nfunction setQuarter (dirtyDate, dirtyQuarter) {\n  var date = parse(dirtyDate)\n  var quarter = Number(dirtyQuarter)\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1\n  var diff = quarter - oldQuarter\n  return setMonth(date, date.getMonth() + diff * 3)\n}\n\nmodule.exports = setQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds setted\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nfunction setSeconds (dirtyDate, dirtySeconds) {\n  var date = parse(dirtyDate)\n  var seconds = Number(dirtySeconds)\n  date.setSeconds(seconds)\n  return date\n}\n\nmodule.exports = setSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year setted\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear (dirtyDate, dirtyYear) {\n  var date = parse(dirtyDate)\n  var year = Number(dirtyYear)\n  date.setFullYear(year)\n  return date\n}\n\nmodule.exports = setYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","/**\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n *\n * @description\n * Return the start of tomorrow.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nfunction startOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfTomorrow\n","/**\n * @category Day Helpers\n * @summary Return the start of yesterday.\n *\n * @description\n * Return the start of yesterday.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nfunction startOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYesterday\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nfunction subDays (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addDays(dirtyDate, -amount)\n}\n\nmodule.exports = subDays\n","var addHours = require('../add_hours/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nfunction subHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addHours(dirtyDate, -amount)\n}\n\nmodule.exports = subHours\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n\nmodule.exports = subMilliseconds\n","var addMinutes = require('../add_minutes/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the mintues subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nfunction subMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMinutes(dirtyDate, -amount)\n}\n\nmodule.exports = subMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","var addQuarters = require('../add_quarters/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nfunction subQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addQuarters(dirtyDate, -amount)\n}\n\nmodule.exports = subQuarters\n","var addSeconds = require('../add_seconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nfunction subSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addSeconds(dirtyDate, -amount)\n}\n\nmodule.exports = subSeconds\n","var addWeeks = require('../add_weeks/index.js')\n\n/**\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nfunction subWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addWeeks(dirtyDate, -amount)\n}\n\nmodule.exports = subWeeks\n","var addYears = require('../add_years/index.js')\n\n/**\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nfunction subYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addYears(dirtyDate, -amount)\n}\n\nmodule.exports = subYears\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\nimport { TextDocument, TextEditor, Uri } from 'vscode';\n\nabstract class Comparer<T> {\n    abstract equals(lhs: T, rhs: T): boolean;\n}\n\nclass UriComparer extends Comparer<Uri> {\n    equals(lhs: Uri | undefined, rhs: Uri | undefined) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;\n    }\n}\n\nclass TextDocumentComparer extends Comparer<TextDocument> {\n    equals(lhs: TextDocument | undefined, rhs: TextDocument | undefined) {\n        return lhs === rhs;\n        // if (lhs === rhs) return true;\n        // if (lhs === undefined || rhs === undefined) return false;\n\n        // return uriComparer.equals(lhs.uri, rhs.uri);\n    }\n}\n\nclass TextEditorComparer extends Comparer<TextEditor> {\n    equals(\n        lhs: TextEditor | undefined,\n        rhs: TextEditor | undefined,\n        options: { useId: boolean; usePosition: boolean } = { useId: false, usePosition: false }\n    ) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.usePosition && lhs.viewColumn !== rhs.viewColumn) return false;\n\n        if (options.useId && (!lhs.document || !rhs.document)) {\n            if ((lhs as any).id !== (rhs as any).id) return false;\n\n            return true;\n        }\n\n        return textDocumentComparer.equals(lhs.document, rhs.document);\n    }\n}\n\nconst textDocumentComparer = new TextDocumentComparer();\nconst textEditorComparer = new TextEditorComparer();\nconst uriComparer = new UriComparer();\nexport {\n    textDocumentComparer as TextDocumentComparer,\n    textEditorComparer as TextEditorComparer,\n    uriComparer as UriComparer\n};\n","'use strict';\n\nexport interface Config {\n    blame: {\n        avatars: boolean;\n        compact: boolean;\n        dateFormat: string | null;\n        format: string;\n        heatmap: {\n            enabled: boolean;\n            location: 'left' | 'right';\n        };\n        highlight: {\n            enabled: boolean;\n            locations: HighlightLocations[];\n        };\n        ignoreWhitespace: boolean;\n        separateLines: boolean;\n        toggleMode: AnnotationsToggleMode;\n    };\n    currentLine: {\n        scrollable: boolean;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n    };\n    codeLens: CodeLensConfig;\n    debug: boolean;\n    defaultDateFormat: string | null;\n    defaultDateShortFormat: string | null;\n    defaultDateStyle: DateStyle;\n    defaultGravatarsStyle: GravatarDefaultStyle;\n    heatmap: {\n        ageThreshold: number;\n        coldColor: string;\n        hotColor: string;\n        toggleMode: AnnotationsToggleMode;\n    };\n    hovers: {\n        annotations: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        currentLine: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        avatars: boolean;\n        enabled: boolean;\n    };\n    insiders: boolean;\n    keymap: KeyMap;\n    liveshare: {\n        allowGuestAccess: boolean;\n    };\n    menus: boolean | MenuConfig;\n    mode: {\n        active: string;\n        statusBar: {\n            enabled: boolean;\n            alignment: 'left' | 'right';\n        };\n    };\n    modes: { [key: string]: ModeConfig };\n    outputLevel: LogLevel;\n    recentChanges: {\n        highlight: {\n            locations: HighlightLocations[];\n        };\n        toggleMode: AnnotationsToggleMode;\n    };\n    remotes: RemotesConfig[];\n    showWhatsNewAfterUpgrades: boolean;\n    statusBar: {\n        alignment: 'left' | 'right';\n        command: StatusBarCommand;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        reduceFlicker: boolean;\n    };\n    strings: {\n        codeLens: {\n            unsavedChanges: {\n                recentChangeAndAuthors: string;\n                recentChangeOnly: string;\n                authorsOnly: string;\n            };\n        };\n    };\n    views: ViewsConfig;\n    advanced: AdvancedConfig;\n}\n\nexport enum AnnotationsToggleMode {\n    File = 'file',\n    Window = 'window'\n}\n\nexport enum CodeLensCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum CodeLensScopes {\n    Document = 'document',\n    Containers = 'containers',\n    Blocks = 'blocks'\n}\n\nexport enum CustomRemoteType {\n    Bitbucket = 'Bitbucket',\n    BitbucketServer = 'BitbucketServer',\n    Custom = 'Custom',\n    GitHub = 'GitHub',\n    GitLab = 'GitLab'\n}\n\nexport enum DateStyle {\n    Absolute = 'absolute',\n    Relative = 'relative'\n}\n\nexport enum FileAnnotationType {\n    Blame = 'blame',\n    Heatmap = 'heatmap',\n    RecentChanges = 'recentChanges'\n}\n\nexport enum GravatarDefaultStyle {\n    Faces = 'wavatar',\n    Geometric = 'identicon',\n    Monster = 'monsterid',\n    MysteryPerson = 'mp',\n    Retro = 'retro',\n    Robot = 'robohash'\n}\n\nexport enum HighlightLocations {\n    Gutter = 'gutter',\n    Line = 'line',\n    Overview = 'overview'\n}\n\nexport enum KeyMap {\n    Alternate = 'alternate',\n    Chorded = 'chorded',\n    None = 'none'\n}\n\nexport enum LogLevel {\n    Silent = 'silent',\n    Errors = 'errors',\n    Verbose = 'verbose',\n    Debug = 'debug'\n}\n\nexport enum StatusBarCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum ViewBranchesLayout {\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewFilesLayout {\n    Auto = 'auto',\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport interface AdvancedConfig {\n    abbreviatedShaLength: number;\n    blame: {\n        customArguments: string[] | null;\n        delayAfterEdit: number;\n        sizeThresholdAfterEdit: number;\n    };\n    caching: {\n        enabled: boolean;\n    };\n    fileHistoryFollowsRenames: boolean;\n    maxListItems: number;\n    messages: {\n        suppressCommitHasNoPreviousCommitWarning: boolean;\n        suppressCommitNotFoundWarning: boolean;\n        suppressFileNotUnderSourceControlWarning: boolean;\n        suppressGitDisabledWarning: boolean;\n        suppressGitVersionWarning: boolean;\n        suppressLineUncommittedWarning: boolean;\n        suppressNoRepositoryWarning: boolean;\n        suppressSupportGitLensNotification: boolean;\n    };\n    quickPick: {\n        closeOnFocusOut: boolean;\n    };\n    repositorySearchDepth: number;\n    telemetry: {\n        enabled: boolean;\n    };\n}\n\nexport interface CodeLensConfig {\n    authors: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    enabled: boolean;\n    includeSingleLineSymbols: boolean;\n    recentChange: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    scopes: CodeLensScopes[];\n    scopesByLanguage: CodeLensLanguageScope[];\n    symbolScopes: string[];\n}\n\nexport interface CodeLensLanguageScope {\n    language: string | undefined;\n    scopes?: CodeLensScopes[];\n    symbolScopes?: string[];\n}\n\nexport interface CompareViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface FileHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface LineHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface MenuConfig {\n    editor:\n        | false\n        | {\n              blame: boolean;\n              clipboard: boolean;\n              compare: boolean;\n              details: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    editorGroup:\n        | false\n        | {\n              compare: boolean;\n              history: boolean;\n          };\n    editorTab:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    explorer:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    scmGroup:\n        | false\n        | {\n              compare: boolean;\n              openClose: boolean;\n              stash: boolean;\n              stashInline: boolean;\n          };\n    scmItem:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n              stash: boolean;\n          };\n}\n\nexport interface ModeConfig {\n    name: string;\n    statusBarItemName?: string;\n    description?: string;\n    annotations?: 'blame' | 'heatmap' | 'recentChanges';\n    codeLens?: boolean;\n    currentLine?: boolean;\n    hovers?: boolean;\n    statusBar?: boolean;\n    views?: boolean;\n}\n\nexport interface RemotesConfig {\n    domain: string;\n    name?: string;\n    protocol?: string;\n    type: CustomRemoteType;\n    urls?: RemotesUrlsConfig;\n}\n\nexport interface RemotesUrlsConfig {\n    repository: string;\n    branches: string;\n    branch: string;\n    commit: string;\n    file: string;\n    fileInBranch: string;\n    fileInCommit: string;\n    fileLine: string;\n    fileRange: string;\n}\n\nexport interface RepositoriesViewConfig {\n    autoRefresh: boolean;\n    autoReveal: boolean;\n    avatars: boolean;\n    branches: {\n        layout: ViewBranchesLayout;\n    };\n    compact: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    includeWorkingTree: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n    showTrackingBranch: boolean;\n}\n\nexport interface SearchViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface ViewsConfig {\n    fileHistory: FileHistoryViewConfig;\n    commitFileDescriptionFormat: string;\n    commitFileFormat: string;\n    commitDescriptionFormat: string;\n    commitFormat: string;\n    compare: CompareViewConfig;\n    defaultItemLimit: number;\n    lineHistory: LineHistoryViewConfig;\n    repositories: RepositoriesViewConfig;\n    search: SearchViewConfig;\n    showRelativeDateMarkers: boolean;\n    stashFileDescriptionFormat: string;\n    stashFileFormat: string;\n    stashDescriptionFormat: string;\n    stashFormat: string;\n    statusFileDescriptionFormat: string;\n    statusFileFormat: string;\n}\n\nexport interface ViewsFilesConfig {\n    compact: boolean;\n    layout: ViewFilesLayout;\n    threshold: number;\n}\n","'use strict';\nimport { commands, TextDocument, TextEditor, window } from 'vscode';\n\nexport const applicationInsightsKey = 'a9c302f8-6483-4d01-b92c-c159c799c679';\nexport const extensionId = 'gitlens';\nexport const extensionOutputChannelName = 'GitLens';\nexport const extensionQualifiedId = `eamodio.${extensionId}`;\nexport const extensionTerminalName = 'GitLens';\n\nexport enum BuiltInCommands {\n    CloseActiveEditor = 'workbench.action.closeActiveEditor',\n    CloseAllEditors = 'workbench.action.closeAllEditors',\n    CursorMove = 'cursorMove',\n    Diff = 'vscode.diff',\n    EditorScroll = 'editorScroll',\n    ExecuteDocumentSymbolProvider = 'vscode.executeDocumentSymbolProvider',\n    ExecuteCodeLensProvider = 'vscode.executeCodeLensProvider',\n    FocusFilesExplorer = 'workbench.files.action.focusFilesExplorer',\n    Open = 'vscode.open',\n    OpenFolder = 'vscode.openFolder',\n    OpenInTerminal = 'openInTerminal',\n    NextEditor = 'workbench.action.nextEditor',\n    PreviewHtml = 'vscode.previewHtml',\n    RevealLine = 'revealLine',\n    SetContext = 'setContext',\n    ShowExplorerActivity = 'workbench.view.explorer',\n    ShowReferences = 'editor.action.showReferences'\n}\n\nexport enum CommandContext {\n    ActiveFileStatus = 'gitlens:activeFileStatus',\n    AnnotationStatus = 'gitlens:annotationStatus',\n    CanToggleCodeLens = 'gitlens:canToggleCodeLens',\n    Enabled = 'gitlens:enabled',\n    HasRemotes = 'gitlens:hasRemotes',\n    Key = 'gitlens:key',\n    Readonly = 'gitlens:readonly',\n    ViewsCanCompare = 'gitlens:views:canCompare',\n    ViewsCanCompareFile = 'gitlens:views:canCompare:file',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsHideSupportGitLens = 'gitlens:views:supportGitLens:hide',\n    ViewsFileHistoryEditorFollowing = 'gitlens:views:fileHistory:editorFollowing',\n    ViewsLineHistoryEditorFollowing = 'gitlens:views:lineHistory:editorFollowing',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n\nexport function setCommandContext(key: CommandContext | string, value: any) {\n    return commands.executeCommand(BuiltInCommands.SetContext, key, value);\n}\n\nexport enum DocumentSchemes {\n    DebugConsole = 'debug',\n    File = 'file',\n    Git = 'git',\n    GitLens = 'gitlens',\n    Output = 'output',\n    Vsls = 'vsls'\n}\n\nexport function getEditorIfActive(document: TextDocument): TextEditor | undefined {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document ? editor : undefined;\n}\n\nexport function isActiveDocument(document: TextDocument): boolean {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document;\n}\n\nexport function isTextEditor(editor: TextEditor): boolean {\n    const scheme = editor.document.uri.scheme;\n    return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;\n}\n\nexport enum GlyphChars {\n    AngleBracketLeftHeavy = '\\u2770',\n    AngleBracketRightHeavy = '\\u2771',\n    ArrowBack = '\\u21a9',\n    ArrowDown = '\\u2193',\n    ArrowDropRight = '\\u2937',\n    ArrowHeadRight = '\\u27A4',\n    ArrowLeft = '\\u2190',\n    ArrowLeftDouble = '\\u21d0',\n    ArrowLeftRight = '\\u2194',\n    ArrowLeftRightDouble = '\\u21d4',\n    ArrowLeftRightDoubleStrike = '\\u21ce',\n    ArrowLeftRightLong = '\\u27f7',\n    ArrowRight = '\\u2192',\n    ArrowRightDouble = '\\u21d2',\n    ArrowRightHollow = '\\u21e8',\n    ArrowUp = '\\u2191',\n    ArrowUpRight = '\\u2197',\n    ArrowsHalfLeftRight = '\\u21cb',\n    ArrowsHalfRightLeft = '\\u21cc',\n    ArrowsLeftRight = '\\u21c6',\n    ArrowsRightLeft = '\\u21c4',\n    Asterisk = '\\u2217',\n    Check = '\\u2713',\n    Dash = '\\u2014',\n    Dot = '\\u2022',\n    Ellipsis = '\\u2026',\n    EnDash = '\\u2013',\n    MiddleEllipsis = '\\u22EF',\n    MuchGreaterThan = '\\u226A',\n    MuchLessThan = '\\u22D8',\n    Pencil = '\\u270E',\n    Space = '\\u00a0',\n    SpaceThin = '\\u2009',\n    SpaceThinnest = '\\u200A',\n    SquareWithBottomShadow = '\\u274F',\n    SquareWithTopShadow = '\\u2750',\n    ZeroWidthSpace = '\\u200b'\n}\n\nexport enum GlobalState {\n    GitLensVersion = 'gitlensVersion'\n}\n\nexport const ImageMimetypes: { [key: string]: string } = {\n    '.png': 'image/png',\n    '.gif': 'image/gif',\n    '.jpg': 'image/jpeg',\n    '.jpeg': 'image/jpeg',\n    '.jpe': 'image/jpeg',\n    '.webp': 'image/webp',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.bmp': 'image/bmp'\n};\n\nexport interface NamedRef {\n    label?: string;\n    ref: string;\n}\n\nexport interface PinnedComparison {\n    path: string;\n    ref1: NamedRef;\n    ref2: NamedRef;\n}\n\nexport interface PinnedComparisons {\n    [id: string]: PinnedComparison;\n}\n\nexport interface StarredBranches {\n    [id: string]: boolean;\n}\n\nexport interface StarredRepositories {\n    [id: string]: boolean;\n}\n\nexport enum WorkspaceState {\n    DefaultRemote = 'gitlens:remote:default',\n    PinnedComparisons = 'gitlens:pinned:comparisons',\n    StarredBranches = 'gitlens:starred:branches',\n    StarredRepositories = 'gitlens:starred:repositories',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n","'use strict';\n\nexport namespace Objects {\n    export function entries<T>(o: { [key: string]: T }): IterableIterator<[string, T]>;\n    export function entries<T>(o: { [key: number]: T }): IterableIterator<[string, T]>;\n    export function* entries<T>(o: any): IterableIterator<[string, T]> {\n        for (const key in o) {\n            yield [key, o[key]];\n        }\n    }\n\n    export function flatten(o: any, prefix: string = '', stringify: boolean = false): { [key: string]: any } {\n        const flattened = Object.create(null);\n        _flatten(flattened, prefix, o, stringify);\n        return flattened;\n    }\n\n    function _flatten(flattened: { [key: string]: any }, key: string, value: any, stringify: boolean = false) {\n        if (Object(value) !== value) {\n            if (stringify) {\n                if (value == null) {\n                    flattened[key] = null;\n                }\n                else if (typeof value === 'string') {\n                    flattened[key] = value;\n                }\n                else {\n                    flattened[key] = JSON.stringify(value);\n                }\n            }\n            else {\n                flattened[key] = value;\n            }\n        }\n        else if (Array.isArray(value)) {\n            const len = value.length;\n            for (let i = 0; i < len; i++) {\n                _flatten(flattened, `${key}[${i}]`, value[i], stringify);\n            }\n            if (len === 0) {\n                flattened[key] = null;\n            }\n        }\n        else {\n            let isEmpty = true;\n            for (const p in value) {\n                isEmpty = false;\n                _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);\n            }\n            if (isEmpty && key) {\n                flattened[key] = null;\n            }\n        }\n    }\n\n    export function paths(o: { [key: string]: any }, path?: string): string[] {\n        const results = [];\n\n        for (const key in o) {\n            const child = o[key];\n            if (typeof child === 'object') {\n                results.push(...paths(child, path === undefined ? key : `${path}.${key}`));\n            }\n            else {\n                results.push(path === undefined ? key : `${path}.${key}`);\n            }\n        }\n\n        return results;\n    }\n\n    export function values<T>(o: { [key: string]: T }): IterableIterator<T>;\n    export function values<T>(o: { [key: number]: T }): IterableIterator<T>;\n    export function* values<T>(o: any): IterableIterator<T> {\n        for (const key in o) {\n            yield o[key];\n        }\n    }\n}\n","'use strict';\nimport { Objects } from './object';\n\nexport namespace Arrays {\n    export function countUniques<T>(source: T[], accessor: (item: T) => string): { [key: string]: number } {\n        const uniqueCounts = Object.create(null);\n        for (const item of source) {\n            const value = accessor(item);\n            uniqueCounts[value] = (uniqueCounts[value] || 0) + 1;\n        }\n        return uniqueCounts;\n    }\n\n    export function filterMap<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => TMapped | null | undefined\n    ): TMapped[] {\n        return source.reduce(\n            (accumulator, current) => {\n                const mapped = predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as TMapped[]\n        );\n    }\n\n    export async function filterMapAsync<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => Promise<TMapped | null | undefined>\n    ): Promise<TMapped[]> {\n        return source.reduce(\n            async (accumulator, current) => {\n                const mapped = await predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as any\n        );\n    }\n\n    export function groupBy<T>(source: T[], accessor: (item: T) => string): { [key: string]: T[] } {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            groupings[value] = groupings[value] || [];\n            groupings[value].push(current);\n            return groupings;\n        }, Object.create(null));\n    }\n\n    export function groupByMap<TKey, TValue>(source: TValue[], accessor: (item: TValue) => TKey): Map<TKey, TValue[]> {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            const group = groupings.get(value) || [];\n            groupings.set(value, group);\n            group.push(current);\n            return groupings;\n        }, new Map<TKey, TValue[]>());\n    }\n\n    export function groupByFilterMap<TKey, TValue, TMapped>(\n        source: TValue[],\n        accessor: (item: TValue) => TKey,\n        predicateMapper: (item: TValue) => TMapped | null | undefined\n    ): Map<TKey, TMapped[]> {\n        return source.reduce((groupings, current) => {\n            const mapped = predicateMapper(current);\n            if (mapped != null) {\n                const value = accessor(current);\n                const group = groupings.get(value) || [];\n                groupings.set(value, group);\n                group.push(mapped);\n            }\n            return groupings;\n        }, new Map<TKey, TMapped[]>());\n    }\n\n    export interface IHierarchicalItem<T> {\n        name: string;\n        relativePath: string;\n        value?: T;\n\n        // parent?: IHierarchicalItem<T>;\n        children: { [key: string]: IHierarchicalItem<T> } | undefined;\n        descendants: T[] | undefined;\n    }\n\n    export function makeHierarchical<T>(\n        values: T[],\n        splitPath: (i: T) => string[],\n        joinPath: (...paths: string[]) => string,\n        compact: boolean = false\n    ): IHierarchicalItem<T> {\n        const seed = {\n            name: '',\n            relativePath: '',\n            children: Object.create(null),\n            descendants: []\n        };\n\n        const hierarchy = values.reduce((root: IHierarchicalItem<T>, value) => {\n            let folder = root;\n\n            let relativePath = '';\n            for (const folderName of splitPath(value)) {\n                relativePath = joinPath(relativePath, folderName);\n\n                if (folder.children === undefined) {\n                    folder.children = Object.create(null);\n                }\n\n                let f = folder.children![folderName];\n                if (f === undefined) {\n                    folder.children![folderName] = f = {\n                        name: folderName,\n                        relativePath: relativePath,\n                        // parent: folder,\n                        children: undefined,\n                        descendants: undefined\n                    };\n                }\n\n                if (folder.descendants === undefined) {\n                    folder.descendants = [];\n                }\n                folder.descendants.push(value);\n                folder = f;\n            }\n\n            folder.value = value;\n\n            return root;\n        }, seed);\n\n        if (compact) return compactHierarchy(hierarchy, joinPath, true);\n        return hierarchy;\n    }\n\n    export function compactHierarchy<T>(\n        root: IHierarchicalItem<T>,\n        joinPath: (...paths: string[]) => string,\n        isRoot: boolean = true\n    ): IHierarchicalItem<T> {\n        if (root.children === undefined) return root;\n\n        const children = [...Objects.values(root.children)];\n\n        // // Attempts less nesting but duplicate roots\n        // if (!isRoot && children.every(c => c.value === undefined)) {\n        //     const parentSiblings = root.parent!.children!;\n        //     if (parentSiblings[root.name] !== undefined) {\n        //         delete parentSiblings[root.name];\n\n        //         for (const child of children) {\n        //             child.name = joinPath(root.name, child.name);\n        //             parentSiblings[child.name] = child;\n        //         }\n        //     }\n        // }\n\n        for (const child of children) {\n            compactHierarchy(child, joinPath, false);\n        }\n\n        if (!isRoot && children.length === 1) {\n            const child = children[0];\n            if (child.value === undefined) {\n                root.name = joinPath(root.name, child.name);\n                root.relativePath = child.relativePath;\n                root.children = child.children;\n            }\n        }\n\n        return root;\n    }\n\n    export function uniqueBy<T>(source: T[], accessor: (item: T) => any, predicate?: (item: T) => boolean): T[] {\n        const uniqueValues = Object.create(null);\n        return source.filter(item => {\n            const value = accessor(item);\n            if (uniqueValues[value]) return false;\n\n            uniqueValues[value] = accessor;\n            return predicate ? predicate(item) : true;\n        });\n    }\n}\n","'use strict';\nimport { distanceInWordsToNow as _fromNow, format as _format } from 'date-fns';\nimport * as en from 'date-fns/locale/en';\n\n// Taken from https://github.com/date-fns/date-fns/blob/601bc8e5708cbaebee5389bdaf51c2b4b33b73c4/src/locale/en/build_distance_in_words_locale/index.js\nfunction buildDistanceInWordsLocale() {\n    const distanceInWordsLocale: { [key: string]: string | { one: string; other: string } } = {\n        lessThanXSeconds: {\n            one: 'less than a second',\n            other: 'less than {{count}} seconds'\n        },\n\n        xSeconds: {\n            one: '1 second',\n            other: '{{count}} seconds'\n        },\n\n        halfAMinute: 'half a minute',\n\n        lessThanXMinutes: {\n            one: 'a few seconds',\n            other: 'less than {{count}} minutes'\n        },\n\n        xMinutes: {\n            one: 'a minute',\n            other: '{{count}} minutes'\n        },\n\n        aboutXHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xDays: {\n            one: 'a day',\n            other: '{{count}} days'\n        },\n\n        aboutXMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        xMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        aboutXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        xYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        overXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        almostXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        }\n    };\n\n    function localize(token: string, count: number, options: any) {\n        options = options || {};\n\n        if (count === 12 && token === 'xMonths') {\n            token = 'aboutXYears';\n            count = 1;\n        }\n\n        const result = distanceInWordsLocale[token];\n\n        let value: string;\n        if (typeof result === 'string') {\n            value = result;\n        }\n        else {\n            if (count === 1) {\n                value = result.one;\n            }\n            else {\n                value = result.other.replace('{{count}}', count.toString());\n            }\n        }\n\n        if (!options.addSuffix) return value;\n\n        if (options.comparison > 0) return 'in ' + value;\n\n        return value + ' ago';\n    }\n\n    return {\n        localize: localize\n    };\n}\n\n// Monkey patch the locale to customize the wording\nconst patch = en as any;\npatch.distanceInWords = buildDistanceInWordsLocale();\n\nconst formatterOptions = { addSuffix: true, locale: patch };\n\nexport namespace Dates {\n    export const MillisecondsPerMinute = 60000; // 60 * 1000\n    export const MillisecondsPerHour = 3600000; // 60 * 60 * 1000\n    export const MillisecondsPerDay = 86400000; // 24 * 60 * 60 * 1000\n\n    export interface IDateFormatter {\n        fromNow(): string;\n        format(format: string): string;\n    }\n\n    export function dateDaysFromNow(date: Date, now: number = Date.now()) {\n        const startOfDayLeft = startOfDay(now);\n        const startOfDayRight = startOfDay(date);\n\n        const timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MillisecondsPerMinute;\n        const timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MillisecondsPerMinute;\n\n        return Math.round((timestampLeft - timestampRight) / MillisecondsPerDay);\n    }\n\n    export function startOfDay(date: Date | number) {\n        const newDate = new Date(typeof date === 'number' ? date : date.getTime());\n        newDate.setHours(0, 0, 0, 0);\n        return newDate;\n    }\n\n    export function toFormatter(date: Date): IDateFormatter {\n        return {\n            fromNow: () => {\n                return _fromNow(date, formatterOptions);\n            },\n            format: (format: string) => _format(date, format)\n        };\n    }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n","import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n","'use strict';\nimport { debounce as _debounce, once as _once } from 'lodash-es';\nimport { CancellationToken, Disposable } from 'vscode';\n\nexport interface IDeferrable {\n    cancel(): void;\n    flush(...args: any[]): void;\n    pending?(): boolean;\n}\n\ninterface IPropOfValue {\n    (): any;\n    value: string | undefined;\n}\n\nexport namespace Functions {\n    export function cachedOnce<T>(fn: (...args: any[]) => Promise<T>, seed: T): (...args: any[]) => Promise<T> {\n        let cached: T | undefined = seed;\n        return (...args: any[]) => {\n            if (cached !== undefined) {\n                const promise = Promise.resolve(cached);\n                cached = undefined;\n\n                return promise;\n            }\n            return fn(...args);\n        };\n    }\n\n    export function cancellable<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            token.onCancellationRequested(() => resolve(undefined));\n\n            promise.then(resolve, reject);\n        });\n    }\n\n    export function debounce<T extends (...args: any[]) => any>(\n        fn: T,\n        wait?: number,\n        options?: { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean }\n    ): T & IDeferrable {\n        const { track, ...opts } = {\n            track: false,\n            ...(options || {})\n        } as { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean };\n\n        if (track !== true) return _debounce(fn, wait, opts);\n\n        let pending = false;\n\n        const debounced = _debounce(\n            (function(this: any, ...args: any[]) {\n                pending = false;\n                return fn.apply(this, args);\n            } as any) as T,\n            wait,\n            options\n        ) as T & IDeferrable;\n\n        const tracked = (function(this: any, ...args: any[]) {\n            pending = true;\n            return debounced.apply(this, args);\n        } as any) as T & IDeferrable;\n\n        tracked.pending = function() {\n            return pending;\n        };\n        tracked.cancel = function() {\n            return debounced.cancel.apply(debounced);\n        };\n        tracked.flush = function(...args: any[]) {\n            return debounced.flush.apply(debounced, args);\n        };\n\n        return tracked;\n    }\n\n    const comma = ',';\n    const empty = '';\n    const equals = '=';\n    const openBrace = '{';\n    const openParen = '(';\n    const closeParen = ')';\n\n    const fnBodyRegex = /\\(([\\s\\S]*)\\)/;\n    const fnBodyStripCommentsRegex = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/gm;\n    const fnBodyStripParamDefaultValueRegex = /\\s?=.*$/;\n\n    export function getParameters(fn: Function): string[] {\n        if (typeof fn !== 'function') throw new Error('Not supported');\n\n        if (fn.length === 0) return [];\n\n        let fnBody: string = Function.prototype.toString.call(fn);\n        fnBody = fnBody.replace(fnBodyStripCommentsRegex, empty) || fnBody;\n        fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));\n\n        let open = fnBody.indexOf(openParen);\n        let close = fnBody.indexOf(closeParen);\n\n        open = open >= 0 ? open + 1 : 0;\n        close = close > 0 ? close : fnBody.indexOf(equals);\n\n        fnBody = fnBody.slice(open, close);\n        fnBody = `(${fnBody})`;\n\n        const match = fnBody.match(fnBodyRegex);\n        return match != null\n            ? match[1].split(comma).map(param => param.trim().replace(fnBodyStripParamDefaultValueRegex, empty))\n            : [];\n    }\n\n    export function isPromise(o: any): o is Promise<any> {\n        return (typeof o === 'object' || typeof o === 'function') && typeof o.then === 'function';\n    }\n\n    export function once<T extends (...args: any[]) => any>(fn: T): T {\n        return _once(fn);\n    }\n\n    export function propOf<T, K extends Extract<keyof T, string>>(o: T, key: K) {\n        const propOfCore = <T, K extends Extract<keyof T, string>>(o: T, key: K) => {\n            const value: string =\n                (propOfCore as IPropOfValue).value === undefined ? key : `${(propOfCore as IPropOfValue).value}.${key}`;\n            (propOfCore as IPropOfValue).value = value;\n            const fn = <Y extends Extract<keyof T[K], string>>(k: Y) => propOfCore(o[key], k);\n            return Object.assign(fn, { value: value });\n        };\n        return propOfCore(o, key);\n    }\n\n    export function interval(fn: (...args: any[]) => void, ms: number): Disposable {\n        let timer: NodeJS.Timer | undefined;\n        const disposable = {\n            dispose: () => {\n                if (timer !== undefined) {\n                    clearInterval(timer);\n                    timer = undefined;\n                }\n            }\n        };\n        timer = setInterval(fn, ms);\n\n        return disposable;\n    }\n\n    export async function wait(ms: number) {\n        await new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    export async function waitUntil(fn: (...args: any[]) => boolean, timeout: number): Promise<boolean> {\n        const max = Math.round(timeout / 100);\n        let counter = 0;\n        while (true) {\n            if (fn()) return true;\n            if (counter > max) return false;\n\n            await wait(100);\n            counter++;\n        }\n    }\n}\n","'use strict';\nimport { Functions } from '../function';\n\nexport function gate() {\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const gateKey = `$gate$${key}`;\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            if (!this.hasOwnProperty(gateKey)) {\n                Object.defineProperty(this, gateKey, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                });\n            }\n\n            let promise = this[gateKey];\n            if (promise === undefined) {\n                const result = fn!.apply(this, args);\n                if (result == null || !Functions.isPromise(result)) {\n                    return result;\n                }\n\n                this[gateKey] = promise = result.then((r: any) => {\n                    this[gateKey] = undefined;\n                    return r;\n                });\n            }\n\n            return promise;\n        };\n    };\n}\n","'use strict';\nimport { createHash, HexBase64Latin1Encoding } from 'crypto';\n\nexport namespace Strings {\n    export const enum CharCode {\n        /**\n         * The `/` character.\n         */\n        Slash = 47,\n        /**\n         * The `\\` character.\n         */\n        Backslash = 92\n    }\n\n    export function getDurationMilliseconds(start: [number, number]) {\n        const [secs, nanosecs] = process.hrtime(start);\n        return secs * 1000 + Math.floor(nanosecs / 1000000);\n    }\n\n    const pathNormalizeRegex = /\\\\/g;\n    const pathStripTrailingSlashRegex = /\\/$/g;\n    const tokenRegex = /\\$\\{(\\W*)?([^|]*?)(?:\\|(\\d+)(\\-|\\?)?)?(\\W*)?\\}/g;\n    const tokenSanitizeRegex = /\\$\\{(?:\\W*)?(\\w*?)(?:[\\W\\d]*)\\}/g;\n\n    export interface ITokenOptions {\n        collapseWhitespace: boolean;\n        padDirection: 'left' | 'right';\n        prefix: string | undefined;\n        suffix: string | undefined;\n        truncateTo: number | undefined;\n    }\n\n    export function getTokensFromTemplate(template: string) {\n        const tokens: { key: string; options: ITokenOptions }[] = [];\n\n        let match = tokenRegex.exec(template);\n        while (match != null) {\n            const [, prefix, key, truncateTo, option, suffix] = match;\n            tokens.push({\n                key: key,\n                options: {\n                    collapseWhitespace: option === '?',\n                    padDirection: option === '-' ? 'left' : 'right',\n                    prefix: prefix,\n                    suffix: suffix,\n                    truncateTo: truncateTo == null ? undefined : parseInt(truncateTo, 10)\n                }\n            });\n            match = tokenRegex.exec(template);\n        }\n\n        return tokens;\n    }\n\n    export function interpolate(template: string, context: object | undefined): string {\n        if (!template) return template;\n        if (context === undefined) return template.replace(tokenSanitizeRegex, '');\n\n        template = template.replace(tokenSanitizeRegex, '$${this.$1}');\n        return new Function(`return \\`${template}\\`;`).call(context);\n    }\n\n    export function* lines(s: string): IterableIterator<string> {\n        let i = 0;\n        while (i < s.length) {\n            let j = s.indexOf('\\n', i);\n            if (j === -1) {\n                j = s.length;\n            }\n\n            yield s.substring(i, j);\n            i = j + 1;\n        }\n    }\n\n    export function md5(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('md5')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function normalizePath(\n        fileName: string,\n        options: { addLeadingSlash?: boolean; stripTrailingSlash?: boolean } = { stripTrailingSlash: true }\n    ) {\n        if (fileName == null || fileName.length === 0) return fileName;\n\n        let normalized = fileName.replace(pathNormalizeRegex, '/');\n\n        const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };\n\n        if (stripTrailingSlash) {\n            normalized = normalized.replace(pathStripTrailingSlashRegex, '');\n        }\n\n        if (addLeadingSlash && normalized.charCodeAt(0) !== CharCode.Slash) {\n            normalized = `/${normalized}`;\n        }\n\n        return normalized;\n    }\n\n    export function pad(s: string, before: number = 0, after: number = 0, padding: string = `\\u00a0`) {\n        if (before === 0 && after === 0) return s;\n\n        return `${before === 0 ? '' : padding.repeat(before)}${s}${after === 0 ? '' : padding.repeat(after)}`;\n    }\n\n    export function padLeft(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : padding.repeat(diff) + s;\n    }\n\n    export function padLeftOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padLeft(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRight(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : s + padding.repeat(diff);\n    }\n\n    export function padOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        const left = max < 0;\n        max = Math.abs(max);\n\n        width = width || getWidth(s);\n        if (width < max) return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRightOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max);\n        return s;\n    }\n\n    export function pluralize(\n        s: string,\n        count: number,\n        options?: { number?: string; plural?: string; suffix?: string; zero?: string }\n    ) {\n        if (options === undefined) return `${count} ${s}${count === 1 ? '' : 's'}`;\n\n        return `${count === 0 ? options.zero || count : options.number || count} ${\n            count === 1 ? s : options.plural || `${s}${options.suffix || 's'}`\n        }`;\n    }\n\n    // Removes \\ / : * ? \" < > | and C0 and C1 control codes\n    const illegalCharsForFSRegex = /[\\\\/:*?\"<>|\\x00-\\x1f\\x80-\\x9f]/g;\n\n    export function sanitizeForFileSystem(s: string, replacement: string = '_') {\n        if (!s) return s;\n        return s.replace(illegalCharsForFSRegex, replacement);\n    }\n\n    export function sha1(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('sha1')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function truncate(s: string, truncateTo: number, ellipsis: string = '\\u2026', width?: number) {\n        if (!s) return s;\n\n        width = width || getWidth(s);\n        if (width <= truncateTo) return s;\n        if (width === s.length) return `${s.substring(0, truncateTo - 1)}${ellipsis}`;\n\n        // Skip ahead to start as far as we can by assuming all the double-width characters won't be truncated\n        let chars = Math.floor(truncateTo / (width / s.length));\n        let count = getWidth(s.substring(0, chars));\n        while (count < truncateTo) {\n            count += getWidth(s[chars++]);\n        }\n\n        if (count >= truncateTo) {\n            chars--;\n        }\n\n        return `${s.substring(0, chars)}${ellipsis}`;\n    }\n\n    const ansiRegex = /[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))/g;\n    const containsNonAsciiRegex = /[^\\x20-\\x7F\\u00a0\\u2026]/;\n\n    export function getWidth(s: string): number {\n        if (s == null || s.length === 0) return 0;\n\n        // Shortcut to avoid needless string `RegExp`s, replacements, and allocations\n        if (!containsNonAsciiRegex.test(s)) return s.length;\n\n        s = s.replace(ansiRegex, '');\n\n        let count = 0;\n        let emoji = 0;\n        let joiners = 0;\n\n        const graphemes = [...s];\n        for (let i = 0; i < graphemes.length; i++) {\n            const code = graphemes[i].codePointAt(0)!;\n\n            // Ignore control characters\n            if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) continue;\n\n            // Ignore combining characters\n            if (code >= 0x300 && code <= 0x36f) continue;\n\n            // https://stackoverflow.com/questions/30757193/find-out-if-character-in-string-is-emoji\n            if (\n                (code >= 0x1f600 && code <= 0x1f64f) || // Emoticons\n                (code >= 0x1f300 && code <= 0x1f5ff) || // Misc Symbols and Pictographs\n                (code >= 0x1f680 && code <= 0x1f6ff) || // Transport and Map\n                (code >= 0x2600 && code <= 0x26ff) || // Misc symbols\n                (code >= 0x2700 && code <= 0x27bf) || // Dingbats\n                (code >= 0xfe00 && code <= 0xfe0f) || // Variation Selectors\n                (code >= 0x1f900 && code <= 0x1f9ff) || // Supplemental Symbols and Pictographs\n                (code >= 65024 && code <= 65039) || // Variation selector\n                (code >= 8400 && code <= 8447) // Combining Diacritical Marks for Symbols\n            ) {\n                if (code >= 0x1f3fb && code <= 0x1f3ff) continue; // emoji modifier fitzpatrick type\n\n                emoji++;\n                count += 2;\n                continue;\n            }\n\n            // Ignore zero-width joiners '\\u200d'\n            if (code === 8205) {\n                joiners++;\n                count -= 2;\n                continue;\n            }\n\n            // Surrogates\n            if (code > 0xffff) {\n                i++;\n            }\n\n            count += isFullwidthCodePoint(code) ? 2 : 1;\n        }\n\n        const offset = emoji - joiners;\n        if (offset > 1) {\n            count += offset - 1;\n        }\n        return count;\n    }\n\n    function isFullwidthCodePoint(cp: number) {\n        // code points are derived from:\n        // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n        if (\n            cp >= 0x1100 &&\n            (cp <= 0x115f || // Hangul Jamo\n            cp === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n            cp === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n                // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n                (0x2e80 <= cp && cp <= 0x3247 && cp !== 0x303f) ||\n                // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n                (0x3250 <= cp && cp <= 0x4dbf) ||\n                // CJK Unified Ideographs .. Yi Radicals\n                (0x4e00 <= cp && cp <= 0xa4c6) ||\n                // Hangul Jamo Extended-A\n                (0xa960 <= cp && cp <= 0xa97c) ||\n                // Hangul Syllables\n                (0xac00 <= cp && cp <= 0xd7a3) ||\n                // CJK Compatibility Ideographs\n                (0xf900 <= cp && cp <= 0xfaff) ||\n                // Vertical Forms\n                (0xfe10 <= cp && cp <= 0xfe19) ||\n                // CJK Compatibility Forms .. Small Form Variants\n                (0xfe30 <= cp && cp <= 0xfe6b) ||\n                // Halfwidth and Fullwidth Forms\n                (0xff01 <= cp && cp <= 0xff60) ||\n                (0xffe0 <= cp && cp <= 0xffe6) ||\n                // Kana Supplement\n                (0x1b000 <= cp && cp <= 0x1b001) ||\n                // Enclosed Ideographic Supplement\n                (0x1f200 <= cp && cp <= 0x1f251) ||\n                // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n                (0x20000 <= cp && cp <= 0x3fffd))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","'use strict';\nimport { LogCorrelationContext, Logger, LogLevel } from '../../logger';\nimport { Functions } from './../function';\nimport { Strings } from './../string';\n\nconst correlationContext = new Map<number, LogCorrelationContext>();\nlet correlationCounter = 0;\n\nexport function getCorrelationContext() {\n    return correlationContext.get(correlationCounter);\n}\n\nexport function getCorrelationId() {\n    return correlationCounter;\n}\n\nfunction getNextCorrelationId() {\n    if (correlationCounter === Number.MAX_SAFE_INTEGER) {\n        correlationCounter = 0;\n    }\n    return ++correlationCounter;\n}\n\nfunction clearCorrelationContext(correlationId: number) {\n    correlationContext.delete(correlationId);\n}\n\nfunction setCorrelationContext(correlationId: number, context: LogCorrelationContext) {\n    correlationContext.set(correlationId, context);\n}\n\nexport interface LogContext<T> {\n    id: number;\n    instance: T;\n    instanceName: string;\n    name: string;\n    prefix: string;\n}\n\nexport const LogInstanceNameFn = Symbol('logInstanceNameFn');\n\nexport function logName<T>(fn: (c: T, name: string) => string) {\n    return (target: Function) => {\n        (target as any)[LogInstanceNameFn] = fn;\n    };\n}\n\nexport function debug<T>(\n    options: {\n        args?: false | { [arg: string]: (arg: any) => string | false };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    return log<T>({ debug: true, ...options });\n}\n\nexport function log<T>(\n    options: {\n        args?: false | { [arg: number]: ((arg: any) => string | false) };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        debug?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    options = { timed: true, ...options };\n\n    const logFn = (options.debug ? Logger.debug.bind(Logger) : Logger.log.bind(Logger)) as\n        | typeof Logger.debug\n        | typeof Logger.log;\n\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const parameters = Functions.getParameters(fn);\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            const correlationId = getNextCorrelationId();\n\n            if (\n                (!Logger.isDebugging &&\n                    Logger.level !== LogLevel.Debug &&\n                    !(Logger.level === LogLevel.Verbose && !options.debug)) ||\n                (typeof options.condition === 'function' && !options.condition(...args))\n            ) {\n                return fn!.apply(this, args);\n            }\n\n            let instanceName: string;\n            if (this != null) {\n                instanceName = Logger.toLoggableName(this);\n                if (this.constructor != null && this.constructor[LogInstanceNameFn]) {\n                    instanceName = target.constructor[LogInstanceNameFn](this, instanceName);\n                }\n            }\n            else {\n                instanceName = '';\n            }\n\n            let { correlate } = options;\n            if (!correlate && options.timed) {\n                correlate = true;\n            }\n\n            let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : ''}${\n                instanceName ? `${instanceName}.` : ''\n            }${key}`;\n\n            if (options.prefix != null) {\n                prefix = options.prefix(\n                    {\n                        id: correlationId,\n                        instance: this,\n                        instanceName: instanceName,\n                        name: key,\n                        prefix: prefix\n                    } as LogContext<T>,\n                    ...args\n                );\n            }\n\n            let correlationContext: LogCorrelationContext | undefined;\n            if (correlate) {\n                correlationContext = { correlationId: correlationId, prefix: prefix };\n                setCorrelationContext(correlationId, correlationContext);\n            }\n\n            const enter = options.enter != null ? options.enter(...args) : '';\n\n            let loggableParams: string;\n            if (options.args === false || args.length === 0) {\n                loggableParams = '';\n\n                if (!options.singleLine) {\n                    logFn(`${prefix}${enter}`);\n                }\n            }\n            else {\n                const argFns = typeof options.args === 'object' ? options.args : undefined;\n                let argFn;\n                let loggable;\n                loggableParams = args\n                    .map((v: any, index: number) => {\n                        const p = parameters[index];\n\n                        argFn = argFns !== undefined ? argFns[index] : undefined;\n                        if (argFn !== undefined) {\n                            loggable = argFn(v);\n                            if (loggable === false) return undefined;\n                        }\n                        else {\n                            loggable = Logger.toLoggable(v, options.sanitize);\n                        }\n\n                        return p ? `${p}=${loggable}` : loggable;\n                    })\n                    .filter(Boolean)\n                    .join(', ');\n\n                if (!options.singleLine) {\n                    if (!options.debug) {\n                        Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);\n                    }\n                    else {\n                        logFn(`${prefix}${enter}`, loggableParams);\n                    }\n                }\n            }\n\n            if (options.timed || options.exit != null) {\n                const start = options.timed ? process.hrtime() : undefined;\n\n                const logError = (ex: Error) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    if (options.singleLine) {\n                        Logger.error(\n                            ex,\n                            `${prefix}${enter}`,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`,\n                            loggableParams\n                        );\n                    }\n                    else {\n                        Logger.error(\n                            ex,\n                            prefix,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                let result;\n                try {\n                    result = fn!.apply(this, args);\n                }\n                catch (ex) {\n                    logError(ex);\n                    throw ex;\n                }\n\n                const logResult = (r: any) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    let exit;\n                    if (options.exit != null) {\n                        try {\n                            exit = options.exit(r);\n                        }\n                        catch (ex) {\n                            exit = `@log.exit error: ${ex}`;\n                        }\n                    }\n                    else {\n                        exit = 'completed';\n                    }\n\n                    if (options.singleLine) {\n                        if (!options.debug) {\n                            Logger.logWithDebugParams(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                        else {\n                            logFn(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                    }\n                    else {\n                        logFn(\n                            `${prefix} ${exit}${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                if (result != null && Functions.isPromise(result)) {\n                    const promise = result.then(logResult);\n                    promise.catch(logError);\n                }\n                else {\n                    logResult(result);\n                }\n\n                return result;\n            }\n\n            return fn!.apply(this, args);\n        };\n    };\n}\n","'use strict';\n\nexport namespace Iterables {\n    export function count<T>(source: Iterable<T> | IterableIterator<T>, predicate?: (item: T) => boolean): number {\n        let count = 0;\n        let next: IteratorResult<T>;\n\n        while (true) {\n            next = (source as IterableIterator<T>).next();\n            if (next.done) break;\n\n            if (predicate === undefined || predicate(next.value)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    export function every<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (!predicate(item)) return false;\n        }\n        return true;\n    }\n\n    export function filter<T>(\n        source: Iterable<T | undefined | null> | IterableIterator<T | undefined | null>\n    ): Iterable<T>;\n    export function filter<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): Iterable<T>;\n    export function* filter<T>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicate?: (item: T) => boolean\n    ): Iterable<T> {\n        if (predicate === undefined) {\n            for (const item of source) {\n                if (item != null) yield item;\n            }\n        }\n        else {\n            for (const item of source) {\n                if (predicate(item)) yield item;\n            }\n        }\n    }\n\n    export function* filterMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicateMapper: (item: T) => TMapped | undefined | null\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            const mapped = predicateMapper(item);\n            if (mapped != null) yield mapped;\n        }\n    }\n\n    export function forEach<T>(source: Iterable<T> | IterableIterator<T>, fn: (item: T, index: number) => void): void {\n        let i = 0;\n        for (const item of source) {\n            fn(item, i);\n            i++;\n        }\n    }\n\n    export function find<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): T | null {\n        for (const item of source) {\n            if (predicate(item)) return item;\n        }\n        return null;\n    }\n\n    export function first<T>(source: Iterable<T>): T {\n        return source[Symbol.iterator]().next().value;\n    }\n\n    export function* flatMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => Iterable<TMapped>\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield* mapper(item);\n        }\n    }\n\n    export function has<T>(source: Iterable<T> | IterableIterator<T>, item: T): boolean {\n        return some(source, i => i === item);\n    }\n\n    export function isIterable(source: Iterable<any>): boolean {\n        return typeof source[Symbol.iterator] === 'function';\n    }\n\n    export function join(source: Iterable<any>, separator: string): string {\n        let value = '';\n\n        const iterator = source[Symbol.iterator]();\n        let next = iterator.next();\n        if (next.done) return value;\n\n        while (true) {\n            const s = next.value.toString();\n\n            next = iterator.next();\n            if (next.done) {\n                value += s;\n                break;\n            }\n\n            value += `${s}${separator}`;\n        }\n\n        return value;\n    }\n\n    export function last<T>(source: Iterable<T>): T | null {\n        let item: T | null = null;\n        for (item of source) {\n            /* noop */\n        }\n        return item;\n    }\n\n    export function* map<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => TMapped\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield mapper(item);\n        }\n    }\n\n    export function next<T>(source: IterableIterator<T>): T {\n        return source.next().value;\n    }\n\n    export function* skip<T>(source: Iterable<T> | IterableIterator<T>, count: number): IterableIterator<T> {\n        let i = 0;\n        for (const item of source) {\n            if (i >= count) yield item;\n            i++;\n        }\n    }\n\n    export function some<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (predicate(item)) return true;\n        }\n        return false;\n    }\n\n    export function* take<T>(source: Iterable<T> | IterableIterator<T>, count: number): Iterable<T> {\n        if (count > 0) {\n            let i = 0;\n            for (const item of source) {\n                yield item;\n                i++;\n                if (i >= count) break;\n            }\n        }\n    }\n\n    export function* union<T>(...sources: (Iterable<T> | IterableIterator<T>)[]): Iterable<T> {\n        for (const source of sources) {\n            for (const item of source) {\n                yield item;\n            }\n        }\n    }\n}\n","'use strict';\n\nexport namespace Versions {\n    declare type VersionComparisonResult = -1 | 0 | 1;\n\n    export interface Version {\n        major: number;\n        minor: number;\n        patch: number;\n        pre?: string;\n    }\n\n    export function compare(v1: Version, v2: Version): VersionComparisonResult {\n        if (v1.major > v2.major) return 1;\n        if (v1.major < v2.major) return -1;\n\n        if (v1.minor > v2.minor) return 1;\n        if (v1.minor < v2.minor) return -1;\n\n        if (v1.patch > v2.patch) return 1;\n        if (v1.patch < v2.patch) return -1;\n\n        if (v1.pre === undefined && v2.pre !== undefined) return 1;\n        if (v1.pre !== undefined && v2.pre === undefined) return -1;\n\n        if (v1.pre !== undefined && v2.pre !== undefined) {\n            return v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n        }\n\n        return 0;\n    }\n\n    export function from(\n        major: string | number,\n        minor: string | number,\n        patch: string | number,\n        pre?: string\n    ): Version {\n        return {\n            major: typeof major === 'string' ? parseInt(major, 10) : major,\n            minor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n            patch: typeof patch === 'string' ? parseInt(patch, 10) : patch,\n            pre: pre\n        };\n    }\n\n    export function fromString(version: string): Version {\n        const [ver, pre] = version.split('-');\n        const [major, minor, patch] = ver.split('.');\n        return from(major, minor, patch, pre);\n    }\n}\n","'use strict';\nimport { Iterables } from './iterable';\nimport { Strings } from './string';\n\n// Code stolen from https://github.com/Microsoft/vscode/blob/b3e6d5bb039a4a9362b52a2c8726267ca68cf64e/src/vs/base/common/map.ts#L352\n\nexport interface IKeyIterator {\n    reset(key: string): this;\n    next(): this;\n\n    hasNext(): boolean;\n    cmp(a: string): number;\n    value(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n    private _value: string = '';\n    private _pos: number = 0;\n\n    reset(key: string): this {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n\n    next(): this {\n        this._pos += 1;\n        return this;\n    }\n\n    hasNext(): boolean {\n        return this._pos < this._value.length - 1;\n    }\n\n    cmp(a: string): number {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n\n    value(): string {\n        return this._value[this._pos];\n    }\n}\n\nexport class PathIterator implements IKeyIterator {\n    private _value!: string;\n    private _from!: number;\n    private _to!: number;\n\n    reset(key: string): this {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n\n    hasNext(): boolean {\n        return this._to < this._value.length;\n    }\n\n    next(): this {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === Strings.CharCode.Slash || ch === Strings.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n\n    cmp(a: string): number {\n        let aPos = 0;\n        const aLen = a.length;\n        let thisPos = this._from;\n\n        while (aPos < aLen && thisPos < this._to) {\n            const cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n\n    value(): string {\n        return this._value.substring(this._from, this._to);\n    }\n}\n\nclass TernarySearchTreeNode<E> {\n    segment!: string;\n    value: E | undefined;\n    key!: string;\n    left: TernarySearchTreeNode<E> | undefined;\n    mid: TernarySearchTreeNode<E> | undefined;\n    right: TernarySearchTreeNode<E> | undefined;\n\n    isEmpty(): boolean {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n}\n\nexport class TernarySearchTree<E> {\n    static forPaths<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new PathIterator());\n    }\n\n    static forStrings<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new StringIterator());\n    }\n\n    private _iter: IKeyIterator;\n    private _root: TernarySearchTreeNode<E> | undefined;\n\n    constructor(segments: IKeyIterator) {\n        this._iter = segments;\n    }\n\n    clear(): void {\n        this._root = undefined;\n    }\n\n    set(key: string, element: E): E | undefined {\n        const iter = this._iter.reset(key);\n        let node: TernarySearchTreeNode<E>;\n\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode<E>();\n            this._root.segment = iter.value();\n        }\n\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode<E>();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode<E>();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode<E>();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    }\n\n    get(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    }\n\n    delete(key: string): void {\n        const iter = this._iter.reset(key);\n        const stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n        let node = this._root;\n\n        // find and unset node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    const [dir, parent] = stack.pop()!;\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    }\n\n    findSubstr(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate: E | undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return (node && node.value) || candidate;\n    }\n\n    findSuperstr(key: string, limit: boolean = false): Iterable<E> | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    node = node.mid;\n                    return {\n                        [Symbol.iterator]: () => this._nodeIterator(node!, limit)\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _nodeIterator(node: TernarySearchTreeNode<E>, limit: boolean = false): Iterator<E> {\n        const res = {\n            done: false,\n            value: undefined! as E\n        };\n        let idx: number;\n        let data: E[];\n        const next = () => {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                this._forEach(node, value => data.push(value), limit);\n            }\n            if (idx >= data.length) {\n                res.done = true;\n                res.value = undefined!;\n            }\n            else {\n                res.done = false;\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next };\n    }\n\n    forEach(callback: (value: E, index: string) => any) {\n        this._forEach(this._root!, callback);\n    }\n\n    private _forEach(\n        node: TernarySearchTreeNode<E>,\n        callback: (value: E, index: string) => any,\n        limit: boolean = false\n    ) {\n        if (node === undefined) return;\n\n        // left\n        this._forEach(node.left!, callback, limit);\n\n        // node\n        if (node.value) {\n            callback(node.value, node.key);\n        }\n\n        if (!limit) {\n            // mid\n            this._forEach(node.mid!, callback, limit);\n        }\n\n        // right\n        this._forEach(node.right!, callback, limit);\n    }\n\n    any(): boolean {\n        return this._root !== undefined && !this._root.isEmpty();\n    }\n\n    count(predicate?: (entry: E) => boolean): number {\n        if (this._root === undefined || this._root.isEmpty()) return 0;\n\n        return Iterables.count(this.entries(), predicate === undefined ? undefined : ([e]) => predicate(e));\n    }\n\n    entries(): Iterable<[E, string]> {\n        return this._iterator(this._root!);\n    }\n\n    values(): Iterable<E> {\n        return Iterables.map(this.entries(), ([e]) => e);\n    }\n\n    highlander(): [E, string] | undefined {\n        if (this._root === undefined || this._root.isEmpty()) return undefined;\n\n        const entries = this.entries() as IterableIterator<[E, string]>;\n\n        let count = 0;\n        let next: IteratorResult<[E, string]>;\n        let value: [E, string] | undefined;\n\n        while (true) {\n            next = entries.next();\n            if (next.done) break;\n\n            value = next.value;\n\n            count++;\n            if (count > 1) return undefined;\n        }\n\n        return value;\n    }\n\n    some(predicate: (entry: E) => boolean): boolean {\n        if (this._root === undefined || this._root.isEmpty()) return false;\n\n        return Iterables.some(this.entries(), ([e]) => predicate(e));\n    }\n\n    private *_iterator(node: TernarySearchTreeNode<E> | undefined): IterableIterator<[E, string]> {\n        if (node !== undefined) {\n            // left\n            yield* this._iterator(node.left!);\n\n            // node\n            if (node.value) {\n                yield [node.value, node.key];\n            }\n\n            // mid\n            yield* this._iterator(node.mid!);\n\n            // right\n            yield* this._iterator(node.right!);\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, ExtensionContext, OutputChannel, Uri, window } from 'vscode';\nimport { configuration, LogLevel } from './configuration';\nimport { extensionOutputChannelName } from './constants';\nimport { getCorrelationContext } from './system';\n// import { Telemetry } from './telemetry';\n\nexport { LogLevel } from './configuration';\n\nconst ConsolePrefix = `[${extensionOutputChannelName}]`;\n\nconst isDebuggingRegex = /\\bgitlens\\b/i;\n\nexport interface LogCorrelationContext {\n    readonly correlationId?: number;\n    readonly prefix: string;\n    exitDetails?: string;\n}\n\nexport class Logger {\n    static level: LogLevel = LogLevel.Silent;\n    static output: OutputChannel | undefined;\n    static customLoggableFn: ((o: object) => string | undefined) | undefined;\n\n    static configure(context: ExtensionContext, loggableFn?: (o: any) => string | undefined) {\n        this.customLoggableFn = loggableFn;\n\n        context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    private static onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('outputLevel').value;\n        if (configuration.changed(e, section)) {\n            this.level = configuration.get<LogLevel>(section);\n\n            if (this.level === LogLevel.Silent) {\n                if (this.output !== undefined) {\n                    this.output.dispose();\n                    this.output = undefined;\n                }\n            }\n            else {\n                this.output = this.output || window.createOutputChannel(extensionOutputChannelName);\n            }\n        }\n    }\n\n    static debug(message: string, ...params: any[]): void;\n    static debug(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static debug(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Debug && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level === LogLevel.Debug) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static error(ex: Error, message?: string, ...params: any[]): void;\n    static error(ex: Error, context?: LogCorrelationContext, message?: string, ...params: any[]): void;\n    static error(ex: Error, contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (contextOrMessage === undefined || typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (message === undefined) {\n            const stack = ex.stack;\n            if (stack) {\n                const match = /.*\\s*?at\\s(.+?)\\s/.exec(stack);\n                if (match != null) {\n                    message = match[1];\n                }\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.error(this.timestamp, ConsolePrefix, message || '', ...params, ex);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}\\n${ex}`);\n        }\n\n        // Telemetry.trackException(ex);\n    }\n\n    static getCorrelationContext() {\n        return getCorrelationContext();\n    }\n\n    static log(message: string, ...params: any[]): void;\n    static log(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static log(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static logWithDebugParams(message: string, ...params: any[]): void;\n    static logWithDebugParams(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static logWithDebugParams(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static warn(message: string, ...params: any[]): void;\n    static warn(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static warn(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.warn(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static showOutputChannel() {\n        if (this.output === undefined) return;\n\n        this.output.show();\n    }\n\n    static toLoggable(p: any, sanitize?: ((key: string, value: any) => any) | undefined) {\n        if (typeof p !== 'object') return String(p);\n        if (this.customLoggableFn !== undefined) {\n            const loggable = this.customLoggableFn(p);\n            if (loggable != null) return loggable;\n        }\n        if (p instanceof Uri) return `Uri(${p.toString(true)})`;\n\n        try {\n            return JSON.stringify(p, sanitize);\n        }\n        catch {\n            return `<error>`;\n        }\n    }\n\n    static toLoggableName(instance: Function | object) {\n        let name;\n        if (typeof instance === 'function') {\n            if (instance.prototype == null || instance.prototype.constructor == null) {\n                return instance.name;\n            }\n\n            name = instance.prototype.constructor.name;\n        }\n        else {\n            name = instance.constructor != null ? instance.constructor.name : '';\n        }\n\n        // Strip webpack module name (since I never name classes with an _)\n        const index = name.indexOf('_');\n        return index === -1 ? name : name.substr(index + 1);\n    }\n\n    private static get timestamp(): string {\n        const now = new Date();\n        return `[${now\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/\\..+/, '')}:${('00' + now.getUTCMilliseconds()).slice(-3)}]`;\n    }\n\n    static gitOutput: OutputChannel | undefined;\n\n    static logGitCommand(command: string, ex?: Error): void {\n        if (this.level !== LogLevel.Debug) return;\n\n        if (this.gitOutput === undefined) {\n            this.gitOutput = window.createOutputChannel(`${extensionOutputChannelName} (Git)`);\n        }\n        this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `\\n\\n${ex.toString()}` : ''}`);\n    }\n\n    private static toLoggableParams(debugOnly: boolean, params: any[]) {\n        if (params.length === 0 || (debugOnly && this.level !== LogLevel.Debug && !Logger.isDebugging)) {\n            return '';\n        }\n\n        const loggableParams = params.map(p => this.toLoggable(p)).join(', ');\n        return ` \\u2014 ${loggableParams}` || '';\n    }\n\n    private static _isDebugging: boolean | undefined;\n    static get isDebugging() {\n        if (this._isDebugging === undefined) {\n            const env = process.env;\n            this._isDebugging =\n                env && env.VSCODE_DEBUGGING_EXTENSION ? isDebuggingRegex.test(env.VSCODE_DEBUGGING_EXTENSION) : false;\n        }\n\n        return this._isDebugging;\n    }\n}\n","'use strict';\nimport {\n    DecorationOptions,\n    Disposable,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorSelectionChangeEvent,\n    Uri,\n    window\n} from 'vscode';\nimport { TextDocumentComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Functions } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\n\nexport enum AnnotationStatus {\n    Computing = 'computing',\n    Computed = 'computed'\n}\n\nexport type TextEditorCorrelationKey = string;\n\nexport abstract class AnnotationProviderBase implements Disposable {\n    static getCorrelationKey(editor: TextEditor | undefined): TextEditorCorrelationKey {\n        return editor !== undefined ? (editor as any).id : '';\n    }\n\n    annotationType: FileAnnotationType | undefined;\n    correlationKey: TextEditorCorrelationKey;\n    document: TextDocument;\n    status: AnnotationStatus | undefined;\n\n    protected decorations: DecorationOptions[] | undefined;\n    protected disposable: Disposable;\n\n    constructor(\n        public editor: TextEditor,\n        protected readonly trackedDocument: TrackedDocument<GitDocumentState>,\n        protected decoration: TextEditorDecorationType,\n        protected highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);\n        this.document = this.editor.document;\n\n        this.disposable = Disposable.from(\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n    }\n\n    dispose() {\n        this.clear();\n\n        this.disposable && this.disposable.dispose();\n    }\n\n    private async onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        if (!TextDocumentComparer.equals(this.document, e.textEditor && e.textEditor.document)) return;\n\n        return this.selection(e.selections[0].active.line);\n    }\n\n    get editorId(): string {\n        if (this.editor === undefined || this.editor.document === undefined) return '';\n        return (this.editor as any).id;\n    }\n\n    get editorUri(): Uri | undefined {\n        if (this.editor === undefined || this.editor.document === undefined) return undefined;\n        return this.editor.document.uri;\n    }\n\n    protected additionalDecorations: { decoration: TextEditorDecorationType; ranges: Range[] }[] | undefined;\n\n    clear() {\n        this.status = undefined;\n        if (this.editor === undefined) return;\n\n        if (this.decoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.decoration, []);\n            }\n            catch {}\n        }\n\n        if (this.additionalDecorations !== undefined && this.additionalDecorations.length > 0) {\n            for (const d of this.additionalDecorations) {\n                try {\n                    this.editor.setDecorations(d.decoration, []);\n                }\n                catch {}\n            }\n\n            this.additionalDecorations = undefined;\n        }\n\n        if (this.highlightDecoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.highlightDecoration, []);\n            }\n            catch {}\n        }\n    }\n\n    private _resetDebounced:\n        | ((\n              changes?: {\n                  decoration: TextEditorDecorationType;\n                  highlightDecoration: TextEditorDecorationType | undefined;\n              }\n          ) => void)\n        | undefined;\n\n    reset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this._resetDebounced === undefined) {\n            this._resetDebounced = Functions.debounce(this.onReset, 250);\n        }\n\n        this._resetDebounced(changes);\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (changes !== undefined) {\n            this.clear();\n\n            this.decoration = changes.decoration;\n            this.highlightDecoration = changes.highlightDecoration;\n        }\n\n        await this.provideAnnotation(this.editor === undefined ? undefined : this.editor.selection.active.line);\n    }\n\n    async restore(editor: TextEditor) {\n        // If the editor isn't disposed then we don't need to do anything\n        // Explicitly check for `false`\n        if ((this.editor as any)._disposed === false) return;\n\n        this.status = AnnotationStatus.Computing;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n\n        this.editor = editor;\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);\n        this.document = editor.document;\n\n        if (this.decorations !== undefined && this.decorations.length) {\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            if (this.additionalDecorations !== undefined && this.additionalDecorations.length) {\n                for (const d of this.additionalDecorations) {\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        this.status = AnnotationStatus.Computed;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n            await this.selection(editor.selection.active.line);\n        }\n    }\n\n    async provideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.status = AnnotationStatus.Computing;\n        if (await this.onProvideAnnotation(shaOrLine)) {\n            this.status = AnnotationStatus.Computed;\n            return true;\n        }\n\n        this.status = undefined;\n        return false;\n    }\n\n    abstract async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean>;\n    abstract async selection(shaOrLine?: string | number): Promise<void>;\n    abstract async validate(): Promise<boolean>;\n}\n","'use strict';\nimport { commands, ConfigurationTarget, MessageItem, Uri, window } from 'vscode';\nimport { Commands } from './commands';\nimport { configuration } from './configuration';\nimport { BuiltInCommands, CommandContext, setCommandContext } from './constants';\nimport { GitCommit } from './git/gitService';\nimport { Logger } from './logger';\n\nexport enum SuppressedMessages {\n    CommitHasNoPreviousCommitWarning = 'suppressCommitHasNoPreviousCommitWarning',\n    CommitNotFoundWarning = 'suppressCommitNotFoundWarning',\n    FileNotUnderSourceControlWarning = 'suppressFileNotUnderSourceControlWarning',\n    GitDisabledWarning = 'suppressGitDisabledWarning',\n    GitVersionWarning = 'suppressGitVersionWarning',\n    LineUncommittedWarning = 'suppressLineUncommittedWarning',\n    NoRepositoryWarning = 'suppressNoRepositoryWarning',\n    SupportGitLensNotification = 'suppressSupportGitLensNotification'\n}\n\nexport class Messages {\n    static showCommitHasNoPreviousCommitWarningMessage(commit?: GitCommit): Promise<MessageItem | undefined> {\n        if (commit === undefined) {\n            return Messages.showMessage(\n                'info',\n                `Commit has no previous commit.`,\n                SuppressedMessages.CommitHasNoPreviousCommitWarning\n            );\n        }\n        return Messages.showMessage(\n            'info',\n            `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`,\n            SuppressedMessages.CommitHasNoPreviousCommitWarning\n        );\n    }\n\n    static showCommitNotFoundWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The commit could not be found.`,\n            SuppressedMessages.CommitNotFoundWarning\n        );\n    }\n\n    static async showGenericErrorMessage(message: string): Promise<MessageItem | undefined> {\n        const actions: MessageItem[] = [{ title: 'Open Output Channel' }];\n        const result = await Messages.showMessage(\n            'error',\n            `${message}. See output channel for more details`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result !== undefined) {\n            Logger.showOutputChannel();\n        }\n        return result;\n    }\n\n    static showFileNotUnderSourceControlWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The file is probably not under source control.`,\n            SuppressedMessages.FileNotUnderSourceControlWarning\n        );\n    }\n\n    static showGitDisabledErrorMessage() {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires Git to be enabled. Please re-enable Git \\u2014 set \\`git.enabled\\` to true and reload`,\n            SuppressedMessages.GitDisabledWarning\n        );\n    }\n\n    static showGitVersionUnsupportedErrorMessage(version: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires a newer version of Git (>= 2.2.0) than is currently installed (${version}). Please install a more recent version of Git.`,\n            SuppressedMessages.GitVersionWarning\n        );\n    }\n\n    static showLineUncommittedWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The line has uncommitted changes.`,\n            SuppressedMessages.LineUncommittedWarning\n        );\n    }\n\n    static showNoRepositoryWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. No repository could be found.`,\n            SuppressedMessages.NoRepositoryWarning\n        );\n    }\n\n    static async showSupportGitLensMessage() {\n        const actions: MessageItem[] = [\n            { title: 'Become a Sponsor' },\n            { title: 'Donate via PayPal' },\n            { title: 'Donate via Cash App' }\n        ];\n\n        const result = await Messages.showMessage(\n            'info',\n            `While GitLens is offered to everyone for free, if you find it useful, please consider [supporting](https://gitlens.amod.io/#support-gitlens) it. Thank you! ❤`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            let uri;\n            if (result === actions[0]) {\n                uri = Uri.parse('https://www.patreon.com/eamodio');\n            }\n            else if (result === actions[1]) {\n                uri = Uri.parse('https://www.paypal.me/eamodio');\n            }\n            else if (result === actions[2]) {\n                uri = Uri.parse('https://cash.me/$eamodio');\n            }\n\n            if (uri !== undefined) {\n                await setCommandContext(CommandContext.ViewsHideSupportGitLens, true);\n                await this.suppressedMessage(SuppressedMessages.SupportGitLensNotification!);\n                await commands.executeCommand(BuiltInCommands.Open, uri);\n            }\n        }\n    }\n\n    static async showWhatsNewMessage(version: string) {\n        const actions: MessageItem[] = [{ title: \"What's New\" }, { title: 'Release Notes' }, { title: '❤' }];\n\n        const result = await Messages.showMessage(\n            'info',\n            `GitLens has been updated to v${version} — check out what's new!`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            if (result === actions[0]) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n            else if (result === actions[1]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://github.com/eamodio/vscode-gitlens/blob/master/CHANGELOG.md')\n                );\n            }\n            else if (result === actions[2]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://gitlens.amod.io/#support-gitlens')\n                );\n            }\n        }\n    }\n\n    private static async showMessage<T extends MessageItem>(\n        type: 'info' | 'warn' | 'error',\n        message: string,\n        suppressionKey?: SuppressedMessages,\n        dontShowAgain: T | null = { title: \"Don't Show Again\" } as T,\n        ...actions: T[]\n    ): Promise<T | undefined> {\n        Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain})`);\n\n        if (\n            suppressionKey !== undefined &&\n            configuration.get<boolean>(configuration.name('advanced')('messages')(suppressionKey).value)\n        ) {\n            Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) skipped`);\n            return undefined;\n        }\n\n        if (suppressionKey !== undefined && dontShowAgain !== null) {\n            actions.push(dontShowAgain);\n        }\n\n        let result: T | undefined = undefined;\n        switch (type) {\n            case 'info':\n                result = await window.showInformationMessage(message, ...actions);\n                break;\n\n            case 'warn':\n                result = await window.showWarningMessage(message, ...actions);\n                break;\n\n            case 'error':\n                result = await window.showErrorMessage(message, ...actions);\n                break;\n        }\n\n        if ((suppressionKey !== undefined && dontShowAgain === null) || result === dontShowAgain) {\n            Logger.log(\n                `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) don't show again requested`\n            );\n            await this.suppressedMessage(suppressionKey!);\n\n            if (result === dontShowAgain) return undefined;\n        }\n\n        Logger.log(\n            `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) returned ${\n                result ? result.title : result\n            }`\n        );\n        return result;\n    }\n\n    private static suppressedMessage(suppressionKey: SuppressedMessages) {\n        const section = configuration.name('advanced')('messages').value;\n        const messages: { [key: string]: boolean | undefined } = configuration.get<{}>(section);\n\n        messages[suppressionKey] = true;\n\n        for (const [key, value] of Object.entries(messages)) {\n            if (value !== true) {\n                messages[key] = undefined;\n            }\n        }\n\n        return configuration.update(section, messages, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextDocument, TextEditor, Uri } from 'vscode';\nimport { CommandContext, getEditorIfActive, isActiveDocument, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, Repository, RepositoryChange, RepositoryChangeEvent } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions } from '../system';\n\nexport interface DocumentBlameStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly blameable: boolean;\n}\n\nexport class TrackedDocument<T> implements Disposable {\n    private _onDidBlameStateChange = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidBlameStateChange(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidBlameStateChange.event;\n    }\n\n    state: T | undefined;\n\n    private _disposable: Disposable | undefined;\n    private _disposed: boolean = false;\n    private _repo: Promise<Repository | undefined>;\n    private _uri!: GitUri;\n\n    constructor(\n        private readonly _document: TextDocument,\n        public readonly key: string,\n        public dirty: boolean,\n        private _eventDelegates: { onDidBlameStateChange(e: DocumentBlameStateChangeEvent<T>): void }\n    ) {\n        this._repo = this.initialize(_document.uri);\n    }\n\n    dispose() {\n        this._disposed = true;\n        this.reset('dispose');\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async initialize(uri: Uri): Promise<Repository | undefined> {\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, wait for the GitService to load if it isn't\n        if (Container.git === undefined) {\n            if (!(await Functions.waitUntil(() => Container.git !== undefined, 2000))) {\n                Logger.log(\n                    `TrackedDocument.initialize(${uri.toString(true)})`,\n                    'Timed out waiting for the GitService to start'\n                );\n                throw new Error('TrackedDocument timed out waiting for the GitService to start');\n            }\n        }\n\n        this._uri = await GitUri.fromUri(uri);\n        if (this._disposed) return undefined;\n\n        const repo = await Container.git.getRepository(this._uri);\n        if (this._disposed) return undefined;\n\n        if (repo !== undefined) {\n            this._disposable = repo.onDidChange(this.onRepositoryChanged, this);\n        }\n\n        await this.update({ initializing: true, repo: repo });\n\n        return repo;\n    }\n\n    private onRepositoryChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        // Reset any cached state\n        this.reset('repository');\n        void this.update();\n    }\n\n    private _forceDirtyStateChangeOnNextDocumentChange: boolean = false;\n    get forceDirtyStateChangeOnNextDocumentChange() {\n        return this._forceDirtyStateChangeOnNextDocumentChange;\n    }\n\n    private _hasRemotes: boolean = false;\n    get hasRemotes() {\n        return this._hasRemotes;\n    }\n\n    get isBlameable() {\n        if (this._blameFailed) return false;\n\n        return this._isTracked;\n    }\n\n    private _isDirtyIdle: boolean = false;\n    get isDirtyIdle() {\n        return this._isDirtyIdle;\n    }\n    set isDirtyIdle(value: boolean) {\n        this._isDirtyIdle = value;\n    }\n\n    get isRevision() {\n        return this._uri !== undefined ? Boolean(this._uri.sha) : false;\n    }\n\n    private _isTracked: boolean = false;\n    get isTracked() {\n        return this._isTracked;\n    }\n\n    get lineCount(): number {\n        return this._document.lineCount;\n    }\n\n    get uri() {\n        return this._uri;\n    }\n\n    activate() {\n        setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n    }\n\n    async ensureInitialized() {\n        await this._repo;\n    }\n\n    is(document: TextDocument) {\n        return document === this._document;\n    }\n\n    reset(reason: 'config' | 'dispose' | 'document' | 'repository') {\n        this._blameFailed = false;\n        this._isDirtyIdle = false;\n\n        if (this.state === undefined) return;\n\n        // // Don't remove broken blame on change (since otherwise we'll have to run the broken blame again)\n        // if (!this.state.hasErrors) {\n\n        this.state = undefined;\n        Logger.log(`Reset state for '${this.key}', reason=${reason}`);\n\n        // }\n    }\n\n    private _blameFailed: boolean = false;\n    setBlameFailure() {\n        const wasBlameable = this.isBlameable;\n\n        this._blameFailed = true;\n\n        if (wasBlameable && isActiveDocument(this._document)) {\n            void this.update({ forceBlameChange: true });\n        }\n    }\n\n    resetForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = false;\n    }\n\n    setForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = true;\n    }\n\n    async update(options: { forceBlameChange?: boolean; initializing?: boolean; repo?: Repository } = {}) {\n        if (this._disposed || this._uri === undefined) {\n            this._hasRemotes = false;\n            this._isTracked = false;\n\n            return;\n        }\n\n        this._isDirtyIdle = false;\n\n        const active = getEditorIfActive(this._document);\n        const wasBlameable = options.forceBlameChange ? undefined : this.isBlameable;\n\n        this._isTracked = await Container.git.isTracked(this._uri);\n\n        let repo = undefined;\n        if (this._isTracked) {\n            repo = options.repo;\n            if (repo === undefined) {\n                repo = await this._repo;\n            }\n        }\n\n        if (repo !== undefined) {\n            this._hasRemotes = await repo.hasRemotes();\n        }\n        else {\n            this._hasRemotes = false;\n        }\n\n        if (active !== undefined) {\n            const blameable = this.isBlameable;\n\n            setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n\n            if (!options.initializing && wasBlameable !== blameable) {\n                const e = { editor: active, document: this, blameable: blameable } as DocumentBlameStateChangeEvent<T>;\n                this._onDidBlameStateChange.fire(e);\n                this._eventDelegates.onDidBlameStateChange(e);\n            }\n        }\n    }\n\n    private getStatus() {\n        let status = '';\n        if (this.isTracked) {\n            status += 'tracked|';\n        }\n        if (this.isBlameable) {\n            status += 'blameable|';\n        }\n        if (this.isRevision) {\n            status += 'revision|';\n        }\n        if (this.hasRemotes) {\n            status += 'remotes|';\n        }\n\n        return status ? status : undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    EndOfLine,\n    Event,\n    EventEmitter,\n    Position,\n    Range,\n    TextDocument,\n    TextDocumentChangeEvent,\n    TextEditor,\n    TextLine,\n    Uri,\n    window,\n    workspace\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, DocumentSchemes, isActiveDocument, isTextEditor, setCommandContext } from '../constants';\nimport { GitUri } from '../git/gitService';\nimport { Functions, IDeferrable } from '../system';\nimport { DocumentBlameStateChangeEvent, TrackedDocument } from './trackedDocument';\n\nexport * from './trackedDocument';\n\nexport interface DocumentDirtyStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly dirty: boolean;\n}\n\nexport interface DocumentDirtyIdleTriggerEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n}\n\nexport class DocumentTracker<T> implements Disposable {\n    private _onDidChangeBlameState = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidChangeBlameState(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidChangeBlameState.event;\n    }\n\n    private _onDidChangeDirtyState = new EventEmitter<DocumentDirtyStateChangeEvent<T>>();\n    get onDidChangeDirtyState(): Event<DocumentDirtyStateChangeEvent<T>> {\n        return this._onDidChangeDirtyState.event;\n    }\n\n    private _onDidTriggerDirtyIdle = new EventEmitter<DocumentDirtyIdleTriggerEvent<T>>();\n    get onDidTriggerDirtyIdle(): Event<DocumentDirtyIdleTriggerEvent<T>> {\n        return this._onDidTriggerDirtyIdle.event;\n    }\n\n    private _dirtyIdleTriggerDelay!: number;\n    private readonly _disposable: Disposable | undefined;\n    private readonly _documentMap: Map<TextDocument | string, TrackedDocument<T>> = new Map();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this),\n            // window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleEditorsChanged, 5000), this),\n            workspace.onDidChangeTextDocument(Functions.debounce(this.onTextDocumentChanged, 50), this),\n            workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n            workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this)\n        );\n\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n\n        this.clear();\n    }\n\n    initialize() {\n        this.onActiveTextEditorChanged(window.activeTextEditor);\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        // Only rest the cached state if we aren't initializing\n        if (\n            !configuration.initializing(e) &&\n            (configuration.changed(e, configuration.name('blame')('ignoreWhitespace').value, null) ||\n                configuration.changed(e, configuration.name('advanced')('caching')('enabled').value))\n        ) {\n            for (const d of this._documentMap.values()) {\n                d.reset('config');\n            }\n        }\n\n        const section = configuration.name('advanced')('blame')('delayAfterEdit').value;\n        if (configuration.changed(e, section)) {\n            this._dirtyIdleTriggerDelay = configuration.get<number>(section);\n            this._dirtyIdleTriggeredDebounced = undefined;\n        }\n    }\n\n    private _timer: NodeJS.Timer | undefined;\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n\n        if (editor === undefined) {\n            this._timer = setTimeout(() => {\n                this._timer = undefined;\n\n                setCommandContext(CommandContext.ActiveFileStatus, undefined);\n            }, 250);\n\n            return;\n        }\n\n        const doc = this._documentMap.get(editor.document);\n        if (doc !== undefined) {\n            doc.activate();\n\n            return;\n        }\n\n        // No need to activate this, as it is implicit in initialization if currently active\n        this.addCore(editor.document);\n    }\n\n    private onTextDocumentChanged(e: TextDocumentChangeEvent) {\n        const { scheme } = e.document.uri;\n        if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) return;\n\n        let doc = this._documentMap.get(e.document);\n        if (doc === undefined) {\n            doc = this.addCore(e.document);\n        }\n\n        doc.reset('document');\n\n        const dirty = e.document.isDirty;\n        const editor = window.activeTextEditor;\n\n        // If we have an idle tracker, either reset or cancel it\n        if (this._dirtyIdleTriggeredDebounced !== undefined) {\n            if (dirty) {\n                this._dirtyIdleTriggeredDebounced({ editor: editor!, document: doc });\n            }\n            else {\n                this._dirtyIdleTriggeredDebounced.cancel();\n            }\n        }\n\n        if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty) return;\n\n        doc.resetForceDirtyStateChangeOnNextDocumentChange();\n        doc.dirty = dirty;\n\n        // Only fire state change events for the active document\n        if (editor === undefined || editor.document !== e.document) return;\n\n        this.fireDocumentDirtyStateChanged({ editor: editor, document: doc, dirty: doc.dirty });\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc === undefined) return;\n\n        doc.dispose();\n        this._documentMap.delete(document);\n        this._documentMap.delete(doc.key);\n    }\n\n    private onTextDocumentSaved(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc !== undefined) {\n            void doc.update({ forceBlameChange: true });\n\n            return;\n        }\n\n        // If we are saving the active document make sure we are tracking it\n        if (isActiveDocument(document)) {\n            void this.addCore(document);\n        }\n    }\n\n    // private onVisibleEditorsChanged(editors: TextEditor[]) {\n    //     if (this._documentMap.size === 0) return;\n\n    //     // If we have no visible editors, or no \"real\" visible editors reset our cache\n    //     if (editors.length === 0 || editors.every(e => !isTextEditor(e))) {\n    //         this.clear();\n    //     }\n    // }\n\n    add(document: TextDocument): Promise<TrackedDocument<T>>;\n    add(uri: Uri): Promise<TrackedDocument<T>>;\n    add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        return this._add(documentOrId);\n    }\n\n    clear() {\n        for (const d of this._documentMap.values()) {\n            d.dispose();\n        }\n\n        this._documentMap.clear();\n    }\n\n    get(fileName: string): Promise<TrackedDocument<T> | undefined>;\n    get(document: TextDocument): Promise<TrackedDocument<T> | undefined>;\n    get(uri: Uri): Promise<TrackedDocument<T> | undefined>;\n    get(documentOrId: string | TextDocument | Uri): Promise<TrackedDocument<T> | undefined> {\n        return this._get(documentOrId);\n    }\n\n    async getOrAdd(document: TextDocument): Promise<TrackedDocument<T>>;\n    async getOrAdd(uri: Uri): Promise<TrackedDocument<T>>;\n    async getOrAdd(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let doc = await this._get(documentOrId);\n        if (doc === undefined) {\n            doc = await this._add(documentOrId);\n        }\n        return doc;\n    }\n\n    has(fileName: string): boolean;\n    has(document: TextDocument): boolean;\n    has(uri: Uri): boolean;\n    has(key: string | TextDocument | Uri): boolean {\n        if (typeof key === 'string' || key instanceof Uri) {\n            key = GitUri.toKey(key);\n        }\n        return this._documentMap.has(key);\n    }\n\n    private async _add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        if (documentOrId instanceof GitUri) {\n            try {\n                documentOrId = await workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));\n            }\n            catch (ex) {\n                const msg = ex.toString();\n                if (msg.includes('File seems to be binary and cannot be opened as text')) {\n                    documentOrId = new BinaryTextDocument(documentOrId);\n                }\n                else if (msg.includes('File not found')) {\n                    // If we can't find the file, assume it is because the file has been renamed or deleted at some point\n                    documentOrId = new MissingRevisionTextDocument(documentOrId);\n\n                    // const [fileName, repoPath] = await Container.git.findWorkingFileName(documentOrId, undefined, ref);\n                    // if (fileName === undefined) throw new Error(`Failed to add tracking for document: ${documentOrId}`);\n\n                    // documentOrId = await workspace.openTextDocument(path.resolve(repoPath!, fileName));\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n        else if (documentOrId instanceof Uri) {\n            documentOrId = await workspace.openTextDocument(documentOrId);\n        }\n\n        const doc = await this.addCore(documentOrId);\n        await doc.ensureInitialized();\n\n        return doc;\n    }\n\n    private async _get(documentOrId: string | TextDocument | Uri) {\n        if (documentOrId instanceof GitUri) {\n            documentOrId = GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));\n        }\n        else if (typeof documentOrId === 'string' || documentOrId instanceof Uri) {\n            documentOrId = GitUri.toKey(documentOrId);\n        }\n\n        const doc = this._documentMap.get(documentOrId);\n        if (doc === undefined) return undefined;\n\n        await doc.ensureInitialized();\n        return doc;\n    }\n\n    private addCore(document: TextDocument): TrackedDocument<T> {\n        const key = GitUri.toKey(document.uri);\n\n        // Always start out false, so we will fire the event if needed\n        const doc = new TrackedDocument<T>(document, key, false, {\n            onDidBlameStateChange: (e: DocumentBlameStateChangeEvent<T>) => this._onDidChangeBlameState.fire(e)\n        });\n        this._documentMap.set(document, doc);\n        this._documentMap.set(key, doc);\n\n        return doc;\n    }\n\n    private _dirtyIdleTriggeredDebounced: (((e: DocumentDirtyIdleTriggerEvent<T>) => void) & IDeferrable) | undefined;\n    private _dirtyStateChangedDebounced: (((e: DocumentDirtyStateChangeEvent<T>) => void) & IDeferrable) | undefined;\n    private fireDocumentDirtyStateChanged(e: DocumentDirtyStateChangeEvent<T>) {\n        if (e.dirty) {\n            setImmediate(async () => {\n                if (this._dirtyStateChangedDebounced !== undefined) {\n                    this._dirtyStateChangedDebounced.cancel();\n                }\n\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            });\n\n            if (this._dirtyIdleTriggerDelay > 0) {\n                if (this._dirtyIdleTriggeredDebounced === undefined) {\n                    this._dirtyIdleTriggeredDebounced = Functions.debounce(\n                        async (e: DocumentDirtyIdleTriggerEvent<T>) => {\n                            if (\n                                this._dirtyIdleTriggeredDebounced !== undefined &&\n                                this._dirtyIdleTriggeredDebounced.pending!()\n                            ) {\n                                return;\n                            }\n\n                            await e.document.ensureInitialized();\n\n                            e.document.isDirtyIdle = true;\n                            this._onDidTriggerDirtyIdle.fire(e);\n                        },\n                        this._dirtyIdleTriggerDelay,\n                        { track: true }\n                    );\n                }\n\n                this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });\n            }\n\n            return;\n        }\n\n        if (this._dirtyStateChangedDebounced === undefined) {\n            this._dirtyStateChangedDebounced = Functions.debounce(async (e: DocumentDirtyStateChangeEvent<T>) => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            }, 250);\n        }\n\n        this._dirtyStateChangedDebounced(e);\n    }\n}\n\nclass EmptyTextDocument implements TextDocument {\n    readonly eol: EndOfLine;\n    readonly fileName: string;\n    readonly isClosed: boolean;\n    readonly isDirty: boolean;\n    readonly isUntitled: boolean;\n    readonly languageId: string;\n    readonly lineCount: number;\n    readonly uri: Uri;\n    readonly version: number;\n\n    constructor(\n        public readonly gitUri: GitUri\n    ) {\n        this.uri = gitUri.documentUri({ useVersionedPath: true });\n\n        this.eol = EndOfLine.LF;\n        this.fileName = this.uri.fsPath;\n        this.isClosed = false;\n        this.isDirty = false;\n        this.isUntitled = false;\n        this.languageId = '';\n        this.lineCount = 0;\n        this.version = 0;\n    }\n\n    getText(range?: Range | undefined): string {\n        throw new Error('Method not supported.');\n    }\n\n    getWordRangeAtPosition(position: Position, regex?: RegExp | undefined): Range | undefined {\n        throw new Error('Method not supported.');\n    }\n\n    lineAt(line: number): TextLine;\n    lineAt(position: Position): TextLine;\n    lineAt(position: any): TextLine {\n        throw new Error('Method not supported.');\n    }\n\n    offsetAt(position: Position): number {\n        throw new Error('Method not supported.');\n    }\n\n    positionAt(offset: number): Position {\n        throw new Error('Method not supported.');\n    }\n\n    save(): Thenable<boolean> {\n        throw new Error('Method not supported.');\n    }\n\n    validatePosition(position: Position): Position {\n        throw new Error('Method not supported.');\n    }\n\n    validateRange(range: Range): Range {\n        throw new Error('Method not supported.');\n    }\n}\n\nclass BinaryTextDocument extends EmptyTextDocument {}\nclass MissingRevisionTextDocument extends EmptyTextDocument {}\n","'use strict';\nimport { GitBlame, GitDiff, GitLog } from '../git/git';\nimport { DocumentTracker } from './documentTracker';\n\nexport * from './documentTracker';\n\ninterface CachedItem<T> {\n    item: Promise<T>;\n    errorMessage?: string;\n}\n\nexport type CachedBlame = CachedItem<GitBlame>;\nexport type CachedDiff = CachedItem<GitDiff>;\nexport type CachedLog = CachedItem<GitLog>;\n\nexport class GitDocumentState {\n    private cache: Map<string, CachedBlame | CachedDiff | CachedLog> = new Map();\n\n    constructor(\n        public readonly key: string\n    ) {}\n\n    get<T extends CachedBlame | CachedDiff | CachedLog>(key: string): T | undefined {\n        return this.cache.get(key) as T;\n    }\n\n    set<T extends CachedBlame | CachedDiff | CachedLog>(key: string, value: T) {\n        this.cache.set(key, value);\n    }\n}\n\nexport class GitDocumentTracker extends DocumentTracker<GitDocumentState> {}\n","'use strict';\nimport { execFile } from 'child_process';\nimport * as fs from 'fs';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { Logger } from '../logger';\n\nconst isWindows = process.platform === 'win32';\n\n/**\n * Search PATH to see if a file exists in any of the path folders.\n *\n * @param  {string} exe The file to search for\n * @return {string}     A fully qualified path, or the original path if nothing\n *                      is found\n *\n * @private\n */\nfunction runDownPath(exe: string): string {\n    // NB: Windows won't search PATH looking for executables in spawn like\n    // Posix does\n\n    // Files with any directory path don't get this applied\n    if (exe.match(/[\\\\\\/]/)) return exe;\n\n    const target = paths.join('.', exe);\n    try {\n        if (fs.statSync(target)) return target;\n    }\n    catch {}\n\n    const haystack = process.env.PATH!.split(isWindows ? ';' : ':');\n    for (const p of haystack) {\n        const needle = paths.join(p, exe);\n        try {\n            if (fs.statSync(needle)) return needle;\n        }\n        catch {}\n    }\n\n    return exe;\n}\n\n/**\n * Finds the executable and parameters to run on Windows. This method\n * mimics the POSIX behavior of being able to run scripts as executables by\n * replacing the passed-in executable with the script runner, for PowerShell,\n * CMD, and node scripts.\n *\n * This method also does the work of running down PATH, which spawn on Windows\n * also doesn't do, unlike on POSIX.\n */\nexport function findExecutable(exe: string, args: string[]): { cmd: string; args: string[] } {\n    // POSIX can just execute scripts directly, no need for silly goosery\n    if (!isWindows) return { cmd: runDownPath(exe), args: args };\n\n    if (!fs.existsSync(exe)) {\n        // NB: When you write something like `surf-client ... -- surf-build` on Windows,\n        // a shell would normally convert that to surf-build.cmd, but since it's passed\n        // in as an argument, it doesn't happen\n        const possibleExts = ['.exe', '.bat', '.cmd', '.ps1'];\n        for (const ext of possibleExts) {\n            const possibleFullPath = runDownPath(`${exe}${ext}`);\n\n            if (fs.existsSync(possibleFullPath)) return findExecutable(possibleFullPath, args);\n        }\n    }\n\n    if (exe.match(/\\.ps1$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'WindowsPowerShell', 'v1.0', 'PowerShell.exe');\n        const psargs = ['-ExecutionPolicy', 'Unrestricted', '-NoLogo', '-NonInteractive', '-File', exe];\n\n        return { cmd: cmd, args: psargs.concat(args) };\n    }\n\n    if (exe.match(/\\.(bat|cmd)$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'cmd.exe');\n        const cmdArgs = ['/C', exe, ...args];\n\n        return { cmd: cmd, args: cmdArgs };\n    }\n\n    if (exe.match(/\\.(js)$/i)) {\n        const cmd = process.execPath;\n        const nodeArgs = [exe];\n\n        return { cmd: cmd, args: nodeArgs.concat(args) };\n    }\n\n    return { cmd: exe, args: args };\n}\n\nexport class RunError extends Error {\n    constructor(\n        public readonly exitCode: number,\n        ...args: any[]\n    ) {\n        super(...args);\n\n        Error.captureStackTrace(this, RunError);\n    }\n}\n\nexport interface RunOptions {\n    cwd?: string;\n    readonly env?: Object;\n    readonly encoding?: BufferEncoding | 'buffer';\n    /**\n     * The size the output buffer to allocate to the spawned process. Set this\n     * if you are anticipating a large amount of output.\n     *\n     * If not specified, this will be 10MB (10485760 bytes) which should be\n     * enough for most Git operations.\n     */\n    readonly maxBuffer?: number;\n    /**\n     * An optional string or buffer which will be written to\n     * the child process stdin stream immediately immediately\n     * after spawning the process.\n     */\n    readonly stdin?: string | Buffer;\n    /**\n     * The encoding to use when writing to stdin, if the stdin\n     * parameter is a string.\n     */\n    readonly stdinEncoding?: string;\n}\n\nexport function run<TOut extends string | Buffer>(\n    command: string,\n    args: any[],\n    encoding: BufferEncoding | 'buffer',\n    options: RunOptions = {}\n): Promise<TOut> {\n    const { stdin, stdinEncoding, ...opts } = { maxBuffer: 100 * 1024 * 1024, ...options } as RunOptions;\n\n    return new Promise<TOut>((resolve, reject) => {\n        const proc = execFile(\n            command,\n            args,\n            opts,\n            (err: (Error & { code?: string | number }) | null, stdout, stderr) => {\n                if (err != null) {\n                    reject(\n                        new RunError(\n                            err.code ? Number(err.code) : 0,\n                            err.message === 'stdout maxBuffer exceeded'\n                                ? `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${\n                                      opts.maxBuffer\n                                  } bytes`\n                                : stderr || stdout\n                        )\n                    );\n\n                    return;\n                }\n\n                if (stderr) {\n                    Logger.warn(`Warning(${command} ${args.join(' ')}): ${stderr}`);\n                }\n\n                resolve(\n                    encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                        ? (stdout as TOut)\n                        : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut)\n                );\n            }\n        );\n\n        if (stdin) {\n            proc.stdin.end(stdin, stdinEncoding || 'utf8');\n        }\n    });\n}\n","'use strict';\nimport * as paths from 'path';\nimport { findExecutable, run } from './shell';\n\nexport interface GitLocation {\n    path: string;\n    version: string;\n}\n\nfunction parseVersion(raw: string): string {\n    return raw.replace(/^git version /, '');\n}\n\nasync function findSpecificGit(path: string): Promise<GitLocation> {\n    const version = await run<string>(path, ['--version'], 'utf8');\n    // If needed, let's update our path to avoid the search on every command\n    if (!path || path === 'git') {\n        path = findExecutable(path, ['--version']).cmd;\n    }\n\n    return {\n        path,\n        version: parseVersion(version.trim())\n    };\n}\n\nasync function findGitDarwin(): Promise<GitLocation> {\n    try {\n        let path = await run<string>('which', ['git'], 'utf8');\n        path = path.replace(/^\\s+|\\s+$/g, '');\n\n        if (path !== '/usr/bin/git') {\n            return findSpecificGit(path);\n        }\n\n        try {\n            await run<string>('xcode-select', ['-p'], 'utf8');\n            return findSpecificGit(path);\n        }\n        catch (ex) {\n            if (ex.code === 2) {\n                return Promise.reject(new Error('Unable to find git'));\n            }\n            return findSpecificGit(path);\n        }\n    }\n    catch (ex) {\n        return Promise.reject(new Error('Unable to find git'));\n    }\n}\n\nfunction findSystemGitWin32(basePath: string): Promise<GitLocation> {\n    if (!basePath) return Promise.reject(new Error('Unable to find git'));\n    return findSpecificGit(paths.join(basePath, 'Git', 'cmd', 'git.exe'));\n}\n\nfunction findGitWin32(): Promise<GitLocation> {\n    return findSystemGitWin32(process.env['ProgramW6432']!)\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles(x86)']!))\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles']!))\n        .then(null, () => findSpecificGit('git'));\n}\n\nexport async function findGitPath(path?: string): Promise<GitLocation> {\n    try {\n        return await findSpecificGit(path || 'git');\n    }\n    catch (ex) {\n        try {\n            switch (process.platform) {\n                case 'darwin':\n                    return await findGitDarwin();\n                case 'win32':\n                    return await findGitWin32();\n                default:\n                    return Promise.reject('Unable to find git');\n            }\n        }\n        catch (ex) {\n            return Promise.reject(new Error('Unable to find git'));\n        }\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\n\nexport interface IFormatOptions {\n    dateFormat?: string | null;\n    tokenOptions?: { [id: string]: Strings.ITokenOptions | undefined };\n}\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nconst spaceReplacementRegex = / /g;\n\nexport abstract class Formatter<TItem = any, TOptions extends IFormatOptions = IFormatOptions> {\n    protected _item!: TItem;\n    protected _options!: TOptions;\n\n    constructor(item: TItem, options?: TOptions) {\n        this.reset(item, options);\n    }\n\n    reset(item: TItem, options?: TOptions) {\n        this._item = item;\n\n        if (options === undefined && this._options !== undefined) return;\n\n        if (options === undefined) {\n            options = {} as TOptions;\n        }\n\n        if (options.dateFormat == null) {\n            options.dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (options.tokenOptions == null) {\n            options.tokenOptions = {};\n        }\n\n        this._options = options;\n    }\n\n    private collapsableWhitespace: number = 0;\n\n    protected _padOrTruncate(s: string, options: Strings.ITokenOptions | undefined) {\n        if (s == null || s.length === 0) return s;\n\n        // NOTE: the collapsable whitespace logic relies on the javascript template evaluation to be left to right\n        if (options === undefined) {\n            options = {\n                collapseWhitespace: false,\n                padDirection: 'left',\n                prefix: undefined,\n                suffix: undefined,\n                truncateTo: undefined\n            };\n        }\n\n        let max = options.truncateTo;\n        if (max === undefined) {\n            this.collapsableWhitespace = 0;\n        }\n        else {\n            max += this.collapsableWhitespace;\n            this.collapsableWhitespace = 0;\n\n            const width = Strings.getWidth(s);\n            const diff = max - width;\n            if (diff > 0) {\n                if (options.collapseWhitespace) {\n                    this.collapsableWhitespace = diff;\n                }\n\n                if (options.padDirection === 'left') {\n                    s = Strings.padLeft(s, max, undefined, width);\n                }\n                else {\n                    if (options.collapseWhitespace) {\n                        max -= diff;\n                    }\n                    s = Strings.padRight(s, max, undefined, width);\n                }\n            }\n            else if (diff < 0) {\n                s = Strings.truncate(s, max, undefined, width);\n            }\n        }\n\n        if (options.prefix || options.suffix) {\n            s = `${options.prefix || ''}${s}${options.suffix || ''}`;\n        }\n\n        return s;\n    }\n\n    private static _formatter: Formatter | undefined = undefined;\n\n    protected static fromTemplateCore<\n        TFormatter extends Formatter<TItem, TOptions>,\n        TItem,\n        TOptions extends IFormatOptions\n    >(\n        formatter: TFormatter | Constructor<TFormatter>,\n        template: string,\n        item: TItem,\n        dateFormatOrOptions?: string | null | TOptions\n    ): string {\n        // Preserve spaces\n        template = template.replace(spaceReplacementRegex, '\\u00a0');\n        if (formatter instanceof Formatter) return Strings.interpolate(template, formatter);\n\n        let options: TOptions | undefined = undefined;\n        if (dateFormatOrOptions == null || typeof dateFormatOrOptions === 'string') {\n            options = {\n                dateFormat: dateFormatOrOptions\n            } as TOptions;\n        }\n        else {\n            options = dateFormatOrOptions;\n        }\n\n        if (options.tokenOptions == null) {\n            const tokenOptions = Strings.getTokensFromTemplate(template).reduce(\n                (map, token) => {\n                    map[token.key] = token.options;\n                    return map;\n                },\n                {} as { [token: string]: Strings.ITokenOptions | undefined }\n            );\n\n            options.tokenOptions = tokenOptions;\n        }\n\n        if (this._formatter === undefined) {\n            this._formatter = new formatter(item, options);\n        }\n        else {\n            this._formatter.reset(item, options);\n        }\n\n        return Strings.interpolate(template, this._formatter);\n    }\n}\n","'use strict';\nimport { DateStyle } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { Strings } from '../../system';\nimport { GitCommit, GitCommitType } from '../models/commit';\nimport { GitLogCommit } from '../models/models';\nimport { Formatter, IFormatOptions } from './formatter';\n\nconst emojiMap: { [key: string]: string } = require('../../../emoji/emojis.json');\nconst emojiRegex = /:([-+_a-z0-9]+):/g;\n\nexport interface ICommitFormatOptions extends IFormatOptions {\n    dateStyle?: DateStyle;\n    truncateMessageAtNewLine?: boolean;\n\n    tokenOptions?: {\n        ago?: Strings.ITokenOptions;\n        agoOrDate?: Strings.ITokenOptions;\n        author?: Strings.ITokenOptions;\n        authorAgo?: Strings.ITokenOptions;\n        authorAgoOrDate?: Strings.ITokenOptions;\n        changes?: Strings.ITokenOptions;\n        changesShort?: Strings.ITokenOptions;\n        date?: Strings.ITokenOptions;\n        id?: Strings.ITokenOptions;\n        message?: Strings.ITokenOptions;\n    };\n}\n\nexport class CommitFormatter extends Formatter<GitCommit, ICommitFormatOptions> {\n    private get _ago() {\n        return this._item.fromNow();\n    }\n\n    private get _date() {\n        return this._item.formatDate(this._options.dateFormat!);\n    }\n\n    private get _agoOrDate() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._date : this._ago;\n    }\n\n    get ago() {\n        return this._padOrTruncate(this._ago, this._options.tokenOptions!.ago);\n    }\n\n    get agoOrDate() {\n        return this._padOrTruncate(this._agoOrDate, this._options.tokenOptions!.agoOrDate);\n    }\n\n    get author() {\n        const author = this._item.author;\n        return this._padOrTruncate(author, this._options.tokenOptions!.author);\n    }\n\n    get authorAgo() {\n        const authorAgo = `${this._item.author}, ${this._ago}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgo);\n    }\n\n    get authorAgoOrDate() {\n        const authorAgo = `${this._item.author}, ${this._agoOrDate}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgoOrDate);\n    }\n\n    get changes() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changes);\n        }\n\n        return this._padOrTruncate(this._item.getFormattedDiffStatus(), this._options.tokenOptions!.changes);\n    }\n\n    get changesShort() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changesShort);\n        }\n\n        return this._padOrTruncate(\n            this._item.getFormattedDiffStatus({ compact: true, separator: '' }),\n            this._options.tokenOptions!.changesShort\n        );\n    }\n\n    get date() {\n        return this._padOrTruncate(this._date, this._options.tokenOptions!.date);\n    }\n\n    get id() {\n        return this._padOrTruncate(this._item.shortSha || '', this._options.tokenOptions!.id);\n    }\n\n    get message() {\n        let message: string;\n        if (this._item.isStagedUncommitted) {\n            message = 'Staged changes';\n        }\n        else if (this._item.isUncommitted) {\n            message = 'Uncommitted changes';\n        }\n        else {\n            if (this._options.truncateMessageAtNewLine) {\n                const index = this._item.message.indexOf('\\n');\n                message =\n                    index === -1\n                        ? this._item.message\n                        : `${this._item.message.substring(0, index)}${GlyphChars.Space}${GlyphChars.Ellipsis}`;\n            }\n            else {\n                message = this._item.message;\n            }\n\n            message = message.replace(emojiRegex, (s, code) => emojiMap[code] || s);\n        }\n\n        return this._padOrTruncate(message, this._options.tokenOptions!.message);\n    }\n\n    get sha() {\n        return this.id;\n    }\n\n    static fromTemplate(template: string, commit: GitCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, commit: GitCommit, options?: ICommitFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { DocumentSchemes, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitFile, GitService } from '../git/gitService';\nimport { Strings } from '../system';\n\nconst empty = '';\nconst slash = '/';\n\nexport interface GitCommitish {\n    fileName?: string;\n    repoPath: string;\n    sha?: string;\n    versionedPath?: string;\n}\n\n// Taken from https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L331-L337\ninterface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n}\n\ninterface UriEx {\n    new (): Uri;\n    new (scheme: string, authority: string, path: string, query: string, fragment: string): Uri;\n    // Use this ctor, because vscode doesn't validate it\n    new (components: UriComponents): Uri;\n}\n\nexport class GitUri extends ((Uri as any) as UriEx) {\n    repoPath?: string;\n    sha?: string;\n    versionedPath?: string;\n\n    constructor(uri?: Uri);\n    constructor(uri: Uri, commit: GitCommitish);\n    constructor(uri: Uri, repoPath: string | undefined);\n    constructor(uri?: Uri, commitOrRepoPath?: GitCommitish | string) {\n        if (uri == null) {\n            super();\n\n            return;\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens) {\n            const data = JSON.parse(uri.query) as IUriRevisionData;\n\n            // When Uri's come from the FileSystemProvider, the uri.query only contains the root repo info (not the actual file path), so fix that here\n            const index = uri.path.indexOf(data.path);\n            if (index + data.path.length < uri.path.length) {\n                data.path = uri.path.substr(index);\n            }\n\n            super({\n                scheme: uri.scheme,\n                authority: uri.authority,\n                path: data.path,\n                query: JSON.stringify(data),\n                fragment: uri.fragment\n            });\n\n            this.repoPath = data.repoPath;\n            if (GitService.isStagedUncommitted(data.ref) || !GitService.isUncommitted(data.ref)) {\n                this.sha = data.ref;\n            }\n\n            return;\n        }\n\n        if (commitOrRepoPath === undefined) {\n            super(uri);\n\n            return;\n        }\n\n        if (typeof commitOrRepoPath === 'string') {\n            super(uri);\n\n            this.repoPath = commitOrRepoPath;\n\n            return;\n        }\n\n        const [authority, fsPath] = GitUri.ensureValidUNCPath(\n            uri.authority,\n            GitUri.resolve(commitOrRepoPath.fileName || uri.fsPath, commitOrRepoPath.repoPath)\n        );\n\n        let path;\n        switch (uri.scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!fsPath) {\n                    path = slash;\n                }\n                else if (fsPath[0] !== slash) {\n                    path = `/${fsPath}`;\n                }\n                else {\n                    path = fsPath;\n                }\n                break;\n            default:\n                path = fsPath;\n                break;\n        }\n\n        super({\n            scheme: uri.scheme,\n            authority: authority,\n            path: path,\n            query: uri.query,\n            fragment: uri.fragment\n        });\n        this.repoPath = commitOrRepoPath.repoPath;\n        this.versionedPath = commitOrRepoPath.versionedPath;\n        if (GitService.isStagedUncommitted(commitOrRepoPath.sha) || !GitService.isUncommitted(commitOrRepoPath.sha)) {\n            this.sha = commitOrRepoPath.sha;\n        }\n    }\n\n    get shortSha() {\n        return this.sha && GitService.shortenSha(this.sha);\n    }\n\n    documentUri(options: { useVersionedPath?: boolean } = {}) {\n        if (options.useVersionedPath && this.versionedPath !== undefined) return GitUri.file(this.versionedPath);\n        if (this.scheme !== 'file') return this;\n\n        return GitUri.file(this.fsPath);\n    }\n\n    equals(uri: Uri | undefined) {\n        if (!UriComparer.equals(this, uri)) return false;\n\n        return this.sha === (uri instanceof GitUri ? uri.sha : undefined);\n    }\n\n    getDirectory(relativeTo?: string): string {\n        return GitUri.getDirectory(\n            this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath,\n            relativeTo\n        );\n    }\n\n    getFilename(relativeTo?: string): string {\n        return paths.basename(this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath, relativeTo);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        const { relativeTo = this.repoPath, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        const directory = GitUri.getDirectory(this.fsPath, relativeTo);\n        return `${paths.basename(this.fsPath)}${suffix}${directory ? `${separator}${directory}` : empty}`;\n    }\n\n    getRelativePath(relativeTo?: string): string {\n        let relativePath = this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    toFileUri() {\n        return GitUri.file(this.fsPath);\n    }\n\n    private static ensureValidUNCPath(authority: string, fsPath: string): [string, string] {\n        // Taken from https://github.com/Microsoft/vscode/blob/e444eaa768a1e8bd8315f2cee265d725e96a8162/src/vs/base/common/uri.ts#L300-L325\n        // check for authority as used in UNC shares or use the path as given\n        if (fsPath[0] === slash && fsPath[1] === slash) {\n            const index = fsPath.indexOf(slash, 2);\n            if (index === -1) {\n                authority = fsPath.substring(2);\n                fsPath = slash;\n            }\n            else {\n                authority = fsPath.substring(2, index);\n                fsPath = fsPath.substring(index) || slash;\n            }\n        }\n\n        return [authority, fsPath];\n    }\n\n    static file(path: string, useVslsScheme?: boolean) {\n        const uri = Uri.file(path);\n        if (Container.vsls.isMaybeGuest && useVslsScheme !== false) {\n            return uri.with({ scheme: DocumentSchemes.Vsls });\n        }\n\n        return uri;\n    }\n\n    static fromCommit(commit: GitCommit, previous: boolean = false) {\n        if (!previous) return new GitUri(commit.uri, commit);\n\n        return new GitUri(commit.previousUri, {\n            repoPath: commit.repoPath,\n            sha: commit.previousSha\n        });\n    }\n\n    static fromFile(fileName: string, repoPath: string, ref?: string): GitUri;\n    static fromFile(file: GitFile, repoPath: string, ref?: string, original?: boolean): GitUri;\n    static fromFile(fileOrName: GitFile | string, repoPath: string, ref?: string, original: boolean = false): GitUri {\n        const uri = GitUri.resolveToUri(\n            typeof fileOrName === 'string'\n                ? fileOrName\n                : (original && fileOrName.originalFileName) || fileOrName.fileName,\n            repoPath\n        );\n        return ref === undefined ? new GitUri(uri, repoPath) : new GitUri(uri, { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRepoPath(repoPath: string, ref?: string) {\n        return ref === undefined\n            ? new GitUri(GitUri.file(repoPath), repoPath)\n            : new GitUri(GitUri.file(repoPath), { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRevisionUri(uri: Uri): GitUri {\n        return new GitUri(uri);\n    }\n\n    static async fromUri(uri: Uri) {\n        if (uri instanceof GitUri) return uri;\n\n        if (!Container.git.isTrackable(uri)) return new GitUri(uri);\n\n        if (uri.scheme === DocumentSchemes.GitLens) return new GitUri(uri);\n\n        // If this is a git uri, find its repoPath\n        if (uri.scheme === DocumentSchemes.Git) {\n            const data: { path: string; ref: string } = JSON.parse(uri.query);\n\n            const repoPath = await Container.git.getRepoPath(data.path);\n\n            let ref;\n            switch (data.ref) {\n                case empty:\n                case '~':\n                    ref = GitService.stagedUncommittedSha;\n                    break;\n\n                case null:\n                    ref = undefined;\n                    break;\n\n                default:\n                    ref = data.ref;\n                    break;\n            }\n\n            return new GitUri(uri, {\n                fileName: data.path,\n                repoPath: repoPath,\n                sha: ref\n            } as GitCommitish);\n        }\n\n        return new GitUri(uri, await Container.git.getRepoPath(uri));\n    }\n\n    static getDirectory(fileName: string, relativeTo?: string): string {\n        let directory: string | undefined = paths.dirname(fileName);\n        if (relativeTo !== undefined) {\n            directory = paths.relative(relativeTo, directory);\n        }\n        directory = Strings.normalizePath(directory);\n        return !directory || directory === '.' ? empty : directory;\n    }\n\n    static getFormattedPath(\n        fileNameOrUri: string | Uri,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        const { relativeTo, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getFormattedPath(options);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        const directory = GitUri.getDirectory(fileName, relativeTo);\n        return !directory\n            ? `${paths.basename(fileName)}${suffix}`\n            : `${paths.basename(fileName)}${suffix}${separator}${directory}`;\n    }\n\n    static getRelativePath(fileNameOrUri: string | Uri, relativeTo?: string, repoPath?: string): string {\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getRelativePath(relativeTo);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        let relativePath = repoPath ? paths.relative(repoPath, fileName) : fileName;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    static git(fileName: string, repoPath?: string) {\n        const path = GitUri.resolve(fileName, repoPath);\n        return Uri.parse(\n            `git:${path}?${JSON.stringify({\n                // Ensure we use the fsPath here, otherwise the url won't open properly\n                path: Uri.file(path).fsPath,\n                ref: '~'\n            })}`\n        );\n    }\n\n    static resolve(fileName: string, repoPath?: string) {\n        const normalizedFileName = Strings.normalizePath(fileName);\n        if (repoPath === undefined) return normalizedFileName;\n\n        const normalizedRepoPath = Strings.normalizePath(repoPath);\n        if (normalizedFileName == null || normalizedFileName.length === 0) return normalizedRepoPath;\n\n        if (normalizedFileName.startsWith(normalizedRepoPath)) return normalizedFileName;\n\n        return Strings.normalizePath(paths.join(normalizedRepoPath, normalizedFileName));\n    }\n\n    static resolveToUri(fileName: string, repoPath?: string) {\n        return GitUri.file(this.resolve(fileName, repoPath));\n    }\n\n    static toKey(fileName: string): string;\n    static toKey(uri: Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string {\n        return Strings.normalizePath(typeof fileNameOrUri === 'string' ? fileNameOrUri : fileNameOrUri.fsPath);\n\n        // return typeof fileNameOrUri === 'string'\n        //     ? GitUri.file(fileNameOrUri).toString(true)\n        //     : fileNameOrUri.toString(true);\n    }\n\n    static toRevisionUri(uri: GitUri): Uri;\n    static toRevisionUri(ref: string, fileName: string, repoPath: string): Uri;\n    static toRevisionUri(ref: string, file: GitFile, repoPath: string): Uri;\n    static toRevisionUri(uriOrRef: string | GitUri, fileNameOrFile?: string | GitFile, repoPath?: string): Uri {\n        let fileName: string;\n        let ref: string | undefined;\n        let shortSha: string | undefined;\n\n        if (typeof uriOrRef === 'string') {\n            if (typeof fileNameOrFile === 'string') {\n                fileName = fileNameOrFile;\n            }\n            else {\n                fileName = GitUri.resolve(fileNameOrFile!.fileName, repoPath);\n            }\n\n            ref = uriOrRef;\n            shortSha = GitService.shortenSha(ref);\n        }\n        else {\n            fileName = uriOrRef.fsPath!;\n            repoPath = uriOrRef.repoPath!;\n            ref = uriOrRef.sha;\n            shortSha = uriOrRef.shortSha;\n        }\n\n        repoPath = Strings.normalizePath(repoPath!);\n        const repoName = paths.basename(repoPath);\n\n        const filePath = Strings.normalizePath(fileName, { addLeadingSlash: true });\n        const data: IUriRevisionData = {\n            path: filePath,\n            ref: ref,\n            repoPath: repoPath\n        };\n\n        const uri = Uri.parse(\n            `${DocumentSchemes.GitLens}:///${repoName}@${shortSha}${\n                filePath === slash ? empty : filePath\n            }?${JSON.stringify(data)}`\n        );\n        return uri;\n    }\n}\n\ninterface IUriRevisionData {\n    path: string;\n    ref?: string;\n    repoPath: string;\n}\n","'use strict';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitLogCommit } from './logCommit';\n\nexport declare type GitFileStatus = '!' | '?' | 'A' | 'C' | 'D' | 'M' | 'R' | 'T' | 'U' | 'X' | 'B';\n\nexport interface GitFile {\n    status: GitFileStatus;\n    readonly repoPath?: string;\n    readonly indexStatus?: GitFileStatus;\n    readonly workingTreeStatus?: GitFileStatus;\n    readonly fileName: string;\n    readonly originalFileName?: string;\n}\n\nexport interface GitFileWithCommit extends GitFile {\n    readonly commit: GitLogCommit;\n}\n\nexport namespace GitFile {\n    export function getFormattedDirectory(\n        file: GitFile,\n        includeOriginal: boolean = false,\n        relativeTo?: string\n    ): string {\n        const directory = GitUri.getDirectory(file.fileName, relativeTo);\n        return includeOriginal && file.status === 'R' && file.originalFileName\n            ? `${directory} ${Strings.pad(GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}`\n            : directory;\n    }\n\n    export function getFormattedPath(\n        file: GitFile,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        return GitUri.getFormattedPath(file.fileName, options);\n    }\n\n    export function getRelativePath(file: GitFile, relativeTo?: string): string {\n        return GitUri.getRelativePath(file.fileName, relativeTo);\n    }\n\n    const statusIconsMap = {\n        '!': 'icon-status-ignored.svg',\n        '?': 'icon-status-untracked.svg',\n        A: 'icon-status-added.svg',\n        C: 'icon-status-copied.svg',\n        D: 'icon-status-deleted.svg',\n        M: 'icon-status-modified.svg',\n        R: 'icon-status-renamed.svg',\n        T: 'icon-status-modified.svg',\n        U: 'icon-status-conflict.svg',\n        X: 'icon-status-unknown.svg',\n        B: 'icon-status-unknown.svg'\n    };\n\n    export function getStatusIcon(status: GitFileStatus): string {\n        return statusIconsMap[status] || statusIconsMap['X'];\n    }\n\n    const statusOcticonsMap = {\n        '!': '$(diff-ignored)',\n        '?': '$(diff-added)',\n        A: '$(diff-added)',\n        C: '$(diff-added)',\n        D: '$(diff-removed)',\n        M: '$(diff-modified)',\n        R: '$(diff-renamed)',\n        T: '$(diff-modified)',\n        U: '$(alert)',\n        X: '$(question)',\n        B: '$(question)'\n    };\n\n    export function getStatusOcticon(status: GitFileStatus, missing: string = GlyphChars.Space.repeat(4)): string {\n        return statusOcticonsMap[status] || missing;\n    }\n\n    const statusTextMap = {\n        '!': 'Ignored',\n        '?': 'Untracked',\n        A: 'Added',\n        C: 'Copied',\n        D: 'Deleted',\n        M: 'Modified',\n        R: 'Renamed',\n        T: 'Modified',\n        U: 'Conflict',\n        X: 'Unknown',\n        B: 'Unknown'\n    };\n\n    export function getStatusText(status: GitFileStatus): string {\n        return statusTextMap[status] || statusTextMap['X'];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitFile, GitFileWithCommit } from '../models/file';\nimport { Formatter, IFormatOptions } from './formatter';\n\nexport interface IStatusFormatOptions extends IFormatOptions {\n    relativePath?: string;\n\n    tokenOptions?: {\n        directory?: Strings.ITokenOptions;\n        file?: Strings.ITokenOptions;\n        filePath?: Strings.ITokenOptions;\n        path?: Strings.ITokenOptions;\n        status?: Strings.ITokenOptions;\n        working?: Strings.ITokenOptions;\n    };\n}\n\nexport class StatusFileFormatter extends Formatter<GitFile, IStatusFormatOptions> {\n    get directory() {\n        const directory = GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.directory);\n    }\n\n    get file() {\n        const file = paths.basename(this._item.fileName);\n        return this._padOrTruncate(file, this._options.tokenOptions!.file);\n    }\n\n    get filePath() {\n        const filePath = GitFile.getFormattedPath(this._item, { relativeTo: this._options.relativePath });\n        return this._padOrTruncate(filePath, this._options.tokenOptions!.filePath);\n    }\n\n    get path() {\n        const directory = GitFile.getRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.path);\n    }\n\n    get status() {\n        const status = GitFile.getStatusText(this._item.status);\n        return this._padOrTruncate(status, this._options.tokenOptions!.status);\n    }\n\n    get working() {\n        const commit = (this._item as GitFileWithCommit).commit;\n        const statusFile = commit === undefined ? this._item : commit.files[0];\n\n        let icon = '';\n        if (statusFile.workingTreeStatus !== undefined && statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.Space}${GlyphChars.SpaceThinnest}${GlyphChars.Check}`;\n        }\n        else if (statusFile.workingTreeStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.SpaceThin}${GlyphChars.SpaceThinnest}${GlyphChars.EnDash}${\n                GlyphChars.Space\n            }`;\n        }\n        else if (statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Space}${GlyphChars.EnDash}${GlyphChars.Space.repeat(2)}${GlyphChars.Check}`;\n        }\n        else {\n            icon = '';\n        }\n        return this._padOrTruncate(icon, this._options.tokenOptions!.working);\n    }\n\n    static fromTemplate(template: string, file: GitFile, dateFormat: string | null): string;\n    static fromTemplate(template: string, file: GitFile, options?: IStatusFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, file, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { configuration, DateStyle, GravatarDefaultStyle } from '../../configuration';\nimport { Container } from '../../container';\nimport { Dates, Strings } from '../../system';\nimport { CommitFormatter } from '../formatters/formatters';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\n\nconst gravatarCache: Map<string, Uri> = new Map();\nconst missingGravatarHash = '00000000000000000000000000000000';\n\nexport function clearGravatarCache() {\n    gravatarCache.clear();\n}\n\nexport interface GitAuthor {\n    name: string;\n    lineCount: number;\n}\n\nexport interface GitCommitLine {\n    sha: string;\n    previousSha?: string;\n    line: number;\n    originalLine: number;\n    code?: string;\n}\n\nexport enum GitCommitType {\n    Blame = 'blame',\n    Branch = 'branch',\n    File = 'file',\n    Stash = 'stash',\n    StashFile = 'stash-file'\n}\n\nexport const CommitFormatting = {\n    dateFormat: undefined! as string | null,\n    dateStyle: undefined! as DateStyle,\n\n    reset: () => {\n        CommitFormatting.dateStyle = configuration.get<DateStyle>(configuration.name('defaultDateStyle').value);\n        CommitFormatting.dateFormat = configuration.get<string | null>(configuration.name('defaultDateFormat').value);\n    }\n};\n\nexport abstract class GitCommit {\n    readonly type: GitCommitType;\n    readonly originalFileName: string | undefined;\n    previousFileName: string | undefined;\n    workingFileName?: string;\n\n    protected readonly _fileName: string;\n    protected _previousSha: string | undefined;\n\n    private _isStagedUncommitted: boolean | undefined;\n    private _isUncommitted: boolean | undefined;\n    private _shortSha: string | undefined;\n\n    constructor(\n        type: GitCommitType,\n        public readonly repoPath: string,\n        public readonly sha: string,\n        public readonly author: string,\n        public readonly email: string | undefined,\n        public readonly date: Date,\n        public readonly message: string,\n        fileName: string,\n        originalFileName?: string,\n        previousSha?: string,\n        previousFileName?: string\n    ) {\n        this.type = type;\n        this._fileName = fileName || '';\n        this.originalFileName = originalFileName;\n        this._previousSha = previousSha;\n        this.previousFileName = previousFileName;\n    }\n\n    get fileName() {\n        // If we aren't a single-file commit, return an empty file name (makes it default to the repoPath)\n        return this.isFile ? this._fileName : '';\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.fromNow();\n    }\n\n    get shortSha() {\n        if (this._shortSha === undefined) {\n            this._shortSha = Git.shortenSha(this.sha);\n        }\n        return this._shortSha;\n    }\n\n    get isFile() {\n        return (\n            this.type === GitCommitType.Blame ||\n            this.type === GitCommitType.File ||\n            this.type === GitCommitType.StashFile\n        );\n    }\n\n    get isStash() {\n        return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;\n    }\n\n    get isStagedUncommitted(): boolean {\n        if (this._isStagedUncommitted === undefined) {\n            this._isStagedUncommitted = Git.isStagedUncommitted(this.sha);\n        }\n        return this._isStagedUncommitted;\n    }\n\n    get isUncommitted(): boolean {\n        if (this._isUncommitted === undefined) {\n            this._isUncommitted = Git.isUncommitted(this.sha);\n        }\n        return this._isUncommitted;\n    }\n\n    abstract get previousFileSha(): string;\n    protected _resolvedPreviousFileSha: string | undefined;\n\n    get previousFileShortSha(): string {\n        return Git.shortenSha(this.previousFileSha)!;\n    }\n\n    get previousSha(): string | undefined {\n        return this._previousSha;\n    }\n    set previousSha(value: string | undefined) {\n        if (value === this._previousSha) return;\n\n        this._previousSha = value;\n        this._resolvedPreviousFileSha = undefined;\n    }\n\n    get previousShortSha() {\n        return this.previousSha && Git.shortenSha(this.previousSha);\n    }\n\n    get previousUri(): Uri {\n        return this.previousFileName ? GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    get workingUri(): Uri {\n        return this.workingFileName ? GitUri.resolveToUri(this.workingFileName, this.repoPath) : this.uri;\n    }\n\n    private _dateFormatter?: Dates.IDateFormatter;\n\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.format(format);\n    }\n\n    fromNow() {\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.fromNow();\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitUri.getFormattedPath(this.fileName, options);\n    }\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        const hash =\n            this.email != null && this.email.length !== 0\n                ? Strings.md5(this.email.trim().toLowerCase(), 'hex')\n                : missingGravatarHash;\n\n        const key = `${hash}:${size}`;\n        let gravatar = gravatarCache.get(key);\n        if (gravatar !== undefined) return gravatar;\n\n        gravatar = Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${fallback}`);\n        gravatarCache.set(key, gravatar);\n\n        return gravatar;\n    }\n\n    getShortMessage() {\n        return CommitFormatter.fromTemplate('${message}', this, { truncateMessageAtNewLine: true });\n    }\n\n    async resolvePreviousFileSha(): Promise<void> {\n        if (this._resolvedPreviousFileSha !== undefined) return;\n\n        this._resolvedPreviousFileSha = await Container.git.resolveReference(\n            this.repoPath,\n            this.previousFileSha,\n            this.fileName ? this.previousUri : undefined\n        );\n    }\n\n    toGitUri(previous: boolean = false): GitUri {\n        return GitUri.fromCommit(this, previous);\n    }\n\n    abstract with(changes: {\n        type?: GitCommitType;\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n    }): GitCommit;\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { GitCommit, GitCommitLine, GitCommitType } from './commit';\n\nexport class GitBlameCommit extends GitCommit {\n    constructor(\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        message: string,\n        fileName: string,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly lines: GitCommitLine[]\n    ) {\n        super(\n            GitCommitType.Blame,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return `${this.sha}^`;\n    }\n\n    with(changes: {\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        lines?: GitCommitLine[] | null;\n    }): GitBlameCommit {\n        return new GitBlameCommit(\n            this.repoPath,\n            changes.sha || this.sha,\n            this.author,\n            this.email,\n            this.date,\n            this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            this.getChangedValue(changes.lines, changes.sha || changes.fileName ? [] : this.lines) || []\n        );\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitBranch, GitTrackingState } from './branch';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitStatus {\n    readonly detached: boolean;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly branch: string,\n        public readonly sha: string,\n        public readonly files: GitStatusFile[],\n        public readonly state: GitTrackingState,\n        public readonly upstream?: string\n    ) {\n        this.detached = GitBranch.isDetached(branch);\n        if (this.detached) {\n            this.branch = GitBranch.formatDetached(this.sha);\n        }\n    }\n\n    get ref() {\n        return this.detached ? this.sha : this.branch;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        let status = '';\n        if (compact) {\n            if (added !== 0) {\n                status += `+${added}`;\n            }\n            if (changed !== 0) {\n                status += `${status.length === 0 ? '' : separator}~${changed}`;\n            }\n            if (deleted !== 0) {\n                status += `${status.length === 0 ? '' : separator}-${deleted}`;\n            }\n        }\n        else {\n            status += `+${added}${separator}~${changed}${separator}-${deleted}`;\n        }\n\n        return `${prefix}${status}${suffix}`;\n    }\n\n    getUpstreamStatus(options: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.upstream, this.state, options);\n    }\n\n    static getUpstreamStatus(\n        upstream: string | undefined,\n        state: { ahead: number; behind: number },\n        options: { empty?: string; expand?: boolean; prefix?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        if (upstream === undefined || (state.behind === 0 && state.ahead === 0)) return options.empty || '';\n\n        const { expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (state.behind) {\n                status += `${Strings.pluralize('commit', state.behind)} behind`;\n            }\n            if (state.ahead) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('commit', state.ahead)} ahead`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${state.behind}${GlyphChars.ArrowDown}${separator}${state.ahead}${\n            GlyphChars.ArrowUp\n        }${suffix}`;\n    }\n}\n\nexport class GitStatusFile implements GitFile {\n    constructor(\n        public readonly repoPath: string,\n        public readonly indexStatus: GitFileStatus | undefined,\n        public readonly workingTreeStatus: GitFileStatus | undefined,\n        public readonly fileName: string,\n        public readonly originalFileName?: string\n    ) {}\n\n    get status(): GitFileStatus {\n        return (this.indexStatus || this.workingTreeStatus || '?') as GitFileStatus;\n    }\n\n    get staged() {\n        return this.indexStatus !== undefined;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    getFormattedDirectory(includeOriginal: boolean = false): string {\n        return GitFile.getFormattedDirectory(this, includeOriginal);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitFile.getFormattedPath(this, options);\n    }\n\n    getOcticon() {\n        return GitFile.getStatusOcticon(this.status);\n    }\n\n    getStatusText(file: GitFile): string {\n        return GitFile.getStatusText(this.status);\n    }\n\n    with(changes: {\n        indexStatus?: GitFileStatus | null;\n        workTreeStatus?: GitFileStatus | null;\n        fileName?: string;\n        originalFileName?: string | null;\n    }): GitStatusFile {\n        return new GitStatusFile(\n            this.repoPath,\n            this.getChangedValue(changes.indexStatus, this.indexStatus) as GitFileStatus,\n            this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus) as GitFileStatus,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName)\n        );\n    }\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { StarredBranches, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Git } from '../git';\nimport { GitStatus } from './status';\n\nexport interface GitTrackingState {\n    ahead: number;\n    behind: number;\n}\n\nexport class GitBranch {\n    readonly detached: boolean;\n    readonly id: string;\n    readonly name: string;\n    readonly remote: boolean;\n    readonly tracking?: string;\n    readonly state: GitTrackingState;\n\n    constructor(\n        public readonly repoPath: string,\n        name: string,\n        public readonly current: boolean = false,\n        public readonly sha?: string,\n        tracking?: string,\n        ahead: number = 0,\n        behind: number = 0,\n        detached: boolean = false\n    ) {\n        this.id = `${repoPath}|${name}`;\n\n        if (name.startsWith('remotes/')) {\n            name = name.substring(8);\n            this.remote = true;\n        }\n        else {\n            this.remote = false;\n        }\n\n        this.detached = detached || (this.current ? GitBranch.isDetached(name) : false);\n        if (this.detached) {\n            this.name = GitBranch.formatDetached(this.sha!);\n        }\n        else {\n            this.name = name;\n        }\n\n        this.tracking = tracking == null || tracking.length === 0 ? undefined : tracking;\n        this.state = {\n            ahead: ahead,\n            behind: behind\n        };\n    }\n\n    get ref() {\n        return this.detached ? this.sha! : this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const name = this.getName();\n            const index = name.lastIndexOf('/');\n            this._basename = index !== -1 ? name.substring(index + 1) : name;\n        }\n\n        return this._basename;\n    }\n\n    private _name: string | undefined;\n    getName(): string {\n        if (this._name === undefined) {\n            this._name = this.remote ? this.name.substring(this.name.indexOf('/') + 1) : this.name;\n        }\n\n        return this._name;\n    }\n\n    getRemote(): string | undefined {\n        if (this.remote) return GitBranch.getRemote(this.name);\n        if (this.tracking !== undefined) return GitBranch.getRemote(this.tracking);\n\n        return undefined;\n    }\n\n    getTrackingStatus(options?: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.tracking, this.state, options);\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredBranches, starred);\n    }\n\n    static getRemote(branch: string): string {\n        return branch.substring(0, branch.indexOf('/'));\n    }\n\n    static formatDetached(sha: string): string {\n        return `(${Git.shortenSha(sha)}...)`;\n    }\n\n    static isDetached(name: string): boolean {\n        // If there is whitespace in the name assume this is not a valid branch name\n        // Deals with detached HEAD states\n        return name.match(/\\s/) !== null || name.match(/\\(detached\\)/) !== null;\n    }\n}\n","'use strict';\nimport { Iterables, Strings } from '../../system';\nimport {\n    GitDiff,\n    GitDiffChunk,\n    GitDiffChunkLine,\n    GitDiffLine,\n    GitDiffShortStat,\n    GitFile,\n    GitFileStatus\n} from './../git';\n\nconst nameStatusDiffRegex = /^(.*?)\\t(.*?)(?:\\t(.*?))?$/gm;\nconst shortStatDiffRegex = /^\\s*(\\d+)\\sfiles? changed(?:,\\s+(\\d+)\\s+insertions?\\(\\+\\))?(?:,\\s+(\\d+)\\s+deletions?\\(-\\))?/;\nconst unifiedDiffRegex = /^@@ -([\\d]+),([\\d]+) [+]([\\d]+),([\\d]+) @@([\\s\\S]*?)(?=^@@)/gm;\n\nexport class GitDiffParser {\n    static parse(data: string, debug: boolean = false): GitDiff | undefined {\n        if (!data) return undefined;\n\n        const chunks: GitDiffChunk[] = [];\n\n        let match: RegExpExecArray | null = null;\n\n        let chunk: string;\n        let currentStart: number;\n        let previousStart: number;\n\n        do {\n            match = unifiedDiffRegex.exec(`${data}\\n@@`);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            chunk = (' ' + match[5]).substr(1);\n            currentStart = parseInt(match[3], 10);\n            previousStart = parseInt(match[1], 10);\n\n            chunks.push(\n                new GitDiffChunk(\n                    chunk,\n                    {\n                        start: currentStart,\n                        end: currentStart + parseInt(match[4], 10)\n                    },\n                    {\n                        start: previousStart,\n                        end: previousStart + parseInt(match[2], 10)\n                    }\n                )\n            );\n        } while (match != null);\n\n        if (!chunks.length) return undefined;\n\n        const diff = {\n            diff: debug ? data : undefined,\n            chunks: chunks\n        } as GitDiff;\n        return diff;\n    }\n\n    static parseChunk(chunk: string): GitDiffChunkLine[] {\n        const lines = Iterables.skip(Strings.lines(chunk), 1);\n\n        const currentLines: (GitDiffLine | undefined)[] = [];\n        const previousLines: (GitDiffLine | undefined)[] = [];\n\n        let removed = 0;\n        for (const l of lines) {\n            switch (l[0]) {\n                case '+':\n                    currentLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'added'\n                    });\n\n                    if (removed > 0) {\n                        removed--;\n                    }\n                    else {\n                        previousLines.push(undefined);\n                    }\n\n                    break;\n\n                case '-':\n                    removed++;\n\n                    previousLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'removed'\n                    });\n\n                    break;\n\n                default:\n                    while (removed > 0) {\n                        removed--;\n                        currentLines.push(undefined);\n                    }\n\n                    currentLines.push({ line: l, state: 'unchanged' });\n                    previousLines.push({ line: l, state: 'unchanged' });\n\n                    break;\n            }\n        }\n\n        const chunkLines: GitDiffChunkLine[] = [];\n\n        let chunkLine: GitDiffChunkLine | undefined = undefined;\n        let current: GitDiffLine | undefined = undefined;\n\n        for (let i = 0; i < currentLines.length; i++) {\n            current = currentLines[i];\n            if (current === undefined) {\n                // Don't think we need to worry about this case because the diff will always have \"padding\" (i.e. unchanged lines) around each chunk\n                if (chunkLine === undefined) continue;\n\n                if (chunkLine.previous === undefined) {\n                    chunkLine.previous = [previousLines[i]];\n                    continue;\n                }\n\n                chunkLine.previous.push(previousLines[i]);\n                continue;\n            }\n\n            chunkLine = {\n                line: current.line,\n                state: current.state,\n                previous: [previousLines[i]]\n            };\n            chunkLines.push(chunkLine);\n        }\n\n        return chunkLines;\n    }\n\n    static parseNameStatus(data: string, repoPath: string): GitFile[] | undefined {\n        if (!data) return undefined;\n\n        const files: GitFile[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = nameStatusDiffRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const status = (' ' + match[1]).substr(1);\n            files.push({\n                repoPath,\n                status: (status[0] !== '.' ? status[0].trim() : '?') as GitFileStatus,\n                indexStatus: undefined,\n                workingTreeStatus: undefined,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                fileName: (' ' + match[2]).substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                originalFileName: match[3] === undefined ? undefined : (' ' + match[3]).substr(1)\n            });\n        } while (match != null);\n\n        if (!files.length) return undefined;\n\n        return files;\n    }\n\n    static parseShortStat(data: string): GitDiffShortStat | undefined {\n        if (!data) return undefined;\n\n        const match = shortStatDiffRegex.exec(data);\n        if (match == null) return undefined;\n\n        const files = match[1];\n        const insertions = match[2];\n        const deletions = match[3];\n        return {\n            files: files == null ? 0 : parseInt(files, 10),\n            insertions: insertions == null ? 0 : parseInt(insertions, 10),\n            deletions: deletions == null ? 0 : parseInt(deletions, 10)\n        } as GitDiffShortStat;\n    }\n}\n","'use strict';\nimport { GitDiffParser } from '../parsers/diffParser';\n\nexport interface GitDiffLine {\n    line: string;\n    state: 'added' | 'removed' | 'unchanged';\n}\n\nexport interface GitDiffChunkLine extends GitDiffLine {\n    previous?: (GitDiffLine | undefined)[];\n}\n\nexport class GitDiffChunk {\n    private _chunk: string | undefined;\n    private _lines: GitDiffChunkLine[] | undefined;\n\n    constructor(\n        chunk: string,\n        public currentPosition: { start: number; end: number },\n        public previousPosition: { start: number; end: number }\n    ) {\n        this._chunk = chunk;\n    }\n\n    get lines(): GitDiffChunkLine[] {\n        if (this._lines === undefined) {\n            this._lines = GitDiffParser.parseChunk(this._chunk!);\n            this._chunk = undefined;\n        }\n\n        return this._lines;\n    }\n}\n\nexport interface GitDiff {\n    readonly chunks: GitDiffChunk[];\n\n    readonly diff?: string;\n}\n\nexport interface GitDiffShortStat {\n    readonly files: number;\n    readonly insertions: number;\n    readonly deletions: number;\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { Strings } from '../../system';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitLogCommit extends GitCommit {\n    nextSha?: string;\n    nextFileName?: string;\n\n    constructor(\n        type: GitCommitType,\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        public readonly committedDate: Date,\n        message: string,\n        fileName: string,\n        public readonly files: GitFile[],\n        public readonly status: GitFileStatus | undefined,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly parentShas?: string[]\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get isMerge() {\n        return this.parentShas && this.parentShas.length > 1;\n    }\n\n    get nextShortSha() {\n        return this.nextSha && Git.shortenSha(this.nextSha);\n    }\n\n    get nextUri(): Uri {\n        return this.nextFileName ? GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return this.isFile && this.previousSha ? this.previousSha : `${this.sha}^`;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    toFileCommit(fileName: string): GitLogCommit | undefined;\n    toFileCommit(file: GitFile): GitLogCommit;\n    toFileCommit(fileNameOrFile: string | GitFile): GitLogCommit | undefined {\n        let file: GitFile | undefined;\n        if (typeof fileNameOrFile === 'string') {\n            const fileName = Strings.normalizePath(paths.relative(this.repoPath, fileNameOrFile));\n            file = this.files.find(f => f.fileName === fileName);\n            if (file === undefined) return undefined;\n        }\n        else {\n            file = fileNameOrFile;\n        }\n\n        let sha;\n        // If this is a stash commit with an untracked file\n        if (this.type === GitCommitType.Stash && file.status === '?') {\n            sha = `${this.sha}^3`;\n        }\n\n        // If this isn't a single-file commit, we can't trust the previousSha\n        const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;\n\n        return this.with({\n            type: this.isStash ? GitCommitType.StashFile : GitCommitType.File,\n            sha: sha,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            previousSha: previousSha,\n            previousFileName: file.originalFileName || file.fileName,\n            status: file.status,\n            files: [file]\n        });\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        author?: string;\n        email?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitLogCommit(\n            changes.type || this.type,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.author || this.author,\n            changes.email || this.email,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            undefined\n        );\n    }\n}\n","'use strict';\nimport { WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { RemoteProvider } from '../remotes/factory';\n\nexport enum GitRemoteType {\n    Fetch = 'fetch',\n    Push = 'push'\n}\n\nexport class GitRemote {\n    constructor(\n        public readonly repoPath: string,\n        public readonly id: string,\n        public readonly name: string,\n        public readonly scheme: string,\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly provider: RemoteProvider | undefined,\n        public readonly types: { type: GitRemoteType; url: string }[]\n    ) {}\n\n    get default() {\n        const defaultRemote = Container.context.workspaceState.get<string>(WorkspaceState.DefaultRemote);\n        return this.id === defaultRemote;\n    }\n\n    setAsDefault(state: boolean = true) {\n        return Container.context.workspaceState.update(WorkspaceState.DefaultRemote, state ? this.id : undefined);\n    }\n}\n","'use strict';\nimport { commands, env, Range, Uri, window } from 'vscode';\nimport { BuiltInCommands } from '../../constants';\nimport { Logger } from '../../logger';\nimport { Messages } from '../../messages';\nimport { GitLogCommit } from '../models/logCommit';\n\nexport enum RemoteResourceType {\n    Branch = 'branch',\n    Branches = 'branches',\n    Commit = 'commit',\n    File = 'file',\n    Repo = 'repo',\n    Revision = 'revision'\n}\n\nexport type RemoteResource =\n    | {\n          type: RemoteResourceType.Branch;\n          branch: string;\n      }\n    | {\n          type: RemoteResourceType.Branches;\n      }\n    | {\n          type: RemoteResourceType.Commit;\n          sha: string;\n      }\n    | {\n          type: RemoteResourceType.File;\n          branch?: string;\n          fileName: string;\n          range?: Range;\n      }\n    | {\n          type: RemoteResourceType.Repo;\n      }\n    | {\n          type: RemoteResourceType.Revision;\n          branch?: string;\n          commit?: GitLogCommit;\n          fileName: string;\n          range?: Range;\n          sha?: string;\n      };\n\nexport function getNameFromRemoteResource(resource: RemoteResource) {\n    switch (resource.type) {\n        case RemoteResourceType.Branch:\n            return 'Branch';\n        case RemoteResourceType.Branches:\n            return 'Branches';\n        case RemoteResourceType.Commit:\n            return 'Commit';\n        case RemoteResourceType.File:\n            return 'File';\n        case RemoteResourceType.Repo:\n            return 'Repository';\n        case RemoteResourceType.Revision:\n            return 'Revision';\n        default:\n            return '';\n    }\n}\n\nexport abstract class RemoteProvider {\n    private _name: string | undefined;\n\n    constructor(\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly protocol: string = 'https',\n        name?: string,\n        public readonly custom: boolean = false\n    ) {\n        this._name = name;\n    }\n\n    get icon(): string {\n        return 'remote';\n    }\n\n    abstract get name(): string;\n\n    protected get baseUrl() {\n        return `${this.protocol}://${this.domain}/${this.path}`;\n    }\n\n    enrichMessage(message: string): string {\n        return message;\n    }\n\n    protected formatName(name: string) {\n        if (this._name !== undefined) return this._name;\n        return `${name}${this.custom ? ` (${this.domain})` : ''}`;\n    }\n\n    protected splitPath(): [string, string] {\n        const index = this.path.indexOf('/');\n        return [this.path.substring(0, index), this.path.substring(index + 1)];\n    }\n\n    protected getUrlForRepository(): string {\n        return this.baseUrl;\n    }\n    protected abstract getUrlForBranches(): string;\n    protected abstract getUrlForBranch(branch: string): string;\n    protected abstract getUrlForCommit(sha: string): string;\n    protected abstract getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string;\n\n    private async openUrl(url?: string): Promise<{} | undefined> {\n        if (url === undefined) return undefined;\n\n        return commands.executeCommand(BuiltInCommands.Open, Uri.parse(url));\n    }\n\n    async copy(resource: RemoteResource): Promise<{} | undefined> {\n        const url = this.url(resource);\n        if (url === undefined) return undefined;\n\n        try {\n            void (await env.clipboard.writeText(url));\n\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy remote url, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyRemoteUrlToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy remote url');\n        }\n    }\n\n    open(resource: RemoteResource): Promise<{} | undefined> {\n        return this.openUrl(this.url(resource));\n    }\n\n    url(resource: RemoteResource): string | undefined {\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                return this.getUrlForBranch(encodeURIComponent(resource.branch));\n            case RemoteResourceType.Branches:\n                return this.getUrlForBranches();\n            case RemoteResourceType.Commit:\n                return this.getUrlForCommit(encodeURIComponent(resource.sha));\n            case RemoteResourceType.File:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    undefined,\n                    resource.range\n                );\n            case RemoteResourceType.Repo:\n                return this.getUrlForRepository();\n            case RemoteResourceType.Revision:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    resource.sha !== undefined ? encodeURIComponent(resource.sha) : undefined,\n                    resource.range\n                );\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\nconst stripGitRegex = /\\/_git\\/?/i;\n\nconst sshDomainRegex = /^ssh\\./i;\nconst sshPathRegex = /^\\/?v\\d\\//i;\n\nexport class AzureDevOpsRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string) {\n        domain = domain.replace(sshDomainRegex, '');\n        path = path.replace(sshPathRegex, '');\n\n        super(domain, path, protocol, name);\n    }\n\n    get icon() {\n        return 'vsts';\n    }\n\n    get name() {\n        return 'Azure DevOps';\n    }\n\n    enrichMessage(message: string): string {\n        // Strip off any `_git` part from the repo url\n        const baseUrl = this.baseUrl.replace(stripGitRegex, '/');\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${baseUrl}/_workitems/edit/$3 \"Open Work Item $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/?version=GB${branch}&_a=history`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `&line=${range.start.line}`;\n            }\n            else {\n                line = `&line=${range.start.line}&lineEnd=${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/commit/${sha}/?_a=contents&path=%2F${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/?path=%2F${fileName}&version=GB${branch}&_a=contents${line}`;\n        return `${this.baseUrl}?path=%2F${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/branch/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${fileName}-${range.start.line}`;\n            }\n            else {\n                line = `#${fileName}-${range.start.line}:${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/src/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/src/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketServerRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    protected get baseUrl() {\n        const [project, repo] = this.splitPath();\n        return `https://${this.domain}/projects/${project}/repos/${repo}`;\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket Server');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits?until=${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${range.start.line}`;\n            }\n            else {\n                line = `#${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/browse/${fileName}?at=${sha}${line}`;\n        if (branch) return `${this.baseUrl}/browse/${fileName}?at=${branch}${line}`;\n        return `${this.baseUrl}/browse/${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemotesUrlsConfig } from '../../configuration';\nimport { Strings } from '../../system';\nimport { RemoteProvider } from './provider';\n\nexport class CustomRemote extends RemoteProvider {\n    private readonly urls: RemotesUrlsConfig;\n\n    constructor(domain: string, path: string, urls: RemotesUrlsConfig, protocol?: string, name?: string) {\n        super(domain, path, protocol, name, true);\n        this.urls = urls;\n    }\n\n    get name() {\n        return this.formatName('Custom');\n    }\n\n    protected getUrlForRepository(): string {\n        return Strings.interpolate(this.urls.repository, this.getContext());\n    }\n\n    protected getUrlForBranches(): string {\n        return Strings.interpolate(this.urls.branches, this.getContext());\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return Strings.interpolate(this.urls.branch, this.getContext({ branch: branch }));\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return Strings.interpolate(this.urls.commit, this.getContext({ id: sha }));\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = Strings.interpolate(this.urls.fileLine, { line: range.start.line });\n            }\n            else {\n                line = Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });\n            }\n        }\n\n        if (sha) {\n            return Strings.interpolate(\n                this.urls.fileInCommit,\n                this.getContext({ id: sha, file: fileName, line: line })\n            );\n        }\n        if (branch) {\n            return Strings.interpolate(\n                this.urls.fileInBranch,\n                this.getContext({ branch: branch, file: fileName, line: line })\n            );\n        }\n        return Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line: line }));\n    }\n\n    private getContext(context?: {}) {\n        const [repoBase, repoPath] = this.splitPath();\n        return {\n            repo: this.path,\n            repoBase: repoBase,\n            repoPath: repoPath,\n            ...(context || {})\n        };\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)((?:#|gh-)([0-9]+))\\b/gi;\nconst issueEnricher3rdParyRegex = /\\b((\\w+-?\\w+(?!-)\\/\\w+-?\\w+(?!-))#([0-9]+))\\b/g;\n\nexport class GitHubRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'github';\n    }\n\n    get name() {\n        return this.formatName('GitHub');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches #123 or gh-123 or GH-123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches eamodio/vscode-gitlens#123\n                .replace(\n                    issueEnricher3rdParyRegex,\n                    `[$1](${this.protocol}://${this.domain}/$2/issues/$3 \"Open Issue #$3 from $2\")`\n                )\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-L${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nexport class GitLabRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'gitlab';\n    }\n\n    get name() {\n        return this.formatName('GitLab');\n    }\n\n    enrichMessage(message: string): string {\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { CustomRemoteType, RemotesConfig } from '../../configuration';\nimport { Logger } from '../../logger';\nimport { AzureDevOpsRemote } from './azure-devops';\nimport { BitbucketRemote } from './bitbucket';\nimport { BitbucketServerRemote } from './bitbucket-server';\nimport { CustomRemote } from './custom';\nimport { GitHubRemote } from './github';\nimport { GitLabRemote } from './gitlab';\nimport { RemoteProvider } from './provider';\n\nexport { RemoteProvider };\nexport type RemoteProviders = [string | RegExp, ((domain: string, path: string) => RemoteProvider)][];\n\nconst defaultProviders: RemoteProviders = [\n    ['bitbucket.org', (domain: string, path: string) => new BitbucketRemote(domain, path)],\n    ['github.com', (domain: string, path: string) => new GitHubRemote(domain, path)],\n    ['gitlab.com', (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bdev\\.azure\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)],\n    [/\\bbitbucket\\b/i, (domain: string, path: string) => new BitbucketServerRemote(domain, path)],\n    [/\\bgitlab\\b/i, (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bvisualstudio\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)]\n];\n\nexport class RemoteProviderFactory {\n    static factory(providers: RemoteProviders): (domain: string, path: string) => RemoteProvider | undefined {\n        return (domain: string, path: string) => this.create(providers, domain, path);\n    }\n\n    static create(providers: RemoteProviders, domain: string, path: string): RemoteProvider | undefined {\n        try {\n            const key = domain.toLowerCase();\n            for (const [matcher, creator] of providers) {\n                if (\n                    (typeof matcher === 'string' && matcher === key) ||\n                    (typeof matcher !== 'string' && matcher.test(key))\n                ) {\n                    return creator(domain, path);\n                }\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'RemoteProviderFactory');\n            return undefined;\n        }\n    }\n\n    static loadProviders(cfg: RemotesConfig[] | null | undefined): RemoteProviders {\n        const providers: RemoteProviders = [];\n\n        if (cfg != null && cfg.length > 0) {\n            for (const rc of cfg) {\n                const provider = this.getCustomProvider(rc);\n                if (provider === undefined) continue;\n\n                providers.push([rc.domain.toLowerCase(), provider]);\n            }\n        }\n\n        providers.push(...defaultProviders);\n        return providers;\n    }\n\n    private static getCustomProvider(cfg: RemotesConfig) {\n        switch (cfg.type) {\n            case CustomRemoteType.Bitbucket:\n                return (domain: string, path: string) =>\n                    new BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.BitbucketServer:\n                return (domain: string, path: string) =>\n                    new BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.Custom:\n                return (domain: string, path: string) =>\n                    new CustomRemote(domain, path, cfg.urls!, cfg.protocol, cfg.name);\n            case CustomRemoteType.GitHub:\n                return (domain: string, path: string) => new GitHubRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.GitLab:\n                return (domain: string, path: string) => new GitLabRemote(domain, path, cfg.protocol, cfg.name, true);\n        }\n        return undefined;\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    ProgressLocation,\n    RelativePattern,\n    Uri,\n    window,\n    workspace,\n    WorkspaceFolder\n} from 'vscode';\nimport { configuration, RemotesConfig } from '../../configuration';\nimport { StarredRepositories, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Functions, gate, log } from '../../system';\nimport { GitBranch, GitDiffShortStat, GitRemote, GitStash, GitStatus, GitTag } from '../git';\nimport { GitUri } from '../gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from '../remotes/factory';\n\nexport enum RepositoryChange {\n    Config = 'config',\n    Closed = 'closed',\n    // FileSystem = 'file-system',\n    Remotes = 'remotes',\n    Repository = 'repository',\n    Stashes = 'stashes',\n    Tags = 'tags'\n}\n\nexport class RepositoryChangeEvent {\n    readonly changes: RepositoryChange[] = [];\n\n    constructor(\n        public readonly repository?: Repository\n    ) {}\n\n    changed(change: RepositoryChange, solely: boolean = false) {\n        if (solely) return this.changes.length === 1 && this.changes[0] === change;\n\n        return this.changes.includes(change);\n\n        // const changed = this.changes.includes(change);\n        // if (changed) return true;\n\n        // if (change === RepositoryChange.Repository) {\n        //     return this.changes.includes(RepositoryChange.Stashes);\n        // }\n\n        // return false;\n    }\n}\n\nexport interface RepositoryFileSystemChangeEvent {\n    readonly repository?: Repository;\n    readonly uris: Uri[];\n}\n\nexport class Repository implements Disposable {\n    private _onDidChange = new EventEmitter<RepositoryChangeEvent>();\n    get onDidChange(): Event<RepositoryChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onDidChangeFileSystem = new EventEmitter<RepositoryFileSystemChangeEvent>();\n    get onDidChangeFileSystem(): Event<RepositoryFileSystemChangeEvent> {\n        return this._onDidChangeFileSystem.event;\n    }\n\n    readonly formattedName: string;\n    readonly id: string;\n    readonly index: number;\n    readonly name: string;\n    readonly normalizedPath: string;\n    readonly supportsChangeEvents: boolean = true;\n\n    private _branch: Promise<GitBranch | undefined> | undefined;\n    private readonly _disposable: Disposable;\n    private _fireChangeDebounced: ((e: RepositoryChangeEvent) => void) | undefined = undefined;\n    private _fireFileSystemChangeDebounced: ((e: RepositoryFileSystemChangeEvent) => void) | undefined = undefined;\n    private _fsWatchCounter = 0;\n    private _fsWatcherDisposable: Disposable | undefined;\n    private _pendingChanges: { repo?: RepositoryChangeEvent; fs?: RepositoryFileSystemChangeEvent } = {};\n    private _providers: RemoteProviders | undefined;\n    private _remotes: Promise<GitRemote[]> | undefined;\n    private _suspended: boolean;\n\n    constructor(\n        public readonly folder: WorkspaceFolder,\n        public readonly path: string,\n        public readonly root: boolean,\n        private readonly onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void,\n        suspended: boolean,\n        closed: boolean = false\n    ) {\n        const relativePath = paths.relative(folder.uri.fsPath, path);\n        if (root) {\n            // Check if the repository is not contained by a workspace folder\n            const repoFolder = workspace.getWorkspaceFolder(GitUri.fromRepoPath(path));\n            if (repoFolder === undefined) {\n                // If it isn't within a workspace folder we can't get change events, see: https://github.com/Microsoft/vscode/issues/3025\n                this.supportsChangeEvents = false;\n                this.formattedName = this.name = paths.basename(path);\n            }\n            else {\n                this.formattedName = this.name = folder.name;\n            }\n        }\n        else {\n            this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;\n            this.name = folder.name;\n        }\n        this.index = folder.index;\n\n        this.normalizedPath = (path.endsWith('/') ? path : `${path}/`).toLowerCase();\n        this.id = this.normalizedPath;\n\n        this._suspended = suspended;\n        this._closed = closed;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(\n            new RelativePattern(\n                folder,\n                '{\\\n**/.git/config,\\\n**/.git/index,\\\n**/.git/HEAD,\\\n**/.git/refs/stash,\\\n**/.git/refs/heads/**,\\\n**/.git/refs/remotes/**,\\\n**/.git/refs/tags/**,\\\n**/.gitignore\\\n}'\n            )\n        );\n        this._disposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onRepositoryChanged, this),\n            watcher.onDidCreate(this.onRepositoryChanged, this),\n            watcher.onDidDelete(this.onRepositoryChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.stopWatchingFileSystem();\n\n        // // Clean up any disposables in storage\n        // for (const item of this.storage.values()) {\n        //     if (item != null && typeof item.dispose === 'function') {\n        //         item.dispose();\n        //     }\n        // }\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('remotes').value;\n        if (configuration.changed(e, section, this.folder.uri)) {\n            this._providers = RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(section, this.folder.uri)\n            );\n\n            if (!configuration.initializing(e)) {\n                this._remotes = undefined;\n                this.fireChange(RepositoryChange.Remotes);\n            }\n        }\n    }\n\n    private onFileSystemChanged(uri: Uri) {\n        // Ignore .git changes\n        if (/\\.git(?:\\/|\\\\|$)/.test(uri.fsPath)) return;\n\n        this.fireFileSystemChange(uri);\n    }\n\n    private onRepositoryChanged(uri: Uri) {\n        if (uri !== undefined && uri.path.endsWith('refs/stash')) {\n            this.fireChange(RepositoryChange.Stashes);\n\n            return;\n        }\n\n        this._branch = undefined;\n\n        if (uri !== undefined && uri.path.endsWith('refs/remotes')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Remotes);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('refs/tags')) {\n            this.fireChange(RepositoryChange.Tags);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('config')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);\n\n            return;\n        }\n\n        this.onAnyRepositoryChanged(this, RepositoryChange.Repository);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    private _closed: boolean = false;\n    get closed(): boolean {\n        return this._closed;\n    }\n    set closed(value: boolean) {\n        const changed = this._closed !== value;\n        this._closed = value;\n        if (changed) {\n            this.onAnyRepositoryChanged(this, RepositoryChange.Closed);\n            this.fireChange(RepositoryChange.Closed);\n        }\n    }\n\n    containsUri(uri: Uri) {\n        if (uri instanceof GitUri) {\n            uri = uri.repoPath !== undefined ? GitUri.file(uri.repoPath) : uri.documentUri();\n        }\n\n        return this.folder === workspace.getWorkspaceFolder(uri);\n    }\n\n    @gate()\n    @log()\n    async fetch(options: { progress?: boolean; remote?: string } = {}) {\n        const { progress, ...opts } = { progress: true, ...options };\n        if (!progress) return this.fetchCore(opts);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching ${opts.remote ? `${opts.remote} of ` : ''}${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.fetchCore(opts)\n        );\n    }\n\n    private async fetchCore(options: { remote?: string } = {}) {\n        await Container.git.fetch(this.path, options.remote);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    getBranch(): Promise<GitBranch | undefined> {\n        if (this._branch === undefined || !this.supportsChangeEvents) {\n            this._branch = Container.git.getBranch(this.path);\n        }\n        return this._branch;\n    }\n\n    getBranches(): Promise<GitBranch[]> {\n        return Container.git.getBranches(this.path);\n    }\n\n    getChangedFilesCount(sha?: string): Promise<GitDiffShortStat | undefined> {\n        return Container.git.getChangedFilesCount(this.path, sha);\n    }\n\n    async getLastFetched(): Promise<number> {\n        const hasRemotes = await this.hasRemotes();\n        if (!hasRemotes || Container.vsls.isMaybeGuest) return 0;\n\n        return new Promise<number>((resolve, reject) =>\n            fs.stat(paths.join(this.path, '.git/FETCH_HEAD'), (err, stat) => resolve(err ? 0 : stat.mtime.getTime()))\n        );\n    }\n\n    getRemotes(): Promise<GitRemote[]> {\n        if (this._remotes === undefined || !this.supportsChangeEvents) {\n            if (this._providers === undefined) {\n                const remotesCfg = configuration.get<RemotesConfig[] | null | undefined>(\n                    configuration.name('remotes').value,\n                    this.folder.uri\n                );\n                this._providers = RemoteProviderFactory.loadProviders(remotesCfg);\n            }\n\n            this._remotes = Container.git.getRemotesCore(this.path, this._providers);\n        }\n\n        return this._remotes;\n    }\n\n    getStashList(): Promise<GitStash | undefined> {\n        return Container.git.getStashList(this.path);\n    }\n\n    getStatus(): Promise<GitStatus | undefined> {\n        return Container.git.getStatusForRepo(this.path);\n    }\n\n    getTags(options?: { includeRefs?: boolean }): Promise<GitTag[]> {\n        return Container.git.getTags(this.path, options);\n    }\n\n    async hasRemotes(): Promise<boolean> {\n        const remotes = await this.getRemotes();\n        return remotes !== undefined && remotes.length > 0;\n    }\n\n    async hasTrackingBranch(): Promise<boolean> {\n        const branch = await this.getBranch();\n        return branch !== undefined && branch.tracking !== undefined;\n    }\n\n    @gate()\n    @log()\n    async pull(options: { progress?: boolean } = {}) {\n        const { progress } = { progress: true, ...options };\n        if (!progress) return this.pullCore();\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pullCore()\n        );\n    }\n\n    private async pullCore() {\n        await commands.executeCommand('git.pull', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    @gate()\n    @log()\n    async push(options: { force?: boolean; progress?: boolean } = {}) {\n        const { force, progress } = { progress: true, ...options };\n        if (!progress) return this.pushCore(force);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pushCore(force)\n        );\n    }\n\n    private async pushCore(force: boolean = false) {\n        await commands.executeCommand(force ? 'git.pushForce' : 'git.push', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    resume() {\n        if (!this._suspended) return;\n\n        this._suspended = false;\n\n        // If we've come back into focus and we are dirty, fire the change events\n\n        if (this._pendingChanges.repo !== undefined) {\n            this._fireChangeDebounced!(this._pendingChanges.repo);\n        }\n\n        if (this._pendingChanges.fs !== undefined) {\n            this._fireFileSystemChangeDebounced!(this._pendingChanges.fs);\n        }\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredRepositories, starred);\n    }\n\n    startWatchingFileSystem() {\n        this._fsWatchCounter++;\n        if (this._fsWatcherDisposable !== undefined) return;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(new RelativePattern(this.folder, `**`));\n        this._fsWatcherDisposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onFileSystemChanged, this),\n            watcher.onDidCreate(this.onFileSystemChanged, this),\n            watcher.onDidDelete(this.onFileSystemChanged, this)\n        );\n    }\n\n    stopWatchingFileSystem() {\n        if (this._fsWatcherDisposable === undefined) return;\n        if (--this._fsWatchCounter > 0) return;\n\n        this._fsWatcherDisposable.dispose();\n        this._fsWatcherDisposable = undefined;\n    }\n\n    suspend() {\n        this._suspended = true;\n    }\n\n    private fireChange(...reasons: RepositoryChange[]) {\n        if (this._fireChangeDebounced === undefined) {\n            this._fireChangeDebounced = Functions.debounce(this.fireChangeCore, 250);\n        }\n\n        if (this._pendingChanges.repo === undefined) {\n            this._pendingChanges.repo = new RepositoryChangeEvent(this);\n        }\n\n        const e = this._pendingChanges.repo;\n\n        for (const reason of reasons) {\n            if (!e.changes.includes(reason)) {\n                e.changes.push(reason);\n            }\n        }\n\n        if (this._suspended) return;\n\n        this._fireChangeDebounced(e);\n    }\n\n    private fireChangeCore(e: RepositoryChangeEvent) {\n        this._pendingChanges.repo = undefined;\n\n        this._onDidChange.fire(e);\n    }\n\n    private fireFileSystemChange(uri: Uri) {\n        if (this._fireFileSystemChangeDebounced === undefined) {\n            this._fireFileSystemChangeDebounced = Functions.debounce(this.fireFileSystemChangeCore, 2500);\n        }\n\n        if (this._pendingChanges.fs === undefined) {\n            this._pendingChanges.fs = { repository: this, uris: [] };\n        }\n\n        const e = this._pendingChanges.fs;\n        e.uris.push(uri);\n\n        if (this._suspended) return;\n\n        this._fireFileSystemChangeDebounced(e);\n    }\n\n    private fireFileSystemChangeCore(e: RepositoryFileSystemChangeEvent) {\n        this._pendingChanges.fs = undefined;\n\n        this._onDidChangeFileSystem.fire(e);\n    }\n}\n","'use strict';\nimport { GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\nimport { GitLogCommit } from './logCommit';\n\nexport class GitStashCommit extends GitLogCommit {\n    constructor(\n        type: GitCommitType,\n        public readonly stashName: string,\n        repoPath: string,\n        sha: string,\n        date: Date,\n        committedDate: Date,\n        message: string,\n        fileName: string,\n        files: GitFile[],\n        status?: GitFileStatus | undefined,\n        originalFileName?: string | undefined,\n        previousSha?: string | undefined,\n        previousFileName?: string | undefined\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            'You',\n            undefined,\n            date,\n            committedDate,\n            message,\n            fileName,\n            files,\n            status,\n            originalFileName,\n            previousSha === undefined ? `${sha}^` : previousSha,\n            previousFileName\n        );\n    }\n\n    get shortSha() {\n        return this.stashName;\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitStashCommit(\n            changes.type || this.type,\n            this.stashName,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName)\n        );\n    }\n}\n","'use strict';\n\nexport class GitTag {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly sha?: string,\n        public readonly annotation?: string\n    ) {}\n\n    get ref() {\n        return this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const index = this.name.lastIndexOf('/');\n            this._basename = index !== -1 ? this.name.substring(index + 1) : this.name;\n        }\n\n        return this._basename;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Strings } from '../../system';\nimport { Git, GitAuthor, GitBlame, GitBlameCommit, GitCommitLine } from './../git';\n\ninterface BlameEntry {\n    sha: string;\n\n    line: number;\n    originalLine: number;\n    lineCount: number;\n\n    author: string;\n    authorDate?: string;\n    authorTimeZone?: string;\n    authorEmail?: string;\n\n    previousSha?: string;\n    previousFileName?: string;\n\n    fileName?: string;\n\n    summary?: string;\n}\n\nexport class GitBlameParser {\n    static parse(\n        data: string,\n        repoPath: string | undefined,\n        fileName: string,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitBlame | undefined {\n        if (!data) return undefined;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        const lines: GitCommitLine[] = [];\n\n        let relativeFileName = repoPath && fileName;\n\n        let entry: BlameEntry | undefined = undefined;\n        let line: string;\n        let lineParts: string[];\n\n        let first = true;\n\n        for (line of Strings.lines(data)) {\n            lineParts = line.split(' ');\n            if (lineParts.length < 2) continue;\n\n            if (entry === undefined) {\n                entry = {\n                    sha: lineParts[0],\n                    originalLine: parseInt(lineParts[1], 10) - 1,\n                    line: parseInt(lineParts[2], 10) - 1,\n                    lineCount: parseInt(lineParts[3], 10)\n                } as BlameEntry;\n\n                continue;\n            }\n\n            switch (lineParts[0]) {\n                case 'author':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = lineParts\n                            .slice(1)\n                            .join(' ')\n                            .trim();\n                    }\n                    break;\n\n                case 'author-mail':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.authorEmail = currentUser !== undefined ? currentUser.email : undefined;\n                        continue;\n                    }\n\n                    entry.authorEmail = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    const start = entry.authorEmail.indexOf('<');\n                    if (start >= 0) {\n                        const end = entry.authorEmail.indexOf('>', start);\n                        if (end > start) {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1, end);\n                        }\n                        else {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1);\n                        }\n                    }\n\n                    break;\n\n                case 'author-time':\n                    entry.authorDate = lineParts[1];\n                    break;\n\n                case 'author-tz':\n                    entry.authorTimeZone = lineParts[1];\n                    break;\n\n                case 'summary':\n                    entry.summary = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    break;\n\n                case 'previous':\n                    entry.previousSha = lineParts[1];\n                    entry.previousFileName = lineParts.slice(2).join(' ');\n                    break;\n\n                case 'filename':\n                    entry.fileName = lineParts.slice(1).join(' ');\n\n                    if (first && repoPath === undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);\n\n                    entry = undefined;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        for (const [, c] of commits) {\n            if (c.author === undefined) return;\n\n            const author = authors.get(c.author);\n            if (author === undefined) return;\n\n            author.lineCount += c.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            repoPath: repoPath,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines\n        } as GitBlame;\n    }\n\n    private static parseEntry(\n        entry: BlameEntry,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitBlameCommit>,\n        authors: Map<string, GitAuthor>,\n        lines: GitCommitLine[],\n        currentUser: { name?: string; email?: string } | undefined\n    ) {\n        let commit = commits.get(entry.sha);\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.authorEmail)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            commit = new GitBlameCommit(\n                repoPath!,\n                entry.sha,\n                entry.author,\n                entry.authorEmail,\n                new Date((entry.authorDate as any) * 1000),\n                entry.summary!,\n                relativeFileName,\n                relativeFileName !== entry.fileName ? entry.fileName : undefined,\n                entry.previousSha,\n                entry.previousSha && entry.previousFileName,\n                []\n            );\n\n            commits.set(entry.sha, commit);\n        }\n\n        for (let i = 0, len = entry.lineCount; i < len; i++) {\n            const line: GitCommitLine = {\n                sha: entry.sha,\n                line: entry.line + i,\n                originalLine: entry.originalLine + i\n            };\n\n            if (commit.previousSha) {\n                line.previousSha = commit.previousSha;\n            }\n\n            commit.lines.push(line);\n            lines[line.line] = line;\n        }\n    }\n}\n","'use strict';\nimport { GitBranch } from './../git';\n\nconst branchWithTrackingRegex = /^(\\*?)\\s+(.+?)\\s+([0-9,a-f]+)\\s+(?:\\[(.*?\\/.*?)(?:\\:\\s(.*)\\]|\\]))?/gm;\nconst branchWithTrackingStateRegex = /^(?:ahead\\s([0-9]+))?[,\\s]*(?:behind\\s([0-9]+))?/;\n\nexport class GitBranchParser {\n    static parse(data: string, repoPath: string): GitBranch[] | undefined {\n        if (!data) return undefined;\n\n        const branches: GitBranch[] = [];\n\n        let ahead;\n        let behind;\n        let current;\n        let name;\n        let sha;\n        let state;\n        let tracking;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = branchWithTrackingRegex.exec(data);\n            if (match == null) break;\n\n            [, current, name, sha, tracking, state] = match;\n            [ahead, behind] = this.parseState(state);\n            branches.push(\n                new GitBranch(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    current === '*',\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    sha === undefined ? undefined : (' ' + sha).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    tracking === undefined ? undefined : (' ' + tracking).substr(1),\n                    ahead,\n                    behind\n                )\n            );\n        } while (match != null);\n\n        if (!branches.length) return undefined;\n\n        return branches;\n    }\n\n    static parseState(state: string): [number, number] {\n        if (state == null) return [0, 0];\n\n        const match = branchWithTrackingStateRegex.exec(state);\n        if (match == null) return [0, 0];\n\n        const ahead = parseInt(match[1], 10);\n        const behind = parseInt(match[2], 10);\n        return [isNaN(ahead) ? 0 : ahead, isNaN(behind) ? 0 : behind];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Range } from 'vscode';\nimport { Arrays, Strings } from '../../system';\nimport { Git, GitAuthor, GitCommitType, GitFile, GitFileStatus, GitLog, GitLogCommit } from './../git';\n\ninterface LogEntry {\n    ref?: string;\n\n    author?: string;\n    date?: string;\n    committedDate?: string;\n    email?: string;\n\n    parentShas?: string[];\n\n    fileName?: string;\n    originalFileName?: string;\n    files?: GitFile[];\n\n    status?: GitFileStatus;\n\n    summary?: string;\n}\n\nconst diffRegex = /diff --git a\\/(.*) b\\/(.*)/;\nconst emptyEntry: LogEntry = {};\n\nexport class GitLogParser {\n    static parse(\n        data: string,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        fileName: string | undefined,\n        sha: string | undefined,\n        currentUser: { name?: string; email?: string } | undefined,\n        maxCount: number | undefined,\n        reverse: boolean,\n        range: Range | undefined\n    ): GitLog | undefined {\n        if (!data) return undefined;\n\n        let relativeFileName: string;\n        let recentCommit: GitLogCommit | undefined = undefined;\n\n        let entry: LogEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let i = 0;\n        let first = true;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitLogCommit> = new Map();\n        let truncationCount = maxCount;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // Since log --reverse doesn't properly honor a max count -- enforce it here\n            if (reverse && maxCount && i >= maxCount) break;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 97: // 'a': // author\n                    if (Git.isUncommitted(entry.ref)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = line.substring(4);\n                    }\n                    break;\n\n                case 101: // 'e': // author-mail\n                    entry.email = line.substring(4);\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 112: // 'p': // parents\n                    entry.parentShas = line.substring(4).split(' ');\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (next.done || next.value === '</f>') break;\n\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</f>') break;\n\n                        if (line.startsWith('warning:')) continue;\n\n                        if (type === GitCommitType.Branch) {\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            this.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n                        else if (line.startsWith('diff')) {\n                            const matches = diffRegex.exec(line);\n                            if (matches != null) {\n                                entry.fileName = matches[1];\n                                const originalFileName = matches[2];\n                                if (entry.fileName !== originalFileName) {\n                                    entry.originalFileName = originalFileName;\n                                    entry.status = 'R';\n                                }\n                                else {\n                                    entry.status = 'M';\n                                }\n                            }\n\n                            while (true) {\n                                next = lines.next();\n                                if (next.done || next.value === '</f>') break;\n                            }\n                            break;\n                        }\n                        else {\n                            entry.status = line[0] as GitFileStatus;\n                            entry.fileName = line.substring(1);\n                            this.parseFileName(entry);\n                        }\n                    }\n\n                    if (entry.files !== undefined) {\n                        entry.fileName = Arrays.filterMap(entry.files, f => (f.fileName ? f.fileName : undefined)).join(\n                            ', '\n                        );\n                    }\n\n                    if (first && repoPath === undefined && type === GitCommitType.File && fileName !== undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    const commit = commits.get(entry.ref!);\n                    if (commit === undefined) {\n                        i++;\n                    }\n                    else if (truncationCount) {\n                        // Since this matches an existing commit it will be skipped, so reduce our truncationCount to ensure accurate truncation detection\n                        truncationCount--;\n                    }\n\n                    recentCommit = GitLogParser.parseEntry(\n                        entry,\n                        commit,\n                        type,\n                        repoPath,\n                        relativeFileName,\n                        commits,\n                        authors,\n                        recentCommit,\n                        currentUser\n                    );\n\n                    break;\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            authors: authors,\n            commits: commits,\n            sha: sha,\n            count: i,\n            maxCount: maxCount,\n            range: range,\n            truncated: Boolean(truncationCount && i >= truncationCount && truncationCount !== 1)\n        } as GitLog;\n    }\n\n    private static parseEntry(\n        entry: LogEntry,\n        commit: GitLogCommit | undefined,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitLogCommit>,\n        authors: Map<string, GitAuthor>,\n        recentCommit: GitLogCommit | undefined,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitLogCommit | undefined {\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.email)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            const originalFileName = relativeFileName !== entry.fileName ? entry.fileName : undefined;\n            if (type === GitCommitType.File) {\n                entry.files = [\n                    {\n                        status: entry.status!,\n                        fileName: relativeFileName,\n                        originalFileName: originalFileName\n                    }\n                ];\n            }\n\n            commit = new GitLogCommit(\n                type,\n                repoPath!,\n                entry.ref!,\n                entry.author!,\n                entry.email,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                relativeFileName,\n                entry.files || [],\n                entry.status,\n                originalFileName,\n                `${entry.ref!}^`,\n                undefined,\n                entry.parentShas!\n            );\n\n            commits.set(entry.ref!, commit);\n        }\n        // else {\n        //     Logger.log(`merge commit? ${entry.sha}`);\n        // }\n\n        if (recentCommit !== undefined) {\n            // If the commit sha's match (merge commit), just forward it along\n            commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;\n\n            // Only add a filename if this is a file log\n            if (type === GitCommitType.File) {\n                recentCommit.previousFileName = commit.originalFileName || commit.fileName;\n                commit.nextFileName = recentCommit.originalFileName || recentCommit.fileName;\n            }\n        }\n        return commit;\n    }\n\n    static parseFileName(entry: { fileName?: string; originalFileName?: string }) {\n        if (entry.fileName === undefined) return;\n\n        const index = entry.fileName.indexOf('\\t') + 1;\n        if (index > 0) {\n            const next = entry.fileName.indexOf('\\t', index) + 1;\n            if (next > 0) {\n                entry.originalFileName = entry.fileName.substring(index, next - 1);\n                entry.fileName = entry.fileName.substring(next);\n            }\n            else {\n                entry.fileName = entry.fileName.substring(index);\n            }\n        }\n    }\n}\n","'use strict';\nimport { GitRemoteType } from '../models/remote';\nimport { RemoteProvider } from '../remotes/factory';\nimport { GitRemote } from './../git';\n\nconst remoteRegex = /^(.*)\\t(.*)\\s\\((.*)\\)$/gm;\nconst urlRegex = /^(?:(git:\\/\\/)(.*?)\\/|(https?:\\/\\/)(?:.*?@)?(.*?)\\/|git@(.*):|(ssh:\\/\\/)(?:.*@)?(.*?)(?::.*?)?(?:\\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;\n\n// Test git urls\n/*\nhttp://host.xz/user/project.git\nhttp://host.xz/path/to/repo.git\nhttp://host.xz/path/to/repo.git/\nhttp://username@host.xz/user/project.git\nhttp://username:password@host.xz/user/project.git\nhttps://host.xz/user/project.git\nhttps://host.xz/path/to/repo.git\nhttps://host.xz/path/to/repo.git/\nhttps://username@host.xz/user/project.git\nhttps://username:password@host.xz/user/project.git\n\ngit@host.xz:user/project.git\ngit://host.xz/path/to/repo.git/\ngit://host.xz/~user/path/to/repo.git/\n\nssh://host.xz/project.git\nssh://host.xz/path/to/repo.git\nssh://host.xz/path/to/repo.git/\nssh://host.xz:~project.git\nssh://host.xz:port/path/to/repo.git/\nssh://user@host.xz/project.git\nssh://user@host.xz/path/to/repo.git\nssh://user@host.xz/path/to/repo.git/\nssh://user@host.xz:port/path/to/repo.git/\nssh://user:password@host.xz/project.git\nssh://user:password@host.xz/path/to/repo.git\nssh://user:password@host.xz/path/to/repo.git/\n\nuser@host.xz:project.git\nuser@host.xz:path/to/repo.git\nuser@host.xz:/path/to/repo.git/\nuser:password@host.xz:project.git\nuser:password@host.xz:/path/to/repo.git\nuser:password@host.xz:/path/to/repo.git/\n*/\n\nexport class GitRemoteParser {\n    static parse(\n        data: string,\n        repoPath: string,\n        providerFactory: (domain: string, path: string) => RemoteProvider | undefined\n    ): GitRemote[] {\n        if (!data) return [];\n\n        const remotes: GitRemote[] = [];\n        const groups = Object.create(null);\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = remoteRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const url = (' ' + match[2]).substr(1);\n\n            const [scheme, domain, path] = this.parseGitUrl(url);\n\n            const uniqueness = `${domain}/${path}`;\n            let remote: GitRemote | undefined = groups[uniqueness];\n            if (remote === undefined) {\n                remote = new GitRemote(\n                    repoPath,\n                    uniqueness,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + match[1]).substr(1),\n                    scheme,\n                    domain,\n                    path,\n                    providerFactory(domain, path),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    [{ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType }]\n                );\n                remotes.push(remote);\n                groups[uniqueness] = remote;\n            }\n            else {\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                remote.types.push({ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType });\n            }\n        } while (match != null);\n\n        if (!remotes.length) return [];\n\n        return remotes;\n    }\n\n    static parseGitUrl(url: string): [string, string, string] {\n        const match = urlRegex.exec(url);\n        if (match == null) return ['', '', ''];\n\n        return [\n            match[1] || match[3] || match[6],\n            match[2] || match[4] || match[5] || match[7] || match[8],\n            match[9].replace(/\\.git\\/?$/, '')\n        ];\n    }\n}\n","'use strict';\nimport { Arrays, Strings } from '../../system';\nimport { GitCommitType, GitFile, GitFileStatus, GitLogParser, GitStash, GitStashCommit } from './../git';\n// import { Logger } from './logger';\n\ninterface StashEntry {\n    ref?: string;\n    date?: string;\n    committedDate?: string;\n    fileNames?: string;\n    files?: GitFile[];\n    summary?: string;\n    stashName?: string;\n}\n\nconst emptyEntry: StashEntry = {};\n\nexport class GitStashParser {\n    static parse(data: string, repoPath: string): GitStash | undefined {\n        if (!data) return undefined;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const commits: Map<string, GitStashCommit> = new Map();\n\n        let entry: StashEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 108: // 'l': // reflog-selector\n                    entry.stashName = line.substring(4);\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (!next.done && next.value !== '</f>') {\n                        while (true) {\n                            next = lines.next();\n                            if (next.done) break;\n\n                            line = next.value;\n                            if (line === '</f>') break;\n\n                            if (line.startsWith('warning:')) continue;\n\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            GitLogParser.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n\n                        if (entry.files !== undefined) {\n                            entry.fileNames = Arrays.filterMap(entry.files, f =>\n                                f.fileName ? f.fileName : undefined\n                            ).join(', ');\n                        }\n                    }\n\n                    GitStashParser.parseEntry(entry, repoPath, commits);\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            commits: commits\n        } as GitStash;\n    }\n\n    private static parseEntry(entry: StashEntry, repoPath: string, commits: Map<string, GitStashCommit>) {\n        let commit = commits.get(entry.ref!);\n        if (commit === undefined) {\n            commit = new GitStashCommit(\n                GitCommitType.Stash,\n                entry.stashName!,\n                repoPath,\n                entry.ref!,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                entry.fileNames!,\n                entry.files || []\n            );\n        }\n\n        commits.set(entry.ref!, commit);\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\nimport { GitFileStatus, GitStatus, GitStatusFile } from './../git';\n\nconst aheadStatusV1Regex = /(?:ahead ([0-9]+))/;\nconst behindStatusV1Regex = /(?:behind ([0-9]+))/;\n\nexport class GitStatusParser {\n    static parse(data: string, repoPath: string, porcelainVersion: number): GitStatus | undefined {\n        if (!data) return undefined;\n\n        const lines = data.split('\\n').filter(Boolean);\n        if (lines.length === 0) return undefined;\n\n        if (porcelainVersion < 2) return this.parseV1(lines, repoPath);\n\n        return this.parseV2(lines, repoPath);\n    }\n\n    private static parseV1(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Header\n            if (line.startsWith('##')) {\n                const lineParts = line.split(' ');\n                [branch, upstream] = lineParts[1].split('...');\n                if (lineParts.length > 2) {\n                    const upstreamStatus = lineParts.slice(2).join(' ');\n\n                    const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);\n                    state.ahead = aheadStatus == null ? 0 : +aheadStatus[1] || 0;\n\n                    const behindStatus = behindStatusV1Regex.exec(upstreamStatus);\n                    state.behind = behindStatus == null ? 0 : +behindStatus[1] || 0;\n                }\n            }\n            else {\n                const rawStatus = line.substring(0, 2);\n                const fileName = line.substring(3);\n                if (rawStatus[0] === 'R') {\n                    const [file1, file2] = fileName.replace(/\\\"/g, '').split('->');\n                    files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));\n                }\n                else {\n                    files.push(this.parseStatusFile(repoPath, rawStatus, fileName));\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', '', files, state, upstream);\n    }\n\n    private static parseV2(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        let sha: string | undefined;\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Headers\n            if (line.startsWith('#')) {\n                const lineParts = line.split(' ');\n                switch (lineParts[1]) {\n                    case 'branch.oid':\n                        sha = lineParts[2];\n                        break;\n                    case 'branch.head':\n                        branch = lineParts[2];\n                        break;\n                    case 'branch.upstream':\n                        upstream = lineParts[2];\n                        break;\n                    case 'branch.ab':\n                        state.ahead = +lineParts[2].substring(1);\n                        state.behind = +lineParts[3].substring(1);\n                        break;\n                }\n            }\n            else {\n                const lineParts = line.split(' ');\n                switch (lineParts[0][0]) {\n                    case '1': // normal\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(' ')));\n                        break;\n                    case '2': // rename\n                        const file = lineParts\n                            .slice(9)\n                            .join(' ')\n                            .split('\\t');\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));\n                        break;\n                    case 'u': // unmerged\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(' ')));\n                        break;\n                    case '?': // untracked\n                        files.push(this.parseStatusFile(repoPath, ' ?', lineParts.slice(1).join(' ')));\n                        break;\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', sha || '', files, state, upstream);\n    }\n\n    static parseStatusFile(\n        repoPath: string,\n        rawStatus: string,\n        fileName: string,\n        originalFileName?: string\n    ): GitStatusFile {\n        let indexStatus = rawStatus[0] !== '.' ? rawStatus[0].trim() : undefined;\n        if (indexStatus == null || indexStatus.length === 0) {\n            indexStatus = undefined;\n        }\n\n        let workTreeStatus = undefined;\n        if (rawStatus.length > 1) {\n            workTreeStatus = rawStatus[1] !== '.' ? rawStatus[1].trim() : undefined;\n            if (workTreeStatus == null || workTreeStatus.length === 0) {\n                workTreeStatus = undefined;\n            }\n        }\n\n        return new GitStatusFile(\n            repoPath,\n            indexStatus as GitFileStatus | undefined,\n            workTreeStatus as GitFileStatus | undefined,\n            fileName,\n            originalFileName\n        );\n    }\n}\n","'use strict';\nimport { GitTag } from './../git';\n\nconst tagWithRefRegex = /([0-9,a-f]+)\\srefs\\/tags\\/(.*)/gm;\nconst tagWithAnnotationRegex = /^(.+?)(?:$|(?:\\s+)(.*)$)/gm;\n\nexport class GitTagParser {\n    static parse(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let annotation;\n        let name;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithAnnotationRegex.exec(data);\n            if (match == null) break;\n\n            [, name, annotation] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    undefined,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    annotation === undefined ? undefined : (' ' + annotation).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n\n    static parseWithRef(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let name;\n        let sha;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithRefRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, name] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + sha).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n}\n","'use strict';\nimport { GitTree } from './../git';\n\nconst treeRegex = /(?:.+?)\\s+(.+?)\\s+(.+?)\\s+(.+?)\\s+(.+)/gm;\n\nexport class GitTreeParser {\n    static parse(data: string | undefined): GitTree[] | undefined {\n        if (!data) return undefined;\n\n        const trees: GitTree[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = treeRegex.exec(data);\n            if (match == null) break;\n\n            const [, type, commitSha, size, filePath] = match;\n            trees.push({\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                commitSha: commitSha === undefined ? '' : (' ' + commitSha).substr(1),\n                path: filePath === undefined ? '' : filePath,\n                size: size === '-' ? 0 : Number(size || 0),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                type: (type === undefined ? '' : (' ' + type).substr(1)) as 'blob' | 'tree'\n            });\n        } while (match != null);\n\n        if (!trees.length) return undefined;\n\n        return trees;\n    }\n}\n","'use strict';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { findGitPath, GitLocation } from './locator';\nimport { run, RunOptions } from './shell';\n\nexport { GitLocation } from './locator';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './remotes/provider';\n\n// This is a root sha of all git repo's if using sha1\nconst rootSha = '4b825dc642cb6eb9a060e54bf8d69288fbee4904';\n\nconst defaultBlameParams = ['blame', '--root', '--incremental'];\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\nconst logFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}a${rb}${sp}%aN`, // author\n    `${lb}e${rb}${sp}%aE`, // email\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}p${rb}${sp}%P`, // parents\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultLogParams = ['log', '--name-status', `--format=${logFormat}`];\n\nconst stashFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}l${rb}${sp}%gd`, // reflog-selector\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultStashParams = ['stash', 'list', '--name-status', '-M', `--format=${stashFormat}`];\n\nconst GitErrors = {\n    badRevision: /bad revision \\'(.*?)\\'/i,\n    notAValidObjectName: /Not a valid object name/i\n};\n\nconst GitWarnings = {\n    notARepository: /Not a git repository/i,\n    outsideRepository: /is outside repository/i,\n    noPath: /no such path/i,\n    noCommits: /does not have any commits/i,\n    notFound: /Path \\'.*?\\' does not exist in/i,\n    foundButNotInRevision: /Path \\'.*?\\' exists on disk, but not in/i,\n    headNotABranch: /HEAD does not point to a branch/i,\n    noUpstream: /no upstream configured for branch \\'(.*?)\\'/i,\n    unknownRevision: /ambiguous argument \\'.*?\\': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,\n    mustRunInWorkTree: /this operation must be run in a work tree/i,\n    patchWithConflicts: /Applied patch to \\'.*?\\' with conflicts/i,\n    noRemoteRepositorySpecified: /No remote repository specified\\./i,\n    remoteConnectionError: /Could not read from remote repository/i,\n    notAGitCommand: /\\'.+\\' is not a git command/i\n};\n\nexport enum GitErrorHandling {\n    Ignore = 'ignore',\n    Throw = 'throw'\n}\n\nexport interface GitCommandOptions extends RunOptions {\n    configs?: string[];\n    readonly correlationKey?: string;\n    errors?: GitErrorHandling;\n    // Specifies that this command should always be executed locally if possible\n    local?: boolean;\n}\n\n// A map of running git commands -- avoids running duplicate overlaping commands\nconst pendingCommands: Map<string, Promise<string | Buffer>> = new Map();\n\nconst emptyArray: any = [];\nconst emptyObj = {};\n\nexport async function git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]): Promise<TOut> {\n    if (Container.vsls.isMaybeGuest) {\n        if (options.local !== true) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.git<TOut>(options, ...args);\n            }\n        }\n        else {\n            // Since we will have a live share path here, just blank it out\n            options.cwd = '';\n        }\n    }\n\n    const start = process.hrtime();\n\n    const { configs, correlationKey, errors: errorHandling, ...opts } = options;\n\n    const encoding = options.encoding || 'utf8';\n    const runOpts = {\n        ...opts,\n        encoding: encoding === 'utf8' ? 'utf8' : encoding === 'buffer' ? 'buffer' : 'binary',\n        // Adds GCM environment variables to avoid any possible credential issues -- from https://github.com/Microsoft/vscode/issues/26573#issuecomment-338686581\n        // Shouldn't *really* be needed but better safe than sorry\n        env: {\n            ...process.env,\n            ...(options.env || emptyObj),\n            GCM_INTERACTIVE: 'NEVER',\n            GCM_PRESERVE_CREDS: 'TRUE',\n            LC_ALL: 'C'\n        }\n    } as RunOptions;\n\n    const gitCommand = `[${runOpts.cwd}] git ${args.join(' ')}`;\n\n    const command = `${correlationKey !== undefined ? `${correlationKey}:` : ''}${gitCommand}`;\n\n    let waiting;\n    let promise = pendingCommands.get(command);\n    if (promise === undefined) {\n        waiting = false;\n\n        // Fixes https://github.com/eamodio/vscode-gitlens/issues/73 & https://github.com/eamodio/vscode-gitlens/issues/161\n        // See https://stackoverflow.com/questions/4144417/how-to-handle-asian-characters-in-file-names-in-git-on-os-x\n        args.splice(\n            0,\n            0,\n            '-c',\n            'core.quotepath=false',\n            '-c',\n            'color.ui=false',\n            ...(configs !== undefined ? configs : emptyArray)\n        );\n\n        promise = run<TOut>(gitInfo.path, args, encoding, runOpts);\n\n        pendingCommands.set(command, promise);\n    }\n    else {\n        waiting = true;\n    }\n\n    let exception: Error | undefined;\n    try {\n        return (await promise) as TOut;\n    }\n    catch (ex) {\n        exception = ex;\n\n        switch (errorHandling) {\n            case GitErrorHandling.Ignore:\n                exception = undefined;\n                return '' as TOut;\n\n            case GitErrorHandling.Throw:\n                throw ex;\n\n            default:\n                const result = defaultExceptionHandler(ex, options, ...args);\n                exception = undefined;\n                return result as TOut;\n        }\n    }\n    finally {\n        pendingCommands.delete(command);\n\n        const duration = `${Strings.getDurationMilliseconds(start)} ms ${waiting ? '(await) ' : ''}`;\n        Logger.log(\n            `${gitCommand} ${GlyphChars.Dot} ${\n                exception !== undefined ? `FAILED(${(exception.message || '').trim().split('\\n', 1)[0]}) ` : ''\n            }${duration}`\n        );\n        Logger.logGitCommand(\n            `${gitCommand} ${GlyphChars.Dot} ${exception !== undefined ? 'FAILED ' : ''}${duration}`,\n            exception\n        );\n    }\n}\n\nfunction defaultExceptionHandler(ex: Error, options: GitCommandOptions, ...args: any[]): string {\n    const msg = ex && ex.toString();\n    if (msg) {\n        for (const warning of Objects.values(GitWarnings)) {\n            if (warning.test(msg)) {\n                Logger.warn('git', ...args, `  cwd='${options.cwd}'\\n\\n  `, msg.replace(/\\r?\\n|\\r/g, ' '));\n                return '';\n            }\n        }\n    }\n\n    const match = GitErrors.badRevision.exec(msg);\n    if (match != null && match) {\n        const [, ref] = match;\n\n        // Since looking up a ref with ^3 (e.g. looking for untracked files in a stash) can error on some versions of git just ignore it\n        if (ref != null && ref.endsWith('^3')) return '';\n    }\n\n    Logger.error(ex, 'git', ...args, `  cwd='${options.cwd}'\\n\\n  `);\n    throw ex;\n}\n\nlet gitInfo: GitLocation;\n\nexport class Git {\n    static deletedOrMissingSha = '0000000000000000000000000000000000000000-';\n    static shaLikeRegex = /(^[0-9a-f]{40}([\\^@~:]\\S*)?$)|(^[0]{40}(:|-)$)/;\n    static shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;\n    static shaShortenRegex = /^(.*?)([\\^@~:].*)?$/;\n    static stagedUncommittedRegex = /^[0]{40}([\\^@~]\\S*)?:$/;\n    static stagedUncommittedSha = '0000000000000000000000000000000000000000:';\n    static uncommittedRegex = /^[0]{40}(?:[\\^@~:]\\S*)?:?$/;\n    static uncommittedSha = '0000000000000000000000000000000000000000';\n\n    static getEncoding(encoding: string | undefined) {\n        return encoding !== undefined && iconv.encodingExists(encoding) ? encoding : 'utf8';\n    }\n\n    static getGitPath(): string {\n        return gitInfo.path;\n    }\n\n    static getGitVersion(): string {\n        return gitInfo.version;\n    }\n\n    static async setOrFindGitPath(gitPath?: string): Promise<void> {\n        const start = process.hrtime();\n\n        gitInfo = await findGitPath(gitPath);\n\n        Logger.log(\n            `Git found: ${gitInfo.version} @ ${gitInfo.path === 'git' ? 'PATH' : gitInfo.path} ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n    }\n\n    static isSha(ref: string) {\n        return Git.shaRegex.test(ref);\n    }\n\n    static isShaLike(ref: string) {\n        return Git.shaLikeRegex.test(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return ref ? Git.stagedUncommittedRegex.test(ref) : false;\n    }\n\n    static isUncommitted(ref: string | undefined) {\n        return ref ? Git.uncommittedRegex.test(ref) : false;\n    }\n\n    static shortenSha(\n        ref: string,\n        strings: { stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        strings = { stagedUncommitted: 'Index', uncommitted: 'Working Tree', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (Git.isUncommitted(ref)) {\n            if (Git.isStagedUncommitted(ref)) return strings.stagedUncommitted;\n\n            return strings.uncommitted;\n        }\n\n        // Don't allow shas to be shortened to less than 5 characters\n        const len = Math.max(5, Container.config.advanced.abbreviatedShaLength);\n\n        // If we have a suffix, append it\n        const match = Git.shaShortenRegex.exec(ref);\n        if (match != null) {\n            const [, rev, suffix] = match;\n\n            if (suffix != null) {\n                return `${rev.substr(0, len)}${suffix}`;\n            }\n        }\n\n        return ref.substr(0, len);\n    }\n\n    static splitPath(fileName: string, repoPath: string | undefined, extract: boolean = true): [string, string] {\n        if (repoPath) {\n            fileName = Strings.normalizePath(fileName);\n            repoPath = Strings.normalizePath(repoPath);\n\n            const normalizedRepoPath = (repoPath.endsWith('/') ? repoPath : `${repoPath}/`).toLowerCase();\n            if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {\n                fileName = fileName.substring(normalizedRepoPath.length);\n            }\n        }\n        else {\n            repoPath = Strings.normalizePath(extract ? paths.dirname(fileName) : repoPath!);\n            fileName = Strings.normalizePath(extract ? paths.basename(fileName) : fileName);\n        }\n\n        return [fileName, repoPath];\n    }\n\n    static validateVersion(major: number, minor: number): boolean {\n        const [gitMajor, gitMinor] = gitInfo.version.split('.');\n        return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;\n    }\n\n    // Git commands\n\n    static add(repoPath: string | undefined, pathspec: string) {\n        return git<string>({ cwd: repoPath }, 'add', '-A', '--', pathspec);\n    }\n\n    static apply(repoPath: string | undefined, patch: string, options: { allowConflicts?: boolean } = {}) {\n        const params = ['apply', '--whitespace=warn'];\n        if (options.allowConflicts) {\n            params.push(`-3`);\n        }\n        return git<string>({ cwd: repoPath, stdin: patch }, ...params);\n    }\n\n    static async blame(\n        repoPath: string | undefined,\n        fileName: string,\n        ref?: string,\n        options: { args?: string[] | null; ignoreWhitespace?: boolean; startLine?: number; endLine?: number } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        let stdin;\n        if (ref) {\n            if (Git.isStagedUncommitted(ref)) {\n                // Pipe the blame contents to stdin\n                params.push('--contents', '-');\n\n                // Get the file contents for the staged version using `:`\n                stdin = await Git.show<string>(repoPath, fileName, ':');\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>({ cwd: root, stdin: stdin }, ...params, '--', file);\n    }\n\n    static async blame_contents(\n        repoPath: string | undefined,\n        fileName: string,\n        contents: string,\n        options: {\n            args?: string[] | null;\n            correlationKey?: string;\n            ignoreWhitespace?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        // Pipe the blame contents to stdin\n        params.push('--contents', '-');\n\n        return git<string>(\n            { cwd: root, stdin: contents, correlationKey: options.correlationKey },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static branch(repoPath: string, options: { all: boolean } = { all: false }) {\n        const params = ['branch', '-vv', '--abbrev=40'];\n        if (options.all) {\n            params.push('-a');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params);\n    }\n\n    static branch_contains(repoPath: string, ref: string, options: { remote: boolean } = { remote: false }) {\n        const params = ['branch', '--contains'];\n        if (options.remote) {\n            params.push('-r');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params, ref);\n    }\n\n    static async cat_validate(repoPath: string, ref: string) {\n        if (Git.isUncommitted(ref)) return true;\n\n        try {\n            await git<string>({ cwd: repoPath, errors: GitErrorHandling.Throw }, 'cat-file', '-t', ref);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n\n    static async cat_file_validate(repoPath: string, fileName: string, ref: string) {\n        if (Git.isUncommitted(ref)) return ref;\n\n        try {\n            await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'cat-file',\n                '-e',\n                `${ref}:./${fileName}`\n            );\n            return ref;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.notAValidObjectName.test(msg)) {\n                return Git.deletedOrMissingSha;\n            }\n\n            return undefined;\n        }\n    }\n\n    static check_mailmap(repoPath: string, author: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore, local: true }, 'check-mailmap', author);\n    }\n\n    static checkout(repoPath: string, ref: string, fileName?: string) {\n        const params = ['checkout', ref, '--'];\n        if (fileName) {\n            [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n            params.push(fileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static async config_get(key: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get',\n            key\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async config_getRegex(pattern: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get-regex',\n            pattern\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async diff(\n        repoPath: string,\n        fileName: string,\n        ref1?: string,\n        ref2?: string,\n        options: { encoding?: string; filter?: string } = {}\n    ): Promise<string> {\n        const params = ['diff', '-M', '--no-ext-diff', '--minimal'];\n        if (options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n\n        if (ref1) {\n            // <sha>^3 signals an untracked file in a stash and if we are trying to find its parent, use the root sha\n            if (ref1.endsWith('^3^')) {\n                ref1 = rootSha;\n            }\n            params.push(Git.isStagedUncommitted(ref1) ? '--staged' : ref1);\n        }\n        if (ref2) {\n            params.push(Git.isStagedUncommitted(ref2) ? '--staged' : ref2);\n        }\n\n        const encoding: BufferEncoding = options.encoding === 'utf8' ? 'utf8' : 'binary';\n\n        try {\n            return await git<string>(\n                { cwd: repoPath, configs: ['-c', 'color.diff=false'], encoding: encoding },\n                ...params,\n                '--',\n                fileName\n            );\n        }\n        catch (ex) {\n            const match = GitErrors.badRevision.exec(ex.message);\n            if (match !== null) {\n                const [, ref] = match;\n\n                // If the bad ref is trying to find a parent ref, assume we hit to the last commit, so try again using the root sha\n                if (ref === ref1 && ref != null && ref.endsWith('^')) {\n                    return Git.diff(repoPath, fileName, rootSha, ref2, options);\n                }\n            }\n\n            throw ex;\n        }\n    }\n\n    static diff_nameStatus(repoPath: string, ref1?: string, ref2?: string, options: { filter?: string } = {}) {\n        const params = ['diff', '--name-status', '-M', '--no-ext-diff'];\n        if (options && options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n        if (ref1) {\n            params.push(ref1);\n        }\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static diff_shortstat(repoPath: string, ref?: string) {\n        const params = ['diff', '--shortstat', '--no-ext-diff'];\n        if (ref) {\n            params.push(ref);\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static difftool_dirDiff(repoPath: string, tool: string, ref1: string, ref2?: string) {\n        const params = ['difftool', '--dir-diff', `--tool=${tool}`, ref1];\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static difftool_fileDiff(\n        repoPath: string,\n        fileName: string,\n        tool: string,\n        options: { ref1?: string; ref2?: string; staged?: boolean } = {}\n    ) {\n        const params = ['difftool', '--no-prompt', `--tool=${tool}`];\n        if (options.staged) {\n            params.push('--staged');\n        }\n        if (options.ref1) {\n            params.push(options.ref1);\n        }\n        if (options.ref2) {\n            params.push(options.ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--', fileName);\n    }\n\n    static fetch(repoPath: string, options: { all?: boolean; remote?: string } = {}) {\n        const params = ['fetch'];\n        if (options.remote) {\n            params.push(options.remote);\n        }\n        else if (options.all) {\n            params.push('--all');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static log(repoPath: string, options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean }) {\n        const params = [...defaultLogParams, '--full-history', '-M', '-m'];\n        if (options.authors) {\n            params.push(...options.authors.map(a => `--author=${a}`));\n        }\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'diff.renameLimit=0'] }, ...params, '--');\n    }\n\n    static log_file(\n        repoPath: string,\n        fileName: string,\n        options: {\n            maxCount?: number;\n            ref?: string;\n            renames?: boolean;\n            reverse?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = { renames: true, reverse: false }\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultLogParams, '-m'];\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        if (options.renames) {\n            params.push('--follow');\n        }\n\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}:${file}`);\n        }\n\n        return git<string>({ cwd: root }, ...params, '--', file);\n    }\n\n    static async log_recent(repoPath: string, fileName: string) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            '-M',\n            '-n1',\n            '--format=%H',\n            '--',\n            fileName\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static log_search(repoPath: string, search: string[] = emptyArray, options: { maxCount?: number } = {}) {\n        const params = [...defaultLogParams];\n        if (options.maxCount) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ...search);\n    }\n\n    static log_shortstat(repoPath: string, options: { ref?: string }) {\n        const params = ['log', '--shortstat', '--oneline'];\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            params.push(options.ref);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--');\n    }\n\n    static async ls_files(\n        repoPath: string,\n        fileName: string,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        const params = ['ls-files'];\n        if (options.ref && !Git.isUncommitted(options.ref)) {\n            params.push(`--with-tree=${options.ref}`);\n        }\n\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, '--', fileName);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async ls_tree(repoPath: string, ref: string, options: { fileName?: string } = {}) {\n        const params = ['ls-tree'];\n        if (options.fileName) {\n            params.push('-l', ref, '--', options.fileName);\n        }\n        else {\n            params.push('-lrt', ref, '--');\n        }\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static merge_base(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        const params = ['merge-base'];\n        if (options.forkPoint) {\n            params.push('--fork-point');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ref1, ref2);\n    }\n\n    static remote(repoPath: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', '-v');\n    }\n\n    static remote_url(repoPath: string, remote: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', 'get-url', remote);\n    }\n\n    static reset(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'reset', '-q', '--', fileName);\n    }\n\n    static async revparse(repoPath: string, ref: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'rev-parse', ref);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async revparse_currentBranch(repoPath: string): Promise<[string, string | undefined] | undefined> {\n        const params = ['rev-parse', '--abbrev-ref', '--symbolic-full-name', '@', '@{u}'];\n\n        const opts: GitCommandOptions = {\n            cwd: repoPath,\n            errors: GitErrorHandling.Throw\n        };\n\n        try {\n            const data = await git<string>(opts, ...params);\n            return [data, undefined];\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitWarnings.headNotABranch.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'log',\n                    '-n1',\n                    '--format=%H',\n                    '--'\n                );\n                if (data.length === 0) return undefined;\n\n                // Matches output of `git branch -vv`\n                const sha = data.trim();\n                return [`(HEAD detached at ${this.shortenSha(sha)})`, sha];\n            }\n\n            const result = GitWarnings.noUpstream.exec(msg);\n            if (result !== null) return [result[1], undefined];\n\n            if (GitWarnings.unknownRevision.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'symbolic-ref',\n                    '-q',\n                    '--short',\n                    'HEAD'\n                );\n                return data.length === 0 ? undefined : [data.trim(), undefined];\n            }\n\n            defaultExceptionHandler(ex, opts, ...params);\n            return undefined;\n        }\n    }\n\n    static async revparse_toplevel(cwd: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: cwd, errors: GitErrorHandling.Ignore }, 'rev-parse', '--show-toplevel');\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async show<TOut extends string | Buffer>(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string,\n        options: {\n            encoding?: 'binary' | 'ascii' | 'utf8' | 'utf16le' | 'ucs2' | 'base64' | 'latin1' | 'hex' | 'buffer';\n        } = {}\n    ): Promise<TOut | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        if (Git.isStagedUncommitted(ref)) {\n            ref = ':';\n        }\n        if (Git.isUncommitted(ref)) throw new Error(`ref=${ref} is uncommitted`);\n\n        const opts: GitCommandOptions = {\n            cwd: root,\n            encoding: options.encoding || 'utf8',\n            errors: GitErrorHandling.Throw\n        };\n        const args = ref.endsWith(':') ? `${ref}./${file}` : `${ref}:./${file}`;\n\n        try {\n            const data = await git<TOut>(opts, 'show', args, '--');\n            return data;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (ref === ':' && GitErrors.badRevision.test(msg)) {\n                return Git.show<TOut>(repoPath, fileName, 'HEAD:', options);\n            }\n\n            if (\n                GitErrors.badRevision.test(msg) ||\n                GitWarnings.notFound.test(msg) ||\n                GitWarnings.foundButNotInRevision.test(msg)\n            ) {\n                return undefined;\n            }\n\n            return defaultExceptionHandler(ex, opts, args) as TOut;\n        }\n    }\n\n    static show_status(repoPath: string, fileName: string, ref: string) {\n        return git<string>({ cwd: repoPath }, 'show', '--name-status', '--format=', ref, '--', fileName);\n    }\n\n    static showref_tag(repoPath: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'show-ref', '--tags');\n    }\n\n    static stash_apply(repoPath: string, stashName: string, deleteAfter: boolean) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', deleteAfter ? 'pop' : 'apply', stashName);\n    }\n\n    static stash_delete(repoPath: string, stashName: string) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', 'drop', stashName);\n    }\n\n    static stash_list(repoPath: string) {\n        return git<string>({ cwd: repoPath }, ...defaultStashParams);\n    }\n\n    static stash_push(repoPath: string, pathspecs: string[], message?: string) {\n        const params = ['stash', 'push', '-u'];\n        if (message) {\n            params.push('-m', message);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--', ...pathspecs);\n    }\n\n    static stash_save(repoPath: string, message?: string) {\n        const params = ['stash', 'save', '-u'];\n        if (message) {\n            params.push(message);\n        }\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static status(repoPath: string, porcelainVersion: number = 1): Promise<string> {\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--branch',\n            '-u'\n        );\n    }\n\n    static status_file(repoPath: string, fileName: string, porcelainVersion: number = 1): Promise<string> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: root, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--',\n            file\n        );\n    }\n\n    static tag(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'tag', '-l', '-n1');\n    }\n}\n","'use strict';\nimport { GitCommandOptions } from '../git/git';\n\nexport class RequestType<TRequest, TResponse> {\n    constructor(\n        public readonly name: string\n    ) {}\n}\n\nexport interface GitCommandRequest {\n    options: GitCommandOptions;\n    args: any[];\n}\n\nexport interface GitCommandResponse {\n    data: string;\n    isBuffer?: boolean;\n}\n\nexport const GitCommandRequestType = new RequestType<GitCommandRequest, GitCommandResponse>('git');\n\nexport interface RepositoryProxy {\n    folderUri: string;\n    path: string;\n    root: boolean;\n    closed: boolean;\n}\n\nexport interface RepositoriesInFolderRequest {\n    folderUri: string;\n}\n\nexport interface RepositoriesInFolderResponse {\n    repositories: RepositoryProxy[];\n}\n\nexport const RepositoriesInFolderRequestType = new RequestType<\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderResponse\n>('repositories/inFolder');\n\nexport interface WorkspaceFileExistsRequest {\n    fileName: string;\n    repoPath: string;\n    options: { ensureCase: boolean };\n}\n\nexport interface WorkspaceFileExistsResponse {\n    exists: boolean;\n}\n\nexport const WorkspaceFileExistsRequestType = new RequestType<WorkspaceFileExistsRequest, WorkspaceFileExistsResponse>(\n    'workspace/fileExists'\n);\n","'use strict';\nimport { CancellationToken, Disposable, Uri, workspace, WorkspaceFoldersChangeEvent } from 'vscode';\nimport { LiveShare, SharedService } from 'vsls';\nimport { Container } from '../container';\nimport { git } from '../git/git';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { debug, Iterables, log, Strings } from '../system';\nimport {\n    GitCommandRequest,\n    GitCommandRequestType,\n    GitCommandResponse,\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderRequestType,\n    RepositoriesInFolderResponse,\n    RequestType,\n    WorkspaceFileExistsRequest,\n    WorkspaceFileExistsRequestType,\n    WorkspaceFileExistsResponse\n} from './protocol';\nimport { vslsUriRootRegex } from './vsls';\n\nconst defaultWhitelistFn = () => true;\nconst gitWhitelist = new Map<string, ((args: any[]) => boolean)>([\n    ['blame', defaultWhitelistFn],\n    ['branch', args => args[1] === '-vv' || args[1] === '--contains'],\n    ['cat-file', defaultWhitelistFn],\n    ['config', args => args[1] === '--get' || args[1] === '--get-regex'],\n    ['diff', defaultWhitelistFn],\n    ['difftool', defaultWhitelistFn],\n    ['log', defaultWhitelistFn],\n    ['ls-files', defaultWhitelistFn],\n    ['ls-tree', defaultWhitelistFn],\n    ['merge-base', defaultWhitelistFn],\n    ['remote', args => args[1] === '-v' || args[1] === 'get-url'],\n    ['rev-parse', defaultWhitelistFn],\n    ['show', defaultWhitelistFn],\n    ['show-ref', defaultWhitelistFn],\n    ['stash', args => args[1] === 'list'],\n    ['status', defaultWhitelistFn],\n    ['symbolic-ref', defaultWhitelistFn],\n    ['tag', args => args[1] === '-l']\n]);\n\nconst leadingSlashRegex = /^[\\/|\\\\]/;\n\nexport class VslsHostService implements Disposable {\n    static ServiceId = 'proxy';\n\n    @log()\n    static async share(api: LiveShare) {\n        const service = await api.shareService(this.ServiceId);\n        if (service == null) {\n            throw new Error('Failed to share host service');\n        }\n\n        return new VslsHostService(api, service);\n    }\n\n    private readonly _disposable: Disposable;\n    private _localPathsRegex: RegExp | undefined;\n    private _localToSharedPaths = new Map<string, string>();\n    private _sharedPathsRegex: RegExp | undefined;\n    private _sharedToLocalPaths = new Map<string, string>();\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedService\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n\n        this._disposable = Disposable.from(workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));\n\n        this.onRequest(GitCommandRequestType, this.onGitCommandRequest.bind(this));\n        this.onRequest(RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));\n        this.onRequest(WorkspaceFileExistsRequestType, this.onWorkspaceFileExistsRequest.bind(this));\n\n        this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._disposable.dispose();\n        void this._api.unshareService(VslsHostService.ServiceId);\n    }\n\n    private onRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        handler: (request: TRequest, cancellation: CancellationToken) => Promise<TResponse>\n    ) {\n        this._service.onRequest(requestType.name, (args: any[], cancellation: CancellationToken) =>\n            handler(args[0], cancellation)\n        );\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        // TODO\n    }\n\n    @debug()\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        if (workspace.workspaceFolders === undefined || workspace.workspaceFolders.length === 0) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        this._localToSharedPaths.clear();\n        this._sharedToLocalPaths.clear();\n\n        let localPath;\n        let sharedPath;\n        for (const f of workspace.workspaceFolders) {\n            localPath = Strings.normalizePath(f.uri.fsPath);\n            sharedPath = Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);\n\n            Logger.debug(cc, `shared='${sharedPath}' \\u2194 local='${localPath}'`);\n            this._localToSharedPaths.set(localPath, sharedPath);\n            this._sharedToLocalPaths.set(sharedPath, localPath);\n        }\n\n        let localPaths = Iterables.join(this._sharedToLocalPaths.values(), '|');\n        localPaths = localPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._localPathsRegex = new RegExp(`(${localPaths})`, 'gi');\n\n        let sharedPaths = Iterables.join(this._localToSharedPaths.values(), '|');\n        sharedPaths = sharedPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, 'i');\n    }\n\n    @log()\n    private async onGitCommandRequest(\n        request: GitCommandRequest,\n        cancellation: CancellationToken\n    ): Promise<GitCommandResponse> {\n        const { options, args } = request;\n\n        const fn = gitWhitelist.get(request.args[0]);\n        if (fn === undefined || !fn(request.args)) throw new Error(`Git ${request.args[0]} command is not allowed`);\n\n        let isRootWorkspace = false;\n        if (options.cwd !== undefined && options.cwd.length > 0 && this._sharedToLocalPaths !== undefined) {\n            // This is all so ugly, but basically we are converting shared paths to local paths\n            if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(options.cwd)) {\n                options.cwd = Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {\n                    if (!isRootWorkspace) {\n                        isRootWorkspace = shared === '/~0';\n                    }\n\n                    const local = this._sharedToLocalPaths.get(shared);\n                    return local != null ? local : shared;\n                });\n            }\n            else if (leadingSlashRegex.test(options.cwd)) {\n                const localCwd = this._sharedToLocalPaths.get('/~0');\n                if (localCwd !== undefined) {\n                    isRootWorkspace = true;\n                    options.cwd = GitUri.resolve(options.cwd, localCwd);\n                }\n            }\n        }\n\n        let files = false;\n        let i = -1;\n        for (const arg of args) {\n            i++;\n            if (arg === '--') {\n                files = true;\n                continue;\n            }\n\n            if (!files) continue;\n\n            if (typeof arg === 'string') {\n                // If we are the \"root\" workspace, then we need to remove the leading slash off the path (otherwise it will not be treated as a relative path)\n                if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {\n                    args.splice(i, 1, arg.substr(1));\n                }\n\n                if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(arg)) {\n                    args.splice(\n                        i,\n                        1,\n                        Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {\n                            const local = this._sharedToLocalPaths.get(shared);\n                            return local != null ? local : shared;\n                        })\n                    );\n                }\n            }\n        }\n\n        let data = await git(options, ...args);\n        if (typeof data === 'string') {\n            // And then we convert local paths to shared paths\n            if (this._localPathsRegex !== undefined && data.length > 0) {\n                data = data.replace(this._localPathsRegex, (match, local) => {\n                    const shared = this._localToSharedPaths.get(local);\n                    return shared != null ? shared : local;\n                });\n            }\n\n            return { data: data };\n        }\n\n        return { data: data.toString('binary'), isBuffer: true };\n    }\n\n    @log()\n    private async onRepositoriesInFolderRequest(\n        request: RepositoriesInFolderRequest,\n        cancellation: CancellationToken\n    ): Promise<RepositoriesInFolderResponse> {\n        const uri = this.convertSharedUriToLocal(Uri.parse(request.folderUri));\n        const normalized = Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();\n\n        const repos = [\n            ...Iterables.filterMap(await Container.git.getRepositories(), r => {\n                if (!r.normalizedPath.startsWith(normalized)) return undefined;\n\n                const vslsUri = this.convertLocalUriToShared(r.folder.uri);\n                return {\n                    folderUri: vslsUri.toString(true),\n                    path: vslsUri.path,\n                    root: r.root,\n                    closed: r.closed\n                };\n            })\n        ];\n\n        return {\n            repositories: repos\n        };\n    }\n\n    @log()\n    private async onWorkspaceFileExistsRequest(\n        request: WorkspaceFileExistsRequest,\n        cancellation: CancellationToken\n    ): Promise<WorkspaceFileExistsResponse> {\n        let { repoPath } = request;\n        if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(repoPath)) {\n            repoPath = Strings.normalizePath(repoPath).replace(this._sharedPathsRegex, (match, shared) => {\n                const local = this._sharedToLocalPaths!.get(shared);\n                return local != null ? local : shared;\n            });\n        }\n\n        // TODO: Lock this to be only in the contained workspaces\n\n        return { exists: await Container.git.fileExists(repoPath, request.fileName, request.options) };\n    }\n\n    @debug({\n        exit: result => `returned ${result.toString(true)}`\n    })\n    private convertLocalUriToShared(localUri: Uri) {\n        const cc = Logger.getCorrelationContext();\n\n        let sharedUri = this._api.convertLocalUriToShared(localUri);\n        Logger.debug(\n            cc,\n            `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`\n        );\n\n        const localPath = localUri.path;\n        let sharedPath = sharedUri.path;\n        if (sharedUri.authority.length > 0) {\n            sharedPath = `/${sharedUri.authority}${sharedPath}`;\n        }\n\n        if (new RegExp(`${localPath}$`, 'i').test(sharedPath)) {\n            if (sharedPath.length === localPath.length) {\n                const folder = workspace.getWorkspaceFolder(localUri)!;\n                sharedUri = sharedUri.with({ path: `/~${folder.index}` });\n            }\n            else {\n                sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });\n            }\n        }\n        else if (!sharedPath.startsWith('/~')) {\n            const folder = workspace.getWorkspaceFolder(localUri)!;\n            sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });\n        }\n\n        return sharedUri;\n    }\n\n    private convertSharedUriToLocal(sharedUri: Uri) {\n        if (vslsUriRootRegex.test(sharedUri.path)) {\n            sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });\n        }\n\n        const localUri = this._api.convertSharedUriToLocal(sharedUri);\n\n        const localPath = localUri.path;\n        const sharedPath = sharedUri.path;\n        if (localPath.endsWith(sharedPath)) {\n            return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });\n        }\n        return localUri;\n    }\n}\n","'use strict';\nimport { CancellationToken, Disposable, window, WorkspaceFolder } from 'vscode';\nimport { LiveShare, SharedServiceProxy } from 'vsls';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { GitCommandOptions, Repository, RepositoryChange } from '../git/git';\nimport { Logger } from '../logger';\nimport { debug, log } from '../system';\nimport { VslsHostService } from './host';\nimport {\n    GitCommandRequestType,\n    RepositoriesInFolderRequestType,\n    RepositoryProxy,\n    RequestType,\n    WorkspaceFileExistsRequestType\n} from './protocol';\n\nexport class VslsGuestService implements Disposable {\n    @log()\n    static async connect(api: LiveShare) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const service = await api.getSharedService(VslsHostService.ServiceId);\n            if (service == null) {\n                throw new Error('Failed to connect to host service');\n            }\n\n            return new VslsGuestService(api, service);\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedServiceProxy\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n        this.onAvailabilityChanged(_service.isServiceAvailable);\n    }\n\n    dispose() {}\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        if (available) {\n            void setCommandContext(CommandContext.Enabled, true);\n            return;\n        }\n\n        void setCommandContext(CommandContext.Enabled, false);\n        void window.showWarningMessage(\n            `GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.`\n        );\n    }\n\n    @log()\n    async git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]) {\n        const response = await this.sendRequest(GitCommandRequestType, { options: options, args: args });\n\n        if (response.isBuffer) {\n            return new Buffer(response.data, 'binary') as TOut;\n        }\n        return response.data as TOut;\n    }\n\n    @log()\n    async getRepositoriesInFolder(\n        folder: WorkspaceFolder,\n        onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void\n    ): Promise<Repository[]> {\n        const response = await this.sendRequest(RepositoriesInFolderRequestType, {\n            folderUri: folder.uri.toString(true)\n        });\n\n        return response.repositories.map(\n            (r: RepositoryProxy) => new Repository(folder, r.path, r.root, onAnyRepositoryChanged, false, r.closed)\n        );\n    }\n\n    @log()\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        const response = await this.sendRequest(WorkspaceFileExistsRequestType, {\n            fileName: fileName,\n            repoPath: repoPath,\n            options: options\n        });\n\n        return response.exists;\n    }\n\n    @debug()\n    private sendRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        request: TRequest,\n        cancellation?: CancellationToken\n    ): Promise<TResponse> {\n        return this._service.request(requestType.name, [request]);\n    }\n}\n","'use strict';\nimport { Disposable, workspace } from 'vscode';\nimport { getApi, LiveShare, Role, SessionChangeEvent } from 'vsls';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from './../logger';\nimport { VslsGuestService } from './guest';\nimport { VslsHostService } from './host';\n\nexport const vslsUriPrefixRegex = /^[\\/|\\\\]~(?:\\d+?|external)(?:[\\/|\\\\]|$)/;\nexport const vslsUriRootRegex = /^[\\/|\\\\]~(?:\\d+?|external)$/;\n\nexport class VslsController implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _guest: VslsGuestService | undefined;\n    private _host: VslsHostService | undefined;\n\n    private _onReady: (() => void) | undefined;\n    private _waitForReady: Promise<void> | undefined;\n\n    constructor() {\n        void this.initialize();\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n    }\n\n    private async initialize() {\n        try {\n            // If we have a vsls: workspace open, we might be a guest, so wait until live share transitions into a mode\n            if (\n                workspace.workspaceFolders !== undefined &&\n                workspace.workspaceFolders.some(f => f.uri.scheme === DocumentSchemes.Vsls)\n            ) {\n                setCommandContext(CommandContext.Readonly, true);\n                this._waitForReady = new Promise(resolve => (this._onReady = resolve));\n            }\n\n            const api = await getApi();\n            if (api == null) {\n                // Tear it down if we can't talk to live share\n                if (this._onReady !== undefined) {\n                    this._onReady();\n                    this._waitForReady = undefined;\n                }\n                return;\n            }\n\n            this._disposable = Disposable.from(\n                api.onDidChangeSession(e => this.onLiveShareSessionChanged(api, e), this)\n            );\n        }\n        catch (ex) {\n            debugger;\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    get isMaybeGuest() {\n        return this._guest !== undefined || this._waitForReady !== undefined;\n    }\n\n    async guest() {\n        if (this._waitForReady !== undefined) {\n            await this._waitForReady;\n            this._waitForReady = undefined;\n        }\n\n        return this._guest;\n    }\n\n    host() {\n        return this._host;\n    }\n\n    private async onLiveShareSessionChanged(api: LiveShare, e: SessionChangeEvent) {\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n\n        switch (e.session.role) {\n            case Role.Host:\n                setCommandContext(CommandContext.Readonly, undefined);\n                if (Container.config.liveshare.allowGuestAccess) {\n                    this._host = await VslsHostService.share(api);\n                }\n                break;\n            case Role.Guest:\n                setCommandContext(CommandContext.Readonly, true);\n                this._guest = await VslsGuestService.connect(api);\n                break;\n\n            default:\n                setCommandContext(CommandContext.Readonly, undefined);\n                break;\n        }\n\n        if (this._onReady !== undefined) {\n            this._onReady();\n            this._onReady = undefined;\n        }\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    extensions,\n    MessageItem,\n    ProgressLocation,\n    Range,\n    TextEditor,\n    Uri,\n    window,\n    WindowState,\n    workspace,\n    WorkspaceFolder,\n    WorkspaceFoldersChangeEvent\n} from 'vscode';\nimport { GitExtension } from '../@types/git';\nimport { configuration, RemotesConfig } from '../configuration';\nimport { CommandContext, DocumentSchemes, GlyphChars, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LogCorrelationContext, Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { gate, Iterables, log, Objects, Strings, TernarySearchTree, Versions } from '../system';\nimport { CachedBlame, CachedDiff, CachedLog, GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { vslsUriPrefixRegex } from '../vsls/vsls';\nimport {\n    CommitFormatting,\n    Git,\n    GitAuthor,\n    GitBlame,\n    GitBlameCommit,\n    GitBlameLine,\n    GitBlameLines,\n    GitBlameParser,\n    GitBranch,\n    GitBranchParser,\n    GitCommit,\n    GitCommitType,\n    GitDiff,\n    GitDiffChunkLine,\n    GitDiffParser,\n    GitDiffShortStat,\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitLogParser,\n    GitRemote,\n    GitRemoteParser,\n    GitStash,\n    GitStashParser,\n    GitStatus,\n    GitStatusFile,\n    GitStatusParser,\n    GitTag,\n    GitTagParser,\n    GitTree,\n    GitTreeParser,\n    Repository,\n    RepositoryChange\n} from './git';\nimport { GitUri } from './gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from './remotes/factory';\n\nexport * from './gitUri';\nexport * from './models/models';\nexport * from './formatters/formatters';\nexport { getNameFromRemoteResource, RemoteProvider, RemoteResource, RemoteResourceType } from './remotes/provider';\nexport { RemoteProviderFactory } from './remotes/factory';\n\nconst RepoSearchWarnings = {\n    doesNotExist: /no such file or directory/i\n};\n\nconst userConfigRegex = /^user\\.(name|email) (.*)$/gm;\nconst mappedAuthorRegex = /(.+)\\s<(.+)>/;\n\nexport enum GitRepoSearchBy {\n    Author = 'author',\n    ChangedLines = 'changed-lines',\n    Changes = 'changes',\n    Files = 'files',\n    Message = 'message',\n    Sha = 'sha'\n}\n\nexport class GitService implements Disposable {\n    static emptyPromise: Promise<GitBlame | GitDiff | GitLog | undefined> = Promise.resolve(undefined);\n    static deletedOrMissingSha = Git.deletedOrMissingSha;\n    static stagedUncommittedSha = Git.stagedUncommittedSha;\n    static uncommittedSha = Git.uncommittedSha;\n\n    private _onDidChangeRepositories = new EventEmitter<void>();\n    get onDidChangeRepositories(): Event<void> {\n        return this._onDidChangeRepositories.event;\n    }\n\n    private readonly _disposable: Disposable;\n    private readonly _repositoryTree: TernarySearchTree<Repository>;\n    private _repositoriesLoadingPromise: Promise<void> | undefined;\n    private _suspended: boolean = false;\n\n    private readonly _branchesCache = new Map<string, GitBranch[]>();\n    private readonly _tagsCache = new Map<string, GitTag[]>();\n    private readonly _tagsWithRefsCache = new Map<string, GitTag[]>();\n    private readonly _trackedCache = new Map<string, boolean | Promise<boolean>>();\n    private readonly _userMapCache = new Map<string, { name?: string; email?: string } | null>();\n\n    constructor() {\n        this._repositoryTree = TernarySearchTree.forPaths();\n\n        this._disposable = Disposable.from(\n            window.onDidChangeWindowState(this.onWindowStateChanged, this),\n            workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n\n        this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._repositoryTree.forEach(r => r.dispose());\n        this._branchesCache.clear();\n        this._tagsCache.clear();\n        this._tagsWithRefsCache.clear();\n        this._trackedCache.clear();\n        this._userMapCache.clear();\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    get UseCaching() {\n        return Container.config.advanced.caching.enabled;\n    }\n\n    private onAnyRepositoryChanged(repo: Repository, reason: RepositoryChange) {\n        this._trackedCache.clear();\n\n        this._branchesCache.delete(repo.path);\n        this._tagsCache.delete(repo.path);\n        this._tagsWithRefsCache.clear();\n\n        if (reason === RepositoryChange.Config) {\n            this._userMapCache.delete(repo.path);\n        }\n\n        if (reason === RepositoryChange.Closed) {\n            // Send a notification that the repositories changed\n            setImmediate(async () => {\n                await this.updateContext(this._repositoryTree);\n\n                this.fireRepositoriesChanged();\n            });\n        }\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            CommitFormatting.reset();\n        }\n    }\n\n    private onWindowStateChanged(e: WindowState) {\n        if (e.focused) {\n            this._repositoryTree.forEach(r => r.resume());\n        }\n        else {\n            this._repositoryTree.forEach(r => r.suspend());\n        }\n\n        this._suspended = !e.focused;\n    }\n\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        let initializing = false;\n        if (e === undefined) {\n            initializing = true;\n            e = {\n                added: workspace.workspaceFolders || [],\n                removed: []\n            } as WorkspaceFoldersChangeEvent;\n\n            Logger.log(`Starting repository search in ${e.added.length} folders`);\n        }\n\n        for (const f of e.added) {\n            const { scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            if (scheme === DocumentSchemes.Vsls) {\n                if (Container.vsls.isMaybeGuest) {\n                    const guest = await Container.vsls.guest();\n                    if (guest !== undefined) {\n                        const repositories = await guest.getRepositoriesInFolder(\n                            f,\n                            this.onAnyRepositoryChanged.bind(this)\n                        );\n                        for (const r of repositories) {\n                            this._repositoryTree.set(r.path, r);\n                        }\n                    }\n                }\n            }\n            else {\n                // Search for and add all repositories (nested and/or submodules)\n                const repositories = await this.repositorySearch(f);\n                for (const r of repositories) {\n                    this._repositoryTree.set(r.path, r);\n                }\n            }\n        }\n\n        for (const f of e.removed) {\n            const { fsPath, scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            const repos = this._repositoryTree.findSuperstr(fsPath);\n            const reposToDelete =\n                repos !== undefined\n                    ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n                      [...Iterables.map<Repository, [Repository, string]>(repos, r => [r, r.path])]\n                    : [];\n\n            // const filteredTree = this._repositoryTree.findSuperstr(fsPath);\n            // const reposToDelete =\n            //     filteredTree !== undefined\n            //         ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n            //           [\n            //               ...Iterables.map<[Repository, string], [Repository, string]>(\n            //                   filteredTree.entries(),\n            //                   ([r, k]) => [r, path.join(fsPath, k)]\n            //               )\n            //           ]\n            //         : [];\n\n            const repo = this._repositoryTree.get(fsPath);\n            if (repo !== undefined) {\n                reposToDelete.push([repo, fsPath]);\n            }\n\n            for (const [r, k] of reposToDelete) {\n                this._repositoryTree.delete(k);\n                r.dispose();\n            }\n        }\n\n        await this.updateContext(this._repositoryTree);\n\n        if (!initializing) {\n            // Defer the event trigger enough to let everything unwind\n            setImmediate(() => this.fireRepositoriesChanged());\n        }\n    }\n\n    private async repositorySearch(folder: WorkspaceFolder): Promise<Repository[]> {\n        const { uri } = folder;\n        const depth = configuration.get<number>(configuration.name('advanced')('repositorySearchDepth').value, uri);\n\n        Logger.log(`Searching for repositories (depth=${depth}) in '${uri.fsPath}' ...`);\n\n        const start = process.hrtime();\n\n        const repositories: Repository[] = [];\n        const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);\n\n        const rootPath = await this.getRepoPathCore(uri.fsPath, true);\n        if (rootPath !== undefined) {\n            Logger.log(`Repository found in '${rootPath}'`);\n            repositories.push(new Repository(folder, rootPath, true, anyRepoChangedFn, this._suspended));\n        }\n\n        if (depth <= 0) {\n            Logger.log(\n                `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                    GlyphChars.Dot\n                } ${Strings.getDurationMilliseconds(start)} ms`\n            );\n\n            return repositories;\n        }\n\n        // Get any specified excludes -- this is a total hack, but works for some simple cases and something is better than nothing :)\n        let excludes = {\n            ...workspace.getConfiguration('files', uri).get<{ [key: string]: boolean }>('exclude', {}),\n            ...workspace.getConfiguration('search', uri).get<{ [key: string]: boolean }>('exclude', {})\n        };\n\n        const excludedPaths = [\n            ...Iterables.filterMap(Objects.entries(excludes), ([key, value]) => {\n                if (!value) return undefined;\n                if (key.startsWith('**/')) return key.substring(3);\n                return key;\n            })\n        ];\n\n        excludes = excludedPaths.reduce(\n            (accumulator, current) => {\n                accumulator[current] = true;\n                return accumulator;\n            },\n            Object.create(null) as any\n        );\n\n        let repoPaths;\n        try {\n            repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);\n        }\n        catch (ex) {\n            if (RepoSearchWarnings.doesNotExist.test(ex.message || '')) {\n                Logger.log(\n                    `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED${ex.message ? `(${ex.message})` : ''}`\n                );\n            }\n            else {\n                Logger.error(ex, `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED`);\n            }\n\n            return repositories;\n        }\n\n        for (let p of repoPaths) {\n            p = paths.dirname(p);\n            // If we are the same as the root, skip it\n            if (Strings.normalizePath(p) === rootPath) continue;\n\n            const rp = await this.getRepoPathCore(p, true);\n            if (rp === undefined) continue;\n\n            Logger.log(`Repository found in '${rp}'`);\n            repositories.push(new Repository(folder, rp, false, anyRepoChangedFn, this._suspended));\n        }\n\n        Logger.log(\n            `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n\n        return repositories;\n    }\n\n    private async repositorySearchCore(\n        root: string,\n        depth: number,\n        excludes: { [key: string]: boolean },\n        repositories: string[] = []\n    ): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fs.readdir(root, async (err, files) => {\n                if (err != null) {\n                    reject(err);\n                    return;\n                }\n\n                if (files.length === 0) {\n                    resolve(repositories);\n                    return;\n                }\n\n                const folders: string[] = [];\n\n                const promises = files.map(file => {\n                    const path = paths.resolve(root, file);\n\n                    return new Promise<void>((res, rej) => {\n                        fs.stat(path, (err, stat) => {\n                            if (file === '.git') {\n                                repositories.push(path);\n                            }\n                            else if (err == null && excludes[file] !== true && stat != null && stat.isDirectory()) {\n                                folders.push(path);\n                            }\n\n                            res();\n                        });\n                    });\n                });\n\n                await Promise.all(promises);\n\n                if (depth-- > 0) {\n                    for (const folder of folders) {\n                        await this.repositorySearchCore(folder, depth, excludes, repositories);\n                    }\n                }\n\n                resolve(repositories);\n            });\n        });\n    }\n\n    private async updateContext(repositoryTree: TernarySearchTree<Repository>) {\n        const hasRepository = repositoryTree.any();\n        await setCommandContext(CommandContext.Enabled, hasRepository);\n\n        let hasRemotes = false;\n        if (hasRepository) {\n            for (const repo of repositoryTree.values()) {\n                hasRemotes = await repo.hasRemotes();\n                if (hasRemotes) break;\n            }\n        }\n\n        await setCommandContext(CommandContext.HasRemotes, hasRemotes);\n\n        // If we have no repositories setup a watcher in case one is initialized\n        if (!hasRepository) {\n            const watcher = workspace.createFileSystemWatcher('**/.git', false, true, true);\n            const disposable = Disposable.from(\n                watcher,\n                watcher.onDidCreate(async uri => {\n                    const f = workspace.getWorkspaceFolder(uri);\n                    if (f === undefined) return;\n\n                    // Search for and add all repositories (nested and/or submodules)\n                    const repositories = await this.repositorySearch(f);\n                    if (repositories.length === 0) return;\n\n                    disposable.dispose();\n\n                    for (const r of repositories) {\n                        this._repositoryTree.set(r.path, r);\n                    }\n\n                    await this.updateContext(this._repositoryTree);\n\n                    // Defer the event trigger enough to let everything unwind\n                    setImmediate(() => this.fireRepositoriesChanged());\n                }, this)\n            );\n        }\n    }\n\n    private fireRepositoriesChanged() {\n        this._onDidChangeRepositories.fire();\n    }\n\n    @log()\n    async applyChangesToWorkingFile(uri: GitUri, ref1?: string, ref2?: string) {\n        ref1 = ref1 || uri.sha;\n        if (ref1 === undefined || uri.repoPath === undefined) return;\n\n        if (ref2 === undefined) {\n            ref2 = ref1;\n            ref1 = `${ref1}^`;\n        }\n\n        let patch;\n        try {\n            patch = await Git.diff(uri.repoPath, uri.fsPath, ref1, ref2);\n            void (await Git.apply(uri.repoPath!, patch));\n        }\n        catch (ex) {\n            if (patch && /patch does not apply/i.test(ex.message)) {\n                const result = await window.showWarningMessage(\n                    `Unable to apply changes cleanly. Retry and allow conflicts?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n\n                if (result === undefined || result.title !== 'Yes') return;\n\n                if (result.title === 'Yes') {\n                    try {\n                        void (await Git.apply(uri.repoPath!, patch, { allowConflicts: true }));\n                        return;\n                    }\n                    catch (e) {\n                        ex = e;\n                    }\n                }\n            }\n\n            Logger.error(ex);\n            void Messages.showGenericErrorMessage(`Unable to apply changes`);\n        }\n    }\n\n    @log()\n    checkout(repoPath: string, ref: string, fileName?: string) {\n        return Git.checkout(repoPath, ref, fileName);\n    }\n\n    @gate()\n    @log()\n    async fetch(repoPath: string, remote?: string) {\n        return Git.fetch(repoPath, { remote: remote });\n    }\n\n    @gate()\n    @log()\n    async fetchAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.fetch({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pullAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.pull({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pushAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.push({ progress: false });\n                }\n            }\n        );\n    }\n\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        if (Container.vsls.isMaybeGuest) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.fileExists(repoPath, fileName, options);\n            }\n        }\n\n        const path = paths.resolve(repoPath, fileName);\n        const exists = await new Promise<boolean>((resolve, reject) => fs.exists(path, resolve));\n        if (!options.ensureCase || !exists) return exists;\n\n        // Deal with renames in case only on case-insensative file systems\n        const normalizedRepoPath = paths.normalize(repoPath);\n        return this.fileExistsWithCase(path, normalizedRepoPath, normalizedRepoPath.length);\n    }\n\n    private async fileExistsWithCase(path: string, repoPath: string, repoPathLength: number): Promise<boolean> {\n        const dir = paths.dirname(path);\n        if (dir.length < repoPathLength) return false;\n        if (dir === repoPath) return true;\n\n        const filenames = await new Promise<string[]>((resolve, reject) =>\n            fs.readdir(dir, (err: NodeJS.ErrnoException, files: string[]) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(files);\n                }\n            })\n        );\n        if (filenames.indexOf(paths.basename(path)) === -1) {\n            return false;\n        }\n        return this.fileExistsWithCase(dir, repoPath, repoPathLength);\n    }\n\n    @log()\n    async findNextCommit(repoPath: string, fileName: string, ref?: string): Promise<GitLogCommit | undefined> {\n        let log = await this.getLogForFile(repoPath, fileName, { maxCount: 1, ref: ref, renames: true, reverse: true });\n        let commit = log && Iterables.first(log.commits.values());\n        if (commit) return commit;\n\n        const nextFileName = await this.findNextFileName(repoPath, fileName, ref);\n        if (nextFileName) {\n            log = await this.getLogForFile(repoPath, nextFileName, {\n                maxCount: 1,\n                ref: ref,\n                renames: true,\n                reverse: true\n            });\n            commit = log && Iterables.first(log.commits.values());\n        }\n\n        return commit;\n    }\n\n    @log()\n    async findNextFileName(repoPath: string | undefined, fileName: string, ref?: string): Promise<string | undefined> {\n        [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n        return (await this.fileExists(repoPath, fileName, { ensureCase: true }))\n            ? fileName\n            : await this.findNextFileNameCore(repoPath, fileName, ref);\n    }\n\n    private async findNextFileNameCore(repoPath: string, fileName: string, ref?: string): Promise<string | undefined> {\n        if (ref === undefined) {\n            // Get the most recent commit for this file name\n            ref = await this.getRecentShaForFile(repoPath, fileName);\n            if (ref === undefined) return undefined;\n        }\n\n        // Get the full commit (so we can see if there are any matching renames in the files)\n        const log = await this.getLog(repoPath, { maxCount: 1, ref: ref });\n        if (log === undefined) return undefined;\n\n        const c = Iterables.first(log.commits.values());\n        const file = c.files.find(f => f.originalFileName === fileName);\n        if (file === undefined) return undefined;\n\n        return file.fileName;\n    }\n\n    async findWorkingFileName(commit: GitCommit): Promise<[string | undefined, string | undefined]>;\n    async findWorkingFileName(\n        fileName: string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]>;\n    @log()\n    async findWorkingFileName(\n        commitOrFileName: GitCommit | string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]> {\n        let fileName;\n        if (typeof commitOrFileName === 'string') {\n            fileName = commitOrFileName;\n            if (repoPath === undefined) {\n                repoPath = await this.getRepoPath(fileName, { ref: ref });\n                [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n            }\n            else {\n                fileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n            }\n        }\n        else {\n            const c = commitOrFileName;\n            repoPath = c.repoPath;\n            if (c.workingFileName && (await this.fileExists(repoPath, c.workingFileName, { ensureCase: true }))) {\n                return [c.workingFileName, repoPath];\n            }\n            fileName = c.fileName;\n        }\n\n        // Keep walking up to the most recent commit for a given filename, until it exists on disk\n        while (true) {\n            if (await this.fileExists(repoPath, fileName, { ensureCase: true })) return [fileName, repoPath];\n\n            fileName = await this.findNextFileNameCore(repoPath, fileName);\n            if (fileName === undefined) return [undefined, undefined];\n        }\n    }\n\n    @log({\n        args: {\n            0: (editor: TextEditor) =>\n                editor !== undefined ? `TextEditor(${Logger.toLoggable(editor.document.uri)})` : 'undefined'\n        }\n    })\n    async getActiveRepoPath(editor?: TextEditor): Promise<string | undefined> {\n        editor = editor || window.activeTextEditor;\n\n        let repoPath;\n        if (editor != null) {\n            const doc = await Container.tracker.getOrAdd(editor.document.uri);\n            if (doc !== undefined) {\n                repoPath = doc.uri.repoPath;\n            }\n        }\n\n        if (repoPath != null) return repoPath;\n\n        return this.getHighlanderRepoPath();\n    }\n\n    @log()\n    getHighlanderRepoPath(): string | undefined {\n        const entry = this._repositoryTree.highlander();\n        if (entry === undefined) return undefined;\n\n        const [repo] = entry;\n        return repo.path;\n    }\n\n    @log()\n    async getBlameForFile(uri: GitUri): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'blame';\n        if (uri.sha !== undefined) {\n            key += `:${uri.sha}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileCore(uri, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    private async getBlameForFileCore(\n        uri: GitUri,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame(root, file, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            1: contents => '<contents>'\n        }\n    })\n    async getBlameForFileContents(uri: GitUri, contents: string): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        const key = `blame:${Strings.sha1(contents)}`;\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: ${key}`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: ${key}`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    async getBlameForFileContentsCore(\n        uri: GitUri,\n        contents: string,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame_contents(root, file, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                correlationKey: `:${key}`,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForLine(\n        uri: GitUri,\n        line: number,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFile(uri);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame(uri.repoPath, fileName, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath!));\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            2: contents => '<contents>'\n        }\n    })\n    async getBlameForLineContents(\n        uri: GitUri,\n        line: number,\n        contents: string,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFileContents(uri, contents);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame_contents(uri.repoPath, fileName, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const currentUser = await this.getCurrentUser(uri.repoPath!);\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, currentUser);\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForRange(uri: GitUri, range: Range): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFile(uri);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log({\n        args: { 0: blame => '<blame>' }\n    })\n    getBlameForRangeSync(blame: GitBlame, uri: GitUri, range: Range): GitBlameLines | undefined {\n        if (blame.lines.length === 0) return { allLines: blame.lines, ...blame };\n\n        if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {\n            return { allLines: blame.lines, ...blame };\n        }\n\n        const lines = blame.lines.slice(range.start.line, range.end.line + 1);\n        const shas = new Set(lines.map(l => l.sha));\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        for (const c of blame.commits.values()) {\n            if (!shas.has(c.sha)) continue;\n\n            const commit = c.with({\n                lines: c.lines.filter(l => l.line >= range.start.line && l.line <= range.end.line)\n            });\n            commits.set(c.sha, commit);\n\n            let author = authors.get(commit.author);\n            if (author === undefined) {\n                author = {\n                    name: commit.author,\n                    lineCount: 0\n                };\n                authors.set(author.name, author);\n            }\n\n            author.lineCount += commit.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines,\n            allLines: blame.lines\n        } as GitBlameLines;\n    }\n\n    @log()\n    async getBranch(repoPath: string | undefined): Promise<GitBranch | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.revparse_currentBranch(repoPath);\n        if (data === undefined) return undefined;\n\n        const branch = data[0].split('\\n');\n        return new GitBranch(repoPath, branch[0], true, data[1], branch[1]);\n    }\n\n    @log()\n    async getBranches(repoPath: string | undefined): Promise<GitBranch[]> {\n        if (repoPath === undefined) return [];\n\n        let branches = this._branchesCache.get(repoPath);\n        if (branches !== undefined) return branches;\n\n        const data = await Git.branch(repoPath, { all: true });\n        // If we don't get any data, assume the repo doesn't have any commits yet so check if we have a current branch\n        if (data == null || data.length === 0) {\n            const current = await this.getBranch(repoPath);\n            branches = current !== undefined ? [current] : [];\n        }\n        else {\n            branches = GitBranchParser.parse(data, repoPath) || [];\n        }\n\n        const repo = await this.getRepository(repoPath);\n        if (repo !== undefined && repo.supportsChangeEvents) {\n            this._branchesCache.set(repoPath, branches);\n        }\n        return branches;\n    }\n\n    @log()\n    async getChangedFilesCount(repoPath: string, ref?: string): Promise<GitDiffShortStat | undefined> {\n        const data = await Git.diff_shortstat(repoPath, ref);\n        return GitDiffParser.parseShortStat(data);\n    }\n\n    @log()\n    async getConfig(key: string, repoPath?: string): Promise<string | undefined> {\n        return await Git.config_get(key, repoPath);\n    }\n\n    @log()\n    async getCurrentUser(repoPath: string) {\n        let user = this._userMapCache.get(repoPath);\n        if (user != null) return user;\n        // If we found the repo, but no user data was found just return\n        if (user === null) return undefined;\n\n        const data = await Git.config_getRegex('user.(name|email)', repoPath, { local: true });\n        if (!data) {\n            // If we found no user data, mark it so we won't bother trying again\n            this._userMapCache.set(repoPath, null);\n            return undefined;\n        }\n\n        user = { name: undefined, email: undefined };\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = userConfigRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            user[match[1] as 'name' | 'email'] = (' ' + match[2]).substr(1);\n        } while (match != null);\n\n        const author = `${user.name} <${user.email}>`;\n        // Check if there is a mailmap for the current user\n        const mappedAuthor = await Git.check_mailmap(repoPath, author);\n        if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {\n            match = mappedAuthorRegex.exec(mappedAuthor);\n            if (match != null) {\n                [, user.name, user.email] = match;\n            }\n        }\n\n        this._userMapCache.set(repoPath, user);\n        return user;\n    }\n\n    @log()\n    async getDiffForFile(uri: GitUri, ref1?: string, ref2?: string): Promise<GitDiff | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        if (ref1 !== undefined && ref2 === undefined && uri.sha !== undefined) {\n            ref2 = uri.sha;\n        }\n\n        let key = 'diff';\n        if (ref1 !== undefined) {\n            key += `:${ref1}`;\n        }\n        if (ref2 !== undefined) {\n            key += `:${ref2}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedDiff = doc.state.get<CachedDiff>(key);\n                if (cachedDiff !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedDiff.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getDiffForFileCore(\n            uri.repoPath,\n            uri.fsPath,\n            ref1,\n            ref2,\n            { encoding: GitService.getEncoding(uri) },\n            doc,\n            key,\n            cc\n        );\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedDiff>(key, {\n                item: promise\n            } as CachedDiff);\n        }\n\n        return promise;\n    }\n\n    private async getDiffForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        ref1: string | undefined,\n        ref2: string | undefined,\n        options: { encoding?: string },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitDiff | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            const data = await Git.diff(root, file, ref1, ref2, { ...options, filter: 'M' });\n            const diff = GitDiffParser.parse(data);\n            return diff;\n        }\n        catch (ex) {\n            // Trap and cache expected diff errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedDiff>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedDiff);\n\n                return GitService.emptyPromise as Promise<GitDiff>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffForLine(\n        uri: GitUri,\n        line: number,\n        ref1?: string,\n        ref2?: string\n    ): Promise<GitDiffChunkLine | undefined> {\n        try {\n            const diff = await this.getDiffForFile(uri, ref1, ref2);\n            if (diff === undefined) return undefined;\n\n            const chunk = diff.chunks.find(c => c.currentPosition.start <= line && c.currentPosition.end >= line);\n            if (chunk === undefined) return undefined;\n\n            return chunk.lines[line - chunk.currentPosition.start + 1];\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffStatus(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        options: { filter?: string } = {}\n    ): Promise<GitFile[] | undefined> {\n        try {\n            const data = await Git.diff_nameStatus(repoPath, ref1, ref2, options);\n            const diff = GitDiffParser.parseNameStatus(data, repoPath);\n            return diff;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getFileStatusForCommit(repoPath: string, fileName: string, ref: string): Promise<GitFile | undefined> {\n        if (ref === GitService.deletedOrMissingSha || GitService.isUncommitted(ref)) return undefined;\n\n        const data = await Git.show_status(repoPath, fileName, ref);\n        if (!data) return undefined;\n\n        const files = GitDiffParser.parseNameStatus(data, repoPath);\n        if (files === undefined || files.length === 0) return undefined;\n\n        return files[0];\n    }\n\n    @log()\n    async getRecentLogCommitForFile(repoPath: string | undefined, fileName: string): Promise<GitLogCommit | undefined> {\n        return this.getLogCommitForFile(repoPath, fileName, undefined);\n    }\n\n    @log()\n    async getRecentShaForFile(repoPath: string, fileName: string) {\n        return await Git.log_recent(repoPath, fileName);\n    }\n\n    @log()\n    async getLogCommit(repoPath: string, ref: string): Promise<GitLogCommit | undefined> {\n        const log = await this.getLog(repoPath, { maxCount: 2, ref: ref });\n        if (log === undefined) return undefined;\n\n        return log.commits.get(ref);\n    }\n\n    @log()\n    async getLogCommitForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { ref?: string; firstIfNotFound?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLogCommit | undefined> {\n        const log = await this.getLogForFile(repoPath, fileName, {\n            maxCount: 2,\n            ref: options.ref,\n            reverse: options.reverse\n        });\n        if (log === undefined) return undefined;\n\n        const commit = options.ref && log.commits.get(options.ref);\n        if (commit === undefined && !options.firstIfNotFound && options.ref) {\n            // If the ref isn't a valid sha we will never find it, so let it fall through so we return the first\n            if (!Git.isSha(options.ref) || Git.isUncommitted(options.ref)) return undefined;\n        }\n\n        return commit || Iterables.first(log.commits.values());\n    }\n\n    @log()\n    async getLog(\n        repoPath: string,\n        options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        try {\n            const data = await Git.log(repoPath, {\n                authors: options.authors,\n                maxCount: maxCount,\n                ref: options.ref,\n                reverse: options.reverse\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                options.ref,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                options.reverse!,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) => this.getLog(repoPath, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForSearch(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: { maxCount?: number } = {}\n    ): Promise<GitLog | undefined> {\n        let maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        let searchArgs: string[] | undefined = undefined;\n        switch (searchBy) {\n            case GitRepoSearchBy.Author:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i', `--author=${search}`];\n                break;\n            case GitRepoSearchBy.ChangedLines:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `-G${search}`];\n                break;\n            case GitRepoSearchBy.Changes:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', '--pickaxe-regex', `-S${search}`];\n                break;\n            case GitRepoSearchBy.Files:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `--`, `${search}`];\n                break;\n            case GitRepoSearchBy.Message:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i'];\n                if (search) {\n                    searchArgs.push(`--grep=${search}`);\n                }\n                break;\n            case GitRepoSearchBy.Sha:\n                searchArgs = [`-m`, '-M', search];\n                maxCount = 1;\n                break;\n        }\n\n        try {\n            const data = await Git.log_search(repoPath, searchArgs, { maxCount: maxCount });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                undefined,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                false,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForSearch(repoPath, search, searchBy, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        if (repoPath !== undefined && repoPath === Strings.normalizePath(fileName)) {\n            throw new Error(`File name cannot match the repository path; fileName=${fileName}`);\n        }\n\n        const cc = Logger.getCorrelationContext();\n\n        options = { reverse: false, ...options };\n\n        if (options.renames === undefined) {\n            options.renames = Container.config.advanced.fileHistoryFollowsRenames;\n        }\n\n        let key = 'log';\n        if (options.ref !== undefined) {\n            key += `:${options.ref}`;\n        }\n        if (options.maxCount !== undefined) {\n            key += `:n${options.maxCount}`;\n        }\n        if (options.renames) {\n            key += `:follow`;\n        }\n        if (options.reverse) {\n            key += `:reverse`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(GitUri.fromFile(fileName, repoPath!, options.ref));\n        if (this.UseCaching && options.range === undefined) {\n            if (doc.state !== undefined) {\n                const cachedLog = doc.state.get<CachedLog>(key);\n                if (cachedLog !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedLog.item;\n                }\n\n                if (options.ref !== undefined || options.maxCount !== undefined) {\n                    // Since we are looking for partial log, see if we have the log of the whole file\n                    const cachedLog = doc.state.get<CachedLog>(\n                        `log${options.renames ? ':follow' : ''}${options.reverse ? ':reverse' : ''}`\n                    );\n                    if (cachedLog !== undefined) {\n                        if (options.ref === undefined) {\n                            Logger.debug(cc, `Cache hit: ~'${key}'`);\n                            return cachedLog.item;\n                        }\n\n                        Logger.debug(cc, `Cache ?: '${key}'`);\n                        let log = await cachedLog.item;\n                        if (log !== undefined && !log.truncated && log.commits.has(options.ref)) {\n                            Logger.debug(cc, `Cache hit: '${key}'`);\n\n                            // Create a copy of the log starting at the requested commit\n                            let skip = true;\n                            let i = 0;\n                            const authors = new Map<string, GitAuthor>();\n                            const commits = new Map(\n                                Iterables.filterMap<[string, GitLogCommit], [string, GitLogCommit]>(\n                                    log.commits.entries(),\n                                    ([ref, c]) => {\n                                        if (skip) {\n                                            if (ref !== options.ref) return undefined;\n                                            skip = false;\n                                        }\n\n                                        i++;\n                                        if (options.maxCount !== undefined && i > options.maxCount) {\n                                            return undefined;\n                                        }\n\n                                        authors.set(c.author, log.authors.get(c.author)!);\n                                        return [ref, c];\n                                    }\n                                )\n                            );\n\n                            const opts = { ...options };\n                            log = {\n                                ...log,\n                                maxCount: options.maxCount,\n                                count: commits.size,\n                                commits: commits,\n                                authors: authors,\n                                query: (maxCount: number | undefined) =>\n                                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount })\n                            };\n\n                            return log;\n                        }\n                    }\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);\n\n        if (doc.state !== undefined && options.range === undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedLog>(key, {\n                item: promise\n            } as CachedLog);\n        }\n\n        return promise;\n    }\n\n    private async getLogForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitLog | undefined> {\n        if (!(await this.isTracked(fileName, repoPath, { ref: options.ref }))) {\n            Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitLog>;\n        }\n\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            // tslint:disable-next-line:prefer-const\n            let { range, ...opts } = options;\n            if (range !== undefined && range.start.line > range.end.line) {\n                range = new Range(range.end, range.start);\n            }\n\n            const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n            const data = await Git.log_file(root, file, {\n                ...opts,\n                maxCount: maxCount,\n                startLine: range === undefined ? undefined : range.start.line + 1,\n                endLine: range === undefined ? undefined : range.end.line + 1\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.File,\n                root,\n                file,\n                opts.ref,\n                await this.getCurrentUser(root),\n                maxCount,\n                opts.reverse!,\n                range\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            // Trap and cache expected log errors\n            if (document.state !== undefined && options.range === undefined && !options.reverse) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedLog>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedLog);\n\n                return GitService.emptyPromise as Promise<GitLog>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async hasRemotes(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasRemotes();\n    }\n\n    @log()\n    async hasTrackingBranch(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasTrackingBranch();\n    }\n\n    @log()\n    async getMergeBase(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        try {\n            const data = await Git.merge_base(repoPath, ref1, ref2, options);\n            if (data === undefined) return undefined;\n\n            return data.split('\\n')[0];\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRemotes(repoPath: string | undefined, options: { includeAll?: boolean } = {}): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        const repository = await this.getRepository(repoPath);\n        const remotes = repository !== undefined ? repository.getRemotes() : this.getRemotesCore(repoPath);\n\n        if (options.includeAll) return remotes;\n\n        return (await remotes).filter(r => r.provider !== undefined);\n    }\n\n    async getRemotesCore(repoPath: string | undefined, providers?: RemoteProviders): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        providers =\n            providers ||\n            RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(configuration.name('remotes').value, null)\n            );\n\n        try {\n            const data = await Git.remote(repoPath);\n            return GitRemoteParser.parse(data, repoPath, RemoteProviderFactory.factory(providers));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return [];\n        }\n    }\n\n    async getRepoPath(filePath: string, options?: { ref?: string }): Promise<string | undefined>;\n    async getRepoPath(uri: Uri | undefined, options?: { ref?: string }): Promise<string | undefined>;\n    @log()\n    async getRepoPath(\n        filePathOrUri: string | Uri | undefined,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        if (filePathOrUri == null) return this.getHighlanderRepoPath();\n        if (filePathOrUri instanceof GitUri) return filePathOrUri.repoPath;\n\n        const cc = Logger.getCorrelationContext();\n\n        // Don't save the tracking info to the cache, because we could be looking in the wrong place (e.g. looking in the root when the file is in a submodule)\n        let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });\n        if (repo !== undefined) return repo.path;\n\n        const rp = await this.getRepoPathCore(\n            typeof filePathOrUri === 'string' ? filePathOrUri : filePathOrUri.fsPath,\n            false\n        );\n        if (rp === undefined) return undefined;\n\n        // Recheck this._repositoryTree.get(rp) to make sure we haven't already tried adding this due to awaits\n        if (this._repositoryTree.get(rp) !== undefined) return rp;\n\n        const isVslsScheme =\n            typeof filePathOrUri === 'string' ? undefined : filePathOrUri.scheme === DocumentSchemes.Vsls;\n\n        // If this new repo is inside one of our known roots and we we don't already know about, add it\n        const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);\n\n        let folder;\n        if (root !== undefined) {\n            // Not sure why I added this for vsls (I can't see a reason for it anymore), but if it is added it will break submodules\n            // rp = root.path;\n            folder = root.folder;\n        }\n        else {\n            folder = workspace.getWorkspaceFolder(GitUri.file(rp, isVslsScheme));\n            if (folder === undefined) {\n                const parts = rp.split('/');\n                folder = {\n                    uri: GitUri.file(rp, isVslsScheme),\n                    name: parts[parts.length - 1],\n                    index: this._repositoryTree.count()\n                };\n            }\n        }\n\n        Logger.log(cc, `Repository found in '${rp}'`);\n        repo = new Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), this._suspended);\n        this._repositoryTree.set(rp, repo);\n\n        // Send a notification that the repositories changed\n        setImmediate(async () => {\n            await this.updateContext(this._repositoryTree);\n\n            this.fireRepositoriesChanged();\n        });\n\n        return rp;\n    }\n\n    private async getRepoPathCore(filePath: string, isDirectory: boolean): Promise<string | undefined> {\n        try {\n            return await Git.revparse_toplevel(isDirectory ? filePath : paths.dirname(filePath));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRepoPathOrActive(uri: Uri | undefined, editor: TextEditor | undefined) {\n        const repoPath = await this.getRepoPath(uri);\n        if (repoPath) return repoPath;\n\n        return this.getActiveRepoPath(editor);\n    }\n\n    @log()\n    async getRepositories(predicate?: (repo: Repository) => boolean): Promise<Iterable<Repository>> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        const values = repositoryTree.values();\n        return predicate !== undefined ? Iterables.filter(values, predicate) : values;\n    }\n\n    @log()\n    async getOrderedRepositories(): Promise<Repository[]> {\n        const repositories = [...(await this.getRepositories())];\n        if (repositories.length === 0) return repositories;\n\n        return repositories.sort((a, b) => (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || a.index - b.index);\n    }\n\n    private async getRepositoryTree(): Promise<TernarySearchTree<Repository>> {\n        if (this._repositoriesLoadingPromise !== undefined) {\n            await this._repositoriesLoadingPromise;\n            this._repositoriesLoadingPromise = undefined;\n        }\n\n        return this._repositoryTree;\n    }\n\n    async getRepository(\n        repoPath: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        uri: Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    @log()\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<Repository | undefined> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        let isVslsScheme;\n\n        let path: string;\n        if (typeof repoPathOrUri === 'string') {\n            const repo = repositoryTree.get(repoPathOrUri);\n            if (repo !== undefined) return repo;\n\n            path = repoPathOrUri;\n            isVslsScheme = undefined;\n        }\n        else {\n            if (repoPathOrUri instanceof GitUri) {\n                if (repoPathOrUri.repoPath) {\n                    const repo = repositoryTree.get(repoPathOrUri.repoPath);\n                    if (repo !== undefined) return repo;\n                }\n\n                path = repoPathOrUri.fsPath;\n            }\n            else {\n                path = repoPathOrUri.fsPath;\n            }\n\n            isVslsScheme = repoPathOrUri.scheme === DocumentSchemes.Vsls;\n        }\n\n        const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);\n        if (repo === undefined) return undefined;\n\n        // Make sure the file is tracked in this repo before returning -- it could be from a submodule\n        if (!(await this.isTracked(path, repo.path, options))) return undefined;\n        return repo;\n    }\n\n    private findRepositoryForPath(\n        repositoryTree: TernarySearchTree<Repository>,\n        path: string,\n        isVslsScheme: boolean | undefined\n    ): Repository | undefined {\n        let repo = repositoryTree.findSubstr(path);\n        // If we can't find the repo and we are a guest, check if we are a \"root\" workspace\n        if (repo === undefined && isVslsScheme !== false && Container.vsls.isMaybeGuest) {\n            if (!vslsUriPrefixRegex.test(path)) {\n                path = Strings.normalizePath(path);\n                const vslsPath = `/~0${path[0] === '/' ? path : `/${path}`}`;\n                repo = repositoryTree.findSubstr(vslsPath);\n            }\n        }\n        return repo;\n    }\n\n    async getRepositoryCount(): Promise<number> {\n        const repositoryTree = await this.getRepositoryTree();\n        return repositoryTree.count();\n    }\n\n    @log()\n    async getStashList(repoPath: string | undefined): Promise<GitStash | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.stash_list(repoPath);\n        const stash = GitStashParser.parse(data, repoPath);\n        return stash;\n    }\n\n    @log()\n    async getStatusForFile(repoPath: string, fileName: string): Promise<GitStatusFile | undefined> {\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status_file(repoPath, fileName, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        if (status === undefined || !status.files.length) return undefined;\n\n        return status.files[0];\n    }\n\n    @log()\n    async getStatusForRepo(repoPath: string | undefined): Promise<GitStatus | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status(repoPath, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        return status;\n    }\n\n    @log()\n    async getTags(repoPath: string | undefined, options: { includeRefs?: boolean } = {}): Promise<GitTag[]> {\n        if (repoPath === undefined) return [];\n\n        let tags;\n        if (options.includeRefs) {\n            tags = this._tagsWithRefsCache.get(repoPath);\n            if (tags !== undefined) return tags;\n\n            const data = await Git.showref_tag(repoPath);\n            tags = GitTagParser.parseWithRef(data, repoPath) || [];\n\n            const repo = await this.getRepository(repoPath);\n            if (repo !== undefined && repo.supportsChangeEvents) {\n                this._tagsWithRefsCache.set(repoPath, tags);\n            }\n\n            return tags;\n        }\n\n        tags = this._tagsCache.get(repoPath);\n        if (tags !== undefined) return tags;\n\n        const data = await Git.tag(repoPath);\n        tags = GitTagParser.parse(data, repoPath) || [];\n\n        const repo = await this.getRepository(repoPath);\n        if (repo !== undefined && repo.supportsChangeEvents) {\n            this._tagsCache.set(repoPath, tags);\n        }\n\n        return tags;\n    }\n\n    @log()\n    async getTreeFileForRevision(repoPath: string, fileName: string, ref: string): Promise<GitTree | undefined> {\n        if (repoPath === undefined || fileName == null || fileName.length === 0) return undefined;\n\n        const data = await Git.ls_tree(repoPath, ref, { fileName: fileName });\n        const trees = GitTreeParser.parse(data);\n        return trees === undefined || trees.length === 0 ? undefined : trees[0];\n    }\n\n    @log()\n    async getTreeForRevision(repoPath: string, ref: string): Promise<GitTree[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.ls_tree(repoPath, ref);\n        return GitTreeParser.parse(data) || [];\n    }\n\n    @log()\n    getVersionedFileBuffer(repoPath: string, fileName: string, ref: string) {\n        return Git.show<Buffer>(repoPath, fileName, ref, { encoding: 'buffer' });\n    }\n\n    @log()\n    async getVersionedUri(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string | undefined\n    ): Promise<Uri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        if (!ref || (Git.isUncommitted(ref) && !Git.isStagedUncommitted(ref))) {\n            if (await this.fileExists(repoPath!, fileName)) return GitUri.file(fileName);\n\n            return undefined;\n        }\n\n        if (Git.isStagedUncommitted(ref)) {\n            return GitUri.git(fileName, repoPath);\n        }\n\n        return GitUri.toRevisionUri(ref, fileName, repoPath!);\n    }\n\n    isTrackable(scheme: string): boolean;\n    isTrackable(uri: Uri): boolean;\n    isTrackable(schemeOruri: string | Uri): boolean {\n        const scheme = typeof schemeOruri === 'string' ? schemeOruri : schemeOruri.scheme;\n        return (\n            scheme === DocumentSchemes.File ||\n            scheme === DocumentSchemes.Vsls ||\n            scheme === DocumentSchemes.Git ||\n            scheme === DocumentSchemes.GitLens\n        );\n    }\n\n    async isTracked(\n        fileName: string,\n        repoPath?: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<boolean>;\n    async isTracked(uri: GitUri): Promise<boolean>;\n    @log({\n        exit: tracked => tracked.toString(),\n        singleLine: true\n    })\n    async isTracked(\n        fileNameOrUri: string | GitUri,\n        repoPath?: string,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<boolean> {\n        if (options.ref === GitService.deletedOrMissingSha) return false;\n\n        let ref = options.ref;\n        let cacheKey: string;\n        let fileName: string;\n        if (typeof fileNameOrUri === 'string') {\n            [fileName, repoPath] = Git.splitPath(fileNameOrUri, repoPath);\n            cacheKey = GitUri.toKey(fileNameOrUri);\n        }\n        else {\n            if (!this.isTrackable(fileNameOrUri)) return false;\n\n            fileName = fileNameOrUri.fsPath;\n            repoPath = fileNameOrUri.repoPath;\n            ref = fileNameOrUri.sha;\n            cacheKey = GitUri.toKey(fileName);\n        }\n\n        if (ref !== undefined) {\n            cacheKey += `:${ref}`;\n        }\n\n        let tracked = this._trackedCache.get(cacheKey);\n        if (tracked !== undefined) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        tracked = this.isTrackedCore(fileName, repoPath === undefined ? '' : repoPath, ref);\n        if (options.skipCacheUpdate) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        this._trackedCache.set(cacheKey, tracked);\n        tracked = await tracked;\n        this._trackedCache.set(cacheKey, tracked);\n\n        return tracked;\n    }\n\n    private async isTrackedCore(fileName: string, repoPath: string, ref?: string) {\n        if (ref === GitService.deletedOrMissingSha) return false;\n\n        try {\n            // Even if we have a ref, check first to see if the file exists (that way the cache will be better reused)\n            let tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName));\n            if (!tracked && ref !== undefined) {\n                tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, { ref: ref }));\n                // If we still haven't found this file, make sure it wasn't deleted in that ref (i.e. check the previous)\n                if (!tracked) {\n                    tracked = Boolean(\n                        await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, {\n                            ref: `${ref}^`\n                        })\n                    );\n                }\n            }\n            return tracked;\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return false;\n        }\n    }\n\n    @log()\n    async getDiffTool(repoPath?: string) {\n        return (\n            (await Git.config_get('diff.guitool', repoPath, { local: true })) ||\n            (await Git.config_get('diff.tool', repoPath, { local: true }))\n        );\n    }\n\n    @log()\n    async openDiffTool(\n        repoPath: string,\n        uri: Uri,\n        options: { ref1?: string; ref2?: string; staged?: boolean; tool?: string } = {}\n    ) {\n        if (!options.tool) {\n            const cc = Logger.getCorrelationContext();\n\n            options.tool = await this.getDiffTool(repoPath);\n            if (options.tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${options.tool}`);\n        }\n\n        const { tool, ...opts } = options;\n        return Git.difftool_fileDiff(repoPath, uri.fsPath, tool, opts);\n    }\n\n    @log()\n    async openDirectoryDiff(repoPath: string, ref1: string, ref2?: string, tool?: string) {\n        if (!tool) {\n            const cc = Logger.getCorrelationContext();\n\n            tool = await this.getDiffTool(repoPath);\n            if (tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${tool}`);\n        }\n\n        return Git.difftool_dirDiff(repoPath, tool, ref1, ref2);\n    }\n\n    @log()\n    async resolveReference(repoPath: string, ref: string, uri?: Uri) {\n        const resolved = Git.isSha(ref) || !Git.isShaLike(ref) || ref.endsWith('^3');\n        if (uri == null) return resolved ? ref : (await Git.revparse(repoPath, ref)) || ref;\n\n        const ensuredRef = await Git.cat_file_validate(\n            repoPath,\n            Strings.normalizePath(paths.relative(repoPath, uri.fsPath)),\n            ref\n        );\n        if (ensuredRef === undefined) return ref;\n\n        return ensuredRef;\n    }\n\n    @log()\n    async validateReference(repoPath: string, ref: string) {\n        return await Git.cat_validate(repoPath, ref);\n    }\n\n    stageFile(repoPath: string, fileName: string): Promise<string>;\n    stageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    stageDirectory(repoPath: string, directory: string): Promise<string>;\n    stageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageFile(repoPath: string, fileName: string): Promise<string>;\n    unStageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageDirectory(repoPath: string, directory: string): Promise<string>;\n    unStageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    @log()\n    stashApply(repoPath: string, stashName: string, deleteAfter: boolean = false) {\n        return Git.stash_apply(repoPath, stashName, deleteAfter);\n    }\n\n    @log()\n    stashDelete(repoPath: string, stashName: string) {\n        return Git.stash_delete(repoPath, stashName);\n    }\n\n    @log()\n    stashSave(repoPath: string, message?: string, uris?: Uri[]) {\n        if (uris === undefined) return Git.stash_save(repoPath, message);\n\n        GitService.ensureGitVersion('2.13.2', 'Stashing individual files');\n\n        const pathspecs = uris.map(u => Git.splitPath(u.fsPath, repoPath)[0]);\n        return Git.stash_push(repoPath, pathspecs, message);\n    }\n\n    static getEncoding(repoPath: string, fileName: string): string;\n    static getEncoding(uri: Uri): string;\n    static getEncoding(repoPathOrUri: string | Uri, fileName?: string): string {\n        const uri = typeof repoPathOrUri === 'string' ? GitUri.resolveToUri(fileName!, repoPathOrUri) : repoPathOrUri;\n        return Git.getEncoding(workspace.getConfiguration('files', uri).get<string>('encoding'));\n    }\n\n    @log()\n    static async initialize(): Promise<void> {\n        // Try to use the same git as the built-in vscode git extension\n        let gitPath;\n        try {\n            const gitExtension = extensions.getExtension('vscode.git');\n            if (gitExtension !== undefined) {\n                const gitApi = ((gitExtension.isActive\n                    ? gitExtension.exports\n                    : await gitExtension.activate()) as GitExtension).getAPI(1);\n                gitPath = gitApi.git.path;\n            }\n        }\n        catch {}\n\n        await Git.setOrFindGitPath(gitPath || workspace.getConfiguration('git').get<string>('path'));\n    }\n\n    static getGitPath(): string {\n        return Git.getGitPath();\n    }\n\n    static getGitVersion(): string {\n        return Git.getGitVersion();\n    }\n\n    static isShaLike(ref: string): boolean {\n        return Git.isShaLike(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return Git.isStagedUncommitted(ref);\n    }\n\n    static isUncommitted(ref: string | undefined): boolean {\n        return Git.isUncommitted(ref);\n    }\n\n    static shortenSha(\n        ref: string | undefined,\n        strings: { deletedOrMissing?: string; stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        if (ref === undefined) return undefined;\n\n        strings = { deletedOrMissing: '(deleted)', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (ref === GitService.deletedOrMissingSha) return strings.deletedOrMissing;\n\n        return Git.isShaLike(ref) || Git.isStagedUncommitted(ref) ? Git.shortenSha(ref, strings) : ref;\n    }\n\n    static compareGitVersion(version: string, throwIfLessThan?: Error) {\n        return Versions.compare(Versions.fromString(this.getGitVersion()), Versions.fromString(version));\n    }\n\n    static ensureGitVersion(version: string, feature: string): void {\n        const gitVersion = this.getGitVersion();\n        if (Versions.compare(Versions.fromString(gitVersion), Versions.fromString(version)) === -1) {\n            throw new Error(\n                `${feature} requires a newer version of Git (>= ${version}) than is currently installed (${gitVersion}). Please install a more recent version of Git to use this GitLens feature.`\n            );\n        }\n    }\n}\n","const cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\\((-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]*(-?[\\d\\.]+%?)?\\))$/i;\n\nfunction adjustLight(color: number, amount: number) {\n    const cc = color + amount;\n    const c = amount < 0 ? (cc < 0 ? 0 : cc) : cc > 255 ? 255 : cc;\n\n    return Math.round(c);\n}\n\nexport function darken(color: string, percentage: number) {\n    return lighten(color, -percentage);\n}\n\nexport function lighten(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    percentage = (255 * percentage) / 100;\n    return `rgba(${adjustLight(r, percentage)}, ${adjustLight(g, percentage)}, ${adjustLight(b, percentage)}, ${a})`;\n}\n\nexport function opacity(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;\n}\n\nexport function toRgba(color: string) {\n    color = color.trim();\n\n    const result = cssColorRegex.exec(color);\n    if (result == null) return null;\n\n    if (result[1] === '#') {\n        const hex = result[2];\n        switch (hex.length) {\n            case 3:\n                return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];\n            case 6:\n                return [\n                    parseInt(hex.substring(0, 2), 16),\n                    parseInt(hex.substring(2, 4), 16),\n                    parseInt(hex.substring(4, 6), 16),\n                    1\n                ];\n        }\n\n        return null;\n    }\n\n    switch (result[3]) {\n        case 'rgb':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];\n        case 'rgba':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];\n        default:\n            return null;\n    }\n}\n","import {\n    DecorationInstanceRenderOptions,\n    DecorationOptions,\n    MarkdownString,\n    ThemableDecorationRenderOptions,\n    ThemeColor,\n    workspace\n} from 'vscode';\nimport {\n    DiffWithCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../commands';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    CommitFormatter,\n    GitCommit,\n    GitDiffChunkLine,\n    GitRemote,\n    GitService,\n    GitUri,\n    ICommitFormatOptions\n} from '../git/gitService';\nimport { Objects, Strings } from '../system';\nimport { toRgba } from '../ui/shared/colors';\n\nexport interface ComputedHeatmap {\n    cold: boolean;\n    colors: { hot: string; cold: string };\n    median: number;\n    newest: number;\n    oldest: number;\n    computeAge(date: Date): number;\n}\n\ninterface IHeatmapConfig {\n    enabled: boolean;\n    location?: 'left' | 'right';\n}\n\ninterface IRenderOptions extends DecorationInstanceRenderOptions, ThemableDecorationRenderOptions {\n    height?: string;\n    uncommittedColor?: string | ThemeColor;\n}\n\nconst defaultHeatmapHotColor = '#f66a0a';\nconst defaultHeatmapColdColor = '#0a60f6';\nconst escapeMarkdownRegex = /[`\\>\\#\\*\\_\\-\\+\\.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nlet computedHeatmapColor: {\n    color: string;\n    rgb: string;\n};\n\nexport class Annotations {\n    static applyHeatmap(decoration: DecorationOptions, date: Date, heatmap: ComputedHeatmap) {\n        const color = this.getHeatmapColor(date, heatmap);\n        (decoration.renderOptions!.before! as any).borderColor = color;\n    }\n\n    private static getHeatmapColor(date: Date, heatmap: ComputedHeatmap) {\n        const baseColor = heatmap.cold ? heatmap.colors.cold : heatmap.colors.hot;\n\n        const age = heatmap.computeAge(date);\n        if (age === 0) return baseColor;\n\n        if (computedHeatmapColor === undefined || computedHeatmapColor.color !== baseColor) {\n            let rgba = toRgba(baseColor);\n            if (rgba == null) {\n                rgba = toRgba(heatmap.cold ? defaultHeatmapColdColor : defaultHeatmapHotColor)!;\n            }\n\n            const [r, g, b] = rgba;\n            computedHeatmapColor = {\n                color: baseColor,\n                rgb: `${r}, ${g}, ${b}`\n            };\n        }\n\n        return `rgba(${computedHeatmapColor.rgb}, ${(1 - age / 10).toFixed(2)})`;\n    }\n\n    private static getHoverCommandBar(\n        commit: GitCommit,\n        hasRemote: boolean,\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ) {\n        let commandBar = `[\\`${GlyphChars.MuchGreaterThan}\\`](${DiffWithCommand.getMarkdownCommandArgs(\n            commit\n        )} \"Open Changes\") `;\n\n        if (commit.previousSha !== undefined) {\n            if (annotationType === FileAnnotationType.RecentChanges) {\n                annotationType = FileAnnotationType.Blame;\n            }\n\n            const uri = GitUri.toRevisionUri(commit.previousSha, commit.previousUri.fsPath, commit.repoPath);\n            commandBar += `[\\`${GlyphChars.SquareWithTopShadow}\\`](${OpenFileRevisionCommand.getMarkdownCommandArgs(\n                uri,\n                annotationType || FileAnnotationType.Blame,\n                line\n            )} \"Blame Previous Revision\") `;\n        }\n\n        if (hasRemote) {\n            commandBar += `[\\`${GlyphChars.ArrowUpRight}\\`](${OpenCommitInRemoteCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Open in Remote\") `;\n        }\n\n        commandBar += `[\\`${GlyphChars.MiddleEllipsis}\\`](${ShowQuickCommitFileDetailsCommand.getMarkdownCommandArgs(\n            commit.sha\n        )} \"Show More Actions\")`;\n\n        return commandBar;\n    }\n\n    static getHoverMessage(\n        commit: GitCommit,\n        dateFormat: string | null,\n        remotes: GitRemote[],\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ): MarkdownString {\n        if (dateFormat === null) {\n            dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        let message = '';\n        let commandBar = '';\n        let showCommitDetailsCommand = '';\n        let avatar = '';\n        if (!commit.isUncommitted) {\n            commandBar = `\\n\\n${this.getHoverCommandBar(commit, remotes.length !== 0, annotationType, line)}`;\n            showCommitDetailsCommand = `[\\`${commit.shortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")`;\n\n            message = CommitFormatter.fromTemplate('${message}', commit);\n            for (const r of remotes) {\n                if (r.provider === undefined) continue;\n\n                message = r.provider.enrichMessage(message);\n                break;\n            }\n\n            message = `\\n\\n> ${message\n                // Escape markdown\n                .replace(escapeMarkdownRegex, '\\\\$&')\n                // Escape markdown header (since the above regex won't match it)\n                .replace(/^===/gm, markdownHeaderReplacement)\n                // Keep under the same block-quote but with line breaks\n                .replace(/\\n/g, '\\t\\n>  ')}`;\n        }\n        else {\n            showCommitDetailsCommand = `\\`${commit.shortSha === 'Working Tree' ? '00000000' : commit.shortSha}\\``;\n        }\n\n        if (Container.config.hovers.avatars) {\n            avatar = ` &nbsp; ![](${commit.getGravatarUri(Container.config.defaultGravatarsStyle).toString(true)})`;\n        }\n\n        const markdown = new MarkdownString(\n            `${showCommitDetailsCommand}${avatar} &nbsp;__${\n                commit.author\n            }__, ${commit.fromNow()} &nbsp; _(${commit.formatDate(dateFormat)})_ ${message}${commandBar}`\n        );\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static getHoverDiffMessage(\n        commit: GitCommit,\n        uri: GitUri,\n        chunkLine: GitDiffChunkLine | undefined\n    ): MarkdownString | undefined {\n        if (chunkLine === undefined || commit.previousSha === undefined) return undefined;\n\n        const codeDiff = this.getCodeDiff(chunkLine);\n\n        let message: string;\n        if (commit.isUncommitted) {\n            if (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha)) {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                    commit.previousSha!\n                )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} _${uri.shortSha}_\\n${codeDiff}`;\n            }\n            else {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; _uncommitted changes_\\n${codeDiff}`;\n            }\n        }\n        else {\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                GlyphChars.Dash\n            } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.previousSha!\n            )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} [\\`${\n                commit.shortSha\n            }\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")\\n${codeDiff}`;\n        }\n\n        const markdown = new MarkdownString(message);\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    private static getCodeDiff(chunkLine: GitDiffChunkLine): string {\n        const previous = chunkLine.previous === undefined ? undefined : chunkLine.previous[0];\n        return `\\`\\`\\`\n-  ${previous === undefined || previous.line === undefined ? '' : previous.line.trim()}\n+  ${chunkLine.line === undefined ? '' : chunkLine.line.trim()}\n\\`\\`\\``;\n    }\n\n    static async changesHover(commit: GitCommit, line: number, uri: GitUri): Promise<DecorationOptions> {\n        const sha =\n            !commit.isUncommitted || (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha))\n                ? commit.previousSha\n                : undefined;\n        const chunkLine = await Container.git.getDiffForLine(uri, line, sha);\n        const message = this.getHoverDiffMessage(commit, uri, chunkLine);\n\n        return {\n            hoverMessage: message\n        } as DecorationOptions;\n    }\n\n    // static detailsHover(commit: GitCommit, dateFormat: string | null, hasRemote: boolean, annotationType?: FileAnnotationType, line: number = 0): DecorationOptions {\n    //     const message = this.getHoverMessage(commit, dateFormat, hasRemote, annotationType);\n    //     return {\n    //         hoverMessage: message\n    //     } as DecorationOptions;\n    // }\n\n    static gutter(\n        commit: GitCommit,\n        format: string,\n        dateFormatOrFormatOptions: string | null | ICommitFormatOptions,\n        renderOptions: IRenderOptions\n    ): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        if (commit.isUncommitted) {\n            decoration.renderOptions!.before!.color = renderOptions.uncommittedColor;\n        }\n\n        const message = CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);\n        decoration.renderOptions!.before!.contentText = Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1);\n\n        return decoration;\n    }\n\n    static gutterRenderOptions(\n        separateLines: boolean,\n        heatmap: IHeatmapConfig,\n        format: string,\n        options: ICommitFormatOptions\n    ): IRenderOptions {\n        // Get the character count of all the tokens, assuming there there is a cap (bail if not)\n        let chars = 0;\n        for (const token of Objects.values(options.tokenOptions!)) {\n            if (token === undefined) continue;\n\n            // If any token is uncapped, kick out and set no max\n            if (token.truncateTo == null) {\n                chars = -1;\n                break;\n            }\n\n            chars += token.truncateTo;\n        }\n\n        if (chars >= 0) {\n            // Add the chars of the template string (without tokens)\n            chars += Strings.getWidth(Strings.interpolate(format, undefined));\n            // If we have chars, add a bit of padding\n            if (chars > 0) {\n                chars += 3;\n            }\n        }\n\n        let borderStyle = undefined;\n        let borderWidth = undefined;\n        if (heatmap.enabled) {\n            borderStyle = 'solid';\n            borderWidth = heatmap.location === 'left' ? '0 0 0 2px' : '0 2px 0 0';\n        }\n\n        let width;\n        if (chars >= 0) {\n            const spacing = workspace.getConfiguration('editor').get<number>('letterSpacing');\n            if (spacing != null && spacing !== 0) {\n                width = `calc(${chars}ch + ${Math.round(chars * spacing)}px)`;\n            }\n            else {\n                width = `${chars}ch`;\n            }\n        }\n\n        return {\n            backgroundColor: new ThemeColor('gitlens.gutterBackgroundColor'),\n            borderStyle: borderStyle,\n            borderWidth: borderWidth,\n            color: new ThemeColor('gitlens.gutterForegroundColor'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            height: '100%',\n            margin: `0 26px -1px 0`,\n            textDecoration: separateLines ? 'overline solid rgba(0, 0, 0, .2)' : 'none',\n            width: width,\n            uncommittedColor: new ThemeColor('gitlens.gutterUncommittedForegroundColor')\n        } as IRenderOptions;\n    }\n\n    static heatmap(commit: GitCommit, heatmap: ComputedHeatmap, renderOptions: IRenderOptions): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        Annotations.applyHeatmap(decoration, commit.date, heatmap);\n\n        return decoration;\n    }\n\n    static heatmapRenderOptions(): IRenderOptions {\n        return {\n            borderStyle: 'solid',\n            borderWidth: '0 0 0 2px'\n        } as IRenderOptions;\n    }\n\n    // static hover(commit: GitCommit, renderOptions: IRenderOptions, now: number): DecorationOptions {\n    //     const decoration = {\n    //         renderOptions: { before: { ...renderOptions } }\n    //     } as DecorationOptions;\n\n    //     this.applyHeatmap(decoration, commit.date, now);\n\n    //     return decoration;\n    // }\n\n    // static hoverRenderOptions(heatmap: IHeatmapConfig): IRenderOptions {\n    //     if (!heatmap.enabled) return { before: undefined };\n\n    //     return {\n    //         borderStyle: 'solid',\n    //         borderWidth: '0 0 0 2px',\n    //         contentText: GlyphChars.ZeroWidthSpace,\n    //         height: '100%',\n    //         margin: '0 26px 0 0',\n    //         textDecoration: 'none'\n    //     } as IRenderOptions;\n    // }\n\n    static trailing(\n        commit: GitCommit,\n        format: string,\n        dateFormat: string | null,\n        scrollable: boolean = true\n    ): DecorationOptions {\n        const message = CommitFormatter.fromTemplate(format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: dateFormat\n        } as ICommitFormatOptions);\n\n        return {\n            renderOptions: {\n                after: {\n                    backgroundColor: new ThemeColor('gitlens.trailingLineBackgroundColor'),\n                    color: new ThemeColor('gitlens.trailingLineForegroundColor'),\n                    contentText: Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1),\n                    fontWeight: 'normal',\n                    fontStyle: 'normal',\n                    // Pull the decoration out of the document flow if we want to be scrollable\n                    textDecoration: `none;${scrollable ? '' : ' position: absolute;'}`\n                }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n    }\n\n    // static withRange(decoration: DecorationOptions, start?: number, end?: number): DecorationOptions {\n    //     let range = decoration.range;\n    //     if (start !== undefined) {\n    //         range = range.with({\n    //             start: range.start.with({ character: start })\n    //         });\n    //     }\n\n    //     if (end !== undefined) {\n    //         range = range.with({\n    //             end: range.end.with({ character: end })\n    //         });\n    //     }\n\n    //     return { ...decoration, range: range };\n    // }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType\n} from 'vscode';\nimport { Container } from '../container';\nimport { GitBlame, GitCommit, GitUri } from '../git/gitService';\nimport { Arrays, Iterables } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations, ComputedHeatmap } from './annotations';\n\nexport abstract class BlameAnnotationProviderBase extends AnnotationProviderBase {\n    protected _blame: Promise<GitBlame | undefined>;\n    protected _hoverProviderDisposable: Disposable | undefined;\n    protected readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n        this._blame = editor.document.isDirty\n            ? Container.git.getBlameForFileContents(this._uri, editor.document.getText())\n            : Container.git.getBlameForFile(this._uri);\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n    }\n\n    clear() {\n        this._hoverProviderDisposable && this._hoverProviderDisposable.dispose();\n        super.clear();\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this.editor !== undefined) {\n            this._blame = this.editor.document.isDirty\n                ? Container.git.getBlameForFileContents(this._uri, this.editor.document.getText())\n                : Container.git.getBlameForFile(this._uri);\n        }\n\n        return super.onReset(changes);\n    }\n\n    async selection(shaOrLine?: string | number, blame?: GitBlame) {\n        if (!this.highlightDecoration) return;\n\n        if (blame === undefined) {\n            blame = await this._blame;\n            if (!blame || !blame.lines.length) return;\n        }\n\n        let sha: string | undefined = undefined;\n        if (typeof shaOrLine === 'string') {\n            sha = shaOrLine;\n        }\n        else if (typeof shaOrLine === 'number') {\n            if (shaOrLine >= 0) {\n                const commitLine = blame.lines[shaOrLine];\n                sha = commitLine && commitLine.sha;\n            }\n        }\n        else {\n            sha = Iterables.first(blame.commits.values()).sha;\n        }\n\n        if (!sha) {\n            this.editor.setDecorations(this.highlightDecoration, []);\n            return;\n        }\n\n        const highlightDecorationRanges = Arrays.filterMap(\n            blame.lines,\n            l =>\n                l.sha === sha\n                    ? this.editor.document.validateRange(new Range(l.line, 0, l.line, Number.MAX_SAFE_INTEGER))\n                    : undefined\n        );\n\n        this.editor.setDecorations(this.highlightDecoration, highlightDecorationRanges);\n    }\n\n    async validate(): Promise<boolean> {\n        const blame = await this._blame;\n        return blame !== undefined && blame.lines.length !== 0;\n    }\n\n    protected async getBlame(): Promise<GitBlame | undefined> {\n        const blame = await this._blame;\n        if (blame === undefined || blame.lines.length === 0) return undefined;\n\n        return blame;\n    }\n\n    protected getComputedHeatmap(blame: GitBlame): ComputedHeatmap {\n        const dates = [];\n\n        let commit;\n        let previousSha;\n        for (const l of blame.lines) {\n            if (previousSha === l.sha) continue;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            dates.push(commit.date);\n        }\n\n        dates.sort((a, b) => a.getTime() - b.getTime());\n\n        const half = Math.floor(dates.length / 2);\n        const median =\n            dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2.0;\n\n        const lookup: number[] = [];\n\n        const newest = dates[dates.length - 1].getTime();\n        let step = (newest - median) / 5;\n        for (let i = 5; i > 0; i--) {\n            lookup.push(median + step * i);\n        }\n\n        lookup.push(median);\n\n        const oldest = dates[0].getTime();\n        step = (median - oldest) / 4;\n        for (let i = 1; i <= 4; i++) {\n            lookup.push(median - step * i);\n        }\n\n        const d = new Date();\n        d.setDate(d.getDate() - (Container.config.heatmap.ageThreshold || 90));\n\n        return {\n            cold: newest < d.getTime(),\n            colors: {\n                cold: Container.config.heatmap.coldColor,\n                hot: Container.config.heatmap.hotColor\n            },\n            median: median,\n            newest: newest,\n            oldest: oldest,\n            computeAge: (date: Date) => {\n                const time = date.getTime();\n                let index = 0;\n                for (let i = 0; i < lookup.length; i++) {\n                    index = i;\n                    if (time >= lookup[i]) break;\n                }\n\n                return index;\n            }\n        };\n    }\n\n    registerHoverProviders(providers: { details: boolean; changes: boolean }) {\n        if (\n            !Container.config.hovers.enabled ||\n            !Container.config.hovers.annotations.enabled ||\n            (!providers.details && !providers.changes)\n        ) {\n            return;\n        }\n\n        const subscriptions: Disposable[] = [];\n        if (providers.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (providers.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit: GitCommit | undefined = undefined;\n        if (!commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousFileName = commit.previousFileName;\n                logCommit.previousSha = commit.previousSha;\n            }\n        }\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            this.annotationType,\n            this.editor.selection.active.line\n        );\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, await GitUri.fromUri(document.uri));\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(\n            hover.hoverMessage,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    private async getCommitForHover(position: Position): Promise<GitCommit | undefined> {\n        if (Container.config.hovers.annotations.over !== 'line' && position.character !== 0) return undefined;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return undefined;\n\n        const line = blame.lines[position.line];\n\n        return blame.commits.get(line.sha);\n    }\n}\n","'use strict';\nimport { DecorationOptions, DecorationRenderOptions, Range, TextEditorDecorationType, window } from 'vscode';\nimport { FileAnnotationType, GravatarDefaultStyle } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBlameCommit, ICommitFormatOptions } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Blame;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config.blame;\n\n        // Precalculate the formatting options so we don't need to do it on each iteration\n        const tokenOptions = Strings.getTokensFromTemplate(cfg.format).reduce(\n            (map, token) => {\n                map[token.key] = token.options as ICommitFormatOptions;\n                return map;\n            },\n            {} as { [token: string]: ICommitFormatOptions }\n        );\n\n        const options: ICommitFormatOptions = {\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n            tokenOptions: tokenOptions\n        };\n\n        const avatars = cfg.avatars;\n        const gravatarDefault = Container.config.defaultGravatarsStyle;\n        const separateLines = cfg.separateLines;\n        const renderOptions = Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.format, options);\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n        const avatarDecorationsMap:\n            | { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n            | undefined = avatars ? Object.create(null) : undefined;\n\n        let commit: GitBlameCommit | undefined;\n        let compacted = false;\n        let gutter: DecorationOptions | undefined;\n        let previousSha: string | undefined;\n\n        let computedHeatmap;\n        if (cfg.heatmap.enabled) {\n            computedHeatmap = this.getComputedHeatmap(blame);\n        }\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            if (previousSha === l.sha) {\n                // Use a shallow copy of the previous decoration options\n                gutter = { ...gutter } as DecorationOptions;\n\n                if (cfg.compact && !compacted) {\n                    // Since we are wiping out the contextText make sure to copy the objects\n                    gutter.renderOptions = {\n                        before: {\n                            ...gutter.renderOptions!.before,\n                            contentText: GlyphChars.Space.repeat(\n                                Strings.getWidth(gutter.renderOptions!.before!.contentText!)\n                            )\n                        }\n                    };\n\n                    if (separateLines) {\n                        gutter.renderOptions!.before!.textDecoration = 'none';\n                    }\n\n                    compacted = true;\n                }\n\n                gutter.range = new Range(line, 0, line, 0);\n\n                this.decorations.push(gutter);\n\n                if (avatars && !cfg.compact && commit !== undefined && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            compacted = false;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            gutter = decorationsMap[l.sha];\n            if (gutter !== undefined) {\n                gutter = {\n                    ...gutter,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(gutter);\n\n                if (avatars && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            gutter = Annotations.gutter(commit, cfg.format, options, renderOptions);\n\n            if (computedHeatmap !== undefined) {\n                Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);\n            }\n\n            gutter.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(gutter);\n\n            if (avatars && commit.email !== undefined) {\n                this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n            }\n\n            decorationsMap[l.sha] = gutter;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            if (avatars) {\n                this.additionalDecorations = [];\n                for (const d of Objects.values(avatarDecorationsMap!)) {\n                    this.additionalDecorations.push(d);\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n\n    addOrUpdateGravatarDecoration(\n        commit: GitBlameCommit,\n        range: Range,\n        gravatarDefault: GravatarDefaultStyle,\n        map: { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n    ) {\n        const avatarDecoration = map[commit.email!];\n        if (avatarDecoration !== undefined) {\n            avatarDecoration.ranges.push(range);\n\n            return;\n        }\n\n        map[commit.email!] = {\n            decoration: window.createTextEditorDecorationType({\n                gutterIconPath: commit.getGravatarUri(gravatarDefault),\n                gutterIconSize: '16px 16px'\n            } as DecorationRenderOptions),\n            ranges: [range]\n        };\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class HeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Heatmap;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const renderOptions = Annotations.heatmapRenderOptions();\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n\n        let commit: GitBlameCommit | undefined;\n        let heatmap: DecorationOptions | undefined;\n\n        const computedHeatmap = this.getComputedHeatmap(blame);\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            heatmap = decorationsMap[l.sha];\n            if (heatmap !== undefined) {\n                heatmap = {\n                    ...heatmap,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(heatmap);\n\n                continue;\n            }\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            heatmap = Annotations.heatmap(commit, computedHeatmap, renderOptions);\n            heatmap.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(heatmap);\n            decorationsMap[l.sha] = heatmap;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n}\n","'use strict';\nimport { DecorationOptions, MarkdownString, Position, Range, TextEditor, TextEditorDecorationType } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations } from './annotations';\n\nexport class RecentChangesAnnotationProvider extends AnnotationProviderBase {\n    private readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n    }\n\n    async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.annotationType = FileAnnotationType.RecentChanges;\n\n        const commit = await Container.git.getRecentLogCommitForFile(this._uri.repoPath, this._uri.fsPath);\n        if (commit === undefined) return false;\n\n        const diff = await Container.git.getDiffForFile(this._uri, commit.previousSha);\n        if (diff === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config;\n        const dateFormat = cfg.defaultDateFormat;\n\n        this.decorations = [];\n\n        for (const chunk of diff.chunks) {\n            let count = chunk.currentPosition.start - 2;\n            for (const line of chunk.lines) {\n                if (line.line === undefined) continue;\n\n                count++;\n\n                if (line.state === 'unchanged') continue;\n\n                const range = this.editor.document.validateRange(\n                    new Range(new Position(count, 0), new Position(count, Number.MAX_SAFE_INTEGER))\n                );\n\n                let message: MarkdownString | undefined = undefined;\n\n                if (cfg.hovers.enabled && cfg.hovers.annotations.enabled) {\n                    if (cfg.hovers.annotations.details) {\n                        this.decorations.push({\n                            hoverMessage: Annotations.getHoverMessage(\n                                commit,\n                                dateFormat,\n                                await Container.git.getRemotes(commit.repoPath),\n                                this.annotationType,\n                                this.editor.selection.active.line\n                            ),\n                            range: range\n                        } as DecorationOptions);\n                    }\n\n                    if (cfg.hovers.annotations.changes) {\n                        message = Annotations.getHoverDiffMessage(commit, this._uri, line);\n                        if (message === undefined) continue;\n                    }\n                }\n\n                this.decorations.push({\n                    hoverMessage: message,\n                    range: range\n                } as DecorationOptions);\n            }\n        }\n\n        this.editor.setDecorations(this.decoration, this.decorations);\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);\n\n        return true;\n    }\n\n    async selection(shaOrLine?: string | number): Promise<void> {}\n\n    async validate(): Promise<boolean> {\n        return true;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Event,\n    EventEmitter,\n    OverviewRulerLane,\n    Progress,\n    ProgressLocation,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorViewColumnChangeEvent,\n    ThemeColor,\n    window,\n    workspace\n} from 'vscode';\nimport { AnnotationsToggleMode, configuration, FileAnnotationType, HighlightLocations } from '../configuration';\nimport { CommandContext, GlyphChars, isTextEditor, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { KeyboardScope, KeyCommand, Keys } from '../keyboard';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase, AnnotationStatus, TextEditorCorrelationKey } from './annotationProvider';\nimport { GutterBlameAnnotationProvider } from './gutterBlameAnnotationProvider';\nimport { HeatmapBlameAnnotationProvider } from './heatmapBlameAnnotationProvider';\nimport { RecentChangesAnnotationProvider } from './recentChangesAnnotationProvider';\n\nexport enum AnnotationClearReason {\n    User = 'User',\n    BlameabilityChanged = 'BlameabilityChanged',\n    ColumnChanged = 'ColumnChanged',\n    Disposing = 'Disposing',\n    DocumentChanged = 'DocumentChanged',\n    DocumentClosed = 'DocumentClosed'\n}\n\nexport const Decorations = {\n    blameAnnotation: window.createTextEditorDecorationType({\n        rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n        textDecoration: 'none'\n    } as DecorationRenderOptions),\n    blameHighlight: undefined as TextEditorDecorationType | undefined,\n    heatmapAnnotation: window.createTextEditorDecorationType({\n        before: {\n            contentText: GlyphChars.ZeroWidthSpace,\n            height: '100%',\n            margin: '0 26px -1px 0'\n        }\n    } as DecorationRenderOptions),\n    heatmapHighlight: undefined as TextEditorDecorationType | undefined,\n    recentChangesAnnotation: undefined as TextEditorDecorationType | undefined,\n    recentChangesHighlight: undefined as TextEditorDecorationType | undefined\n};\n\nexport class FileAnnotationController implements Disposable {\n    private _onDidToggleAnnotations = new EventEmitter<void>();\n    get onDidToggleAnnotations(): Event<void> {\n        return this._onDidToggleAnnotations.event;\n    }\n\n    private _annotationsDisposable: Disposable | undefined;\n    private _annotationProviders: Map<TextEditorCorrelationKey, AnnotationProviderBase> = new Map();\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _keyboardScope: KeyboardScope | undefined = undefined;\n    private readonly _toggleModes: Map<FileAnnotationType, AnnotationsToggleMode>;\n    private _annotationType: FileAnnotationType | undefined = undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n\n        this._toggleModes = new Map();\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        void this.clearAll();\n\n        Decorations.blameAnnotation && Decorations.blameAnnotation.dispose();\n        Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n        this._annotationsDisposable && this._annotationsDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const cfg = Container.config;\n\n        if (configuration.changed(e, configuration.name('blame')('highlight').value)) {\n            Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n            const cfgHighlight = cfg.blame.highlight;\n\n            if (cfgHighlight.enabled) {\n                Decorations.blameHighlight = window.createTextEditorDecorationType({\n                    gutterIconSize: 'contain',\n                    isWholeLine: true,\n                    overviewRulerLane: OverviewRulerLane.Right,\n                    backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                        ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                        : undefined,\n                    overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                        ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                        : undefined,\n                    dark: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                            : undefined\n                    },\n                    light: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                            : undefined\n                    }\n                });\n            }\n            else {\n                Decorations.blameHighlight = undefined;\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('highlight').value)) {\n            Decorations.recentChangesAnnotation && Decorations.recentChangesAnnotation.dispose();\n\n            const cfgHighlight = cfg.recentChanges.highlight;\n\n            Decorations.recentChangesAnnotation = window.createTextEditorDecorationType({\n                gutterIconSize: 'contain',\n                isWholeLine: true,\n                overviewRulerLane: OverviewRulerLane.Right,\n                backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                    ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                    : undefined,\n                overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                    ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                    : undefined,\n                dark: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                        : undefined\n                },\n                light: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                        : undefined\n                }\n            });\n        }\n\n        const initializing = configuration.initializing(e);\n\n        if (configuration.changed(e, configuration.name('blame')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Blame, cfg.blame.toggleMode);\n            if (!initializing && cfg.blame.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('heatmap')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);\n            if (!initializing && cfg.heatmap.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.RecentChanges, cfg.recentChanges.toggleMode);\n            if (!initializing && cfg.recentChanges.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (initializing) return;\n\n        if (\n            configuration.changed(e, configuration.name('blame').value) ||\n            configuration.changed(e, configuration.name('recentChanges').value) ||\n            configuration.changed(e, configuration.name('heatmap').value) ||\n            configuration.changed(e, configuration.name('hovers').value)\n        ) {\n            // Since the configuration has changed -- reset any visible annotations\n            for (const provider of this._annotationProviders.values()) {\n                if (provider === undefined) continue;\n\n                if (provider.annotationType === FileAnnotationType.RecentChanges) {\n                    provider.reset({\n                        decoration: Decorations.recentChangesAnnotation!,\n                        highlightDecoration: Decorations.recentChangesHighlight\n                    });\n                }\n                else if (provider.annotationType === FileAnnotationType.Blame) {\n                    provider.reset({\n                        decoration: Decorations.blameAnnotation,\n                        highlightDecoration: Decorations.blameHighlight\n                    });\n                }\n                else {\n                    void this.show(provider.editor, FileAnnotationType.Heatmap);\n                }\n            }\n        }\n    }\n\n    private async onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this._editor = editor;\n        // Logger.log('AnnotationController.onActiveTextEditorChanged', editor && editor.document.uri.fsPath);\n\n        if (this.isInWindowToggle()) {\n            await this.show(editor, this._annotationType!);\n\n            return;\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) {\n            setCommandContext(CommandContext.AnnotationStatus, undefined);\n            void this.detachKeyboardHook();\n        }\n        else {\n            setCommandContext(CommandContext.AnnotationStatus, provider.status);\n            void this.attachKeyboardHook();\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only care if we are becoming un-blameable\n        if (e.blameable) return;\n\n        const editor = window.activeTextEditor;\n        if (editor === undefined) return;\n\n        void this.clear(editor, AnnotationClearReason.BlameabilityChanged);\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        for (const [key, p] of this._annotationProviders) {\n            if (!e.document.is(p.document)) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentChanged);\n        }\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        if (!Container.git.isTrackable(document.uri)) return;\n\n        for (const [key, p] of this._annotationProviders) {\n            if (p.document !== document) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentClosed);\n        }\n    }\n\n    private onTextEditorViewColumnChanged(e: TextEditorViewColumnChangeEvent) {\n        // FYI https://github.com/Microsoft/vscode/issues/35602\n        const provider = this.getProvider(e.textEditor);\n        if (provider === undefined) {\n            // If we don't find an exact match, do a fuzzy match (since we can't properly track editors)\n            const fuzzyProvider = Iterables.find(\n                this._annotationProviders.values(),\n                p => p.editor.document === e.textEditor.document\n            );\n            if (fuzzyProvider == null) return;\n\n            void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);\n\n            return;\n        }\n\n        void provider.restore(e.textEditor);\n    }\n\n    private onVisibleTextEditorsChanged(editors: TextEditor[]) {\n        let provider: AnnotationProviderBase | undefined;\n        for (const e of editors) {\n            provider = this.getProvider(e);\n            if (provider === undefined) continue;\n\n            void provider.restore(e);\n        }\n    }\n\n    isInWindowToggle(): boolean {\n        return this.getToggleMode(this._annotationType) === AnnotationsToggleMode.Window;\n    }\n\n    private getToggleMode(annotationType: FileAnnotationType | undefined): AnnotationsToggleMode {\n        if (annotationType === undefined) return AnnotationsToggleMode.File;\n\n        return this._toggleModes.get(annotationType) || AnnotationsToggleMode.File;\n    }\n\n    clear(editor: TextEditor, reason: AnnotationClearReason = AnnotationClearReason.User) {\n        if (this.isInWindowToggle()) {\n            return this.clearAll();\n        }\n\n        return this.clearCore(AnnotationProviderBase.getCorrelationKey(editor), reason);\n    }\n\n    async clearAll() {\n        this._annotationType = undefined;\n        for (const [key] of this._annotationProviders) {\n            await this.clearCore(key, AnnotationClearReason.Disposing);\n        }\n    }\n\n    async getAnnotationType(editor: TextEditor | undefined): Promise<FileAnnotationType | undefined> {\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return undefined;\n\n        const trackedDocument = await Container.tracker.get(editor!.document);\n        if (trackedDocument === undefined || !trackedDocument.isBlameable) return undefined;\n\n        return provider.annotationType;\n    }\n\n    getProvider(editor: TextEditor | undefined): AnnotationProviderBase | undefined {\n        if (editor === undefined || editor.document === undefined) return undefined;\n        return this._annotationProviders.get(AnnotationProviderBase.getCorrelationKey(editor));\n    }\n\n    async show(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (this.getToggleMode(type) === AnnotationsToggleMode.Window) {\n            let first = this._annotationType === undefined;\n            const reset = !first && this._annotationType !== type;\n\n            this._annotationType = type;\n\n            if (reset) {\n                await this.clearAll();\n                first = true;\n            }\n\n            if (first) {\n                for (const e of window.visibleTextEditors) {\n                    if (e === editor) continue;\n\n                    void this.show(e, type);\n                }\n            }\n        }\n\n        if (editor === undefined) return false; // || editor.viewColumn === undefined) return false;\n        this._editor = editor;\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable) return false;\n\n        const currentProvider = this.getProvider(editor);\n        if (currentProvider !== undefined && currentProvider.annotationType === type) {\n            await currentProvider.selection(shaOrLine);\n            return true;\n        }\n\n        const provider = await window.withProgress(\n            { location: ProgressLocation.Window },\n            async (progress: Progress<{ message: string }>) => {\n                await setCommandContext(CommandContext.AnnotationStatus, AnnotationStatus.Computing);\n\n                const computingAnnotations = this.showAnnotationsCore(\n                    currentProvider,\n                    editor,\n                    type,\n                    shaOrLine,\n                    progress\n                );\n                const provider = await computingAnnotations;\n\n                if (editor === this._editor) {\n                    await setCommandContext(CommandContext.AnnotationStatus, provider && provider.status);\n                }\n\n                return computingAnnotations;\n            }\n        );\n\n        return provider !== undefined;\n    }\n\n    async toggle(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        on?: boolean\n    ): Promise<boolean> {\n        if (editor !== undefined) {\n            const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n            if (\n                (type === FileAnnotationType.RecentChanges && !trackedDocument.isTracked) ||\n                !trackedDocument.isBlameable\n            ) {\n                return false;\n            }\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return this.show(editor!, type, shaOrLine);\n\n        const reopen = provider.annotationType !== type;\n        if (on === true && !reopen) return true;\n\n        if (this.isInWindowToggle()) {\n            await this.clearAll();\n        }\n        else {\n            await this.clearCore(provider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!reopen) return false;\n\n        return this.show(editor, type, shaOrLine);\n    }\n\n    private async attachKeyboardHook() {\n        // Allows pressing escape to exit the annotations\n        if (this._keyboardScope === undefined) {\n            this._keyboardScope = await Container.keyboard.beginScope({\n                escape: {\n                    onDidPressKey: async (key: Keys) => {\n                        const e = this._editor;\n                        if (e === undefined) return undefined;\n\n                        await this.clear(e, AnnotationClearReason.User);\n                        return undefined;\n                    }\n                } as KeyCommand\n            });\n        }\n    }\n\n    private async clearCore(key: TextEditorCorrelationKey, reason: AnnotationClearReason) {\n        const provider = this._annotationProviders.get(key);\n        if (provider === undefined) return;\n\n        Logger.log(`${reason}:`, `Clear annotations for ${key}`);\n\n        this._annotationProviders.delete(key);\n        provider.dispose();\n\n        if (this._annotationProviders.size === 0 || key === AnnotationProviderBase.getCorrelationKey(this._editor)) {\n            await setCommandContext(CommandContext.AnnotationStatus, undefined);\n            await this.detachKeyboardHook();\n        }\n\n        if (this._annotationProviders.size === 0) {\n            Logger.log(`Remove all listener registrations for annotations`);\n\n            this._annotationsDisposable && this._annotationsDisposable.dispose();\n            this._annotationsDisposable = undefined;\n        }\n\n        this._onDidToggleAnnotations.fire();\n    }\n\n    private async detachKeyboardHook() {\n        if (this._keyboardScope === undefined) return;\n\n        await this._keyboardScope.dispose();\n        this._keyboardScope = undefined;\n    }\n\n    private async showAnnotationsCore(\n        currentProvider: AnnotationProviderBase | undefined,\n        editor: TextEditor,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        progress?: Progress<{ message: string }>\n    ): Promise<AnnotationProviderBase | undefined> {\n        if (progress !== undefined) {\n            let annotationsLabel = 'annotations';\n            switch (type) {\n                case FileAnnotationType.Blame:\n                    annotationsLabel = 'blame annotations';\n                    break;\n\n                case FileAnnotationType.Heatmap:\n                    annotationsLabel = 'heatmap annotations';\n                    break;\n\n                case FileAnnotationType.RecentChanges:\n                    annotationsLabel = 'recent changes annotations';\n                    break;\n            }\n\n            progress!.report({\n                message: `Computing ${annotationsLabel} for ${paths.basename(editor.document.fileName)}`\n            });\n        }\n\n        // Allows pressing escape to exit the annotations\n        await this.attachKeyboardHook();\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n\n        let provider: AnnotationProviderBase | undefined = undefined;\n        switch (type) {\n            case FileAnnotationType.Blame:\n                provider = new GutterBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.blameAnnotation,\n                    Decorations.blameHighlight\n                );\n                break;\n\n            case FileAnnotationType.Heatmap:\n                provider = new HeatmapBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.heatmapAnnotation,\n                    Decorations.heatmapHighlight\n                );\n                break;\n\n            case FileAnnotationType.RecentChanges:\n                provider = new RecentChangesAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.recentChangesAnnotation!,\n                    Decorations.recentChangesHighlight\n                );\n                break;\n        }\n        if (provider === undefined || !(await provider.validate())) return undefined;\n\n        if (currentProvider !== undefined) {\n            await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!this._annotationsDisposable && this._annotationProviders.size === 0) {\n            Logger.log(`Add listener registrations for annotations`);\n\n            this._annotationsDisposable = Disposable.from(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 50), this),\n                window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this),\n                window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleTextEditorsChanged, 50), this),\n                workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this)\n            );\n        }\n\n        this._annotationProviders.set(provider.correlationKey, provider);\n        if (await provider.provideAnnotation(shaOrLine)) {\n            this._onDidToggleAnnotations.fire();\n            return provider;\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    debug,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Range,\n    TextEditor,\n    TextEditorDecorationType,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\nimport { Annotations } from './annotations';\n\nconst annotationDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n    after: {\n        margin: '0 0 0 3em',\n        textDecoration: 'none'\n    },\n    rangeBehavior: DecorationRangeBehavior.ClosedOpen\n} as DecorationRenderOptions);\n\nexport class LineAnnotationController implements Disposable {\n    private _disposable: Disposable;\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n    private _enabled: boolean = false;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearAnnotations(this._editor);\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!configuration.changed(e, configuration.name('currentLine').value)) return;\n\n        if (configuration.changed(e, configuration.name('currentLine')('enabled').value)) {\n            if (Container.config.currentLine.enabled) {\n                this._enabled = true;\n                this.resume();\n            }\n            else {\n                this._enabled = false;\n                this.setLineTracker(false);\n            }\n        }\n\n        void this.refresh(window.activeTextEditor);\n    }\n\n    private _suspended?: 'debugging' | 'user';\n    get suspended() {\n        return !this._enabled || this._suspended !== undefined;\n    }\n\n    resume(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(true);\n\n        switch (reason) {\n            case 'debugging':\n                if (this._suspended !== 'user') {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n\n            case 'user':\n                if (this._suspended !== undefined) {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n        }\n\n        return false;\n    }\n\n    suspend(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(false);\n\n        if (this._suspended !== 'user') {\n            this._suspended = reason;\n            return true;\n        }\n\n        return false;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (!e.pending && e.lines !== undefined) {\n            void this.refresh(e.editor);\n\n            return;\n        }\n\n        this.clear(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n\n        if (this.suspend('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n\n        if (this.resume('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onFileAnnotationsToggled() {\n        void this.refresh(window.activeTextEditor);\n    }\n\n    clear(editor: TextEditor | undefined) {\n        if (this._editor !== editor && this._editor !== undefined) {\n            this.clearAnnotations(this._editor);\n        }\n        this.clearAnnotations(editor);\n    }\n\n    async toggle(editor: TextEditor | undefined) {\n        this._enabled = !(this._enabled && !this.suspended);\n\n        if (this._enabled) {\n            if (this.resume('user')) {\n                await this.refresh(editor);\n            }\n        }\n        else {\n            if (this.suspend('user')) {\n                await this.refresh(editor);\n            }\n        }\n    }\n\n    private clearAnnotations(editor: TextEditor | undefined) {\n        if (editor === undefined || (editor as any)._disposed === true) return;\n\n        editor.setDecorations(annotationDecoration, []);\n    }\n\n    private async refresh(editor: TextEditor | undefined) {\n        if (editor === undefined && this._editor === undefined) return;\n\n        const lines = Container.lineTracker.lines;\n        if (editor === undefined || lines === undefined || !isTextEditor(editor)) return this.clear(this._editor);\n\n        if (this._editor !== editor) {\n            // Clear any annotations on the previously active editor\n            this.clear(this._editor);\n\n            this._editor = editor;\n        }\n\n        const cfg = Container.config.currentLine;\n        if (this.suspended) return this.clear(editor);\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable && this.suspended) return this.clear(editor);\n\n        // Make sure the editor hasn't died since the await above and that we are still on the same line(s)\n        if (editor.document === undefined || !Container.lineTracker.includesAll(lines)) return;\n\n        const scrollable = Container.config.currentLine.scrollable;\n\n        const decorations = [];\n        for (const l of lines) {\n            const state = Container.lineTracker.getState(l);\n            if (state === undefined || state.commit === undefined) continue;\n\n            const decoration = Annotations.trailing(\n                state.commit,\n                cfg.format,\n                cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n                scrollable\n            );\n            decoration.range = editor.document.validateRange(\n                new Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER)\n            );\n            decorations.push(decoration);\n        }\n\n        editor.setDecorations(annotationDecoration, decorations);\n    }\n\n    private setLineTracker(enabled: boolean) {\n        if (enabled) {\n            if (!Container.lineTracker.isSubscribed(this)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n\n            return;\n        }\n\n        Container.lineTracker.stop(this);\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    CodeLens,\n    CodeLensProvider,\n    Command,\n    commands,\n    DocumentSelector,\n    DocumentSymbol,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Location,\n    Position,\n    Range,\n    SymbolInformation,\n    SymbolKind,\n    TextDocument,\n    Uri\n} from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport {\n    CodeLensCommand,\n    CodeLensConfig,\n    CodeLensLanguageScope,\n    CodeLensScopes,\n    configuration\n} from '../configuration';\nimport { BuiltInCommands, DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitBlameLines, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport { DocumentTracker, GitDocumentState } from '../trackers/gitDocumentTracker';\n\nexport class GitRecentChangeCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: (() => GitBlameLines | undefined) | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand,\n        command?: Command | undefined\n    ) {\n        super(range, command);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame && this.blame();\n    }\n}\n\nexport class GitAuthorsCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: () => GitBlameLines | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand\n    ) {\n        super(range);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame();\n    }\n}\n\nexport class GitCodeLensProvider implements CodeLensProvider {\n    private _onDidChangeCodeLenses = new EventEmitter<void>();\n    public get onDidChangeCodeLenses(): Event<void> {\n        return this._onDidChangeCodeLenses.event;\n    }\n\n    static selector: DocumentSelector = [\n        { scheme: DocumentSchemes.File },\n        { scheme: DocumentSchemes.Vsls },\n        { scheme: DocumentSchemes.Git },\n        { scheme: DocumentSchemes.GitLens }\n    ];\n\n    constructor(\n        context: ExtensionContext,\n        private readonly _git: GitService,\n        private readonly _tracker: DocumentTracker<GitDocumentState>\n    ) {}\n\n    reset(reason?: 'idle' | 'saved') {\n        this._onDidChangeCodeLenses.fire();\n    }\n\n    async provideCodeLenses(document: TextDocument, token: CancellationToken): Promise<CodeLens[]> {\n        const trackedDocument = await this._tracker.getOrAdd(document);\n        if (!trackedDocument.isBlameable) return [];\n\n        let dirty = false;\n        if (document.isDirty) {\n            // Only allow dirty blames if we are idle\n            if (trackedDocument.isDirtyIdle) {\n                const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n                if (maxLines > 0 && document.lineCount > maxLines) {\n                    dirty = true;\n                }\n            }\n            else {\n                dirty = true;\n            }\n        }\n\n        const cfg = configuration.get<CodeLensConfig>(configuration.name('codeLens').value, document.uri);\n\n        let languageScope =\n            cfg.scopesByLanguage &&\n            cfg.scopesByLanguage.find(\n                ll => ll.language !== undefined && ll.language.toLowerCase() === document.languageId\n            );\n        if (languageScope == null) {\n            languageScope = {\n                language: undefined\n            } as CodeLensLanguageScope;\n        }\n        if (languageScope.scopes == null) {\n            languageScope.scopes = cfg.scopes;\n        }\n        if (languageScope.symbolScopes == null) {\n            languageScope.symbolScopes = cfg.symbolScopes;\n        }\n\n        languageScope.symbolScopes =\n            languageScope.symbolScopes != null\n                ? (languageScope.symbolScopes = languageScope.symbolScopes.map(s => s.toLowerCase()))\n                : [];\n\n        const lenses: CodeLens[] = [];\n\n        const gitUri = trackedDocument.uri;\n        let blame: GitBlame | undefined;\n        let symbols;\n\n        if (!dirty) {\n            if (token.isCancellationRequested) return lenses;\n\n            if (languageScope.scopes.length === 1 && languageScope.scopes.includes(CodeLensScopes.Document)) {\n                blame = document.isDirty\n                    ? await this._git.getBlameForFileContents(gitUri, document.getText())\n                    : await this._git.getBlameForFile(gitUri);\n            }\n            else {\n                [blame, symbols] = await Promise.all([\n                    document.isDirty\n                        ? this._git.getBlameForFileContents(gitUri, document.getText())\n                        : this._git.getBlameForFile(gitUri),\n                    commands.executeCommand(BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri) as Promise<\n                        SymbolInformation[]\n                    >\n                ]);\n            }\n\n            if (blame === undefined || blame.lines.length === 0) return lenses;\n        }\n        else {\n            if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(CodeLensScopes.Document)) {\n                symbols = (await commands.executeCommand(\n                    BuiltInCommands.ExecuteDocumentSymbolProvider,\n                    document.uri\n                )) as SymbolInformation[];\n            }\n        }\n\n        if (token.isCancellationRequested) return lenses;\n\n        const documentRangeFn = Functions.once(() => document.validateRange(new Range(0, 1000000, 1000000, 1000000)));\n\n        // Since blame information isn't valid when there are unsaved changes -- update the lenses appropriately\n        const dirtyCommand = dirty ? ({ title: this.getDirtyTitle(cfg) } as Command) : undefined;\n\n        if (symbols !== undefined) {\n            Logger.log('GitCodeLensProvider.provideCodeLenses:', `${symbols.length} symbol(s) found`);\n            for (const sym of symbols) {\n                this.provideCodeLens(\n                    lenses,\n                    document,\n                    sym,\n                    languageScope as Required<CodeLensLanguageScope>,\n                    documentRangeFn,\n                    blame,\n                    gitUri,\n                    cfg,\n                    dirty,\n                    dirtyCommand\n                );\n            }\n        }\n\n        if (\n            (languageScope.scopes.includes(CodeLensScopes.Document) || languageScope.symbolScopes.includes('file')) &&\n            !languageScope.symbolScopes.includes('!file')\n        ) {\n            // Check if we have a lens for the whole document -- if not add one\n            if (!lenses.find(l => l.range.start.line === 0 && l.range.end.line === 0)) {\n                const blameRange = documentRangeFn();\n\n                let blameForRangeFn: (() => GitBlameLines | undefined) | undefined = undefined;\n                if (dirty || cfg.recentChange.enabled) {\n                    if (!dirty) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 0, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitRecentChangeCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.recentChange.command,\n                            dirtyCommand\n                        )\n                    );\n                }\n                if (!dirty && cfg.authors.enabled) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 1, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n\n        return lenses;\n    }\n\n    private getValidateSymbolRange(\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        includeSingleLineSymbols: boolean\n    ): Range | undefined {\n        let valid = false;\n        let range: Range | undefined;\n\n        const symbolName = SymbolKind[symbol.kind].toLowerCase();\n        switch (symbol.kind) {\n            case SymbolKind.File:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = documentRangeFn();\n                }\n                break;\n\n            case SymbolKind.Package:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = getRangeFromSymbol(symbol);\n                    if (range.start.line === 0 && range.end.line === 0) {\n                        range = documentRangeFn();\n                    }\n                }\n                break;\n\n            case SymbolKind.Class:\n            case SymbolKind.Interface:\n            case SymbolKind.Module:\n            case SymbolKind.Namespace:\n            case SymbolKind.Struct:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            case SymbolKind.Constructor:\n            case SymbolKind.Enum:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Blocks) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            default:\n                if (languageScope.symbolScopes!.includes(symbolName)) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n        }\n\n        return valid ? range || getRangeFromSymbol(symbol) : undefined;\n    }\n\n    private provideCodeLens(\n        lenses: CodeLens[],\n        document: TextDocument,\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        blame: GitBlame | undefined,\n        gitUri: GitUri | undefined,\n        cfg: CodeLensConfig,\n        dirty: boolean,\n        dirtyCommand: Command | undefined\n    ): void {\n        try {\n            const blameRange = this.getValidateSymbolRange(\n                symbol,\n                languageScope,\n                documentRangeFn,\n                cfg.includeSingleLineSymbols\n            );\n            if (blameRange === undefined) return;\n\n            const line = document.lineAt(getRangeFromSymbol(symbol).start);\n            // Make sure there is only 1 lens per line\n            if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber) return;\n\n            // Anchor the code lens to the start of the line -- so that the range won't change with edits (otherwise the code lens will be removed and re-added)\n            let startChar = 0;\n\n            let blameForRangeFn: (() => GitBlameLines | undefined) | undefined;\n            if (dirty || cfg.recentChange.enabled) {\n                if (!dirty) {\n                    blameForRangeFn = Functions.once(() => this._git.getBlameForRangeSync(blame!, gitUri!, blameRange));\n                }\n                lenses.push(\n                    new GitRecentChangeCodeLens(\n                        document.languageId,\n                        symbol,\n                        gitUri,\n                        blameForRangeFn,\n                        blameRange,\n                        false,\n                        line.range.with(new Position(line.range.start.line, startChar)),\n                        cfg.recentChange.command,\n                        dirtyCommand\n                    )\n                );\n                startChar++;\n            }\n\n            if (cfg.authors.enabled) {\n                let multiline = !blameRange.isSingleLine;\n                // HACK for Omnisharp, since it doesn't return full ranges\n                if (!multiline && document.languageId === 'csharp') {\n                    switch (symbol.kind) {\n                        case SymbolKind.File:\n                            break;\n                        case SymbolKind.Package:\n                        case SymbolKind.Module:\n                        case SymbolKind.Namespace:\n                        case SymbolKind.Class:\n                        case SymbolKind.Interface:\n                        case SymbolKind.Constructor:\n                        case SymbolKind.Method:\n                        case SymbolKind.Function:\n                        case SymbolKind.Enum:\n                            multiline = true;\n                            break;\n                    }\n                }\n\n                if (multiline && !dirty) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            symbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            false,\n                            line.range.with(new Position(line.range.start.line, startChar)),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n        finally {\n            if (isDocumentSymbol(symbol)) {\n                for (const child of symbol.children) {\n                    this.provideCodeLens(\n                        lenses,\n                        document,\n                        child,\n                        languageScope,\n                        documentRangeFn,\n                        blame,\n                        gitUri,\n                        cfg,\n                        dirty,\n                        dirtyCommand\n                    );\n                }\n            }\n        }\n    }\n\n    resolveCodeLens(lens: CodeLens, token: CancellationToken): CodeLens | Thenable<CodeLens> {\n        if (lens instanceof GitRecentChangeCodeLens) return this.resolveGitRecentChangeCodeLens(lens, token);\n        if (lens instanceof GitAuthorsCodeLens) return this.resolveGitAuthorsCodeLens(lens, token);\n        return Promise.reject<CodeLens>(undefined);\n    }\n\n    private resolveGitRecentChangeCodeLens(lens: GitRecentChangeCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const recentCommit = Iterables.first(blame.commits.values());\n        let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${\n                recentCommit.shortSha\n            })]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitRecentChangeCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private resolveGitAuthorsCodeLens(lens: GitAuthorsCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const count = blame.authors.size;\n        let title = `${count} ${count > 1 ? 'authors' : 'author'} (${Iterables.first(blame.authors.values()).name}${\n            count > 1 ? ' and others' : ''\n        })`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${Iterables.join(\n                Iterables.map(blame.authors.values(), a => a.name),\n                ', '\n            )})]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitAuthorsCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private applyDiffWithPreviousCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        if (commit === undefined) {\n            const blameLine = blame.allLines[lens.range.start.line];\n            commit = blame.commits.get(blameLine.sha);\n        }\n\n        lens.command = {\n            title: title,\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit: commit\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitFileDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitFileDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitFileDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCurrentBranchHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickCurrentBranchHistory,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private applyShowQuickFileHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickFileHistory,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    range: lens.isFullRange ? undefined : lens.blameRange\n                } as ShowQuickFileHistoryCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyToggleFileBlameCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines\n    ): T {\n        lens.command = {\n            title: title,\n            command: Commands.ToggleFileBlame,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private getDirtyTitle(cfg: CodeLensConfig) {\n        if (cfg.recentChange.enabled && cfg.authors.enabled) {\n            return Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;\n        }\n        if (cfg.recentChange.enabled) return Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;\n        return Container.config.strings.codeLens.unsavedChanges.authorsOnly;\n    }\n}\n\nfunction getRangeFromSymbol(symbol: DocumentSymbol | SymbolInformation) {\n    return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;\n}\n\nfunction isDocumentSymbol(symbol: DocumentSymbol | SymbolInformation): symbol is DocumentSymbol {\n    return (symbol as DocumentSymbol).children !== undefined;\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, languages } from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { GitCodeLensProvider } from './codeLensProvider';\n\nexport class GitCodeLensController implements Disposable {\n    private _canToggle: boolean = false;\n    private _disposable: Disposable | undefined;\n    private _provider: GitCodeLensProvider | undefined;\n    private _providerDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._providerDisposable && this._providerDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('codeLens').value;\n        if (\n            configuration.changed(e, section, null) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            if (!configuration.initializing(e)) {\n                Logger.log('CodeLens config changed; resetting CodeLens provider');\n            }\n\n            const cfg = Container.config.codeLens;\n            if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {\n                if (this._provider !== undefined) {\n                    this._provider.reset();\n                }\n                else {\n                    this.createProvider();\n                }\n            }\n            else {\n                if (this._providerDisposable !== undefined) {\n                    this._providerDisposable.dispose();\n                    this._providerDisposable = undefined;\n                }\n                this._provider = undefined;\n            }\n\n            this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;\n            setCommandContext(CommandContext.CanToggleCodeLens, this._canToggle);\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only reset if we have saved, since the code lens won't naturally be re-rendered\n        if (this._provider === undefined || !e.blameable) return;\n\n        Logger.log('Blame state changed; resetting CodeLens provider');\n        this._provider.reset('saved');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        if (this._provider === undefined || !e.document.isBlameable) return;\n\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        Logger.log('Dirty idle triggered; resetting CodeLens provider');\n        this._provider.reset('idle');\n    }\n\n    toggleCodeLens() {\n        if (!this._canToggle) return;\n\n        Logger.log(`toggleCodeLens()`);\n        if (this._provider !== undefined) {\n            if (this._providerDisposable !== undefined) {\n                this._providerDisposable.dispose();\n                this._providerDisposable = undefined;\n            }\n\n            this._provider = undefined;\n\n            return;\n        }\n\n        this.createProvider();\n    }\n\n    private createProvider() {\n        this._provider = new GitCodeLensProvider(Container.context, Container.git, Container.tracker);\n        this._providerDisposable = Disposable.from(\n            languages.registerCodeLensProvider(GitCodeLensProvider.selector, this._provider),\n            Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n            Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n        );\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    Disposable,\n    Event,\n    EventEmitter,\n    FileChangeEvent,\n    FileStat,\n    FileSystemError,\n    FileSystemProvider,\n    FileType,\n    Uri,\n    workspace\n} from 'vscode';\nimport { DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitTree, GitUri } from '../git/gitService';\nimport { Iterables, Strings, TernarySearchTree } from '../system';\n\nexport function fromGitLensFSUri(uri: Uri): { path: string; ref: string; repoPath: string } {\n    const gitUri = uri instanceof GitUri ? uri : GitUri.fromRevisionUri(uri);\n    return { path: gitUri.getRelativePath(), ref: gitUri.sha!, repoPath: gitUri.repoPath! };\n}\n\nexport function toGitLensFSUri(ref: string, repoPath: string): Uri {\n    return GitUri.toRevisionUri(ref, repoPath, repoPath);\n}\n\nconst emptyArray = new Uint8Array(0);\n\nexport class GitFileSystemProvider implements FileSystemProvider, Disposable {\n    private readonly _disposable: Disposable;\n    private readonly _searchTreeMap = new Map<string, Promise<TernarySearchTree<GitTree>>>();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            workspace.registerFileSystemProvider(DocumentSchemes.GitLens, this, {\n                isCaseSensitive: true,\n                isReadonly: true\n            })\n        );\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\n    get onDidChangeFile(): Event<FileChangeEvent[]> {\n        return this._onDidChangeFile.event;\n    }\n\n    copy?(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    createDirectory(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    delete(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async readDirectory(uri: Uri): Promise<[string, FileType][]> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        const tree = await this.getTree(path, ref, repoPath);\n        if (tree === undefined) {\n            debugger;\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        const items = [\n            ...Iterables.map<GitTree, [string, FileType]>(tree, t => [\n                path != null && path.length !== 0 ? Strings.normalizePath(paths.relative(path, t.path)) : t.path,\n                typeToFileType(t.type)\n            ])\n        ];\n        return items;\n    }\n\n    async readFile(uri: Uri): Promise<Uint8Array> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) return emptyArray;\n\n        const buffer = await Container.git.getVersionedFileBuffer(repoPath, path, ref);\n        if (buffer === undefined) return emptyArray;\n\n        return buffer;\n    }\n\n    rename(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async stat(uri: Uri): Promise<FileStat> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) {\n            return {\n                type: FileType.File,\n                size: 0,\n                ctime: 0,\n                mtime: 0\n            };\n        }\n\n        let treeItem;\n\n        const searchTree = this._searchTreeMap.get(ref);\n        if (searchTree !== undefined) {\n            // Add the fake root folder to the path\n            treeItem = (await searchTree).get(`/~/${path}`);\n        }\n        else {\n            if (path == null || path.length === 0) {\n                const tree = await this.getTree(path, ref, repoPath);\n                if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n                return {\n                    type: FileType.Directory,\n                    size: 0,\n                    ctime: 0,\n                    mtime: 0\n                };\n            }\n\n            treeItem = await Container.git.getTreeFileForRevision(repoPath, path, ref);\n        }\n\n        if (treeItem === undefined) {\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        return {\n            type: typeToFileType(treeItem.type),\n            size: treeItem.size,\n            ctime: 0,\n            mtime: 0\n        };\n    }\n\n    watch(): Disposable {\n        return { dispose: () => {} };\n    }\n\n    writeFile(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    private async createSearchTree(ref: string, repoPath: string) {\n        const searchTree = TernarySearchTree.forPaths() as TernarySearchTree<GitTree>;\n        const trees = await Container.git.getTreeForRevision(repoPath, ref);\n\n        // Add a fake root folder so that searches will work\n        searchTree.set(`~`, { commitSha: '', path: '~', size: 0, type: 'tree' });\n        for (const item of trees) {\n            searchTree.set(`~/${item.path}`, item);\n        }\n\n        return searchTree;\n    }\n\n    private async getOrCreateSearchTree(ref: string, repoPath: string) {\n        let searchTree = this._searchTreeMap.get(ref);\n        if (searchTree === undefined) {\n            searchTree = this.createSearchTree(ref, repoPath);\n            this._searchTreeMap.set(ref, searchTree);\n        }\n\n        return searchTree;\n    }\n\n    private async getTree(path: string, ref: string, repoPath: string) {\n        const searchTree = await this.getOrCreateSearchTree(ref, repoPath);\n        // Add the fake root folder to the path\n        return searchTree!.findSuperstr(`/~/${path}`, true);\n    }\n}\n\nfunction typeToFileType(type: 'blob' | 'tree' | undefined | null) {\n    switch (type) {\n        case 'blob':\n            return FileType.File;\n        case 'tree':\n            return FileType.Directory;\n        default:\n            return FileType.Unknown;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    ConfigurationChangeEvent,\n    debug,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    window\n} from 'vscode';\nimport { Annotations } from '../annotations/annotations';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class LineHoverController implements Disposable {\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _disposable: Disposable;\n    private _hoverProviderDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.unregister();\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('hovers')('enabled').value) &&\n            !configuration.changed(e, configuration.name('hovers')('currentLine')('enabled').value)\n        ) {\n            return;\n        }\n\n        if (Container.config.hovers.enabled && Container.config.hovers.currentLine.enabled) {\n            Container.lineTracker.start(\n                this,\n                Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n            );\n\n            this.register(window.activeTextEditor);\n        }\n        else {\n            Container.lineTracker.stop(this);\n            this.unregister();\n        }\n    }\n\n    private get debugging() {\n        return this._debugSessionEndDisposable !== undefined;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (e.pending || e.reason !== 'editor') return;\n\n        if (e.editor === undefined || e.lines === undefined) {\n            this.unregister();\n\n            return;\n        }\n\n        this.register(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n        if (fileAnnotations !== undefined && Container.config.hovers.annotations.details) return undefined;\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit = lineState !== undefined ? lineState.logCommit : undefined;\n        if (logCommit === undefined && !commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousSha = commit.previousSha;\n                logCommit.previousFileName = commit.previousFileName;\n\n                if (lineState !== undefined) {\n                    lineState.logCommit = logCommit;\n                }\n            }\n        }\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            fileAnnotations,\n            position.line\n        );\n        return new Hover(message, range);\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        if (Container.config.hovers.annotations.changes) {\n            const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n            if (fileAnnotations !== undefined) return undefined;\n        }\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, trackedDocument.uri);\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(hover.hoverMessage, range);\n    }\n\n    private register(editor: TextEditor | undefined) {\n        this.unregister();\n\n        if (editor === undefined /* || this.suspended */) return;\n\n        const cfg = Container.config.hovers;\n        if (!cfg.enabled || !cfg.currentLine.enabled || (!cfg.currentLine.details && !cfg.currentLine.changes)) return;\n\n        const subscriptions = [];\n        if (cfg.currentLine.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (cfg.currentLine.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    private unregister() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n    }\n}\n","'use strict';\nimport { commands, Disposable } from 'vscode';\nimport { CommandContext, extensionId, setCommandContext } from './constants';\nimport { Logger } from './logger';\n\nexport declare interface KeyCommand {\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nconst keyNoopCommand = Object.create(null) as KeyCommand;\nexport { keyNoopCommand as KeyNoopCommand };\n\nexport declare type Keys = 'left' | 'right' | ',' | '.' | 'escape';\nexport const keys: Keys[] = ['left', 'right', ',', '.', 'escape'];\n\nexport declare interface KeyMapping {\n    [id: string]: KeyCommand | (() => Promise<KeyCommand>) | undefined;\n}\n\nconst mappings: KeyMapping[] = [];\n\nexport class KeyboardScope implements Disposable {\n    constructor(\n        private readonly mapping: KeyMapping\n    ) {\n        for (const key in mapping) {\n            mapping[key] = mapping[key] || keyNoopCommand;\n        }\n    }\n\n    async dispose() {\n        const index = mappings.indexOf(this.mapping);\n        Logger.log('KeyboardScope.dispose', mappings.length, index);\n        if (index === mappings.length - 1) {\n            mappings.pop();\n            await this.updateKeyCommandsContext(mappings[mappings.length - 1]);\n        }\n        else {\n            mappings.splice(index, 1);\n        }\n    }\n\n    async begin() {\n        mappings.push(this.mapping);\n        await this.updateKeyCommandsContext(this.mapping);\n        return this;\n    }\n\n    async clearKeyCommand(key: Keys) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping || !mapping[key]) return;\n\n        Logger.log('KeyboardScope.clearKeyCommand', mappings.length, key);\n        mapping[key] = undefined;\n        await setCommandContext(`${CommandContext.Key}:${key}`, false);\n    }\n\n    async setKeyCommand(key: Keys, command: KeyCommand | (() => Promise<KeyCommand>)) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping) return;\n\n        Logger.log('KeyboardScope.setKeyCommand', mappings.length, key, Boolean(mapping[key]));\n\n        if (!mapping[key]) {\n            mapping[key] = command;\n            await setCommandContext(`${CommandContext.Key}:${key}`, true);\n        }\n        else {\n            mapping[key] = command;\n        }\n    }\n\n    private async updateKeyCommandsContext(mapping: KeyMapping) {\n        const promises = [];\n        for (const key of keys) {\n            promises.push(setCommandContext(`${CommandContext.Key}:${key}`, Boolean(mapping && mapping[key])));\n        }\n        await Promise.all(promises);\n    }\n}\n\nexport class Keyboard implements Disposable {\n    private _disposable: Disposable;\n\n    constructor() {\n        const subscriptions = keys.map(key =>\n            commands.registerCommand(`${extensionId}.key.${key}`, () => this.execute(key), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    async beginScope(mapping?: KeyMapping): Promise<KeyboardScope> {\n        Logger.log('Keyboard.beginScope', mappings.length);\n        return await new KeyboardScope(\n            mapping ? Object.assign(Object.create(null), mapping) : Object.create(null)\n        ).begin();\n    }\n\n    async execute(key: Keys): Promise<{} | undefined> {\n        if (!mappings.length) return undefined;\n\n        try {\n            const mapping = mappings[mappings.length - 1];\n\n            let command = mapping[key] as KeyCommand | (() => Promise<KeyCommand>);\n            if (typeof command === 'function') {\n                command = await command();\n            }\n            if (!command || typeof command.onDidPressKey !== 'function') return undefined;\n\n            Logger.log('Keyboard.execute', key);\n\n            return await command.onDidPressKey(key);\n        }\n        catch (ex) {\n            Logger.error(ex, 'Keyboard.execute');\n            return undefined;\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, StatusBarAlignment, StatusBarItem, TextEditor, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration, StatusBarCommand } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatter, GitCommit, ICommitFormatOptions } from '../git/gitService';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class StatusBarController implements Disposable {\n    private _blameStatusBarItem: StatusBarItem | undefined;\n    private _disposable: Disposable;\n    private _modeStatusBarItem: StatusBarItem | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearBlame();\n\n        this._blameStatusBarItem && this._blameStatusBarItem.dispose();\n        this._modeStatusBarItem && this._modeStatusBarItem.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (configuration.changed(e, configuration.name('mode').value)) {\n            const mode =\n                Container.config.mode.active && Container.config.mode.statusBar.enabled\n                    ? Container.config.modes[Container.config.mode.active]\n                    : undefined;\n            if (mode && mode.statusBarItemName) {\n                const alignment =\n                    Container.config.mode.statusBar.alignment !== 'left'\n                        ? StatusBarAlignment.Right\n                        : StatusBarAlignment.Left;\n\n                if (configuration.changed(e, configuration.name('mode')('statusBar')('alignment').value)) {\n                    if (this._modeStatusBarItem !== undefined && this._modeStatusBarItem.alignment !== alignment) {\n                        this._modeStatusBarItem.dispose();\n                        this._modeStatusBarItem = undefined;\n                    }\n                }\n\n                this._modeStatusBarItem =\n                    this._modeStatusBarItem ||\n                    window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 999 : 1);\n                this._modeStatusBarItem.command = Commands.SwitchMode;\n                this._modeStatusBarItem.text = mode.statusBarItemName;\n                this._modeStatusBarItem.tooltip = `Switch GitLens Mode`;\n                this._modeStatusBarItem.show();\n            }\n            else {\n                if (this._modeStatusBarItem !== undefined) {\n                    this._modeStatusBarItem.dispose();\n                    this._modeStatusBarItem = undefined;\n                }\n            }\n        }\n\n        if (!configuration.changed(e, configuration.name('statusBar').value)) return;\n\n        if (Container.config.statusBar.enabled) {\n            const alignment =\n                Container.config.statusBar.alignment !== 'left' ? StatusBarAlignment.Right : StatusBarAlignment.Left;\n\n            if (configuration.changed(e, configuration.name('statusBar')('alignment').value)) {\n                if (this._blameStatusBarItem !== undefined && this._blameStatusBarItem.alignment !== alignment) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n\n            this._blameStatusBarItem =\n                this._blameStatusBarItem ||\n                window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 1000 : 0);\n            this._blameStatusBarItem.command = Container.config.statusBar.command;\n\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n        }\n        else {\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.stop(this);\n\n                if (this._blameStatusBarItem !== undefined) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        // If we need to reduceFlicker, don't clear if only the selected lines changed\n        let clear = !(\n            Container.config.statusBar.reduceFlicker &&\n            e.reason === 'selection' &&\n            (e.pending || e.lines !== undefined)\n        );\n        if (!e.pending && e.lines !== undefined) {\n            const state = Container.lineTracker.getState(e.lines[0]);\n            if (state !== undefined && state.commit !== undefined) {\n                this.updateBlame(state.commit, e.editor!);\n\n                return;\n            }\n\n            clear = true;\n        }\n\n        if (clear) {\n            this.clearBlame();\n        }\n    }\n\n    clearBlame() {\n        if (this._blameStatusBarItem !== undefined) {\n            this._blameStatusBarItem.hide();\n        }\n    }\n\n    private updateBlame(commit: GitCommit, editor: TextEditor) {\n        const cfg = Container.config.statusBar;\n        if (!cfg.enabled || this._blameStatusBarItem === undefined || !isTextEditor(editor)) return;\n\n        this._blameStatusBarItem.text = `$(git-commit) ${CommitFormatter.fromTemplate(cfg.format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat\n        } as ICommitFormatOptions)}`;\n\n        switch (cfg.command) {\n            case StatusBarCommand.ToggleFileBlame:\n                this._blameStatusBarItem.tooltip = 'Toggle Blame Annotations';\n                break;\n            case StatusBarCommand.DiffWithPrevious:\n                this._blameStatusBarItem.command = Commands.DiffLineWithPrevious;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Previous';\n                break;\n            case StatusBarCommand.DiffWithWorking:\n                this._blameStatusBarItem.command = Commands.DiffLineWithWorking;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Working';\n                break;\n            case StatusBarCommand.ToggleCodeLens:\n                this._blameStatusBarItem.tooltip = 'Toggle Git CodeLens';\n                break;\n            case StatusBarCommand.ShowQuickCommitDetails:\n                this._blameStatusBarItem.tooltip = 'Show Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickCommitFileDetails:\n                this._blameStatusBarItem.tooltip = 'Show Line Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickFileHistory:\n                this._blameStatusBarItem.tooltip = 'Show File History';\n                break;\n            case StatusBarCommand.ShowQuickCurrentBranchHistory:\n                this._blameStatusBarItem.tooltip = 'Show Branch History';\n                break;\n        }\n\n        this._blameStatusBarItem.show();\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextEditor, TextEditorSelectionChangeEvent, window } from 'vscode';\nimport { isTextEditor } from '../constants';\nimport { Functions, IDeferrable } from '../system';\n\nexport interface LinesChangeEvent {\n    readonly editor: TextEditor | undefined;\n    readonly lines: number[] | undefined;\n\n    readonly reason: 'editor' | 'selection';\n    readonly pending?: boolean;\n}\n\nexport class LineTracker<T> implements Disposable {\n    private _onDidChangeActiveLines = new EventEmitter<LinesChangeEvent>();\n    get onDidChangeActiveLines(): Event<LinesChangeEvent> {\n        return this._onDidChangeActiveLines.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n\n    private readonly _state: Map<number, T | undefined> = new Map();\n\n    dispose() {\n        this.stop();\n    }\n\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (this._editor === editor) return;\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this.reset();\n        this._editor = editor;\n        this._lines = editor !== undefined ? editor.selections.map(s => s.active.line) : undefined;\n\n        this.trigger('editor');\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        // If this isn't for our cached editor and its not a real editor -- kick out\n        if (this._editor !== e.textEditor && !isTextEditor(e.textEditor)) return;\n\n        const reason = this._editor === e.textEditor ? 'selection' : 'editor';\n\n        const lines = e.selections.map(s => s.active.line);\n        if (this._editor === e.textEditor && this.includesAll(lines)) return;\n\n        this.reset();\n        this._editor = e.textEditor;\n        this._lines = lines;\n        this.trigger(reason);\n    }\n\n    getState(line: number): T | undefined {\n        return this._state.get(line);\n    }\n\n    setState(line: number, state: T | undefined) {\n        this._state.set(line, state);\n    }\n\n    private _lines: number[] | undefined;\n    get lines(): number[] | undefined {\n        return this._lines;\n    }\n\n    includes(line: number): boolean {\n        return this._lines !== undefined && this._lines.includes(line);\n    }\n\n    includesAll(lines: number[] | undefined): boolean {\n        return LineTracker.includesAll(lines, this._lines);\n    }\n\n    refresh() {\n        this.trigger('editor');\n    }\n\n    reset() {\n        this._state.clear();\n    }\n\n    start(subscriber?: any, subscription?: Disposable): void {\n        if (this._disposable !== undefined) return;\n\n        this._disposable = Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 0), this),\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n\n        setImmediate(() => this.onActiveTextEditorChanged(window.activeTextEditor));\n    }\n\n    stop(subscriber?: any) {\n        if (this._disposable === undefined) return;\n\n        if (this._linesChangedDebounced !== undefined) {\n            this._linesChangedDebounced.cancel();\n        }\n\n        this._disposable.dispose();\n        this._disposable = undefined;\n    }\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this._onDidChangeActiveLines.fire(e);\n    }\n\n    protected trigger(reason: 'editor' | 'selection') {\n        this.onLinesChanged({ editor: this._editor, lines: this._lines, reason: reason });\n    }\n\n    private _linesChangedDebounced: (((e: LinesChangeEvent) => void) & IDeferrable) | undefined;\n\n    private onLinesChanged(e: LinesChangeEvent) {\n        if (e.lines === undefined) {\n            setImmediate(() => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                if (this._linesChangedDebounced !== undefined) {\n                    this._linesChangedDebounced.cancel();\n                }\n\n                void this.fireLinesChanged(e);\n            });\n\n            return;\n        }\n\n        if (this._linesChangedDebounced === undefined) {\n            this._linesChangedDebounced = Functions.debounce(\n                (e: LinesChangeEvent) => {\n                    if (window.activeTextEditor !== e.editor) return;\n                    // Make sure we are still on the same lines\n                    if (!LineTracker.includesAll(e.lines, e.editor && e.editor.selections.map(s => s.active.line))) {\n                        return;\n                    }\n\n                    void this.fireLinesChanged(e);\n                },\n                250,\n                { track: true }\n            );\n        }\n\n        // If we have no pending moves, then fire an immediate pending event, and defer the real event\n        if (!this._linesChangedDebounced.pending!()) {\n            void this.fireLinesChanged({ ...e, pending: true });\n        }\n\n        this._linesChangedDebounced(e);\n    }\n\n    static includesAll(lines1: number[] | undefined, lines2: number[] | undefined): boolean {\n        if (lines1 === undefined && lines2 === undefined) return true;\n        if (lines1 === undefined || lines2 === undefined) return false;\n\n        return lines2.length === lines1.length && lines2.every((v, i) => v === lines1[i]);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor } from 'vscode';\nimport { Container } from '../container';\nimport { GitBlameCommit, GitLogCommit } from '../git/gitService';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from './gitDocumentTracker';\nimport { LinesChangeEvent, LineTracker } from './lineTracker';\n\nexport * from './lineTracker';\n\nexport class GitLineState {\n    constructor(\n        public readonly commit: GitBlameCommit | undefined,\n        public logCommit?: GitLogCommit\n    ) {}\n}\n\nexport class GitLineTracker extends LineTracker<GitLineState> {\n    private _count = 0;\n    private _subscriptions: Map<any, Disposable> = new Map();\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this.reset();\n\n        let updated = false;\n        if (!this._suspended && !e.pending && e.lines !== undefined && e.editor !== undefined) {\n            updated = await this.updateState(e.lines, e.editor);\n        }\n\n        return super.fireLinesChanged(updated ? e : { ...e, lines: undefined });\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        this.trigger('editor');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        this.resume();\n    }\n\n    private async onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        if (e.dirty) {\n            this.suspend();\n        }\n        else {\n            this.resume({ force: true });\n        }\n    }\n\n    private _suspended = false;\n\n    private resume(options: { force?: boolean } = {}) {\n        if (!options.force && !this._suspended) return;\n\n        this._suspended = false;\n        this.trigger('editor');\n    }\n\n    private suspend(options: { force?: boolean } = {}) {\n        if (!options.force && this._suspended) return;\n\n        this._suspended = true;\n        this.trigger('editor');\n    }\n\n    isSubscribed(subscriber: any) {\n        return this._subscriptions.has(subscriber);\n    }\n\n    start(subscriber: any, subscription: Disposable): Disposable {\n        const disposable = {\n            dispose: () => this.stop(subscriber)\n        };\n\n        if (this.isSubscribed(subscriber)) return disposable;\n\n        this._subscriptions.set(subscriber, subscription);\n\n        this._count++;\n        if (this._count === 1) {\n            super.start();\n\n            this._disposable = Disposable.from(\n                this._disposable!,\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this),\n                Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n            );\n        }\n\n        return disposable;\n    }\n\n    stop(subscriber: any) {\n        const subscription = this._subscriptions.get(subscriber);\n        if (subscription === undefined) return;\n\n        this._subscriptions.delete(subscriber);\n        subscription.dispose();\n\n        if (this._disposable === undefined) {\n            this._count = 0;\n            return;\n        }\n\n        this._count--;\n        if (this._count === 0) {\n            super.stop();\n        }\n    }\n\n    private async updateState(lines: number[], editor: TextEditor): Promise<boolean> {\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (lines.length === 1) {\n            const blameLine = editor.document.isDirty\n                ? await Container.git.getBlameForLineContents(trackedDocument.uri, lines[0], editor.document.getText())\n                : await Container.git.getBlameForLine(trackedDocument.uri, lines[0]);\n            if (blameLine === undefined) return false;\n\n            this.setState(blameLine.line.line, new GitLineState(blameLine.commit));\n        }\n        else {\n            const blame = editor.document.isDirty\n                ? await Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText())\n                : await Container.git.getBlameForFile(trackedDocument.uri);\n            if (blame === undefined) return false;\n\n            for (const line of lines) {\n                const commitLine = blame.lines[line];\n                this.setState(line, new GitLineState(blame.commits.get(commitLine.sha)!));\n            }\n        }\n\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n\n        return true;\n    }\n}\n","'use strict';\nimport { Command, Disposable, Event, TreeItem, TreeItemCollapsibleState, TreeViewVisibilityChangeEvent } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, gate, logName } from '../../system';\nimport { TreeViewNodeStateChangeEvent, View } from '../viewBase';\n\nexport enum ResourceType {\n    ActiveFileHistory = 'gitlens:history:active:file',\n    ActiveLineHistory = 'gitlens:history:active:line',\n    Branch = 'gitlens:branch',\n    Branches = 'gitlens:branches',\n    BranchStatusAheadOfUpstream = 'gitlens:branch-status:upstream:ahead',\n    BranchStatusBehindUpstream = 'gitlens:branch-status:upstream:behind',\n    Commit = 'gitlens:commit',\n    CommitFile = 'gitlens:file:commit',\n    Commits = 'gitlens:commits',\n    Compare = 'gitlens:compare',\n    ComparePicker = 'gitlens:compare:picker',\n    ComparePickerWithRef = 'gitlens:compare:picker:ref',\n    CompareResults = 'gitlens:compare:results',\n    File = 'gitlens:file',\n    FileHistory = 'gitlens:history:file',\n    Folder = 'gitlens:folder',\n    LineHistory = 'gitlens:history:line',\n    Message = 'gitlens:message',\n    Pager = 'gitlens:pager',\n    Remote = 'gitlens:remote',\n    Remotes = 'gitlens:remotes',\n    Repositories = 'gitlens:repositories',\n    Repository = 'gitlens:repository',\n    ResultsCommits = 'gitlens:results:commits',\n    ResultsFile = 'gitlens:file:results',\n    ResultsFiles = 'gitlens:results:files',\n    Search = 'gitlens:search',\n    SearchResults = 'gitlens:search:results',\n    Stash = 'gitlens:stash',\n    StashFile = 'gitlens:file:stash',\n    Stashes = 'gitlens:stashes',\n    StatusFileCommits = 'gitlens:status:file:commits',\n    StatusFiles = 'gitlens:status:files',\n    StatusAheadOfUpstream = 'gitlens:status:upstream:ahead',\n    StatusBehindUpstream = 'gitlens:status:upstream:behind',\n    Tag = 'gitlens:tag',\n    Tags = 'gitlens:tags'\n}\n\nexport const unknownGitUri = new GitUri();\n\nexport interface ViewNode {\n    readonly id?: string;\n}\n\nconst counter = 0;\nfunction getViewNodeInstanceId() {\n    // if (counter === Number.MAX_SAFE_INTEGER) {\n    //     counter = 0;\n    // }\n    // counter++;\n    return counter;\n}\n\n@logName<ViewNode>((c, name) => `${name}(${c.id || c._instanceId})`)\nexport abstract class ViewNode<TView extends View = View> {\n    protected readonly _instanceId: number;\n\n    constructor(\n        uri: GitUri,\n        public readonly view: TView,\n        protected readonly parent?: ViewNode\n    ) {\n        this._instanceId = getViewNodeInstanceId();\n        this._uri = uri;\n    }\n\n    toString() {\n        return `${Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ''}`;\n    }\n\n    protected _uri: GitUri;\n    get uri() {\n        return this._uri;\n    }\n\n    abstract getChildren(): ViewNode[] | Promise<ViewNode[]>;\n\n    getParent(): ViewNode | undefined {\n        return this.parent;\n    }\n\n    abstract getTreeItem(): TreeItem | Promise<TreeItem>;\n\n    getCommand(): Command | undefined {\n        return undefined;\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false): void | boolean | Promise<void> | Promise<boolean> {}\n\n    @gate()\n    @debug()\n    triggerChange(): Promise<void> {\n        return this.view.refreshNode(this);\n    }\n}\n\nexport abstract class ViewRefNode<TView extends View = View> extends ViewNode<TView> {\n    abstract get ref(): string;\n\n    get repoPath(): string {\n        return this.uri.repoPath!;\n    }\n}\n\nexport interface PageableViewNode {\n    readonly supportsPaging: boolean;\n    maxCount: number | undefined;\n}\n\nexport function isPageable(\n    node: ViewNode\n): node is ViewNode & { supportsPaging: boolean; maxCount: number | undefined } {\n    return Boolean((node as any).supportsPaging);\n}\n\nexport function supportsAutoRefresh(\n    view: View\n): view is View & { autoRefresh: boolean; onDidChangeAutoRefresh: Event<void> } {\n    return (view as any).onDidChangeAutoRefresh !== undefined;\n}\n\nexport abstract class SubscribeableViewNode<TView extends View = View> extends ViewNode<TView> {\n    protected _disposable: Disposable;\n    protected _subscription: Promise<Disposable | undefined> | undefined;\n\n    constructor(uri: GitUri, view: TView, parent?: ViewNode) {\n        super(uri, view, parent);\n\n        const disposables = [\n            this.view.onDidChangeVisibility(this.onVisibilityChanged, this),\n            this.view.onDidChangeNodeState(this.onNodeStateChanged, this)\n        ];\n\n        if (supportsAutoRefresh(this.view)) {\n            disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));\n        }\n\n        this._disposable = Disposable.from(...disposables);\n    }\n\n    @debug()\n    dispose() {\n        void this.unsubscribe();\n\n        if (this._disposable !== undefined) {\n            this._disposable.dispose();\n        }\n    }\n\n    private _canSubscribe: boolean = true;\n    protected get canSubscribe(): boolean {\n        return this._canSubscribe;\n    }\n    protected set canSubscribe(value: boolean) {\n        if (this._canSubscribe === value) return;\n\n        this._canSubscribe = value;\n\n        void this.ensureSubscription();\n        if (value) {\n            void this.triggerChange();\n        }\n    }\n\n    protected abstract async subscribe(): Promise<Disposable | undefined>;\n\n    @debug()\n    protected async unsubscribe(): Promise<void> {\n        if (this._subscription !== undefined) {\n            const subscriptionPromise = this._subscription;\n            this._subscription = undefined;\n\n            const subscription = await subscriptionPromise;\n            if (subscription !== undefined) {\n                subscription.dispose();\n            }\n        }\n    }\n\n    @debug()\n    protected onAutoRefreshChanged() {\n        this.onVisibilityChanged({ visible: this.view.visible });\n    }\n\n    protected onParentStateChanged(state: TreeItemCollapsibleState) {}\n    protected onStateChanged(state: TreeItemCollapsibleState) {}\n\n    protected _state: TreeItemCollapsibleState | undefined;\n    protected onNodeStateChanged(e: TreeViewNodeStateChangeEvent<ViewNode>) {\n        if (e.element === this) {\n            this._state = e.state;\n            this.onStateChanged(e.state);\n        }\n        else if (e.element === this.parent) {\n            this.onParentStateChanged(e.state);\n        }\n    }\n\n    @debug()\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        void this.ensureSubscription();\n\n        if (e.visible) {\n            void this.triggerChange();\n        }\n    }\n\n    @debug()\n    async ensureSubscription() {\n        // We only need to subscribe if we are visible and if auto-refresh enabled (when supported)\n        if (!this.canSubscribe || !this.view.visible || (supportsAutoRefresh(this.view) && !this.view.autoRefresh)) {\n            await this.unsubscribe();\n\n            return;\n        }\n\n        // If we already have a subscription, just kick out\n        if (this._subscription !== undefined) return;\n\n        this._subscription = this.subscribe();\n        await this._subscription;\n    }\n}\n\nexport function nodeSupportsConditionalDismissal(node: ViewNode): node is ViewNode & { canDismiss(): boolean } {\n    return typeof (node as any).canDismiss === 'function';\n}\n\nexport function viewSupportsNodeDismissal(view: View): view is View & { dismissNode(node: ViewNode): void } {\n    return typeof (view as any).dismissNode === 'function';\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    CommitFormatter,\n    GitFile,\n    GitLogCommit,\n    GitUri,\n    ICommitFormatOptions,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport enum CommitFileNodeDisplayAs {\n    CommitLabel = 1 << 0,\n    FileLabel = 1 << 1,\n\n    CommitIcon = 1 << 2,\n    StatusIcon = 1 << 3,\n    Gravatar = 1 << 4,\n\n    File = FileLabel | StatusIcon\n}\n\nexport class CommitFileNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly file: GitFile,\n        public commit: GitLogCommit,\n        private readonly _displayAs: CommitFileNodeDisplayAs,\n        private readonly _selection?: Selection\n    ) {\n        super(GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        if (!this.commit.isFile) {\n            // See if we can get the commit directly from the multi-file commit\n            const commit = this.commit.toFileCommit(this.file);\n            if (commit === undefined) {\n                const log = await Container.git.getLogForFile(this.repoPath, this.file.fileName, {\n                    maxCount: 2,\n                    ref: this.commit.sha\n                });\n                if (log !== undefined) {\n                    this.commit = log.commits.get(this.commit.sha) || this.commit;\n                }\n            }\n            else {\n                this.commit = commit;\n            }\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = this.resourceType;\n        item.description = this.description;\n        item.tooltip = this.tooltip;\n\n        if ((this._displayAs & CommitFileNodeDisplayAs.CommitIcon) === CommitFileNodeDisplayAs.CommitIcon) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', 'icon-commit.svg')),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', 'icon-commit.svg'))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.StatusIcon) === CommitFileNodeDisplayAs.StatusIcon) {\n            const icon = GitFile.getStatusIcon(this.file.status);\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.Gravatar) === CommitFileNodeDisplayAs.Gravatar) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        item.command = this.getCommand();\n\n        // Only cache the label/description/tooltip for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n        this._tooltip = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitDescriptionTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileDescriptionTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._tooltip = undefined;\n    }\n\n    protected get resourceType(): string {\n        if (!this.commit.isUncommitted) return ResourceType.CommitFile;\n\n        return this.commit.isStagedUncommitted ? `${ResourceType.File}+staged` : `${ResourceType.File}+unstaged`;\n    }\n\n    private _tooltip: string | undefined;\n    get tooltip() {\n        if (this._tooltip === undefined) {\n            if (this._displayAs & CommitFileNodeDisplayAs.CommitLabel) {\n                const status = StatusFileFormatter.fromTemplate('${status}', this.file);\n                this._tooltip = CommitFormatter.fromTemplate(\n                    this.commit.isUncommitted\n                        ? `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})`\n                        : `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n                    this.commit,\n                    {\n                        dateFormat: Container.config.defaultDateFormat\n                    } as ICommitFormatOptions\n                );\n            }\n            else {\n                this._tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n            }\n        }\n        return this._tooltip;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.commitFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.commitDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.commitFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.commitFileDescriptionFormat;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.commit.repoPath),\n                {\n                    commit: this.commit,\n                    line: this._selection !== undefined ? this._selection.active.line : 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout, ViewsFilesConfig } from '../../configuration';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FileNode extends ViewNode {\n    folderName: string;\n    label?: string;\n    priority: number;\n    relativePath?: string;\n    root?: Arrays.IHierarchicalItem<FileNode>;\n}\n\nexport class FolderNode extends ViewNode<ViewWithFiles> {\n    readonly priority: number = 1;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly root: Arrays.IHierarchicalItem<FileNode>,\n        private readonly containsWorkingFiles?: boolean,\n        public readonly relativePath?: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<(FolderNode | FileNode)[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        let children: (FolderNode | FileNode)[];\n\n        const nesting = FolderNode.getFileNesting(\n            this.view.config.files,\n            this.root.descendants,\n            this.relativePath === undefined\n        );\n        if (nesting !== ViewFilesLayout.List) {\n            children = [];\n            for (const folder of Objects.values(this.root.children)) {\n                if (folder.value === undefined) {\n                    children.push(\n                        new FolderNode(\n                            this.view,\n                            this,\n                            this.repoPath,\n                            folder.name,\n                            folder,\n                            this.containsWorkingFiles,\n                            folder.relativePath\n                        )\n                    );\n                    continue;\n                }\n\n                folder.value.relativePath = this.root.relativePath;\n                children.push(folder.value);\n            }\n        }\n        else {\n            this.root.descendants.forEach(n => (n.relativePath = this.root.relativePath));\n            children = this.root.descendants;\n        }\n\n        children.sort((a, b) => {\n            return (\n                (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) ||\n                a.priority - b.priority ||\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        });\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        // TODO: Change this to expanded once https://github.com/Microsoft/vscode/issues/30918 is fixed\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Folder;\n        if (this.containsWorkingFiles) {\n            item.contextValue += `+working`;\n        }\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n\n    static getFileNesting<T extends FileNode>(\n        config: ViewsFilesConfig,\n        children: T[],\n        isRoot: boolean\n    ): ViewFilesLayout {\n        const nesting = config.layout || ViewFilesLayout.Auto;\n        if (nesting === ViewFilesLayout.Auto) {\n            if (isRoot || config.compact) {\n                const nestingThreshold = config.threshold || 5;\n                if (children.length <= nestingThreshold) return ViewFilesLayout.List;\n            }\n            return ViewFilesLayout.Tree;\n        }\n        return nesting;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { ViewFilesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitBranch, GitLogCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class CommitNode extends ViewRefNode<ViewWithFiles> {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly commit: GitLogCommit,\n        public readonly branch?: GitBranch,\n        private readonly getBranchAndTagTips?: (sha: string) => string | undefined\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const commit = this.commit;\n        let children: FileNode[] = [\n            ...Iterables.map(\n                commit.files,\n                s => new CommitFileNode(this.view, this, s, commit.toFileCommit(s), CommitFileNodeDisplayAs.File)\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort((a, b) =>\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        let label = CommitFormatter.fromTemplate(this.view.config.commitFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        const branchAndTagTips = this.getBranchAndTagTips && this.getBranchAndTagTips(this.commit.sha);\n        if (branchAndTagTips !== undefined) {\n            label = `${GlyphChars.AngleBracketLeftHeavy}${GlyphChars.SpaceThin}${branchAndTagTips}${\n                GlyphChars.SpaceThin\n            }${GlyphChars.AngleBracketRightHeavy}${GlyphChars.ArrowHeadRight}${GlyphChars.Space} ${label}`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Commit;\n        if (this.branch === undefined || this.branch.current) {\n            item.contextValue += '+current';\n        }\n        item.description = CommitFormatter.fromTemplate(this.view.config.commitDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-commit.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-commit.svg')\n            };\n        }\n\n        item.tooltip = CommitFormatter.fromTemplate(\n            this.commit.isUncommitted\n                ? `\\${author} ${GlyphChars.Dash} \\${id}\\n\\${ago} (\\${date})`\n                : `\\${author} ${GlyphChars.Dash} \\${id}${\n                      branchAndTagTips !== undefined ? ` (${branchAndTagTips})` : ''\n                  }\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n            this.commit,\n            {\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions\n        );\n\n        if (!this.commit.isUncommitted) {\n            item.tooltip += this.commit.getFormattedDiffStatus({\n                expand: true,\n                prefix: '\\n\\n',\n                separator: '\\n'\n            });\n        }\n\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                this.uri,\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","import { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState, Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { View } from '../viewBase';\nimport { RefreshNodeCommandArgs } from '../viewCommands';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class MessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _message: string,\n        private readonly _description?: string,\n        private readonly _tooltip?: string,\n        private readonly _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Message;\n        item.description = this._description;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n}\n\nexport class CommandMessageNode extends MessageNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _command: Command,\n        message: string,\n        description?: string,\n        tooltip?: string,\n        iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(view, parent, message, description, tooltip, iconPath);\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = super.getTreeItem();\n        if (item instanceof TreeItem) {\n            item.command = this._command;\n            return item;\n        }\n\n        return item.then(i => {\n            i.command = this._command;\n            return i;\n        });\n    }\n}\n\nexport class UpdateableMessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly id: string,\n        private _message: string,\n        private _tooltip?: string,\n        private _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.id = this.id;\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n\n    update(\n        changes: {\n            message?: string;\n            tooltip?: string | null;\n            iconPath?:\n                | string\n                | null\n                | Uri\n                | {\n                      light: string | Uri;\n                      dark: string | Uri;\n                  }\n                | ThemeIcon;\n        },\n        view: View\n    ) {\n        if (changes.message !== undefined) {\n            this._message = changes.message;\n        }\n\n        if (changes.tooltip !== undefined) {\n            this._tooltip = changes.tooltip === null ? undefined : changes.tooltip;\n        }\n\n        if (changes.iconPath !== undefined) {\n            this._iconPath = changes.iconPath === null ? undefined : changes.iconPath;\n        }\n\n        view.triggerNodeChange(this);\n    }\n}\n\nexport abstract class PagerNode extends ViewNode {\n    protected _args: RefreshNodeCommandArgs = {};\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        protected readonly message: string\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this.message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Pager;\n        item.command = this.getCommand();\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-unfold.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-unfold.svg')\n        };\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Refresh',\n            command: 'gitlens.views.refreshNode',\n            arguments: [this.parent, false, this._args]\n        } as Command;\n    }\n}\n\nexport class ShowMoreNode extends PagerNode {\n    constructor(view: View, parent: ViewNode, type: string, maxCount: number = Container.config.advanced.maxListItems) {\n        super(\n            view,\n            parent,\n            maxCount === 0\n                ? `Show All ${type} ${GlyphChars.Space}${GlyphChars.Dash}${GlyphChars.Space} this may take a while`\n                : `Show More ${type}`\n        );\n        this._args.maxCount = maxCount;\n    }\n}\n","'use strict';\nimport { Container } from '../../container';\nimport { GitLogCommit } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { MessageNode } from './common';\nimport { ViewNode } from './viewNode';\n\nexport async function getBranchesAndTagTipsFn(repoPath: string | undefined, currentName?: string) {\n    const [branches, tags] = await Promise.all([\n        Container.git.getBranches(repoPath),\n        Container.git.getTags(repoPath, { includeRefs: true })\n    ]);\n\n    const branchesAndTagsBySha = Arrays.groupByFilterMap(\n        (branches as { name: string; sha: string }[]).concat(tags as { name: string; sha: string }[]),\n        bt => bt.sha!,\n        bt => (bt.name === currentName ? undefined : bt.name)\n    );\n\n    return (sha: string) => {\n        const branchesAndTags = branchesAndTagsBySha.get(sha);\n        if (branchesAndTags === undefined || branchesAndTags.length === 0) return undefined;\n        return branchesAndTags.join(', ');\n    };\n}\n\nconst markers: [number, string][] = [\n    [0, 'Less than a week ago'],\n    [7, 'Over a week ago'],\n    [30, 'Over a month ago'],\n    [90, 'Over 3 months ago']\n];\n\nexport function* insertDateMarkers<T extends ViewNode & { commit: GitLogCommit }>(\n    iterable: Iterable<T>,\n    parent: ViewNode,\n    skip?: number\n): Iterable<ViewNode> {\n    if (!parent.view.config.showRelativeDateMarkers) {\n        return yield* iterable;\n    }\n\n    let index = skip || 0;\n    let time = undefined;\n    const now = Date.now();\n\n    let first = true;\n\n    for (const node of iterable) {\n        if (index < markers.length) {\n            let [daysAgo, marker] = markers[index];\n            if (time === undefined) {\n                const date = new Date(now);\n                time = date.setDate(date.getDate() - daysAgo);\n            }\n\n            const date = new Date(node.commit.committedDate.setUTCHours(0, 0, 0, 0)).getTime();\n            if (date <= time) {\n                while (index < markers.length - 1) {\n                    [daysAgo] = markers[index + 1];\n                    const nextDate = new Date(now);\n                    const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);\n\n                    if (date > nextTime) break;\n\n                    index++;\n                    time = undefined;\n                    [, marker] = markers[index];\n                }\n\n                // Don't show the last marker as the first entry -- since it could be wildly far off\n                if (!first || index < markers.length - 1) {\n                    yield new MessageNode(parent.view, parent, marker);\n                }\n\n                index++;\n                time = undefined;\n            }\n        }\n\n        first = false;\n        yield node;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitTrackingState, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface BranchTrackingStatus {\n    ref: string;\n    repoPath: string;\n    state: GitTrackingState;\n    upstream?: string;\n}\n\nexport class BranchTrackingStatusNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly status: BranchTrackingStatus,\n        public readonly direction: 'ahead' | 'behind',\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):${this._root ? 'root:' : ''}branch(${\n            this.status.ref\n        }):status:upstream:(${this.status.upstream}):${this.direction}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const ahead = this.direction === 'ahead';\n        const range = ahead\n            ? `${this.status.upstream}..${this.status.ref}`\n            : `${this.status.ref}..${this.status.upstream}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [];\n\n        let children;\n        if (ahead) {\n            // Since the last commit when we are looking 'ahead' can have no previous (because of the range given) -- look it up\n            const commits = [...log.commits.values()];\n            const commit = commits[commits.length - 1];\n            if (commit.previousSha === undefined) {\n                const previousLog = await Container.git.getLog(this.uri.repoPath!, { maxCount: 2, ref: commit.sha });\n                if (previousLog !== undefined) {\n                    commits[commits.length - 1] = Iterables.first(previousLog.commits.values());\n                }\n            }\n\n            children = [...insertDateMarkers(Iterables.map(commits, c => new CommitNode(this.view, this, c)), this, 1)];\n        }\n        else {\n            children = [\n                ...insertDateMarkers(\n                    Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c)),\n                    this,\n                    1\n                )\n            ];\n        }\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const ahead = this.direction === 'ahead';\n        const label = ahead\n            ? `${Strings.pluralize('commit', this.status.state.ahead)} ahead`\n            : `${Strings.pluralize('commit', this.status.state.behind)} behind`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        if (this._root) {\n            item.contextValue = ahead ? ResourceType.StatusAheadOfUpstream : ResourceType.StatusBehindUpstream;\n        }\n        else {\n            item.contextValue = ahead\n                ? ResourceType.BranchStatusAheadOfUpstream\n                : ResourceType.BranchStatusBehindUpstream;\n        }\n        item.tooltip = `${label}${ahead ? ' of ' : ''}${this.status.upstream}`;\n\n        const iconSuffix = ahead ? 'upload' : 'download';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitBranch, GitUri } from '../../git/gitService';\nimport { debug, gate, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class BranchNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly branch: GitBranch,\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.branch.repoPath})${this._root ? ':root:' : ''}:branch(${\n            this.branch.name\n        })${this.branch.current ? '+current:' : ''}${this.branch.remote ? '+remote' : ''}${\n            this.branch.starred ? '+starred:' : ''\n        }`;\n    }\n\n    get current(): boolean {\n        return this.branch.current;\n    }\n\n    get label(): string {\n        const branchName = this.branch.getName();\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchName;\n\n        return (this._root && this.current) || this.branch.detached || this.branch.starred\n            ? branchName\n            : this.branch.getBasename();\n    }\n\n    get ref(): string {\n        return this.branch.ref;\n    }\n\n    get treeHierarchy(): string[] {\n        return this.branch.detached || this.branch.starred ? [this.branch.name] : this.branch.getName().split('/');\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n            if (!this._root && this.branch.tracking) {\n                const status = {\n                    ref: this.branch.ref,\n                    repoPath: this.branch.repoPath,\n                    state: this.branch.state,\n                    upstream: this.branch.tracking\n                };\n\n                if (this.branch.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind'));\n                }\n\n                if (this.branch.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead'));\n                }\n            }\n\n            const log = await Container.git.getLog(this.uri.repoPath!, {\n                maxCount: this.maxCount || this.view.config.defaultItemLimit,\n                ref: this.ref\n            });\n            if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n            const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.branch.name);\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitNode(this.view, this, c, this.branch, getBranchAndTagTips)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits'));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const name = this.label;\n        let tooltip = `${this.branch.getName()}${this.current ? ' (current)' : ''}`;\n        let iconSuffix = '';\n\n        let description;\n        if (!this.branch.remote && this.branch.tracking !== undefined) {\n            if (this.view.config.showTrackingBranch) {\n                description = `${this.branch.getTrackingStatus({ suffix: `${GlyphChars.Space} ` })}${\n                    GlyphChars.ArrowLeftRightLong\n                }${GlyphChars.Space} ${this.branch.tracking}`;\n            }\n            tooltip += ` is tracking ${this.branch.tracking}\\n${this.branch.getTrackingStatus({\n                empty: 'up-to-date',\n                expand: true,\n                separator: '\\n'\n            })}`;\n\n            if (this.branch.state.ahead || this.branch.state.behind) {\n                if (this.branch.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (this.branch.state.ahead) {\n                    iconSuffix = this.branch.state.behind ? '-yellow' : '-green';\n                }\n            }\n        }\n\n        const item = new TreeItem(\n            // Hide the current branch checkmark when the node is displayed as a root under the repository node\n            `${!this._root && this.current ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.contextValue = ResourceType.Branch;\n        if (this.current) {\n            item.contextValue += '+current';\n        }\n        if (this.branch.remote) {\n            item.contextValue += '+remote';\n        }\n        if (this.branch.starred) {\n            item.contextValue += '+starred';\n        }\n        if (this.branch.tracking) {\n            item.contextValue += '+tracking';\n        }\n\n        item.description = description;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        return item;\n    }\n\n    @log()\n    async star() {\n        await this.branch.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.branch.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { BranchNode } from './branchNode';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nconst set = new Set();\n\nexport class BranchOrTagFolderNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly type: 'branch' | 'remote-branch' | 'tag',\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly relativePath: string | undefined,\n        public readonly root: Arrays.IHierarchicalItem<BranchNode | TagNode>,\n        private readonly _expanded: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repoPath}):${this.type}-folder(${this.relativePath})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        const children: (BranchOrTagFolderNode | BranchNode | TagNode)[] = [];\n\n        for (const folder of Objects.values(this.root.children)) {\n            if (folder.value === undefined) {\n                // If the folder contains the current branch, expand it by default\n                const expanded =\n                    folder.descendants !== undefined &&\n                    folder.descendants.some(n => n instanceof BranchNode && n.current);\n                children.push(\n                    new BranchOrTagFolderNode(\n                        this.view,\n                        this,\n                        this.type,\n                        this.repoPath,\n                        folder.name,\n                        folder.relativePath,\n                        folder,\n                        expanded\n                    )\n                );\n                continue;\n            }\n\n            children.push(folder.value);\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(\n            this.label,\n            this._expanded ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchesNode extends ViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):branches`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const branches = await this.repo.getBranches();\n            if (branches === undefined) return [];\n\n            branches.sort(\n                (a, b) =>\n                    (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n\n            // filter local branches\n            const branchNodes = [\n                ...Iterables.filterMap(branches, b =>\n                    b.remote ? undefined : new BranchNode(this.uri, this.view, this, b)\n                )\n            ];\n            if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n            const hierarchy = Arrays.makeHierarchical(\n                branchNodes,\n                n => n.treeHierarchy,\n                (...paths: string[]) => paths.join('/'),\n                this.view.config.files.compact\n            );\n\n            const root = new BranchOrTagFolderNode(this.view, this, 'branch', this.repo.path, '', undefined, hierarchy);\n            this._children = await root.getChildren();\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const remotes = await this.repo.getRemotes();\n\n        const item = new TreeItem(`Branches`, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Branches;\n        if (remotes !== undefined && remotes.length > 0) {\n            item.contextValue += '+remotes';\n        }\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-branch.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-branch.svg')\n        };\n        item.id = this.id;\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport {\n    GitCommitType,\n    GitLogCommit,\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class FileHistoryNode extends SubscribeableViewNode {\n    constructor(uri: GitUri, view: View, parent: ViewNode) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        if (this.uri.sha === undefined) {\n            const status = await Container.git.getStatusForFile(this.uri.repoPath!, this.uri.fsPath);\n            if (status !== undefined && (status.indexStatus !== undefined || status.workingTreeStatus !== undefined)) {\n                let sha;\n                let previousSha;\n                if (status.workingTreeStatus !== undefined) {\n                    sha = GitService.uncommittedSha;\n                    if (status.indexStatus !== undefined) {\n                        previousSha = GitService.stagedUncommittedSha;\n                    }\n                    else if (status.workingTreeStatus !== '?') {\n                        previousSha = 'HEAD';\n                    }\n                }\n                else {\n                    sha = GitService.stagedUncommittedSha;\n                    previousSha = 'HEAD';\n                }\n\n                const user = await Container.git.getCurrentUser(this.uri.repoPath!);\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    sha,\n                    'You',\n                    user !== undefined ? user.email : undefined,\n                    new Date(),\n                    new Date(),\n                    '',\n                    status.fileName,\n                    [status],\n                    status.status,\n                    status.originalFileName,\n                    previousSha,\n                    status.originalFileName || status.fileName\n                );\n                children.push(new CommitFileNode(this.view, this, status, commit, displayAs));\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs)\n                    ),\n                    this\n                )\n            );\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No file history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.FileHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`FileHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(\n            `FileHistoryNode${this.id}.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`\n        );\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport {\n    CancellationTokenSource,\n    commands,\n    QuickPickItem,\n    QuickPickOptions,\n    TextDocumentShowOptions,\n    TextEditor,\n    Uri,\n    window\n} from 'vscode';\nimport { Commands, openEditor } from '../commands';\nimport { configuration } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitRepoSearchBy, GitStashCommit, GitUri } from '../git/gitService';\nimport { KeyMapping, Keys } from '../keyboard';\nimport { Strings } from '../system';\nimport {\n    BranchesAndTagsQuickPick,\n    BranchQuickPickItem,\n    RefQuickPickItem,\n    TagQuickPickItem\n} from './branchesAndTagsQuickPick';\n\nexport function getQuickPickIgnoreFocusOut() {\n    return !configuration.get<boolean>(configuration.name('advanced')('quickPick')('closeOnFocusOut').value);\n}\n\nexport function showQuickPickProgress(message: string, mapping?: KeyMapping): CancellationTokenSource {\n    const cancellation = new CancellationTokenSource();\n    void _showQuickPickProgress(message, cancellation, mapping);\n    return cancellation;\n}\n\nasync function _showQuickPickProgress(message: string, cancellation: CancellationTokenSource, mapping?: KeyMapping) {\n    const scope = mapping && (await Container.keyboard.beginScope(mapping));\n\n    try {\n        await window.showQuickPick(\n            _getInfiniteCancellablePromise(cancellation),\n            {\n                placeHolder: message,\n                ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            } as QuickPickOptions,\n            cancellation.token\n        );\n    }\n    catch (ex) {\n        // Not sure why this throws\n    }\n    finally {\n        cancellation.cancel();\n        scope && scope.dispose();\n    }\n}\n\nfunction _getInfiniteCancellablePromise(cancellation: CancellationTokenSource) {\n    return new Promise<QuickPickItem[]>((resolve, reject) => {\n        const disposable = cancellation.token.onCancellationRequested(() => {\n            disposable.dispose();\n            resolve([]);\n        });\n    });\n}\n\nexport interface QuickPickItem extends QuickPickItem {\n    onDidSelect?(): void;\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nexport class CommandQuickPickItem implements QuickPickItem {\n    label!: string;\n    description!: string;\n    detail?: string | undefined;\n    protected command: Commands | undefined;\n    protected args: any[] | undefined;\n\n    constructor(item: QuickPickItem, args?: [Commands, any[]]);\n    constructor(item: QuickPickItem, command?: Commands, args?: any[]);\n    constructor(item: QuickPickItem, commandOrArgs?: Commands | [Commands, any[]], args?: any[]) {\n        if (commandOrArgs === undefined) {\n            this.command = undefined;\n            this.args = args;\n        }\n        else if (typeof commandOrArgs === 'string') {\n            this.command = commandOrArgs;\n            this.args = args;\n        }\n        else {\n            this.command = commandOrArgs[0];\n            this.args = commandOrArgs.slice(1);\n        }\n        Object.assign(this, item);\n    }\n\n    execute(): Promise<{} | undefined> {\n        if (this.command === undefined) return Promise.resolve(undefined);\n\n        return commands.executeCommand(this.command, ...(this.args || [])) as Promise<{} | undefined>;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute();\n    }\n}\n\nexport class CommitQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string;\n\n    constructor(\n        public readonly commit: GitLogCommit\n    ) {\n        const message = commit.getShortMessage();\n        if (commit.isStash) {\n            this.label = message;\n            this.description = '';\n            this.detail = `${GlyphChars.Space} ${(commit as GitStashCommit).stashName || commit.shortSha} ${Strings.pad(\n                GlyphChars.Dot,\n                1,\n                1\n            )} ${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({\n                compact: true\n            })}`;\n        }\n        else {\n            this.label = message;\n            this.description = `${Strings.pad('$(git-commit)', 1, 1)} ${commit.shortSha}`;\n            this.detail = `${GlyphChars.Space} ${commit.author}, ${commit.formattedDate}${\n                commit.isFile\n                    ? ''\n                    : ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({ compact: true })}`\n            }`;\n        }\n    }\n}\n\nexport class ChooseFromBranchesAndTagsQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly repoPath: string,\n        private readonly placeHolder: string,\n        private readonly _goBack?: CommandQuickPickItem,\n        item: QuickPickItem = {\n            label: 'Choose from Branch or Tag History...',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} shows list of branches and tags`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    execute(): Promise<CommandQuickPickItem | BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem | undefined> {\n        return new BranchesAndTagsQuickPick(this.repoPath).show(this.placeHolder, {\n            allowCommitId: true,\n            goBack: this._goBack\n        });\n    }\n}\n\nexport class KeyCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(command: Commands, args?: any[]) {\n        super({ label: '', description: '' } as QuickPickItem, command, args);\n    }\n}\n\nexport class MessageQuickPickItem extends CommandQuickPickItem {\n    constructor(message: string) {\n        super({ label: message, description: '' } as QuickPickItem);\n    }\n}\n\nexport class OpenFileCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: Uri,\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(options?: TextDocumentShowOptions): Promise<TextEditor | undefined> {\n        return openEditor(this.uri, options);\n    }\n\n    // onDidSelect(): Promise<{} | undefined> {\n    //     return this.execute({\n    //         preserveFocus: true,\n    //         preview: true\n    //     });\n    // }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uris: Uri[],\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        for (const uri of this.uris) {\n            await openEditor(uri, options);\n        }\n        return undefined;\n    }\n\n    async onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class ShowCommitInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly commit: GitLogCommit,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} displays the commit in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.search(this.commit.repoPath, this.commit.sha, GitRepoSearchBy.Sha, {\n            label: { label: `commits with an id matching '${this.commit.shortSha}'` }\n        });\n        return undefined;\n    }\n}\n\nexport class ShowCommitSearchResultsInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        public readonly results: GitLog,\n        public readonly resultsLabel: string | { label: string; resultsType?: { singular: string; plural: string } },\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the search results in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.showSearchResults(this.results.repoPath, this.search, this.searchBy, this.results, {\n            label: this.resultsLabel\n        });\n        return undefined;\n    }\n}\n\nexport class ShowFileHistoryInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: GitUri,\n        public readonly baseRef: string | undefined,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the file history in the GitLens File History view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.fileHistoryView.showHistoryForUri(this.uri, this.baseRef);\n        return undefined;\n    }\n}\n","'use strict';\nimport { CancellationToken, CancellationTokenSource, QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitService, GitTag } from '../git/gitService';\nimport { Functions } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RefQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly ref: string,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${GitService.shortenSha(\n            ref\n        )}`;\n        this.description = '';\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return undefined;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport class BranchQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly branch: GitBranch,\n        checked?: boolean\n    ) {\n        checked = checked || (checked === undefined && branch.current);\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${branch.name}`;\n        this.description = branch.remote\n            ? `${GlyphChars.Space.repeat(2)} remote branch`\n            : branch.current\n            ? 'current branch'\n            : '';\n    }\n\n    get current() {\n        return this.branch.current;\n    }\n\n    get item() {\n        return this.branch;\n    }\n\n    get ref() {\n        return this.branch.name;\n    }\n\n    get remote() {\n        return this.branch.remote;\n    }\n}\n\nexport class TagQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly tag: GitBranch | GitTag,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${tag.name}`;\n        this.description = `${GlyphChars.Space.repeat(2)} tag`;\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return this.tag;\n    }\n\n    get ref() {\n        return this.tag.name;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport type BranchAndTagQuickPickResult = BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem;\n\nexport interface BranchesAndTagsQuickPickOptions {\n    allowCommitId?: boolean;\n    autoPick?: boolean;\n    checked?: string;\n    filters?: {\n        branches?(branch: GitBranch): boolean;\n        tags?(tag: GitTag): boolean;\n    };\n    goBack?: CommandQuickPickItem;\n    include?: 'branches' | 'tags' | 'all';\n}\n\nexport class BranchesAndTagsQuickPick {\n    constructor(\n        public readonly repoPath: string\n    ) {}\n\n    async show(\n        placeHolder: string,\n        options: BranchesAndTagsQuickPickOptions = {}\n    ): Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined> {\n        const cancellation = new CancellationTokenSource();\n\n        let scope;\n        if (options.goBack) {\n            scope = await Container.keyboard.beginScope({ left: options.goBack });\n        }\n\n        let autoPick;\n        try {\n            let items = this.getItems(options, cancellation.token);\n            if (options.autoPick) {\n                items = items.then(itms => {\n                    if (itms.length <= 1) {\n                        autoPick = itms[0];\n                        cancellation.cancel();\n                    }\n                    return itms;\n                });\n            }\n\n            let pick;\n            if (options.allowCommitId) {\n                placeHolder += `${GlyphChars.Space.repeat(3)}(use # to enter a commit id)`;\n\n                const quickpick = window.createQuickPick<BranchAndTagQuickPickResult | CommandQuickPickItem>();\n                quickpick.busy = true;\n                quickpick.enabled = false;\n                quickpick.placeholder = placeHolder;\n                quickpick.ignoreFocusOut = getQuickPickIgnoreFocusOut();\n                quickpick.show();\n\n                quickpick.items = await items;\n                quickpick.busy = false;\n                quickpick.enabled = true;\n\n                pick = await new Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined>(resolve => {\n                    cancellation.token.onCancellationRequested(() => quickpick.hide());\n\n                    quickpick.onDidHide(() => resolve(undefined));\n                    quickpick.onDidChangeValue(value => {\n                        quickpick.title =\n                            value && value.startsWith('#')\n                                ? `Please enter a commit id (Press 'Enter' to confirm or 'Escape' to cancel)`\n                                : undefined;\n                    });\n                    quickpick.onDidAccept(async () => {\n                        if (quickpick.selectedItems.length === 0) {\n                            let ref = quickpick.value;\n                            if (!ref || !ref.startsWith('#')) return;\n\n                            ref = ref.substr(1);\n\n                            quickpick.busy = true;\n                            quickpick.enabled = false;\n\n                            if (await Container.git.validateReference(this.repoPath, ref)) {\n                                resolve(new RefQuickPickItem(ref));\n                            }\n                            else {\n                                quickpick.title = 'You must enter a valid commit id';\n                                quickpick.busy = false;\n                                quickpick.enabled = true;\n                                return;\n                            }\n                        }\n                        else {\n                            resolve(quickpick.selectedItems[0]);\n                        }\n\n                        quickpick.hide();\n                    });\n                });\n\n                quickpick.dispose();\n            }\n            else {\n                pick = await window.showQuickPick(\n                    items,\n                    {\n                        placeHolder: placeHolder,\n                        ignoreFocusOut: getQuickPickIgnoreFocusOut()\n                    } as QuickPickOptions,\n                    cancellation.token\n                );\n            }\n\n            if (pick === undefined && autoPick !== undefined) {\n                pick = autoPick;\n            }\n\n            if (pick === undefined) {\n                cancellation.cancel();\n            }\n\n            return pick;\n        }\n        finally {\n            if (scope !== undefined) {\n                await scope.dispose();\n            }\n\n            cancellation.dispose();\n        }\n    }\n\n    private async getItems(options: BranchesAndTagsQuickPickOptions, token: CancellationToken) {\n        const { checked, filters, goBack, include } = { include: 'all', ...options };\n\n        let branches;\n        let tags;\n        switch (include) {\n            case 'branches': {\n                const result = await Functions.cancellable(Container.git.getBranches(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                branches = result;\n                break;\n            }\n            case 'tags': {\n                const result = await Functions.cancellable(Container.git.getTags(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                tags = result;\n                break;\n            }\n            default: {\n                const result = await Functions.cancellable(\n                    Promise.all([Container.git.getBranches(this.repoPath), Container.git.getTags(this.repoPath)]),\n                    token\n                );\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                [branches, tags] = result;\n                break;\n            }\n        }\n\n        const items: (BranchQuickPickItem | TagQuickPickItem | CommandQuickPickItem)[] = [];\n\n        if (branches !== undefined) {\n            const filter =\n                filters !== undefined && typeof filters.branches === 'function' ? filters.branches : undefined;\n\n            branches.sort(\n                (a, b) =>\n                    (b.remote ? -1 : 1) - (a.remote ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n            for (const b of branches) {\n                if (filter !== undefined && !filter(b)) continue;\n\n                items.push(new BranchQuickPickItem(b, checked !== undefined ? b.name === checked : undefined));\n            }\n        }\n\n        if (tags !== undefined) {\n            const filter = filters !== undefined && typeof filters.tags === 'function' ? filters.tags : undefined;\n\n            tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n            for (const t of tags) {\n                if (filter !== undefined && !filter(t)) continue;\n\n                items.push(new TagQuickPickItem(t, checked !== undefined ? t.name === checked : undefined));\n            }\n        }\n\n        if (goBack !== undefined) {\n            items.splice(0, 0, goBack);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickOptions, window } from 'vscode';\nimport { Commands, OpenInRemoteCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport {\n    getNameFromRemoteResource,\n    GitLogCommit,\n    GitRemote,\n    GitService,\n    RemoteResource,\n    RemoteResourceType\n} from '../git/gitService';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class OpenRemoteCommandQuickPickItem extends CommandQuickPickItem {\n    private remote: GitRemote;\n    private resource: RemoteResource;\n\n    constructor(\n        remote: GitRemote,\n        resource: RemoteResource,\n        public readonly clipboard?: boolean\n    ) {\n        super(\n            {\n                label: clipboard\n                    ? `$(link-external) Copy ${getNameFromRemoteResource(resource)} Url to Clipboard from ${\n                          remote.provider!.name\n                      }`\n                    : `$(link-external) Open ${getNameFromRemoteResource(resource)} on ${remote.provider!.name}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path}`\n            },\n            undefined,\n            undefined\n        );\n\n        this.remote = remote;\n        this.resource = resource;\n    }\n\n    async execute(): Promise<{} | undefined> {\n        if (this.clipboard) return this.remote.provider!.copy(this.resource);\n\n        return this.remote.provider!.open(this.resource);\n    }\n}\n\nexport class OpenRemotesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(remotes: GitRemote[], resource: RemoteResource, goBackCommand?: CommandQuickPickItem) {\n        const name = getNameFromRemoteResource(resource);\n\n        let description = '';\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                description = `$(git-branch) ${resource.branch}`;\n                break;\n\n            case RemoteResourceType.Branches:\n                description = `$(git-branch) Branches`;\n                break;\n\n            case RemoteResourceType.Commit:\n                const shortSha = GitService.shortenSha(resource.sha);\n                description = `$(git-commit) ${shortSha}`;\n                break;\n\n            case RemoteResourceType.File:\n                description = `$(file-text) ${paths.basename(resource.fileName)}`;\n                break;\n\n            case RemoteResourceType.Repo:\n                description = `$(repo) Repository`;\n                break;\n\n            case RemoteResourceType.Revision:\n                if (resource.commit !== undefined && resource.commit instanceof GitLogCommit) {\n                    if (resource.commit.status === 'D') {\n                        resource.sha = resource.commit.previousSha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.previousShortSha} (deleted in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha})`;\n                    }\n                    else {\n                        resource.sha = resource.commit.sha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha}`;\n                    }\n                }\n                else {\n                    const shortFileSha = resource.sha === undefined ? '' : GitService.shortenSha(resource.sha);\n                    description = `$(file-text) ${paths.basename(resource.fileName)}${\n                        shortFileSha ? ` in ${GlyphChars.Space}$(git-commit) ${shortFileSha}` : ''\n                    }`;\n                }\n                break;\n        }\n\n        let remote: GitRemote | undefined;\n        if (remotes.length > 1) {\n            remote = remotes.find(r => r.default);\n        }\n        else if (remotes.length === 1) {\n            remote = remotes[0];\n        }\n\n        if (remote != null) {\n            super(\n                {\n                    label: `$(link-external) Open ${name} on ${remote.provider!.name}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path} ${Strings.pad(\n                        GlyphChars.Dot,\n                        1,\n                        1\n                    )} ${description}`\n                },\n                Commands.OpenInRemote,\n                [\n                    undefined,\n                    {\n                        remotes,\n                        resource,\n                        goBackCommand\n                    } as OpenInRemoteCommandArgs\n                ]\n            );\n\n            return;\n        }\n\n        remote = remotes[0];\n        // Use the real provider name if there is only 1 provider\n        const provider = remotes.every(r => r.provider !== undefined && r.provider.name === remote!.provider!.name)\n            ? remote.provider!.name\n            : 'Remote';\n\n        super(\n            {\n                label: `$(link-external) Open ${name} on ${provider}${GlyphChars.Ellipsis}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${description}`\n            },\n            Commands.OpenInRemote,\n            [\n                undefined,\n                {\n                    remotes,\n                    resource,\n                    goBackCommand\n                } as OpenInRemoteCommandArgs\n            ]\n        );\n    }\n}\n\nexport class RemotesQuickPick {\n    static async show(\n        remotes: GitRemote[],\n        placeHolder: string,\n        resource: RemoteResource,\n        clipboard?: boolean,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<OpenRemoteCommandQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = remotes.map(r => new OpenRemoteCommandQuickPickItem(r, resource, clipboard)) as (\n            | OpenRemoteCommandQuickPickItem\n            | CommandQuickPickItem)[];\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n        if (pick === undefined) return undefined;\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, ShowQuickBranchHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class BranchHistoryQuickPick {\n    static showProgress(branch: string) {\n        return showQuickPickProgress(\n            `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            {\n                left: KeyNoopCommand,\n                ',': KeyNoopCommand,\n                '.': KeyNoopCommand\n            }\n        );\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri | undefined,\n        branch: string,\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        nextPageCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${\n                    GlyphChars.Space\n                }$(git-branch) ${branch} history`\n            },\n            Commands.ShowQuickBranchHistory,\n            [\n                uri,\n                {\n                    branch,\n                    log,\n                    maxCount: log.maxCount,\n                    goBackCommand\n                } as ShowQuickBranchHistoryCommandArgs\n            ]\n        );\n\n        const remotes = await Container.git.getRemotes((uri && uri.repoPath) || log.repoPath);\n        if (remotes.length) {\n            items.splice(\n                0,\n                0,\n                new OpenRemotesCommandQuickPickItem(\n                    remotes,\n                    {\n                        type: RemoteResourceType.Branch,\n                        branch: branch\n                    },\n                    currentCommand\n                )\n            );\n        }\n\n        let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n        if (log.truncated || log.sha) {\n            if (log.truncated) {\n                items.splice(\n                    0,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `$(sync) Show All Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            GitUri.fromRepoPath(log.repoPath),\n                            {\n                                branch,\n                                maxCount: 0,\n                                goBackCommand\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    )\n                );\n            }\n\n            if (nextPageCommand) {\n                items.splice(0, 0, nextPageCommand);\n            }\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        uri,\n                        {\n                            branch,\n                            maxCount: log.maxCount,\n                            nextPageCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            new GitUri(uri ? uri : last.uri, last),\n                            {\n                                branch,\n                                maxCount: log.maxCount,\n                                goBackCommand,\n                                nextPageCommand: npc\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    );\n\n                    items.splice(0, 0, previousPageCommand);\n                }\n            }\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousPageCommand,\n            '.': nextPageCommand\n        });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickItem, QuickPickOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class ApplyCommitFileChangesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly commit: GitLogCommit,\n        item?: QuickPickItem\n    ) {\n        super(\n            item || {\n                label: `$(git-pull-request) Apply Changes`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(file-text) ${paths.basename(\n                    commit.fileName\n                )} in ${GlyphChars.Space}$(git-commit) ${commit.shortSha}`\n            },\n            undefined,\n            undefined\n        );\n    }\n\n    async execute(): Promise<{} | undefined> {\n        const uri = this.commit.toGitUri();\n        void (await openEditor(uri, { preserveFocus: true, preview: false }));\n\n        void (await Container.git.applyChangesToWorkingFile(uri));\n\n        return undefined;\n    }\n}\n\nexport class OpenCommitFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uri = GitUri.resolveToUri(commit.fileName, commit.repoPath);\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open File`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)}`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        let description: string;\n        let uri: Uri;\n        if (commit.status === 'D') {\n            uri = GitUri.toRevisionUri(commit.previousFileSha, commit.previousUri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.previousShortSha} (deleted in ${GlyphChars.Space}$(git-commit) ${commit.shortSha})`;\n        }\n        else {\n            uri = GitUri.toRevisionUri(commit.sha, commit.uri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.shortSha}`;\n        }\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open Revision`,\n                description: description\n            }\n        );\n    }\n}\n\nexport class CommitFileQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        fileLog?: GitLog\n    ): Promise<CommandQuickPickItem | undefined> {\n        const items: CommandQuickPickItem[] = [];\n\n        const stash = commit.isStash;\n\n        const workingName =\n            (commit.workingFileName && paths.basename(commit.workingFileName)) || paths.basename(commit.fileName);\n\n        const isUncommitted = commit.isUncommitted;\n        if (isUncommitted) {\n            // Since we can't trust the previous sha on an uncommitted commit, find the last commit for this file\n            const c = await Container.git.getRecentLogCommitForFile(undefined, commit.uri.fsPath);\n            if (c === undefined) return undefined;\n\n            commit = c;\n        }\n\n        await commit.resolvePreviousFileSha();\n\n        if (stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n        }\n\n        if (commit.previousFileShortSha) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${\n                            commit.previousFileShortSha\n                        } ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.DiffWithPrevious,\n                    [\n                        commit.uri,\n                        {\n                            commit\n                        } as DiffWithPreviousCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes with Working File`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                            GlyphChars.Space\n                        } $(git-compare) ${GlyphChars.Space} $(file-text) ${workingName}`\n                    },\n                    Commands.DiffWithWorking,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            commit\n                        } as DiffWithWorkingCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName && commit.status !== 'D') {\n            items.push(new OpenCommitFileCommandQuickPickItem(commit));\n        }\n        items.push(new OpenCommitFileRevisionCommandQuickPickItem(commit));\n\n        const remotes = await Container.git.getRemotes(commit.repoPath);\n        if (remotes.length) {\n            if (commit.workingFileName && commit.status !== 'D') {\n                const branch = await Container.git.getBranch(commit.repoPath);\n                if (branch !== undefined) {\n                    items.push(\n                        new OpenRemotesCommandQuickPickItem(\n                            remotes,\n                            {\n                                type: RemoteResourceType.File,\n                                fileName: commit.workingFileName,\n                                branch: branch.name\n                            },\n                            currentCommand\n                        )\n                    );\n                }\n            }\n\n            if (!stash) {\n                items.push(\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Revision,\n                            fileName: commit.fileName,\n                            commit: commit\n                        },\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        if (!stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit Message to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.CopyMessageToClipboard,\n                    [\n                        uri,\n                        {\n                            message: commit.message,\n                            sha: commit.sha\n                        } as CopyMessageToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(commit.fileName)}`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            fileLog,\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (!stash) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show ${commit.workingFileName ? 'Previous ' : ''}File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                            commit.fileName\n                        )} ${Strings.pad(GlyphChars.Dot, 1, 1)} from ${GlyphChars.Space}$(git-commit) ${\n                            commit.shortSha\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        commit.toGitUri(),\n                        {\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-commit) Show Commit Details`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        commit.toGitUri(),\n                        {\n                            commit,\n                            sha: commit.sha,\n                            goBackCommand: currentCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.previousUri,\n                              {\n                                  fileLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.nextUri,\n                              {\n                                  fileLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLogForFile(commit.repoPath, uri.fsPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha,\n                            renames: true\n                        });\n                        if (log === undefined) return KeyNoopCommand;\n\n                        c = log && log.commits.get(commit.sha);\n                        // Since we exclude merge commits in file log, just grab the first returned commit\n                        if (c === undefined && commit.isMerge) {\n                            c = Iterables.first(log.commits.values());\n                        }\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                            c.nextFileName = commit.nextFileName;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.previousUri,\n                        {\n                            fileLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const next = await Container.git.findNextCommit(commit.repoPath, uri.fsPath, commit.sha);\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                            c.nextFileName = next.originalFileName || next.fileName;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.nextUri,\n                        {\n                            fileLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `${commit.getFormattedPath()} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                isUncommitted ? `Uncommitted ${GlyphChars.ArrowRightHollow} ` : ''\n            }${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.author}, ${\n                commit.formattedDate\n            } ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item as KeyCommand);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffDirectoryCommandArgs,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    StashApplyCommandArgs,\n    StashDeleteCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitFile,\n    GitFileStatus,\n    GitLog,\n    GitLogCommit,\n    GitStashCommit,\n    GitUri,\n    RemoteResourceType\n} from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand, Keys } from '../keyboard';\nimport { Arrays, Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem,\n    OpenFilesCommandQuickPickItem,\n    QuickPickItem,\n    ShowCommitInViewQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class CommitWithFileStatusQuickPickItem extends OpenFileCommandQuickPickItem {\n    readonly status: GitFileStatus;\n\n    readonly commit: GitLogCommit;\n\n    constructor(commit: GitLogCommit, file: GitFile) {\n        const octicon = GitFile.getStatusOcticon(file.status);\n        const description = GitFile.getFormattedDirectory(file, true);\n\n        super(GitUri.toRevisionUri(commit.sha, file, commit.repoPath), {\n            label: `${Strings.pad(octicon, 4, 2)} ${paths.basename(file.fileName)}`,\n            description: description\n        });\n\n        this.commit = commit.toFileCommit(file);\n        this.status = file.status;\n    }\n\n    get sha(): string {\n        return this.commit.sha;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        if (this.commit.previousSha === undefined) return super.onDidPressKey(key);\n\n        return commands.executeCommand(Commands.DiffWithPrevious, this.commit.toGitUri(), {\n            commit: this.commit,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenCommitFilesCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, versioned: boolean = false, item?: QuickPickItem) {\n        const repoPath = commit.repoPath;\n        const uris = Arrays.filterMap(commit.files, f => GitUri.fromFile(f, repoPath));\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Files`,\n                description: ''\n                // detail: `Opens all of the changed file in the working tree`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionsCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uris = Arrays.filterMap(commit.files, f =>\n            GitUri.toRevisionUri(f.status === 'D' ? commit.previousFileSha : commit.sha, f, commit.repoPath)\n        );\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Revisions`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} in ${GlyphChars.Space}$(git-commit) ${\n                    commit.shortSha\n                }`\n                // detail: `Opens all of the changed files in $(git-commit) ${commit.shortSha}`\n            }\n        );\n    }\n}\n\nexport class CommitQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        repoLog?: GitLog\n    ): Promise<CommitWithFileStatusQuickPickItem | CommandQuickPickItem | undefined> {\n        await commit.resolvePreviousFileSha();\n\n        const items: (CommitWithFileStatusQuickPickItem | CommandQuickPickItem)[] = commit.files.map(\n            fs => new CommitWithFileStatusQuickPickItem(commit, fs)\n        );\n\n        const stash = commit.isStash;\n\n        let index = 0;\n\n        if (stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-pull-request) Apply Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashApply,\n                    [\n                        {\n                            confirm: true,\n                            deleteAfter: false,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashApplyCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(x) Delete Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashDelete,\n                    [\n                        {\n                            confirm: true,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashDeleteCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n        }\n        else {\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n\n            const remotes = await Container.git.getRemotes(commit.repoPath);\n            if (remotes.length) {\n                items.splice(\n                    index++,\n                    0,\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Commit,\n                            sha: commit.sha\n                        },\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        items.splice(index++, 0, new OpenCommitFilesCommandQuickPickItem(commit));\n        items.splice(index++, 0, new OpenCommitFileRevisionsCommandQuickPickItem(commit));\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Previous Revision`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.previousFileShortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                },\n                Commands.DiffDirectory,\n                [\n                    commit.uri,\n                    {\n                        ref1: commit.previousFileSha,\n                        ref2: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Working Tree`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(file-directory) Working Tree`\n                },\n                Commands.DiffDirectory,\n                [\n                    uri,\n                    {\n                        ref1: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        if (!stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(clippy) Copy Commit Message to Clipboard`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                },\n                Commands.CopyMessageToClipboard,\n                [\n                    uri,\n                    {\n                        message: commit.message,\n                        sha: commit.sha\n                    } as CopyMessageToClipboardCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `Changed Files`,\n                    description: commit.getFormattedDiffStatus()\n                },\n                Commands.ShowQuickCommitDetails,\n                [\n                    uri,\n                    {\n                        commit,\n                        repoLog,\n                        sha: commit.sha,\n                        goBackCommand\n                    } as ShowQuickCommitDetailsCommandArgs\n                ]\n            )\n        );\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (repoLog !== undefined && !repoLog.truncated && repoLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.previousUri,\n                              {\n                                  repoLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.nextUri,\n                              {\n                                  repoLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLog(commit.repoPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha\n                        });\n                        c = log && log.commits.get(commit.sha);\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.previousUri,\n                        {\n                            repoLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const nextLog = await Container.git.getLog(commit.repoPath, {\n                            maxCount: 1,\n                            reverse: true,\n                            ref: commit.sha\n                        });\n                        const next = nextLog && Iterables.first(nextLog.commits.values());\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.nextUri,\n                        {\n                            repoLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                commit.author ? `${commit.author}, ` : ''\n            }${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n                if (typeof item.onDidSelect === 'function') {\n                    item.onDidSelect();\n                }\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitLog } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    MessageQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class CommitsQuickPick {\n    static showProgress(message: string) {\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog | undefined,\n        placeHolder: string,\n        progressCancellation: CancellationTokenSource,\n        options: {\n            goBackCommand?: CommandQuickPickItem;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        }\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((log && [...Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))]) || [\n            new MessageQuickPickItem('No results found')\n        ]) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (options.showInViewCommand !== undefined) {\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (options.showAllCommand !== undefined) {\n            items.splice(0, 0, options.showAllCommand);\n        }\n\n        if (options.goBackCommand !== undefined) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: options.goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { CancellationTokenSource, QuickPickOptions, Uri, window } from 'vscode';\nimport { Commands, ShowQuickCurrentBranchHistoryCommandArgs, ShowQuickFileHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class FileHistoryQuickPick {\n    static showProgress(placeHolder: string) {\n        return showQuickPickProgress(placeHolder, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri,\n        placeHolder: string,\n        options: {\n            currentCommand?: CommandQuickPickItem;\n            goBackCommand?: CommandQuickPickItem;\n            nextPageCommand?: CommandQuickPickItem;\n            previousPageCommand?: CommandQuickPickItem;\n            pickerOnly?: boolean;\n            progressCancellation?: CancellationTokenSource;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        } = {}\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        options = { pickerOnly: false, ...options };\n\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        let index = 0;\n\n        index++;\n        items.splice(\n            0,\n            0,\n            new ChooseFromBranchesAndTagsQuickPickItem(log.repoPath, placeHolder, options.currentCommand)\n        );\n\n        if (options.showInViewCommand !== undefined) {\n            index++;\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (log.truncated || log.sha) {\n            if (options.showAllCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.showAllCommand);\n            }\n            else if (!options.pickerOnly) {\n                const [workingFileName] = await Container.git.findWorkingFileName(\n                    paths.relative(log.repoPath, uri.fsPath),\n                    log.repoPath\n                );\n                if (workingFileName) {\n                    index++;\n                    items.splice(\n                        0,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show File History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                                    workingFileName\n                                )}`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [\n                                GitUri.resolveToUri(workingFileName, log.repoPath),\n                                {\n                                    goBackCommand: new CommandQuickPickItem(\n                                        {\n                                            label: `go back ${GlyphChars.ArrowBack}`,\n                                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                                                GlyphChars.Space\n                                            }$(file-text) ${paths.basename(uri.fsPath)}${\n                                                uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                                            }`\n                                        },\n                                        Commands.ShowQuickFileHistory,\n                                        [\n                                            uri,\n                                            {\n                                                log: log,\n                                                maxCount: log.maxCount,\n                                                range: log.range,\n                                                goBackCommand: options.goBackCommand\n                                            } as ShowQuickFileHistoryCommandArgs\n                                        ]\n                                    )\n                                } as ShowQuickFileHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n            }\n\n            if (options.nextPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.nextPageCommand);\n            }\n\n            if (options.previousPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.previousPageCommand);\n            }\n        }\n\n        if (!options.pickerOnly) {\n            const branch = await Container.git.getBranch(uri.repoPath!);\n\n            if (branch !== undefined) {\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${paths.basename(uri.fsPath)}${\n                            uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        uri,\n                        {\n                            log,\n                            maxCount: log.maxCount,\n                            range: log.range\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                );\n\n                // Only show the full repo option if we are the root\n                if (options.goBackCommand === undefined) {\n                    items.splice(\n                        index++,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show Branch History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows  ${\n                                    GlyphChars.Space\n                                }$(git-branch) ${branch.name} history`\n                            },\n                            Commands.ShowQuickCurrentBranchHistory,\n                            [\n                                undefined,\n                                {\n                                    goBackCommand: currentCommand\n                                } as ShowQuickCurrentBranchHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n\n                const remotes = await Container.git.getRemotes(uri.repoPath!);\n                if (remotes.length) {\n                    const resource: RemoteResource =\n                        uri.sha !== undefined\n                            ? {\n                                  type: RemoteResourceType.Revision,\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath(),\n                                  sha: uri.sha\n                              }\n                            : {\n                                  type: RemoteResourceType.File,\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath()\n                              };\n                    items.splice(index++, 0, new OpenRemotesCommandQuickPickItem(remotes, resource, currentCommand));\n                }\n            }\n\n            if (options.goBackCommand) {\n                items.splice(0, 0, options.goBackCommand);\n            }\n        }\n\n        if (options.progressCancellation !== undefined && options.progressCancellation.token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': options.previousPageCommand,\n            '.': options.nextPageCommand\n        });\n\n        options.progressCancellation && options.progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { Repository } from '../git/gitService';\nimport { Iterables } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RepositoryQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly repository: Repository\n    ) {\n        this.label = repository.name;\n        this.description = repository.path;\n    }\n\n    get repoPath(): string {\n        return this.repository.path;\n    }\n}\n\nexport class RepositoriesQuickPick {\n    static async show(\n        placeHolder: string,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<RepositoryQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = [\n            ...Iterables.map(await Container.git.getRepositories(), r => new RepositoryQuickPickItem(r))\n        ] as (RepositoryQuickPickItem | CommandQuickPickItem)[];\n\n        if (goBackCommand !== undefined) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    OpenChangedFilesCommandArgs,\n    ShowQuickBranchHistoryCommandArgs,\n    ShowQuickRepoStatusCommandArgs,\n    ShowQuickStashListCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitCommitType,\n    GitFileStatus,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitStatusFile,\n    GitUri\n} from '../git/gitService';\nimport { Keys } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    OpenFileCommandQuickPickItem,\n    QuickPickItem\n} from './commonQuickPicks';\n\nexport class OpenStatusFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    public readonly status: GitStatusFile;\n    private readonly commit: GitLogCommit;\n\n    constructor(status: GitStatusFile, realIndexStatus?: GitFileStatus, item?: QuickPickItem) {\n        const octicon = status.getOcticon();\n        const description = status.getFormattedDirectory(true);\n\n        super(\n            status.uri,\n            item || {\n                label: `${status.staged ? '$(check)' : GlyphChars.Space.repeat(3)}${Strings.pad(\n                    octicon,\n                    2,\n                    2\n                )} ${paths.basename(status.fileName)}`,\n                description: description\n            }\n        );\n\n        this.status = status;\n        if (status.indexStatus !== undefined) {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.stagedUncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                'HEAD',\n                status.fileName\n            );\n        }\n        else {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.uncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                realIndexStatus !== undefined ? GitService.stagedUncommittedSha : 'HEAD',\n                status.fileName\n            );\n        }\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return commands.executeCommand(Commands.DiffWithPrevious, GitUri.fromFile(this.status, this.status.repoPath), {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenStatusFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(files: GitStatusFile[], item?: QuickPickItem) {\n        const uris = files.map(f => f.uri);\n\n        super(\n            item || {\n                label: `$(file-symlink-file) Open Changed Files`,\n                description: ''\n                // detail: `Opens all of the changed files in the repository`\n            },\n            Commands.OpenChangedFiles,\n            [\n                undefined,\n                {\n                    uris\n                } as OpenChangedFilesCommandArgs\n            ]\n        );\n    }\n}\n\ninterface ComputedStatus {\n    staged: number;\n    stagedAddsAndChanges: GitStatusFile[];\n    stagedStatus: string;\n\n    unstaged: number;\n    unstagedAddsAndChanges: GitStatusFile[];\n    unstagedStatus: string;\n}\n\nexport class RepoStatusQuickPick {\n    private static computeStatus(files: GitStatusFile[]): ComputedStatus {\n        let stagedAdds = 0;\n        let unstagedAdds = 0;\n        let stagedChanges = 0;\n        let unstagedChanges = 0;\n        let stagedDeletes = 0;\n        let unstagedDeletes = 0;\n\n        const stagedAddsAndChanges: GitStatusFile[] = [];\n        const unstagedAddsAndChanges: GitStatusFile[] = [];\n\n        for (const f of files) {\n            switch (f.indexStatus) {\n                case 'A':\n                case '?':\n                    stagedAdds++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    stagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    stagedChanges++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n            }\n\n            switch (f.workingTreeStatus) {\n                case 'A':\n                case '?':\n                    unstagedAdds++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    unstagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    unstagedChanges++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n            }\n        }\n\n        const staged = stagedAdds + stagedChanges + stagedDeletes;\n        const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;\n\n        return {\n            staged: staged,\n            stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : '',\n            stagedAddsAndChanges: stagedAddsAndChanges,\n            unstaged: unstaged,\n            unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : '',\n            unstagedAddsAndChanges: unstagedAddsAndChanges\n        };\n    }\n\n    static async show(\n        status: GitStatus,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<\n        OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem | undefined\n    > {\n        const items = [\n            ...Iterables.flatMap(status.files, s => {\n                if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                    return [\n                        new OpenStatusFileCommandQuickPickItem(s.with({ indexStatus: null }), s.indexStatus),\n                        new OpenStatusFileCommandQuickPickItem(s.with({ workTreeStatus: null }))\n                    ];\n                }\n                else {\n                    return [new OpenStatusFileCommandQuickPickItem(s)];\n                }\n            })\n        ] as (OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem)[];\n\n        // Sort the status by staged and then filename\n        items.sort(\n            (a, b) =>\n                ((a as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) -\n                    ((b as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) ||\n                (a as OpenStatusFileCommandQuickPickItem).status.fileName.localeCompare(\n                    (b as OpenStatusFileCommandQuickPickItem).status.fileName,\n                    undefined,\n                    { numeric: true, sensitivity: 'base' }\n                )\n        );\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                    status.branch\n                } status`\n            },\n            Commands.ShowQuickRepoStatus,\n            [\n                undefined,\n                {\n                    goBackCommand\n                } as ShowQuickRepoStatusCommandArgs\n            ]\n        );\n\n        const computed = this.computeStatus(status.files);\n        if (computed.staged > 0) {\n            let index = 0;\n            const unstagedIndex = computed.unstaged > 0 ? status.files.findIndex(f => !f.staged) : -1;\n            if (unstagedIndex > -1) {\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `Unstaged Files`,\n                            description: computed.unstagedStatus\n                        },\n                        Commands.ShowQuickRepoStatus,\n                        [\n                            undefined,\n                            {\n                                goBackCommand\n                            } as ShowQuickRepoStatusCommandArgs\n                        ]\n                    )\n                );\n\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new OpenStatusFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Staged Files`,\n                        description: ''\n                    })\n                );\n\n                items.push(\n                    new OpenStatusFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Unstaged Files`,\n                        description: ''\n                    })\n                );\n            }\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Staged Files`,\n                        description: computed.stagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n        else if (status.files.some(f => !f.staged)) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Unstaged Files`,\n                        description: computed.unstagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.files.length) {\n            items.push(\n                new OpenStatusFilesCommandQuickPickItem(\n                    computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)\n                )\n            );\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Close Unchanged Files',\n                        description: ''\n                    },\n                    Commands.CloseUnchangedFiles\n                )\n            );\n        }\n        else {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `No changes in the working tree`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            0,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(inbox) Show Stashed Changes`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows stashed changes in the repository`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    GitUri.fromRepoPath(status.repoPath),\n                    {\n                        goBackCommand: currentCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            )\n        );\n\n        if (status.upstream && status.state.ahead) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-upload)${GlyphChars.Space} ${status.state.ahead} Commit${\n                            status.state.ahead > 1 ? 's' : ''\n                        } ahead of ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.branch} but not ${GlyphChars.Space}$(git-branch) ${status.upstream}`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.upstream}..${status.ref}`),\n                        {\n                            branch: status.ref,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-download)${GlyphChars.Space} ${status.state.behind} Commit${\n                            status.state.behind > 1 ? 's' : ''\n                        } behind ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.upstream} but not ${GlyphChars.Space}$(git-branch) ${status.branch}${\n                            status.sha\n                                ? ` (since ${GlyphChars.Space}$(git-commit) ${GitService.shortenSha(status.sha)})`\n                                : ''\n                        }`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.ref}..${status.upstream}`),\n                        {\n                            branch: status.upstream,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && !status.state.ahead && !status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-branch) ${status.branch} is up-to-date with ${GlyphChars.Space}$(git-branch) ${\n                            status.upstream\n                        }`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `status of ${status.branch}${\n                status.upstream ? ` ${Strings.pad(GlyphChars.ArrowLeftRightLong, 1, 1)} ${status.upstream}` : ''\n            }`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, StashSaveCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStash } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class StashListQuickPick {\n    static showProgress(mode: 'list' | 'apply') {\n        const message =\n            mode === 'apply'\n                ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`;\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        stash: GitStash,\n        mode: 'list' | 'apply',\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((stash && Array.from(Iterables.map(stash.commits.values(), c => new CommitQuickPickItem(c)))) ||\n            []) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (mode === 'list') {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(plus) Stash Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} stashes all changes`\n                    },\n                    Commands.StashSave,\n                    [\n                        {\n                            goBackCommand: currentCommand\n                        } as StashSaveCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder:\n                mode === 'apply'\n                    ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                    : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, Uri, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { FileHistoryView } from '../fileHistoryView';\nimport { MessageNode } from './common';\nimport { FileHistoryNode } from './fileHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class FileHistoryTrackerNode extends SubscribeableViewNode<FileHistoryView> {\n    private _baseRef: string | undefined;\n    private _fileUri: GitUri | undefined;\n    private _child: FileHistoryNode | undefined;\n\n    constructor(view: FileHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this._fileUri === undefined && this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide file history information.'\n                    )\n                ];\n            }\n\n            const uri = this._fileUri || this.uri;\n            const fileUri = new GitUri(uri, { ...uri, sha: this._baseRef || uri.sha } as GitCommitish);\n            this._child = new FileHistoryNode(fileUri, this.view, this);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('File History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveFileHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the file history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._baseRef\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._baseRef = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (reset) {\n            this._uri = unknownGitUri;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (UriComparer.equals(editor!.document.uri, this.uri)) {\n            return true;\n        }\n\n        let gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        let uri;\n        if (gitUri.sha !== undefined) {\n            // If we have a sha, normalize the history to the working file (so we get a full history all the time)\n            const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                gitUri.fsPath,\n                gitUri.repoPath,\n                gitUri.sha\n            );\n\n            if (fileName !== undefined) {\n                uri = GitUri.resolveToUri(fileName, repoPath);\n            }\n        }\n\n        if (this.uri !== unknownGitUri && UriComparer.equals(uri || gitUri, this.uri)) {\n            return true;\n        }\n\n        if (uri !== undefined) {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        this._uri = gitUri;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        if (enabled && this._fileUri !== undefined) {\n            this._fileUri = undefined;\n            this._baseRef = undefined;\n\n            this._uri = unknownGitUri;\n            // Don't need to call triggerChange here, since canSubscribe will do it\n        }\n\n        this.canSubscribe = enabled;\n    }\n\n    @gate()\n    @log()\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        this._fileUri = uri;\n        this._baseRef = baseRef;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        return Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitCommitType, GitFile, GitLogCommit } from '../../git/git';\nimport {\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class LineHistoryNode extends SubscribeableViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly selection: Selection\n    ) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha,\n            range: this.selection\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.filterMap(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs, this.selection)\n                    ),\n                    this\n                )\n            );\n        }\n\n        const blame = await Container.git.getBlameForLine(this.uri, this.selection.active.line);\n        if (blame !== undefined) {\n            let first = children[0] as CommitFileNode | undefined;\n            if (first !== undefined && !(first instanceof CommitFileNode)) {\n                first = children[1] as CommitFileNode | undefined;\n            }\n\n            if (first === undefined || first.commit.sha !== blame.commit.sha) {\n                const file: GitFile = {\n                    fileName: blame.commit.fileName,\n                    indexStatus: '?',\n                    originalFileName: blame.commit.originalFileName,\n                    repoPath: this.uri.repoPath!,\n                    status: 'M',\n                    workingTreeStatus: '?'\n                };\n\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    blame.commit.sha,\n                    'You',\n                    blame.commit.email,\n                    blame.commit.date,\n                    // TODO: Add committed date to blame?\n                    blame.commit.date,\n                    blame.commit.message,\n                    blame.commit.fileName,\n                    [file],\n                    'M',\n                    blame.commit.originalFileName,\n                    blame.commit.previousSha,\n                    blame.commit.originalFileName || blame.commit.fileName\n                );\n\n                children.splice(0, 0, new CommitFileNode(this.view, this, file, commit, displayAs, this.selection));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No line history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const lines = this.selection.isSingleLine\n            ? ` #${this.selection.start.line + 1}`\n            : ` #${this.selection.start.line + 1}-${this.selection.end.line + 1}`;\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${lines}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.LineHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}${lines}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`LineHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(`LineHistoryNode.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { LinesChangeEvent } from '../../trackers/gitLineTracker';\nimport { LineHistoryView } from '../lineHistoryView';\nimport { MessageNode } from './common';\nimport { LineHistoryNode } from './lineHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class LineHistoryTrackerNode extends SubscribeableViewNode<LineHistoryView> {\n    private _base: string | undefined;\n    private _child: LineHistoryNode | undefined;\n    private _selection: Selection | undefined;\n\n    constructor(view: LineHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide line history information.'\n                    )\n                ];\n            }\n\n            const fileUri = new GitUri(this.uri, { ...this.uri, sha: this.uri.sha || this._base } as GitCommitish);\n            this._child = new LineHistoryNode(fileUri, this.view, this, this._selection!);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Line History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveLineHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the line history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._base\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._base = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (reset) {\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (\n            UriComparer.equals(editor!.document.uri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        const gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        if (\n            this.uri !== unknownGitUri &&\n            UriComparer.equals(gitUri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        this._uri = gitUri;\n        this._selection = editor.selection;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        this.canSubscribe = enabled;\n    }\n\n    @debug()\n    protected async subscribe() {\n        if (Container.lineTracker.isSubscribed(this)) return undefined;\n\n        const onActiveLinesChanged = Functions.debounce(this.onActiveLinesChanged.bind(this), 250);\n\n        return Container.lineTracker.start(\n            this,\n            Disposable.from(\n                Container.lineTracker.onDidChangeActiveLines((e: LinesChangeEvent) => {\n                    if (e.pending) return;\n\n                    onActiveLinesChanged(e);\n                })\n            )\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitRemote, GitRemoteType, GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemoteNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly remote: GitRemote,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.remote.repoPath}):remote(${this.remote.name})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const branches = await this.repo.getBranches();\n        if (branches === undefined) return [];\n\n        branches.sort(\n            (a, b) =>\n                (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n        );\n\n        // filter remote branches\n        const branchNodes = [\n            ...Iterables.filterMap(branches, b =>\n                !b.remote || !b.name.startsWith(this.remote.name)\n                    ? undefined\n                    : new BranchNode(this.uri, this.view, this, b)\n            )\n        ];\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            branchNodes,\n            n => n.treeHierarchy,\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'remote-branch',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | BranchNode)[];\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const fetch = this.remote.types.find(rt => rt.type === GitRemoteType.Fetch);\n        const push = this.remote.types.find(rt => rt.type === GitRemoteType.Push);\n\n        let separator;\n        if (fetch && push) {\n            separator = GlyphChars.ArrowLeftRightLong;\n        }\n        else if (fetch) {\n            separator = GlyphChars.ArrowLeft;\n        }\n        else if (push) {\n            separator = GlyphChars.ArrowRight;\n        }\n        else {\n            separator = GlyphChars.Dash;\n        }\n\n        const item = new TreeItem(\n            `${this.remote.default ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${this.remote.name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.description = `${separator}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        } ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} ${this.remote.path}`;\n        item.contextValue = ResourceType.Remote;\n        if (this.remote.default) {\n            item.contextValue += '+default';\n        }\n\n        if (this.remote.provider !== undefined) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-${this.remote.provider.icon}.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-${this.remote.provider.icon}.svg`)\n            };\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n            };\n        }\n\n        item.id = this.id;\n        item.tooltip = `${this.remote.name}\\n${this.remote.path} (${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        })`;\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean } = {}) {\n        return this.repo.fetch({ ...options, remote: this.remote.name });\n    }\n\n    @log()\n    async setAsDefault(state: boolean = true) {\n        void (await this.remote.setAsDefault(state));\n        void this.parent!.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RemoteNode } from './remoteNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemotesNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):remotes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const remotes = await this.repo.getRemotes();\n        if (remotes === undefined || remotes.length === 0) {\n            return [new MessageNode(this.view, this, 'No remotes could be found')];\n        }\n\n        remotes.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        return [...Iterables.map(remotes, r => new RemoteNode(this.uri, this.view, this, r, this.repo))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Remotes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remotes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { GitFile, GitLogCommit } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashFileNode extends CommitFileNode {\n    constructor(view: View, parent: ViewNode, file: GitFile, commit: GitLogCommit) {\n        super(view, parent, file, commit, CommitFileNodeDisplayAs.File);\n    }\n\n    protected get resourceType(): ResourceType {\n        return ResourceType.StashFile;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.stashFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.stashDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.stashFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.stashFileDescriptionFormat;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitStashCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { StashFileNode } from './stashFileNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class StashNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitStashCommit\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.commit.repoPath}):stash(${this.commit.sha})`;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const files = (this.commit as GitStashCommit).files;\n\n        // Check for any untracked files -- since git doesn't return them via `git stash list` :(\n        // See https://stackoverflow.com/questions/12681529/\n        const log = await Container.git.getLog(this.commit.repoPath, {\n            maxCount: 1,\n            ref: `${(this.commit as GitStashCommit).stashName}^3`\n        });\n        if (log !== undefined) {\n            const commit = Iterables.first(log.commits.values());\n            if (commit !== undefined && commit.files.length !== 0) {\n                // Since these files are untracked -- make them look that way\n                commit.files.forEach(s => (s.status = '?'));\n                files.splice(files.length, 0, ...commit.files);\n            }\n        }\n\n        const children = files.map(s => new StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));\n        children.sort((a, b) => a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' }));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            CommitFormatter.fromTemplate(this.view.config.stashFormat, this.commit, {\n                truncateMessageAtNewLine: true,\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions),\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.description = CommitFormatter.fromTemplate(this.view.config.stashDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n        item.contextValue = ResourceType.Stash;\n        item.tooltip = CommitFormatter.fromTemplate('${ago} (${date})\\n\\n${message}', this.commit, {\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { MessageNode } from './common';\nimport { StashNode } from './stashNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashesNode extends ViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):stashes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const stash = await this.repo.getStashList();\n        if (stash === undefined) return [new MessageNode(this.view, this, 'No stashed changes.')];\n\n        return [...Iterables.map(stash.commits.values(), c => new StashNode(this.view, this, c))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Stashes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Stashes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-stash.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-stash.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport {\n    GitFile,\n    GitFileWithCommit,\n    GitLogCommit,\n    GitUri,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFileNode extends ViewNode {\n    private readonly _hasStagedChanges: boolean = false;\n    private readonly _hasUnstagedChanges: boolean = false;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly commits: GitLogCommit[]\n    ) {\n        super(GitUri.fromFile(file, repoPath, 'HEAD'), view, parent);\n\n        for (const c of this.commits) {\n            if (c.isStagedUncommitted) {\n                this._hasStagedChanges = true;\n            }\n            else if (c.isUncommitted) {\n                this._hasUnstagedChanges = true;\n            }\n\n            if (this._hasStagedChanges && this._hasUnstagedChanges) break;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return this.commits.map(\n            c =>\n                new CommitFileNode(\n                    this.view,\n                    this,\n                    this.file,\n                    c,\n                    CommitFileNodeDisplayAs.CommitLabel |\n                        (this.view.config.avatars\n                            ? CommitFileNodeDisplayAs.Gravatar\n                            : CommitFileNodeDisplayAs.CommitIcon)\n                )\n        );\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.description = this.description;\n\n        if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {\n            item.contextValue = ResourceType.File;\n            if (this._hasStagedChanges) {\n                item.contextValue += '+staged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Index (staged)',\n                    this.file\n                );\n            }\n            else {\n                item.contextValue += '+unstaged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Working Tree',\n                    this.file\n                );\n            }\n\n            // Use the file icon and decorations\n            item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n            item.iconPath = ThemeIcon.File;\n\n            item.command = this.getCommand();\n        }\n        else {\n            item.collapsibleState = TreeItemCollapsibleState.Collapsed;\n            if (this._hasStagedChanges || this._hasUnstagedChanges) {\n                item.contextValue = ResourceType.File;\n                if (this._hasStagedChanges && this._hasUnstagedChanges) {\n                    item.contextValue += '+staged+unstaged';\n                }\n                else if (this._hasStagedChanges) {\n                    item.contextValue += '+staged';\n                }\n                else {\n                    item.contextValue += '+unstaged';\n                }\n\n                // Use the file icon and decorations\n                item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n                item.iconPath = ThemeIcon.File;\n            }\n            else {\n                item.contextValue = ResourceType.StatusFileCommits;\n\n                const icon = GitFile.getStatusIcon(this.file.status);\n                item.iconPath = {\n                    dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                    light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n                };\n            }\n\n            item.tooltip = StatusFileFormatter.fromTemplate(\n                `\\${file}\\n\\${directory}/\\n\\n\\${status} in ${this.getChangedIn()}`,\n                this.file\n            );\n        }\n\n        // Only cache the label/description for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileDescriptionFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._label;\n    }\n\n    get commit() {\n        return this.commits[0];\n    }\n\n    get priority(): number {\n        if (this._hasStagedChanges && !this._hasUnstagedChanges) return -3;\n        if (this._hasStagedChanges) return -2;\n        if (this._hasUnstagedChanges) return -1;\n        return 0;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    private getChangedIn(): string {\n        const changedIn = [];\n\n        let commits = 0;\n\n        if (this._hasUnstagedChanges) {\n            commits++;\n            changedIn.push('Working Tree');\n        }\n\n        if (this._hasStagedChanges) {\n            commits++;\n            changedIn.push('Index (staged)');\n        }\n\n        if (this.commits.length > commits) {\n            commits = this.commits.length - commits;\n        }\n\n        if (commits > 0) {\n            changedIn.push(Strings.pluralize('commit', commits));\n        }\n\n        if (changedIn.length > 2) {\n            changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;\n        }\n        return changedIn.join(changedIn.length > 2 ? ', ' : ' and ');\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.repoPath),\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitStatusFile } from '../../git/git';\nimport {\n    GitCommitType,\n    GitFileWithCommit,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitUri\n} from '../../git/gitService';\nimport { Arrays, Iterables, Objects, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { FileNode, FolderNode } from './folderNode';\nimport { StatusFileNode } from './statusFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFilesNode extends ViewNode<RepositoriesView> {\n    readonly repoPath: string;\n\n    constructor(\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly status: GitStatus,\n        public readonly range: string | undefined\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n        this.repoPath = status.repoPath;\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):status:files`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        let files: GitFileWithCommit[] = [];\n\n        const repoPath = this.repoPath;\n\n        let log: GitLog | undefined;\n        if (this.range !== undefined) {\n            log = await Container.git.getLog(repoPath, { maxCount: 0, ref: this.range });\n            if (log !== undefined) {\n                files = [\n                    ...Iterables.flatMap(log.commits.values(), c =>\n                        c.files.map(s => ({ ...s, commit: c } as GitFileWithCommit))\n                    )\n                ];\n            }\n        }\n\n        if (this.status.files.length !== 0 && this.includeWorkingTree) {\n            files.splice(\n                0,\n                0,\n                ...Iterables.flatMap(this.status.files, s => {\n                    if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                        // Decrements the date to guarantee this entry will be sorted after the previous entry (most recent first)\n                        const older = new Date();\n                        older.setMilliseconds(older.getMilliseconds() - 1);\n\n                        return [\n                            this.toStatusFile(s, GitService.uncommittedSha, GitService.stagedUncommittedSha),\n                            this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD', older)\n                        ];\n                    }\n                    else if (s.indexStatus !== undefined) {\n                        return [this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD')];\n                    }\n                    else {\n                        return [this.toStatusFile(s, GitService.uncommittedSha, 'HEAD')];\n                    }\n                })\n            );\n        }\n\n        files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());\n\n        const groups = Arrays.groupBy(files, s => s.fileName);\n\n        let children: FileNode[] = [\n            ...Iterables.map(\n                Objects.values(groups),\n                files =>\n                    new StatusFileNode(this.view, this, repoPath, files[files.length - 1], files.map(s => s.commit))\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, repoPath, '', hierarchy, true);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let files = this.status.files !== undefined && this.includeWorkingTree ? this.status.files.length : 0;\n\n        if (this.status.upstream !== undefined && this.status.state.ahead > 0) {\n            if (files > 0) {\n                const aheadFiles = await Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);\n                if (aheadFiles !== undefined) {\n                    const uniques = new Set();\n                    for (const f of this.status.files) {\n                        uniques.add(f.fileName);\n                    }\n                    for (const f of aheadFiles) {\n                        uniques.add(f.fileName);\n                    }\n\n                    files = uniques.size;\n                }\n            }\n            else {\n                const stats = await Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);\n                if (stats !== undefined) {\n                    files += stats.files;\n                }\n            }\n        }\n\n        const label = `${Strings.pluralize('file', files)} changed`;\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.StatusFiles;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-diff.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-diff.svg`)\n        };\n\n        return item;\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    private toStatusFile(file: GitStatusFile, ref: string, previousRef: string, date?: Date): GitFileWithCommit {\n        return {\n            status: file.status,\n            repoPath: file.repoPath,\n            indexStatus: file.indexStatus,\n            workingTreeStatus: file.workingTreeStatus,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            commit: new GitLogCommit(\n                GitCommitType.File,\n                file.repoPath,\n                ref,\n                'You',\n                undefined,\n                date || new Date(),\n                date || new Date(),\n                '',\n                file.fileName,\n                [file],\n                file.status,\n                file.originalFileName,\n                previousRef,\n                file.fileName\n            )\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitTag, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class TagNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly tag: GitTag\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.tag.repoPath}):tag(${this.tag.name})`;\n    }\n\n    get label(): string {\n        return this.view.config.branches.layout === ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;\n    }\n\n    get ref(): string {\n        return this.tag.name;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: this.tag.name\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.tag.name);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tag;\n        item.tooltip = `${this.tag.name}${this.tag.annotation === undefined ? '' : `\\n${this.tag.annotation}`}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { MessageNode } from './common';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class TagsNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):tags`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const tags = await this.repo.getTags();\n        if (tags.length === 0) return [new MessageNode(this.view, this, 'No tags could be found.')];\n\n        tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        const tagNodes = tags.map(t => new TagNode(this.uri, this.view, this, t));\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return tagNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            tagNodes,\n            n => n.tag.name.split('/'),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(this.view, this, 'tag', this.repo.path, '', undefined, hierarchy);\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | TagNode)[];\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(`Tags`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tags;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-tag.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-tag.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    GitBranch,\n    GitStatus,\n    GitUri,\n    Repository,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Dates, debug, Functions, gate, log, Strings } from '../../system';\nimport { DateStyle } from '../../ui/config';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchesNode } from './branchesNode';\nimport { BranchNode } from './branchNode';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { MessageNode } from './common';\nimport { RemotesNode } from './remotesNode';\nimport { StashesNode } from './stashesNode';\nimport { StatusFilesNode } from './statusFilesNode';\nimport { TagsNode } from './tagsNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class RepositoryNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n    private _lastFetched: number = 0;\n    private _status: Promise<GitStatus | undefined>;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n\n        this._status = this.repo.getStatus();\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path})${this.repo.starred ? '+starred:' : ''}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const status = await this._status;\n            if (status !== undefined) {\n                const branch = new GitBranch(\n                    status.repoPath,\n                    status.branch,\n                    true,\n                    status.sha,\n                    status.upstream,\n                    status.state.ahead,\n                    status.state.behind,\n                    status.detached\n                );\n                children.push(new BranchNode(this.uri, this.view, this, branch, true));\n\n                if (status.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind', true));\n                }\n\n                if (status.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead', true));\n                }\n\n                if (status.state.ahead || (status.files.length !== 0 && this.includeWorkingTree)) {\n                    const range = status.upstream ? `${status.upstream}..${branch.ref}` : undefined;\n                    children.push(new StatusFilesNode(this.view, this, status, range));\n                }\n\n                if (!this.view.config.repositories.compact) {\n                    children.push(new MessageNode(this.view, this, '', GlyphChars.Dash.repeat(2), ''));\n                }\n            }\n\n            children.push(\n                new BranchesNode(this.uri, this.view, this, this.repo),\n                new RemotesNode(this.uri, this.view, this, this.repo),\n                new StashesNode(this.uri, this.view, this, this.repo),\n                new TagsNode(this.uri, this.view, this, this.repo)\n            );\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const label = this.repo.formattedName || this.uri.repoPath || '';\n\n        this._lastFetched = await this.repo.getLastFetched();\n\n        const lastFetchedTooltip = this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dash, 2, 2)}Last fetched on `,\n            format: Container.config.defaultDateFormat || 'dddd MMMM Do, YYYY h:mm a'\n        });\n\n        let description;\n        let tooltip = this.repo.formattedName\n            ? `${this.repo.formattedName}${lastFetchedTooltip}\\n${this.uri.repoPath}`\n            : `${this.uri.repoPath}${lastFetchedTooltip}`;\n        let iconSuffix = '';\n        let workingStatus = '';\n\n        const status = await this._status;\n        if (status !== undefined) {\n            tooltip += `\\n\\nCurrent branch is ${status.branch}`;\n\n            if (status.files.length !== 0 && this.includeWorkingTree) {\n                workingStatus = status.getFormattedDiffStatus({\n                    compact: true,\n                    prefix: Strings.pad(GlyphChars.Dot, 2, 2)\n                });\n            }\n\n            const upstreamStatus = status.getUpstreamStatus({\n                prefix: `${GlyphChars.Space} `\n            });\n\n            description = `${status.branch}${upstreamStatus}${workingStatus}`;\n\n            iconSuffix = workingStatus ? '-blue' : '';\n            if (status.upstream !== undefined) {\n                tooltip += ` and is tracking ${status.upstream}\\n${status.getUpstreamStatus({\n                    empty: `No commits ahead or behind`,\n                    expand: true,\n                    separator: '\\n',\n                    suffix: '\\n'\n                })}`;\n\n                if (status.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (status.state.ahead) {\n                    iconSuffix = status.state.behind ? '-yellow' : '-green';\n                }\n            }\n\n            if (workingStatus) {\n                tooltip += `\\n\\nWorking tree has uncommitted changes${status.getFormattedDiffStatus({\n                    expand: true,\n                    prefix: `\\n`,\n                    separator: '\\n'\n                })}`;\n            }\n        }\n\n        if (!this.repo.supportsChangeEvents) {\n            description = `<!>${description ? ` ${GlyphChars.Space}${description}` : ''}`;\n            tooltip += `\\n\\n<!> Unable to automatically detect repository changes`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repository;\n        if (this.repo.starred) {\n            item.contextValue += '+starred';\n        }\n        item.description = `${description || ''}${this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dot, 2, 2)}Last fetched `\n        })}`;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean; remote?: string } = {}) {\n        return this.repo.fetch(options);\n    }\n\n    @log()\n    pull(options: { progress?: boolean } = {}) {\n        return this.repo.pull(options);\n    }\n\n    @log()\n    push(options: { force?: boolean; progress?: boolean } = {}) {\n        return this.repo.push(options);\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        this._status = this.repo.getStatus();\n\n        this._children = undefined;\n        await this.ensureSubscription();\n    }\n\n    @log()\n    async star() {\n        await this.repo.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.repo.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const disposables = [this.repo.onDidChange(this.onRepoChanged, this)];\n\n        if (Container.config.defaultDateStyle === DateStyle.Relative) {\n            disposables.push(Functions.interval(() => void this.updateLastFetched(), 60000));\n        }\n\n        if (this.includeWorkingTree) {\n            disposables.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this), {\n                dispose: () => this.repo.stopWatchingFileSystem()\n            });\n\n            this.repo.startWatchingFileSystem();\n        }\n\n        return Disposable.from(...disposables);\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryFileSystemChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, uris(${e.uris.length}): [${e.uris\n                    .slice(0, 1)\n                    .map(u => u.fsPath)\n                    .join(', ')}${e.uris.length > 1 ? ', ...' : ''}] }`\n        }\n    })\n    private onFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        void this.triggerChange();\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, changes: ${e.changes.join()} }`\n        }\n    })\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (e.changed(RepositoryChange.Closed)) {\n            this.dispose();\n\n            return;\n        }\n\n        if (\n            this._children === undefined ||\n            e.changed(RepositoryChange.Repository) ||\n            e.changed(RepositoryChange.Config)\n        ) {\n            void this.triggerChange();\n\n            return;\n        }\n\n        if (e.changed(RepositoryChange.Stashes)) {\n            const node = this._children.find(c => c instanceof StashesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Remotes)) {\n            const node = this._children.find(c => c instanceof RemotesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Tags)) {\n            const node = this._children.find(c => c instanceof TagsNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n    }\n\n    private formatLastFetched(options: { prefix?: string; format?: string } = {}) {\n        if (this._lastFetched === 0) return '';\n\n        if (options.format === undefined && Container.config.defaultDateStyle === DateStyle.Relative) {\n            // If less than a day has passed show a relative date\n            if (Date.now() - this._lastFetched < Dates.MillisecondsPerDay) {\n                return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).fromNow()}`;\n            }\n        }\n\n        return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).format(\n            options.format || Container.config.defaultDateShortFormat || 'MMM D, YYYY'\n        )}`;\n    }\n\n    @debug()\n    private async updateLastFetched() {\n        const prevLastFetched = this._lastFetched;\n        this._lastFetched = await this.repo.getLastFetched();\n\n        // If the fetched date hasn't changed and it was over a day ago, kick out\n        if (this._lastFetched === prevLastFetched && Date.now() - this._lastFetched >= Dates.MillisecondsPerDay) return;\n\n        this.view.triggerNodeChange(this);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RepositoryNode } from './repositoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class RepositoriesNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: (RepositoryNode | MessageNode)[] | undefined;\n\n    constructor(view: RepositoriesView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChildren();\n    }\n\n    @debug()\n    private resetChildren() {\n        if (this._children === undefined) return;\n\n        for (const child of this._children) {\n            if (child instanceof RepositoryNode) {\n                child.dispose();\n            }\n        }\n        this._children = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const repositories = await Container.git.getOrderedRepositories();\n            if (repositories.length === 0) return [new MessageNode(this.view, this, 'No repositories could be found.')];\n\n            const children = [];\n            for (const repo of repositories) {\n                if (repo.closed) continue;\n\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n\n            this._children = children;\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Repositories`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repositories;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._children === undefined) return;\n\n        if (reset) {\n            this.resetChildren();\n            await this.unsubscribe();\n            void this.ensureSubscription();\n\n            return;\n        }\n\n        const repositories = await Container.git.getOrderedRepositories();\n        if (repositories.length === 0 && (this._children === undefined || this._children.length === 0)) return;\n\n        if (repositories.length === 0) {\n            this._children = [new MessageNode(this.view, this, 'No repositories could be found.')];\n            return;\n        }\n\n        const children = [];\n        for (const repo of repositories) {\n            if (repo.closed) continue;\n\n            const normalizedPath = repo.normalizedPath;\n            const child = (this._children as RepositoryNode[]).find(c => c.repo.normalizedPath === normalizedPath);\n            if (child !== undefined) {\n                children.push(child);\n                void child.refresh();\n            }\n            else {\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n        }\n\n        for (const child of this._children as RepositoryNode[]) {\n            if (children.includes(child)) continue;\n\n            child.dispose();\n        }\n\n        this._children = children;\n\n        void this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const subscriptions = [Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];\n\n        if (this.view.config.autoReveal) {\n            subscriptions.push(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n            );\n        }\n\n        return Disposable.from(...subscriptions);\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        if (editor == null || this._children === undefined || this._children.length === 1) {\n            return;\n        }\n\n        try {\n            const uri = editor.document.uri;\n            const node = this._children.find(n => n instanceof RepositoryNode && n.repo.containsUri(uri)) as\n                | RepositoryNode\n                | undefined;\n            if (node === undefined) return;\n\n            // Check to see if this repo has a descendent that is already selected\n            let parent = this.view.selection.length === 0 ? undefined : this.view.selection[0];\n            while (parent !== undefined) {\n                if (parent === node) return;\n\n                parent = parent.getParent();\n            }\n\n            void this.view.reveal(node, { expand: true });\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @debug()\n    private onRepositoriesChanged() {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitLog, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface CommitsQueryResults {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class ResultsCommitsNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.ResultsCommits;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { log } = await this.getCommitsQueryResults();\n        if (log === undefined) return [];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Results'));\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { label, log } = await this.getCommitsQueryResults();\n\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.repoPath);\n            description = (repo && repo.formattedName) || this.repoPath;\n        }\n\n        const item = new TreeItem(\n            label,\n            log && log.count > 0 ? TreeItemCollapsibleState.Collapsed : TreeItemCollapsibleState.None\n        );\n        item.contextValue = this.type;\n        item.description = description;\n\n        return item;\n    }\n\n    refresh() {\n        this._commitsQueryResults = this._commitsQuery(this.maxCount);\n    }\n\n    private _commitsQueryResults: Promise<CommitsQueryResults> | undefined;\n\n    protected getCommitsQueryResults() {\n        if (this._commitsQueryResults === undefined) {\n            this._commitsQueryResults = this._commitsQuery(this.maxCount);\n        }\n\n        return this._commitsQueryResults;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitUri, IStatusFormatOptions, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class ResultsFileNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly ref1: string,\n        public readonly ref2: string\n    ) {\n        super(GitUri.fromFile(file, repoPath, ref1 ? ref1 : ref2 ? ref2 : undefined), view, parent);\n    }\n\n    get ref() {\n        return this.ref1 ? this.ref1 : this.ref2 ? this.ref2 : undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.ResultsFile;\n        item.description = this.description;\n        item.tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n\n        const statusIcon = GitFile.getStatusIcon(this.file.status);\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(paths.join('images', 'dark', statusIcon)),\n            light: Container.context.asAbsolutePath(paths.join('images', 'light', statusIcon))\n        };\n\n        item.command = this.getCommand();\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate('${directory}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate('${file}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Open Changes',\n            command: Commands.DiffWith,\n            arguments: [\n                this.uri,\n                {\n                    lhs: {\n                        sha: this.ref1,\n                        uri: this.uri\n                    },\n                    rhs: {\n                        sha: this.ref2,\n                        uri:\n                            this.file.status === 'R'\n                                ? GitUri.fromFile(this.file, this.uri.repoPath!, this.ref2, true)\n                                : this.uri\n                    },\n                    repoPath: this.uri.repoPath!,\n\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitFile, GitUri } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResultsFileNode } from './resultsFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FilesQueryResults {\n    label: string;\n    diff: GitFile[] | undefined;\n}\n\nexport class ResultsFilesNode extends ViewNode<ViewWithFiles> {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _ref1: string,\n        private readonly _ref2: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { diff } = await this.getFilesQueryResults();\n        if (diff === undefined) return [];\n\n        let children: FileNode[] = [\n            ...Iterables.map(diff, s => new ResultsFileNode(this.view, this, this.repoPath, s, this._ref1, this._ref2))\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { diff, label } = await this.getFilesQueryResults();\n\n        const item = new TreeItem(\n            label,\n            diff && diff.length > 0 ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.None\n        );\n        item.contextValue = ResourceType.ResultsFiles;\n        return item;\n    }\n\n    refresh() {\n        this._filesQueryResults = this.getFilesQueryResultsCore();\n    }\n\n    private _filesQueryResults: Promise<FilesQueryResults> | undefined;\n\n    private getFilesQueryResults() {\n        if (this._filesQueryResults === undefined) {\n            this._filesQueryResults = this.getFilesQueryResultsCore();\n        }\n\n        return this._filesQueryResults;\n    }\n\n    private async getFilesQueryResultsCore(): Promise<FilesQueryResults> {\n        const diff = await Container.git.getDiffStatus(this.uri.repoPath!, this._ref1, this._ref2);\n        return {\n            label: `${Strings.pluralize('file', diff !== undefined ? diff.length : 0, { zero: 'No' })} changed`,\n            diff: diff\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { NamedRef, PinnedComparisons, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { GitService, GitUri } from '../../git/gitService';\nimport { log, Strings } from '../../system';\nimport { CompareView } from '../compareView';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResultsFilesNode } from './resultsFilesNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class CompareResultsNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        public readonly repoPath: string,\n        private _ref1: NamedRef,\n        private _ref2: NamedRef,\n        private _pinned: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view);\n    }\n\n    get label() {\n        return `Comparing ${this._ref1.label ||\n            GitService.shortenSha(this._ref1.ref, { working: 'Working Tree' })} to ${this._ref2.label ||\n            GitService.shortenSha(this._ref2.ref, { working: 'Working Tree' })}`;\n    }\n\n    get pinned(): boolean {\n        return this._pinned;\n    }\n\n    get ref1(): NamedRef {\n        return this._ref1;\n    }\n\n    get ref2(): NamedRef {\n        return this._ref2;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [\n            new ResultsCommitsNode(this.view, this, this.uri.repoPath!, this.getCommitsQuery.bind(this)),\n            new ResultsFilesNode(this.view, this, this.uri.repoPath!, this._ref1.ref, this._ref2.ref)\n        ];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.uri.repoPath!);\n            description = (repo && repo.formattedName) || this.uri.repoPath;\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.CompareResults;\n        if (this._pinned) {\n            item.contextValue += '+pinned';\n        }\n        item.description = description;\n        if (this._pinned) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-pin-small.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-pin-small.svg`)\n            };\n        }\n\n        return item;\n    }\n\n    canDismiss(): boolean {\n        return !this._pinned;\n    }\n\n    @log()\n    async pin() {\n        if (this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId(), {\n            path: this.repoPath,\n            ref1: this.ref1,\n            ref2: this.ref2\n        });\n\n        this._pinned = true;\n        void this.triggerChange();\n    }\n\n    @log()\n    async unpin() {\n        if (!this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId());\n\n        this._pinned = false;\n        void this.triggerChange();\n    }\n\n    @log()\n    async swap() {\n        // Save the current id so we can update it later\n        const currentId = this.getPinnableId();\n\n        const ref1 = this._ref1;\n        this._ref1 = this._ref2;\n        this._ref2 = ref1;\n\n        // If we were pinned, remove the existing pin and save a new one\n        if (this._pinned) {\n            await this.view.updatePinnedComparison(currentId);\n            await this.view.updatePinnedComparison(this.getPinnableId(), {\n                path: this.repoPath,\n                ref1: this.ref1,\n                ref2: this.ref2\n            });\n        }\n\n        this.view.triggerNodeChange(this);\n    }\n\n    private async getCommitsQuery(maxCount: number | undefined): Promise<CommitsQueryResults> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: maxCount,\n            ref: `${this._ref1.ref}...${this._ref2.ref || 'HEAD'}`\n        });\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const label = Strings.pluralize('commit', count, { number: truncated ? `${count}+` : undefined, zero: 'No' });\n\n        return {\n            label: label,\n            log: log\n        };\n    }\n\n    private getPinnableId() {\n        return Strings.sha1(`${this.repoPath}|${this.ref1.ref}|${this.ref2.ref}`);\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CompareView } from '../compareView';\nimport { CompareNode } from './compareNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class ComparePickerNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        protected readonly parent: CompareNode\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const selectedRef = this.parent.selectedRef;\n        const repoPath = selectedRef !== undefined ? selectedRef.repoPath : undefined;\n\n        let description;\n        if (repoPath !== undefined) {\n            if ((await Container.git.getRepositoryCount()) > 1) {\n                const repo = await Container.git.getRepository(repoPath);\n                description = (repo && repo.formattedName) || repoPath;\n            }\n        }\n\n        let item;\n        if (selectedRef === undefined) {\n            item = new TreeItem(\n                `Compare <branch, tag, or ref> with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePicker;\n            item.description = description;\n            item.tooltip = `Click to select branch or tag for compare${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('selectForCompare')\n            };\n        }\n        else {\n            item = new TreeItem(\n                `Compare ${selectedRef.label} with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePickerWithRef;\n            item.description = description;\n            item.tooltip = `Click to compare ${selectedRef.label} with${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare ${selectedRef.label} with${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('compareWithSelected')\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { getRepoPathOrPrompt } from '../../commands';\nimport { CommandContext, GlyphChars, NamedRef, setCommandContext } from '../../constants';\nimport { GitService } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { CompareView } from '../compareView';\nimport { MessageNode } from './common';\nimport { ComparePickerNode } from './comparePickerNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\ninterface RepoRef {\n    label: string;\n    repoPath: string;\n    ref: string | NamedRef;\n}\n\nexport class CompareNode extends ViewNode<CompareView> {\n    private _children: (ViewNode | MessageNode)[] = [];\n    private _comparePickerNode: ComparePickerNode | undefined;\n\n    constructor(view: CompareView) {\n        super(unknownGitUri, view);\n    }\n\n    private _selectedRef: RepoRef | undefined;\n    get selectedRef(): RepoRef | undefined {\n        return this._selectedRef;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children = [this._comparePickerNode];\n\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else if (this._comparePickerNode === undefined || !this._children.includes(this._comparePickerNode)) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children.splice(0, 0, this._comparePickerNode);\n\n            if (this._selectedRef !== undefined) {\n                const node = this._comparePickerNode;\n                setImmediate(() => this.view.reveal(node, { focus: false, select: true }));\n            }\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Compare`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Compare;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n\n            // Re-add the pinned comparisons\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else {\n            if (this._comparePickerNode !== undefined) {\n                const index = this._children.indexOf(this._comparePickerNode);\n                if (index !== -1) {\n                    this._children.splice(index, 1);\n                }\n            }\n\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        if (this._children.length !== 0) {\n            const index = this._children.indexOf(node);\n            if (index === -1) return;\n\n            this._children.splice(index, 1);\n        }\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n\n    async compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        if (this._selectedRef === undefined) return;\n\n        if (repoPath === undefined) {\n            repoPath = this._selectedRef.repoPath;\n        }\n        else if (repoPath !== this._selectedRef.repoPath) {\n            // If we don't have a matching repoPath, then start over\n            void this.selectForCompare(repoPath, ref);\n            return;\n        }\n\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Compare ${this.getRefName(this._selectedRef.ref)} with${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n        }\n\n        const ref1 = this._selectedRef;\n\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        void (await this.view.compare(repoPath, ref1.ref, ref));\n    }\n\n    async selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        if (repoPath === undefined) {\n            repoPath = await getRepoPathOrPrompt(\n                undefined,\n                `Select branch or tag for compare in which repository${GlyphChars.Ellipsis}`\n            );\n        }\n        if (repoPath === undefined) return;\n\n        let autoCompare = false;\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n\n            autoCompare = true;\n        }\n\n        this._selectedRef = { label: this.getRefName(ref), repoPath: repoPath, ref: ref };\n        setCommandContext(CommandContext.ViewsCanCompare, true);\n\n        await this.view.show();\n\n        void (await this.triggerChange());\n\n        if (autoCompare) {\n            void (await this.compareWithSelected());\n        }\n    }\n\n    private getRefName(ref: string | NamedRef) {\n        return typeof ref === 'string' ? GitService.shortenSha(ref)! : ref.label || GitService.shortenSha(ref.ref)!;\n    }\n}\n","'strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { debug, Functions, gate, log } from '../../system';\nimport { View } from '../viewBase';\nimport { CommandMessageNode, MessageNode } from './common';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class SearchNode extends ViewNode {\n    private _children: (ViewNode | MessageNode)[] = [];\n\n    constructor(view: View) {\n        super(unknownGitUri, view);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            const command = {\n                title: ' ',\n                command: 'gitlens.showCommitSearch'\n            };\n\n            return [\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Message } as SearchCommitsCommandArgs]\n                    },\n                    `Search commits by message`,\n                    'message-pattern',\n                    'Click to search commits by message'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Author } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by author`,\n                    '@ author-pattern',\n                    'Click to search commits by author'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Sha } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by commit id`,\n                    '# sha',\n                    'Click to search commits by commit id'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Files } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by files`,\n                    ': file-path/glob',\n                    'Click to search commits by files'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Changes } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changes`,\n                    '= pattern',\n                    'Click to search commits by changes'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.ChangedLines } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changed lines`,\n                    '~ pattern',\n                    'Click to search commits by changed lines'\n                )\n            ];\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Search`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Search;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        if (this._children.length === 0) return;\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        if (this._children.length === 0) return;\n\n        const index = this._children.findIndex(n => n === node);\n        if (index === -1) return;\n\n        this._children.splice(index, 1);\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    commands,\n    Disposable,\n    ExtensionContext,\n    SourceControlResourceGroup,\n    SourceControlResourceState,\n    TextDocumentShowOptions,\n    TextEditor,\n    TextEditorEdit,\n    Uri,\n    ViewColumn,\n    window,\n    workspace\n} from 'vscode';\nimport { BuiltInCommands, DocumentSchemes, ImageMimetypes } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitCommit, GitFile, GitRemote, GitUri, Repository } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, RepositoriesQuickPick } from '../quickpicks';\n// import { Telemetry } from '../telemetry';\nimport { ViewNode, ViewRefNode } from '../views/nodes';\n\nexport enum Commands {\n    ClearFileAnnotations = 'gitlens.clearFileAnnotations',\n    CloseUnchangedFiles = 'gitlens.closeUnchangedFiles',\n    ComputingFileAnnotations = 'gitlens.computingFileAnnotations',\n    CopyMessageToClipboard = 'gitlens.copyMessageToClipboard',\n    CopyRemoteFileUrlToClipboard = 'gitlens.copyRemoteFileUrlToClipboard',\n    CopyShaToClipboard = 'gitlens.copyShaToClipboard',\n    DiffDirectory = 'gitlens.diffDirectory',\n    DiffDirectoryWithHead = 'gitlens.diffDirectoryWithHead',\n    DiffHeadWithBranch = 'gitlens.diffHeadWithBranch',\n    DiffWorkingWithBranch = 'gitlens.diffWorkingWithBranch',\n    ExternalDiffAll = 'gitlens.externalDiffAll',\n    DiffWith = 'gitlens.diffWith',\n    DiffWithBranch = 'gitlens.diffWithBranch',\n    DiffWithNext = 'gitlens.diffWithNext',\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithPreviousInDiff = 'gitlens.diffWithPreviousInDiff',\n    DiffLineWithPrevious = 'gitlens.diffLineWithPrevious',\n    DiffWithRevision = 'gitlens.diffWithRevision',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    DiffLineWithWorking = 'gitlens.diffLineWithWorking',\n    ExternalDiff = 'gitlens.externalDiff',\n    FetchRepositories = 'gitlens.fetchRepositories',\n    OpenChangedFiles = 'gitlens.openChangedFiles',\n    OpenBranchesInRemote = 'gitlens.openBranchesInRemote',\n    OpenBranchInRemote = 'gitlens.openBranchInRemote',\n    OpenCommitInRemote = 'gitlens.openCommitInRemote',\n    OpenFileInRemote = 'gitlens.openFileInRemote',\n    OpenFileRevision = 'gitlens.openFileRevision',\n    OpenInRemote = 'gitlens.openInRemote',\n    OpenRepoInRemote = 'gitlens.openRepoInRemote',\n    OpenWorkingFile = 'gitlens.openWorkingFile',\n    PullRepositories = 'gitlens.pullRepositories',\n    PushRepositories = 'gitlens.pushRepositories',\n    ResetSuppressedWarnings = 'gitlens.resetSuppressedWarnings',\n    ShowCommitInView = 'gitlens.showCommitInView',\n    SearchCommits = 'gitlens.showCommitSearch',\n    SearchCommitsInView = 'gitlens.views.search.searchCommits',\n    ShowCompareView = 'gitlens.showCompareView',\n    ShowFileHistoryView = 'gitlens.showFileHistoryView',\n    ShowFileHistoryInView = 'gitlens.showFileHistoryInView',\n    ShowLineHistoryView = 'gitlens.showLineHistoryView',\n    ShowLastQuickPick = 'gitlens.showLastQuickPick',\n    ShowQuickBranchHistory = 'gitlens.showQuickBranchHistory',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ShowQuickRepoStatus = 'gitlens.showQuickRepoStatus',\n    ShowQuickRevisionDetails = 'gitlens.showQuickRevisionDetails',\n    ShowQuickStashList = 'gitlens.showQuickStashList',\n    ShowRepositoriesView = 'gitlens.showRepositoriesView',\n    ShowSearchView = 'gitlens.showSearchView',\n    ShowSettingsPage = 'gitlens.showSettingsPage',\n    ShowWelcomePage = 'gitlens.showWelcomePage',\n    StashApply = 'gitlens.stashApply',\n    StashDelete = 'gitlens.stashDelete',\n    StashSave = 'gitlens.stashSave',\n    StashSaveFiles = 'gitlens.stashSaveFiles',\n    SupportGitLens = 'gitlens.supportGitLens',\n    SwitchMode = 'gitlens.switchMode',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame',\n    ToggleFileHeatmap = 'gitlens.toggleFileHeatmap',\n    ToggleFileRecentChanges = 'gitlens.toggleFileRecentChanges',\n    ToggleLineBlame = 'gitlens.toggleLineBlame',\n    ToggleReviewMode = 'gitlens.toggleReviewMode',\n    ToggleZenMode = 'gitlens.toggleZenMode',\n    ViewsOpenDirectoryDiff = 'gitlens.views.openDirectoryDiff',\n    ViewsOpenDirectoryDiffWithWorking = 'gitlens.views.openDirectoryDiffWithWorking'\n}\n\ninterface CommandConstructor {\n    new (): any;\n}\n\nconst registrableCommands: CommandConstructor[] = [];\n\nexport function command(): ClassDecorator {\n    return (target: any) => {\n        registrableCommands.push(target);\n    };\n}\n\nexport function registerCommands(context: ExtensionContext): void {\n    for (const c of registrableCommands) {\n        context.subscriptions.push(new c());\n    }\n}\n\nexport function getCommandUri(uri?: Uri, editor?: TextEditor): Uri | undefined {\n    if (uri instanceof Uri) return uri;\n    if (editor == null) return undefined;\n\n    const document = editor.document;\n    if (document == null) return undefined;\n\n    return document.uri;\n}\n\nexport async function getRepoPathOrActiveOrPrompt(\n    uri: Uri | undefined,\n    editor: TextEditor | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPathOrActive(uri, editor);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport async function getRepoPathOrPrompt(\n    uri: Uri | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPath(uri);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport interface CommandContextParsingOptions {\n    editor: boolean;\n    uri: boolean;\n}\n\nexport interface CommandBaseContext {\n    command: string;\n    editor?: TextEditor;\n    uri?: Uri;\n}\n\nexport interface CommandScmGroupsContext extends CommandBaseContext {\n    type: 'scm-groups';\n    scmResourceGroups: SourceControlResourceGroup[];\n}\n\nexport interface CommandScmStatesContext extends CommandBaseContext {\n    type: 'scm-states';\n    scmResourceStates: SourceControlResourceState[];\n}\n\nexport interface CommandUnknownContext extends CommandBaseContext {\n    type: 'unknown';\n}\n\nexport interface CommandUriContext extends CommandBaseContext {\n    type: 'uri';\n}\n\n// export interface CommandViewContext extends CommandBaseContext {\n//     type: 'view';\n// }\n\nexport interface CommandViewItemContext extends CommandBaseContext {\n    type: 'viewItem';\n    node: ViewNode;\n}\n\nexport function isCommandViewContextWithBranch(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { branch: GitBranch } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { branch: GitBranch }).branch instanceof GitBranch;\n}\n\nexport function isCommandViewContextWithCommit<T extends GitCommit>(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: T } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { commit: GitCommit }).commit instanceof GitCommit;\n}\n\nexport function isCommandViewContextWithFile(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; repoPath: string };\n    return node.file !== undefined && (node.file.repoPath !== undefined || node.repoPath !== undefined);\n}\n\nexport function isCommandViewContextWithFileCommit(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: GitCommit; file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { commit: GitCommit; file: GitFile; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.commit instanceof GitCommit &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithFileRefs(\n    context: CommandContext\n): context is CommandViewItemContext & {\n    node: ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n} {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.ref1 !== undefined &&\n        node.ref2 !== undefined &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithRef(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { ref: string } } {\n    return context.type === 'viewItem' && context.node instanceof ViewRefNode;\n}\n\nexport function isCommandViewContextWithRemote(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { remote: GitRemote } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { remote: GitRemote }).remote instanceof GitRemote;\n}\n\nexport function isCommandViewContextWithRepo(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repo: Repository } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { repo?: Repository }).repo instanceof Repository;\n}\n\nexport function isCommandViewContextWithRepoPath(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    return typeof (context.node as ViewNode & { repoPath?: string }).repoPath === 'string';\n}\n\nexport type CommandContext =\n    | CommandScmGroupsContext\n    | CommandScmStatesContext\n    | CommandUnknownContext\n    | CommandUriContext\n    // | CommandViewContext\n    | CommandViewItemContext;\n\nfunction isScmResourceGroup(group: any): group is SourceControlResourceGroup {\n    if (group == null) return false;\n\n    return (\n        (group as SourceControlResourceGroup).id !== undefined &&\n        (group.handle !== undefined ||\n            (group as SourceControlResourceGroup).label !== undefined ||\n            (group as SourceControlResourceGroup).resourceStates !== undefined)\n    );\n}\n\nfunction isScmResourceState(state: any): state is SourceControlResourceState {\n    if (state == null) return false;\n\n    return (state as SourceControlResourceState).resourceUri != null;\n}\n\nfunction isTextEditor(editor: any): editor is TextEditor {\n    if (editor == null) return false;\n\n    return (\n        editor.id !== undefined &&\n        ((editor as TextEditor).edit !== undefined || (editor as TextEditor).document !== undefined)\n    );\n}\n\nexport abstract class Command implements Disposable {\n    static getMarkdownCommandArgsCore<T>(command: Commands, args: T): string {\n        return `command:${command}?${encodeURIComponent(JSON.stringify(args))}`;\n    }\n\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: false, uri: false };\n\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (typeof command === 'string') {\n            this._disposable = commands.registerCommand(\n                command,\n                (...args: any[]) => this._execute(command, ...args),\n                this\n            );\n\n            return;\n        }\n\n        const subscriptions = command.map(cmd =>\n            commands.registerCommand(cmd, (...args: any[]) => this._execute(cmd, ...args), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(...args);\n    }\n\n    abstract execute(...args: any[]): any;\n\n    protected _execute(command: string, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n\n        const [context, rest] = Command.parseContext(command, { ...this.contextParsingOptions }, ...args);\n        return this.preExecute(context, ...rest);\n    }\n\n    private static parseContext(\n        command: string,\n        options: CommandContextParsingOptions,\n        ...args: any[]\n    ): [CommandContext, any[]] {\n        let editor: TextEditor | undefined = undefined;\n\n        let firstArg = args[0];\n        if (options.editor && (firstArg == null || isTextEditor(firstArg))) {\n            editor = firstArg;\n            args = args.slice(1);\n            firstArg = args[0];\n        }\n\n        if (options.uri && (firstArg == null || firstArg instanceof Uri)) {\n            const [uri, ...rest] = args as [Uri, any];\n            if (uri !== undefined) {\n                return [{ command: command, type: 'uri', editor: editor, uri: uri }, rest];\n            }\n            else {\n                args = args.slice(1);\n            }\n        }\n\n        if (firstArg instanceof ViewNode) {\n            const [node, ...rest] = args as [ViewNode, any];\n            return [{ command: command, type: 'viewItem', node: node, uri: node.uri }, rest];\n        }\n\n        if (isScmResourceState(firstArg)) {\n            const states = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceState(arg)) break;\n\n                count++;\n                states.push(arg);\n            }\n\n            return [\n                { command: command, type: 'scm-states', scmResourceStates: states, uri: states[0].resourceUri },\n                args.slice(count)\n            ];\n        }\n\n        if (isScmResourceGroup(firstArg)) {\n            const groups = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceGroup(arg)) break;\n\n                count++;\n                groups.push(arg);\n            }\n\n            return [{ command: command, type: 'scm-groups', scmResourceGroups: groups }, args.slice(count)];\n        }\n\n        return [{ command: command, type: 'unknown', editor: editor }, args];\n    }\n}\n\nexport abstract class ActiveEditorCommand extends Command {\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: true, uri: true };\n\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(context.editor, context.uri, ...args);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        return super._execute(command, window.activeTextEditor, ...args);\n    }\n\n    abstract execute(editor?: TextEditor, ...args: any[]): any;\n}\n\nlet lastCommand: { command: string; args: any[] } | undefined = undefined;\nexport function getLastCommand() {\n    return lastCommand;\n}\n\nexport abstract class ActiveEditorCachedCommand extends ActiveEditorCommand {\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        lastCommand = {\n            command: command,\n            args: args\n        };\n        return super._execute(command, ...args);\n    }\n\n    abstract execute(editor: TextEditor, ...args: any[]): any;\n}\n\nexport abstract class EditorCommand implements Disposable {\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (!Array.isArray(command)) {\n            command = [command];\n        }\n\n        const subscriptions = [];\n        for (const cmd of command) {\n            subscriptions.push(\n                commands.registerTextEditorCommand(\n                    cmd,\n                    (editor: TextEditor, edit: TextEditorEdit, ...args: any[]) =>\n                        this.executeCore(cmd, editor, edit, ...args),\n                    this\n                )\n            );\n        }\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private executeCore(command: string, editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n        return this.execute(editor, edit, ...args);\n    }\n\n    abstract execute(editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any;\n}\n\nexport async function openEditor(\n    uri: Uri,\n    options: TextDocumentShowOptions & { rethrow?: boolean } = {}\n): Promise<TextEditor | undefined> {\n    const { rethrow, ...opts } = options;\n    try {\n        if (uri instanceof GitUri) {\n            uri = uri.documentUri();\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens && ImageMimetypes[paths.extname(uri.fsPath)]) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        const document = await workspace.openTextDocument(uri);\n        return window.showTextDocument(document, {\n            preserveFocus: false,\n            preview: true,\n            viewColumn: ViewColumn.Active,\n            ...opts\n        });\n    }\n    catch (ex) {\n        const msg = ex.toString();\n        if (msg.includes('File seems to be binary and cannot be opened as text')) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        if (rethrow) throw ex;\n\n        Logger.error(ex, 'openEditor');\n        return undefined;\n    }\n}\n\nexport function openWorkspace(uri: Uri, name: string, options: { openInNewWindow?: boolean } = {}) {\n    if (options.openInNewWindow) {\n        commands.executeCommand(BuiltInCommands.OpenFolder, uri, true);\n\n        return true;\n    }\n\n    return workspace.updateWorkspaceFolders(\n        workspace.workspaceFolders !== undefined ? workspace.workspaceFolders.length : 0,\n        null,\n        { uri, name }\n    );\n}\n","'use strict';\nimport { TreeItem } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { Commands } from '../../commands/common';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class SearchResultsCommitsNode extends ResultsCommitsNode {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        repoPath: string,\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(view, parent, repoPath, commitsQuery);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.SearchResults;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { log } = await super.getCommitsQueryResults();\n\n        const item = await super.getTreeItem();\n\n        if (log == null || log.count === 0) {\n            const args: SearchCommitsCommandArgs = {\n                search: this.search,\n                searchBy: this.searchBy,\n                prefillOnly: true\n            };\n            item.command = {\n                title: 'Search Commits',\n                command: Commands.SearchCommitsInView,\n                arguments: [args]\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    TreeDataProvider,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeView,\n    TreeViewExpansionEvent,\n    TreeViewVisibilityChangeEvent,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { debug, Functions, log } from '../system';\nimport { CompareView } from './compareView';\nimport { FileHistoryView } from './fileHistoryView';\nimport { LineHistoryView } from './lineHistoryView';\nimport { ViewNode } from './nodes';\nimport { isPageable } from './nodes/viewNode';\nimport { RepositoriesView } from './repositoriesView';\nimport { SearchView } from './searchView';\nimport { RefreshNodeCommandArgs } from './viewCommands';\n\nexport type View = RepositoriesView | FileHistoryView | LineHistoryView | CompareView | SearchView;\nexport type ViewWithFiles = RepositoriesView | CompareView | SearchView;\n\nexport interface TreeViewNodeStateChangeEvent<T> extends TreeViewExpansionEvent<T> {\n    state: TreeItemCollapsibleState;\n}\n\nexport abstract class ViewBase<TRoot extends ViewNode<View>> implements TreeDataProvider<ViewNode>, Disposable {\n    protected _onDidChangeTreeData = new EventEmitter<ViewNode>();\n    public get onDidChangeTreeData(): Event<ViewNode> {\n        return this._onDidChangeTreeData.event;\n    }\n\n    private _onDidChangeVisibility = new EventEmitter<TreeViewVisibilityChangeEvent>();\n    public get onDidChangeVisibility(): Event<TreeViewVisibilityChangeEvent> {\n        return this._onDidChangeVisibility.event;\n    }\n\n    private _onDidChangeNodeState = new EventEmitter<TreeViewNodeStateChangeEvent<ViewNode>>();\n    public get onDidChangeNodeState(): Event<TreeViewNodeStateChangeEvent<ViewNode>> {\n        return this._onDidChangeNodeState.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    protected _root: TRoot | undefined;\n    protected _tree: TreeView<ViewNode> | undefined;\n\n    constructor(\n        public readonly id: string\n    ) {\n        this.registerCommands();\n\n        Container.context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        setImmediate(() => this.onConfigurationChanged(configuration.initializingChangeEvent));\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    getQualifiedCommand(command: string) {\n        return `${this.id}.${command}`;\n    }\n\n    protected abstract get location(): string;\n\n    protected abstract getRoot(): TRoot;\n    protected abstract registerCommands(): void;\n    protected abstract onConfigurationChanged(e: ConfigurationChangeEvent): void;\n\n    protected initialize(container?: string, options: { showCollapseAll?: boolean } = {}) {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._onDidChangeTreeData = new EventEmitter<ViewNode>();\n        }\n\n        this._tree = window.createTreeView(`${this.id}${container ? `:${container}` : ''}`, {\n            ...options,\n            treeDataProvider: this\n        });\n        this._disposable = Disposable.from(\n            this._tree,\n            this._tree.onDidChangeVisibility(Functions.debounce(this.onVisibilityChanged, 250), this),\n            this._tree.onDidCollapseElement(this.onElementCollapsed, this),\n            this._tree.onDidExpandElement(this.onElementExpanded, this)\n        );\n    }\n\n    protected ensureRoot() {\n        if (this._root === undefined) {\n            this._root = this.getRoot();\n        }\n\n        return this._root;\n    }\n\n    getChildren(node?: ViewNode): ViewNode[] | Promise<ViewNode[]> {\n        if (node !== undefined) return node.getChildren();\n\n        const root = this.ensureRoot();\n        return root.getChildren();\n    }\n\n    getParent(node: ViewNode): ViewNode | undefined {\n        return node.getParent();\n    }\n\n    getTreeItem(node: ViewNode): TreeItem | Promise<TreeItem> {\n        return node.getTreeItem();\n    }\n\n    protected onElementCollapsed(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Collapsed });\n    }\n\n    protected onElementExpanded(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Expanded });\n    }\n\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        this._onDidChangeVisibility.fire(e);\n    }\n\n    get selection(): ViewNode[] {\n        if (this._tree === undefined || this._root === undefined) return [];\n\n        return this._tree.selection;\n    }\n\n    get visible(): boolean {\n        return this._tree !== undefined ? this._tree.visible : false;\n    }\n\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._root !== undefined) {\n            await this._root.refresh(reset);\n        }\n\n        this.triggerNodeChange();\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async refreshNode(node: ViewNode, reset: boolean = false, args?: RefreshNodeCommandArgs) {\n        if (args !== undefined) {\n            if (isPageable(node)) {\n                if (args.maxCount === undefined || args.maxCount === 0) {\n                    node.maxCount = args.maxCount;\n                }\n                else {\n                    node.maxCount = (node.maxCount || args.maxCount) + args.maxCount;\n                }\n            }\n        }\n\n        const cancel = await node.refresh(reset);\n        if (cancel === true) return;\n\n        this.triggerNodeChange(node);\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async reveal(\n        node: ViewNode,\n        options?: {\n            select?: boolean;\n            focus?: boolean;\n            expand?: boolean | number;\n        }\n    ) {\n        if (this._tree === undefined) return;\n\n        try {\n            await this._tree.reveal(node, options);\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @log()\n    async show() {\n        try {\n            const location = this.location;\n            return await commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => (n != null ? n.toString() : '') }\n    })\n    triggerNodeChange(node?: ViewNode) {\n        // Since the root node won't actually refresh, force everything\n        this._onDidChangeTreeData.fire(node !== undefined && node !== this._root ? node : undefined);\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { CompareViewConfig, configuration, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport {\n    CommandContext,\n    NamedRef,\n    PinnedComparison,\n    PinnedComparisons,\n    setCommandContext,\n    WorkspaceState\n} from '../constants';\nimport { Container } from '../container';\nimport { CompareNode, CompareResultsNode, nodeSupportsConditionalDismissal, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class CompareView extends ViewBase<CompareNode> {\n    constructor() {\n        super('gitlens.views.compare');\n\n        setCommandContext(CommandContext.ViewsCompareKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new CompareNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n\n        commands.registerCommand(this.getQualifiedCommand('pinComparison'), this.pinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('unpinComparison'), this.unpinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('swapComparison'), this.swapComparison, this);\n\n        commands.registerCommand(this.getQualifiedCommand('selectForCompare'), this.selectForCompare, this);\n        commands.registerCommand(this.getQualifiedCommand('compareWithSelected'), this.compareWithSelected, this);\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('compare').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('compare')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & CompareViewConfig {\n        return { ...Container.config.views, ...Container.config.views.compare };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsCompareKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    compare(repoPath: string, ref1: string | NamedRef, ref2: string | NamedRef) {\n        return this.addResults(\n            new CompareResultsNode(\n                this,\n                repoPath,\n                typeof ref1 === 'string' ? { ref: ref1 } : ref1,\n                typeof ref2 === 'string' ? { ref: ref2 } : ref2\n            )\n        );\n    }\n\n    compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.compareWithSelected(repoPath, ref);\n    }\n\n    selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.selectForCompare(repoPath, ref);\n    }\n\n    getPinnedComparisons() {\n        const pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) return [];\n\n        return Object.values(pinned).map(p => new CompareResultsNode(this, p.path, p.ref1, p.ref2, true));\n    }\n\n    async updatePinnedComparison(id: string, pin?: PinnedComparison) {\n        let pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) {\n            pinned = Object.create(null);\n        }\n\n        if (pin !== undefined) {\n            pinned![id] = {\n                path: pin.path,\n                ref1: pin.ref1,\n                ref2: pin.ref2\n            };\n        }\n        else {\n            const { [id]: _, ...rest } = pinned!;\n            pinned = rest;\n        }\n\n        await Container.context.workspaceState.update(WorkspaceState.PinnedComparisons, pinned);\n    }\n\n    private async addResults(results: ViewNode) {\n        if (!this.visible) {\n            void (await this.show());\n        }\n\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('compare')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsCompareKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsCompareKeepResults, enabled);\n    }\n\n    private async pinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.pin();\n    }\n\n    private swapComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.swap();\n    }\n\n    private async unpinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.unpin();\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, FileHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { FileHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class FileHistoryView extends ViewBase<FileHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.fileHistory');\n    }\n\n    getRoot() {\n        return new FileHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('fileHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & FileHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.fileHistory };\n    }\n\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        const root = this.ensureRoot();\n\n        this.setEditorFollowing(false);\n        await root.showHistoryForUri(uri, baseRef);\n        return this.show();\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, LineHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LineHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class LineHistoryView extends ViewBase<LineHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.lineHistory');\n    }\n\n    getRoot() {\n        return new LineHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('lineHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & LineHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.lineHistory };\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Event, EventEmitter } from 'vscode';\nimport { configuration, RepositoriesViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { RepositoriesNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class RepositoriesView extends ViewBase<RepositoriesNode> {\n    constructor() {\n        super('gitlens.views.repositories');\n    }\n\n    private _onDidChangeAutoRefresh = new EventEmitter<void>();\n    public get onDidChangeAutoRefresh(): Event<void> {\n        return this._onDidChangeAutoRefresh.event;\n    }\n\n    getRoot() {\n        return new RepositoriesNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOn'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOff'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('repositories').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('autoRefresh').value)) {\n            void this.setAutoRefresh(Container.config.views.repositories.autoRefresh);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get autoRefresh() {\n        return (\n            this.config.autoRefresh &&\n            Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsRepositoriesAutoRefresh, true)\n        );\n    }\n\n    get config(): ViewsConfig & RepositoriesViewConfig {\n        return { ...Container.config.views, ...Container.config.views.repositories };\n    }\n\n    private async setAutoRefresh(enabled: boolean, workspaceEnabled?: boolean) {\n        if (enabled) {\n            if (workspaceEnabled === undefined) {\n                workspaceEnabled = Container.context.workspaceState.get<boolean>(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    true\n                );\n            }\n            else {\n                await Container.context.workspaceState.update(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    workspaceEnabled\n                );\n            }\n        }\n\n        setCommandContext(CommandContext.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);\n\n        this._onDidChangeAutoRefresh.fire();\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(\n            configuration.name('views')('repositories')('files')('layout').value,\n            layout\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, SearchViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitRepoSearchBy } from '../git/gitService';\nimport { Functions, Strings } from '../system';\nimport { nodeSupportsConditionalDismissal, SearchNode, SearchResultsCommitsNode, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\ninterface SearchQueryResult {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class SearchView extends ViewBase<SearchNode> {\n    constructor() {\n        super('gitlens.views.search');\n\n        setCommandContext(CommandContext.ViewsSearchKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new SearchNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('search').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('search')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & SearchViewConfig {\n        return { ...Container.config.views, ...Container.config.views.search };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsSearchKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    async search(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: {\n            maxCount?: number;\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        await this.show();\n\n        const searchQueryFn = this.getSearchQueryFn(\n            Container.git.getLogForSearch(repoPath, search, searchBy, {\n                maxCount: options.maxCount\n            }),\n            options\n        );\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    showSearchResults(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        results: GitLog,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        const label = this.getSearchLabel(options.label, results);\n        const searchQueryFn = Functions.cachedOnce(this.getSearchQueryFn(results, options), {\n            label: label,\n            log: results\n        });\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    private addResults(results: ViewNode) {\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private getSearchLabel(\n        label:\n            | string\n            | {\n                  label: string;\n                  resultsType?: { singular: string; plural: string };\n              },\n        log: GitLog | undefined\n    ) {\n        if (typeof label === 'string') return label;\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const resultsType =\n            label.resultsType === undefined ? { singular: 'result', plural: 'results' } : label.resultsType;\n\n        return `${Strings.pluralize(resultsType.singular, count, {\n            number: truncated ? `${count}+` : undefined,\n            plural: resultsType.plural,\n            zero: 'No'\n        })} for ${label.label}`;\n    }\n\n    private getSearchQueryFn(\n        results: Promise<GitLog | undefined> | GitLog | undefined,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ): (maxCount: number | undefined) => Promise<SearchQueryResult> {\n        return async (maxCount: number | undefined) => {\n            if (Functions.isPromise(results)) {\n                results = await results;\n            }\n\n            let log;\n            if (results !== undefined) {\n                log = await (results.query === undefined\n                    ? (maxCount: number | undefined) => Promise.resolve(results)\n                    : results.query)(maxCount);\n            }\n\n            const label = this.getSearchLabel(options.label, log);\n            return {\n                label: label,\n                log: log\n            };\n        };\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('search')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsSearchKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsSearchKeepResults, enabled);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Disposable, InputBoxOptions, Terminal, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithCommandArgs,\n    DiffWithCommandArgsRevision,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenFileInRemoteCommandArgs,\n    OpenFileRevisionCommandArgs,\n    openWorkspace\n} from '../commands';\nimport { BuiltInCommands, CommandContext, extensionTerminalName, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { toGitLensFSUri } from '../git/fsProvider';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Arrays } from '../system';\nimport {\n    BranchNode,\n    BranchTrackingStatusNode,\n    CommitFileNode,\n    CommitNode,\n    FolderNode,\n    RemoteNode,\n    RepositoryNode,\n    ResultsFileNode,\n    StashFileNode,\n    StashNode,\n    StatusFileNode,\n    TagNode,\n    ViewNode,\n    ViewRefNode,\n    viewSupportsNodeDismissal\n} from './nodes';\n\nexport interface RefreshNodeCommandArgs {\n    maxCount?: number;\n}\n\ninterface ICompareSelected {\n    ref: string;\n    repoPath: string | undefined;\n    uri?: Uri;\n}\n\nexport class ViewCommands implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _terminal: Terminal | undefined;\n    private _terminalCwd: string | undefined;\n\n    constructor() {\n        commands.registerCommand(\n            'gitlens.views.refreshNode',\n            (node: ViewNode, reset?: boolean, args?: RefreshNodeCommandArgs) =>\n                node.view.refreshNode(node, reset === undefined ? true : reset, args),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.expandNode',\n            (node: ViewNode) => node.view.reveal(node, { select: false, focus: false, expand: 3 }),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.dismissNode',\n            (node: ViewNode) => viewSupportsNodeDismissal(node.view) && node.view.dismissNode(node),\n            this\n        );\n\n        commands.registerCommand('gitlens.views.fetch', this.fetch, this);\n        commands.registerCommand('gitlens.views.pull', this.pull, this);\n        commands.registerCommand('gitlens.views.push', this.push, this);\n        commands.registerCommand('gitlens.views.pushWithForce', n => this.push(n, true), this);\n        commands.registerCommand('gitlens.views.closeRepository', this.closeRepository, this);\n\n        commands.registerCommand('gitlens.views.setAsDefault', this.setAsDefault, this);\n        commands.registerCommand('gitlens.views.unsetAsDefault', this.unsetAsDefault, this);\n\n        commands.registerCommand('gitlens.views.openInTerminal', this.openInTerminal, this);\n        commands.registerCommand('gitlens.views.star', this.star, this);\n        commands.registerCommand('gitlens.views.unstar', this.unstar, this);\n\n        commands.registerCommand('gitlens.views.exploreRepoRevision', this.exploreRepoRevision, this);\n\n        commands.registerCommand('gitlens.views.openChanges', this.openChanges, this);\n        commands.registerCommand('gitlens.views.openChangesWithWorking', this.openChangesWithWorking, this);\n        commands.registerCommand('gitlens.views.openFile', this.openFile, this);\n        commands.registerCommand('gitlens.views.openFileRevision', this.openFileRevision, this);\n        commands.registerCommand('gitlens.views.openFileRevisionInRemote', this.openFileRevisionInRemote, this);\n        commands.registerCommand('gitlens.views.openChangedFiles', this.openChangedFiles, this);\n        commands.registerCommand('gitlens.views.openChangedFileChanges', this.openChangedFileChanges, this);\n        commands.registerCommand(\n            'gitlens.views.openChangedFileChangesWithWorking',\n            this.openChangedFileChangesWithWorking,\n            this\n        );\n        commands.registerCommand('gitlens.views.openChangedFileRevisions', this.openChangedFileRevisions, this);\n        commands.registerCommand('gitlens.views.applyChanges', this.applyChanges, this);\n        commands.registerCommand('gitlens.views.checkout', this.checkout, this);\n\n        commands.registerCommand('gitlens.views.stageDirectory', this.stageDirectory, this);\n        commands.registerCommand('gitlens.views.stageFile', this.stageFile, this);\n        commands.registerCommand('gitlens.views.unstageDirectory', this.unstageDirectory, this);\n        commands.registerCommand('gitlens.views.unstageFile', this.unstageFile, this);\n\n        commands.registerCommand('gitlens.views.compareAncestryWithWorking', this.compareAncestryWithWorking, this);\n        commands.registerCommand('gitlens.views.compareWithHead', this.compareWithHead, this);\n        commands.registerCommand('gitlens.views.compareWithRemote', this.compareWithRemote, this);\n        commands.registerCommand('gitlens.views.compareWithSelected', this.compareWithSelected, this);\n        commands.registerCommand('gitlens.views.selectForCompare', this.selectForCompare, this);\n        commands.registerCommand('gitlens.views.compareFileWithSelected', this.compareFileWithSelected, this);\n        commands.registerCommand('gitlens.views.selectFileForCompare', this.selectFileForCompare, this);\n        commands.registerCommand('gitlens.views.compareWithWorking', this.compareWithWorking, this);\n\n        commands.registerCommand('gitlens.views.terminalCheckoutBranch', this.terminalCheckoutBranch, this);\n        commands.registerCommand('gitlens.views.terminalCreateBranch', this.terminalCreateBranch, this);\n        commands.registerCommand('gitlens.views.terminalDeleteBranch', this.terminalDeleteBranch, this);\n        commands.registerCommand('gitlens.views.terminalMergeBranch', this.terminalMergeBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranch', this.terminalRebaseBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranchToRemote', this.terminalRebaseBranchToRemote, this);\n        commands.registerCommand(\n            'gitlens.views.terminalSquashBranchIntoCommit',\n            this.terminalSquashBranchIntoCommit,\n            this\n        );\n        commands.registerCommand('gitlens.views.terminalCheckoutCommit', this.terminalCheckoutCommit, this);\n        commands.registerCommand('gitlens.views.terminalCherryPickCommit', this.terminalCherryPickCommit, this);\n        commands.registerCommand('gitlens.views.terminalPushCommit', this.terminalPushCommit, this);\n        commands.registerCommand('gitlens.views.terminalRebaseCommit', this.terminalRebaseCommit, this);\n        commands.registerCommand('gitlens.views.terminalResetCommit', this.terminalResetCommit, this);\n        commands.registerCommand('gitlens.views.terminalRevertCommit', this.terminalRevertCommit, this);\n        commands.registerCommand('gitlens.views.terminalRemoveRemote', this.terminalRemoveRemote, this);\n        commands.registerCommand('gitlens.views.terminalCreateTag', this.terminalCreateTag, this);\n        commands.registerCommand('gitlens.views.terminalDeleteTag', this.terminalDeleteTag, this);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private fetch(node: RemoteNode | RepositoryNode) {\n        if (node instanceof RemoteNode) return node.fetch();\n        if (node instanceof RepositoryNode) return node.fetch();\n        return;\n    }\n\n    private pull(node: RepositoryNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.pull();\n    }\n\n    private push(node: RepositoryNode | BranchTrackingStatusNode, force?: boolean) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.push({ force: force });\n    }\n\n    private async applyChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            !(node instanceof CommitFileNode) &&\n            !(node instanceof StashFileNode) &&\n            !(node instanceof ResultsFileNode)\n        ) {\n            return;\n        }\n\n        void (await this.openFile(node));\n\n        if (node instanceof ResultsFileNode) {\n            void (await Container.git.applyChangesToWorkingFile(node.uri, node.ref1, node.ref2));\n\n            return;\n        }\n\n        if (node.uri.sha !== undefined && node.uri.sha !== 'HEAD') {\n            void (await Container.git.applyChangesToWorkingFile(node.uri));\n        }\n    }\n\n    private async checkout(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.git.checkout(node.repoPath, node.ref);\n    }\n\n    private closeRepository(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        node.repo.closed = true;\n    }\n\n    private compareWithHead(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, 'HEAD');\n    }\n\n    private compareWithRemote(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n        if (!node.branch.tracking) return;\n\n        return Container.compareView.compare(node.repoPath, node.branch.tracking, node.ref);\n    }\n\n    private compareWithWorking(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, '');\n    }\n\n    private async compareAncestryWithWorking(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        const branch = await Container.git.getBranch(node.repoPath);\n        if (branch === undefined) return;\n\n        const commonAncestor = await Container.git.getMergeBase(node.repoPath, branch.ref, node.ref);\n        if (commonAncestor === undefined) return;\n\n        return Container.compareView.compare(\n            node.repoPath,\n            { ref: commonAncestor, label: `ancestry with ${node.ref} (${GitService.shortenSha(commonAncestor)})` },\n            ''\n        );\n    }\n\n    private compareWithSelected(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.compareWithSelected(node.repoPath, node.ref);\n    }\n\n    private selectForCompare(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.selectForCompare(node.repoPath, node.ref);\n    }\n\n    private compareFileWithSelected(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            this._selectedFile === undefined ||\n            (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) ||\n            node.ref === undefined\n        ) {\n            return;\n        }\n        if (this._selectedFile.repoPath !== node.repoPath) {\n            this.selectFileForCompare(node);\n            return;\n        }\n\n        const selected = this._selectedFile;\n\n        this._selectedFile = undefined;\n        setCommandContext(CommandContext.ViewsCanCompareFile, false);\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: selected.repoPath,\n            lhs: {\n                sha: selected.ref,\n                uri: selected.uri!\n            },\n            rhs: {\n                sha: node.ref,\n                uri: node.uri\n            }\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private _selectedFile: ICompareSelected | undefined;\n\n    private selectFileForCompare(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if ((!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) || node.ref === undefined) return;\n\n        this._selectedFile = {\n            ref: node.ref,\n            repoPath: node.repoPath,\n            uri: node.uri\n        };\n        setCommandContext(CommandContext.ViewsCanCompareFile, true);\n    }\n\n    private exploreRepoRevision(node: ViewRefNode, options: { openInNewWindow?: boolean } = {}) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const uri = toGitLensFSUri(node.ref, node.repoPath);\n        const gitUri = GitUri.fromRevisionUri(uri);\n\n        openWorkspace(uri, `${paths.basename(gitUri.repoPath!)} @ ${gitUri.shortSha}`, options);\n\n        void commands.executeCommand(BuiltInCommands.FocusFilesExplorer);\n    }\n\n    private openChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const command = node.getCommand();\n        if (command === undefined || command.arguments === undefined) return;\n\n        const [uri, args] = command.arguments as [Uri, DiffWithPreviousCommandArgs];\n        args.showOptions!.preview = false;\n        return commands.executeCommand(command.command, uri, args);\n    }\n\n    private async openChangesWithWorking(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const args: DiffWithWorkingCommandArgs = {\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n\n        if (node instanceof ResultsFileNode) {\n            args.commit = await Container.git.getLogCommitForFile(node.repoPath, node.uri.fsPath, {\n                ref: node.uri.sha,\n                firstIfNotFound: true,\n                reverse: true\n            });\n        }\n\n        return commands.executeCommand(Commands.DiffWithWorking, node.uri, args);\n    }\n\n    private openFile(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        return openEditor(node.uri, { preserveFocus: true, preview: false });\n    }\n\n    private openFileRevision(\n        node: CommitFileNode | StashFileNode | ResultsFileNode,\n        options: OpenFileRevisionCommandArgs = { showOptions: { preserveFocus: true, preview: false } }\n    ) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        let uri = options.uri;\n        if (uri == null) {\n            if (node instanceof ResultsFileNode) {\n                uri = GitUri.toRevisionUri(node.uri);\n            }\n            else {\n                uri =\n                    node.commit.status === 'D'\n                        ? GitUri.toRevisionUri(\n                              node.commit.previousSha!,\n                              node.commit.previousUri.fsPath,\n                              node.commit.repoPath\n                          )\n                        : GitUri.toRevisionUri(node.uri);\n            }\n        }\n\n        return openEditor(uri, options.showOptions || { preserveFocus: true, preview: false });\n    }\n\n    private async openChangedFileChanges(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = node.commit.files.map(s => GitUri.fromFile(s, repoPath));\n\n        for (const uri of uris) {\n            await this.openDiffWith(\n                repoPath,\n                {\n                    uri: uri,\n                    sha:\n                        node.commit.previousSha !== undefined ? node.commit.previousSha : GitService.deletedOrMissingSha\n                },\n                { uri: uri, sha: node.commit.sha },\n                options\n            );\n        }\n    }\n\n    private async openChangedFileChangesWithWorking(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            f.status !== 'D' ? GitUri.fromFile(f, repoPath) : undefined\n        );\n\n        for (const uri of uris) {\n            await this.openDiffWith(repoPath, { uri: uri, sha: node.commit.sha }, { uri: uri, sha: '' }, options);\n        }\n    }\n\n    private async openChangedFiles(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f => GitUri.fromFile(f, repoPath));\n\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openChangedFileRevisions(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? node.commit.previousFileSha : node.commit.sha,\n                f,\n                node.commit.repoPath\n            )\n        );\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openDiffWith(\n        repoPath: string,\n        lhs: DiffWithCommandArgsRevision,\n        rhs: DiffWithCommandArgsRevision,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: repoPath,\n            lhs: lhs,\n            rhs: rhs,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private async openFileRevisionInRemote(node: CommitFileNode | StashFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        return commands.executeCommand(Commands.OpenFileInRemote, node.commit.toGitUri(node.commit.status === 'D'), {\n            range: false\n        } as OpenFileInRemoteCommandArgs);\n    }\n\n    private openInTerminal(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        return commands.executeCommand(BuiltInCommands.OpenInTerminal, Uri.file(node.repo.path));\n    }\n\n    private setAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault();\n        return;\n    }\n\n    private unsetAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault(false);\n        return;\n    }\n\n    private async stageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.stageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async stageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.stageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private async unstageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.unStageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async unstageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.unStageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private star(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.star();\n        return;\n    }\n\n    private unstar(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.unstar();\n        return;\n    }\n\n    async terminalCheckoutBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    async terminalCreateBranch(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        let remoteBranch = false;\n        let value = undefined;\n        if (node instanceof BranchNode && node.branch.remote) {\n            remoteBranch = true;\n            value = node.branch.getName();\n        }\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a branch name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Branch name`,\n            value: value\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        this.sendTerminalCommand('branch', `${remoteBranch ? '-t ' : ''}${name} ${node.ref}`, node.repoPath);\n    }\n\n    terminalDeleteBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        if (node.branch.remote) {\n            this.sendTerminalCommand('push', `${node.branch.getRemote()} :${node.branch.getName()}`, node.repoPath);\n        }\n        else {\n            this.sendTerminalCommand('branch', `-d ${node.ref}`, node.repoPath);\n        }\n    }\n\n    terminalMergeBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranchToRemote(node: BranchNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchNode) {\n            if (!node.branch.current || !node.branch.tracking) return;\n\n            this.sendTerminalCommand('rebase', `-i ${node.branch.tracking}`, node.repoPath);\n        }\n        else if (node instanceof BranchTrackingStatusNode) {\n            this.sendTerminalCommand('rebase', `-i ${node.status.upstream}`, node.status.repoPath);\n        }\n    }\n\n    terminalSquashBranchIntoCommit(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `--squash ${node.ref}`, node.repoPath);\n    }\n\n    terminalCheckoutCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    terminalCherryPickCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('cherry-pick', `-e ${node.ref}`, node.repoPath);\n    }\n\n    async terminalPushCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        const branch = node.branch || (await Container.git.getBranch(node.repoPath));\n        if (branch === undefined) return;\n\n        this.sendTerminalCommand('push', `${branch.getRemote()} ${node.ref}:${branch.getName()}`, node.repoPath);\n    }\n\n    terminalRebaseCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}^`, node.repoPath);\n    }\n\n    terminalResetCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('reset', `--soft ${node.ref}`, node.repoPath);\n    }\n\n    terminalRevertCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('revert', `-e ${node.ref}`, node.repoPath);\n    }\n\n    terminalRemoveRemote(node: RemoteNode) {\n        if (!(node instanceof RemoteNode)) return;\n\n        this.sendTerminalCommand('remote', `remove ${node.remote.name}`, node.remote.repoPath);\n    }\n\n    async terminalCreateTag(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a tag name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag name`\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        const message = await window.showInputBox({\n            prompt: `Please provide an optional message to annotate the tag (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag message`\n        } as InputBoxOptions);\n        if (message === undefined) return;\n\n        const args = `${message.length !== 0 ? `-a -m \"${message}\" ` : ''}${name} ${node.ref}`;\n        this.sendTerminalCommand('tag', args, node.repoPath);\n    }\n\n    terminalDeleteTag(node: TagNode) {\n        if (!(node instanceof TagNode)) return;\n\n        this.sendTerminalCommand('tag', `-d ${node.ref}`, node.repoPath);\n    }\n\n    private ensureTerminal(cwd: string): Terminal {\n        if (this._terminal === undefined) {\n            this._terminal = window.createTerminal(extensionTerminalName);\n            this._disposable = window.onDidCloseTerminal((e: Terminal) => {\n                if (e.name === extensionTerminalName) {\n                    this._terminal = undefined;\n                    this._disposable!.dispose();\n                    this._disposable = undefined;\n                }\n            }, this);\n\n            Container.context.subscriptions.push(this._disposable);\n            this._terminalCwd = undefined;\n        }\n\n        if (this._terminalCwd !== cwd) {\n            this._terminal.sendText(`cd \"${cwd}\"`, true);\n            this._terminalCwd = cwd;\n        }\n\n        return this._terminal;\n    }\n\n    private sendTerminalCommand(command: string, args: string, cwd: string) {\n        // let git = GitService.getGitPath();\n        // if (git.includes(' ')) {\n        //     git = `\"${git}\"`;\n        // }\n\n        const terminal = this.ensureTerminal(cwd);\n        terminal.show(false);\n        terminal.sendText(`git ${command} ${args}`, false);\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Uri,\n    ViewColumn,\n    WebviewPanel,\n    WebviewPanelOnDidChangeViewStateEvent,\n    window,\n    workspace\n} from 'vscode';\nimport { Config, configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Message, SettingsChangedMessage } from '../ui/ipc';\n\nexport abstract class WebviewEditor<TBootstrap> implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _disposablePanel: Disposable | undefined;\n    private _panel: WebviewPanel | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            ...this.registerCommands()\n        );\n    }\n\n    abstract get filename(): string;\n    abstract get id(): string;\n    abstract get title(): string;\n\n    abstract getBootstrap(): TBootstrap;\n    abstract registerCommands(): Disposable[];\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        this._disposablePanel && this._disposablePanel.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        this.postUpdatedConfiguration();\n    }\n\n    private onPanelDisposed() {\n        this._disposablePanel && this._disposablePanel.dispose();\n        this._panel = undefined;\n    }\n\n    private onViewStateChanged(e: WebviewPanelOnDidChangeViewStateEvent) {\n        Logger.log(\n            'WebviewEditor.onViewStateChanged',\n            `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`\n        );\n\n        // Anytime the webview becomes active, make sure it has the most up-to-date config\n        if (e.webviewPanel.active) {\n            this.postUpdatedConfiguration();\n        }\n    }\n\n    protected async onMessageReceived(e: Message) {\n        if (e == null) return;\n\n        Logger.log(`WebviewEditor.onMessageReceived: type=${e.type}, data=${JSON.stringify(e)}`);\n\n        switch (e.type) {\n            case 'saveSettings':\n                const target = e.scope === 'workspace' ? ConfigurationTarget.Workspace : ConfigurationTarget.Global;\n\n                for (const key in e.changes) {\n                    const inspect = await configuration.inspect(key)!;\n\n                    const value = e.changes[key];\n                    await configuration.update(key, value === inspect.defaultValue ? undefined : value, target);\n                }\n\n                for (const key of e.removes) {\n                    await configuration.update(key, undefined, target);\n                }\n                break;\n        }\n    }\n\n    get visible() {\n        return this._panel === undefined ? false : this._panel.visible;\n    }\n\n    hide() {\n        if (this._panel === undefined) return;\n\n        this._panel.dispose();\n    }\n\n    async show(): Promise<void> {\n        const html = await this.getHtml();\n\n        if (this._panel === undefined) {\n            this._panel = window.createWebviewPanel(\n                this.id,\n                this.title,\n                { viewColumn: ViewColumn.Active, preserveFocus: false },\n                {\n                    retainContextWhenHidden: true,\n                    enableFindWidget: true,\n                    enableCommandUris: true,\n                    enableScripts: true\n                }\n            );\n\n            this._panel.iconPath = Uri.file(Container.context.asAbsolutePath('images/gitlens-icon.png'));\n            this._disposablePanel = Disposable.from(\n                this._panel,\n                this._panel.onDidDispose(this.onPanelDisposed, this),\n                this._panel.onDidChangeViewState(this.onViewStateChanged, this),\n                this._panel.webview.onDidReceiveMessage(this.onMessageReceived, this)\n            );\n\n            this._panel.webview.html = html;\n        }\n        else {\n            // Reset the html to get the webview to reload\n            this._panel.webview.html = '';\n            this._panel.webview.html = html;\n            this._panel.reveal(ViewColumn.Active, false);\n        }\n    }\n\n    private _html: string | undefined;\n    private async getHtml(): Promise<string> {\n        let content;\n        // When we are debugging avoid any caching so that we can change the html and have it update without reloading\n        if (Logger.isDebugging) {\n            content = await new Promise<string>((resolve, reject) => {\n                fs.readFile(Container.context.asAbsolutePath(this.filename), 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n        }\n        else {\n            if (this._html !== undefined) return this._html;\n\n            const doc = await workspace.openTextDocument(Container.context.asAbsolutePath(this.filename));\n            content = doc.getText();\n        }\n\n        this._html = content.replace(\n            /{{root}}/g,\n            Uri.file(Container.context.asAbsolutePath('.'))\n                .with({ scheme: 'vscode-resource' })\n                .toString()\n        );\n\n        if (this._html.includes(\"'{{bootstrap}}'\")) {\n            this._html = this._html.replace(\"'{{bootstrap}}'\", JSON.stringify(this.getBootstrap()));\n        }\n\n        return this._html;\n    }\n\n    private postMessage(message: Message) {\n        if (this._panel === undefined) return false;\n\n        return this._panel!.webview.postMessage(message);\n    }\n\n    private postUpdatedConfiguration() {\n        // Make sure to get the raw config, not from the container which has the modes mixed in\n        return this.postMessage({\n            type: 'settingsChanged',\n            config: configuration.get<Config>()\n        } as SettingsChangedMessage);\n    }\n}\n","'use strict';\nimport { commands, workspace } from 'vscode';\nimport { Commands } from '../commands';\nimport { Config, configuration } from '../configuration';\nimport { SettingsBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class SettingsEditor extends WebviewEditor<SettingsBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'settings.html';\n    }\n\n    get id(): string {\n        return 'gitlens.settings';\n    }\n\n    get title(): string {\n        return 'GitLens Settings';\n    }\n\n    getBootstrap() {\n        return {\n            // Make sure to get the raw config, not from the container which has the modes mixed in\n            config: configuration.get<Config>(),\n            scope: 'user',\n            scopes: this.getAvailableScopes()\n        } as SettingsBootstrap;\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowSettingsPage, this.show, this)];\n    }\n\n    private getAvailableScopes(): ['user' | 'workspace', string][] {\n        const scopes: ['user' | 'workspace', string][] = [['user', 'User']];\n        if (workspace.workspaceFolders !== undefined && workspace.workspaceFolders.length) {\n            scopes.push(['workspace', 'Workspace']);\n        }\n        return scopes;\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Commands } from '../commands';\nimport { Container } from '../container';\nimport { WelcomeBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class WelcomeEditor extends WebviewEditor<WelcomeBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'welcome.html';\n    }\n\n    get id(): string {\n        return 'gitlens.welcome';\n    }\n\n    get title(): string {\n        return 'Welcome to GitLens';\n    }\n\n    getBootstrap(): WelcomeBootstrap {\n        return {\n            config: Container.config\n        };\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowWelcomePage, this.show, this)];\n    }\n}\n","'use strict';\nimport { commands, Disposable, ExtensionContext } from 'vscode';\nimport { FileAnnotationController } from './annotations/fileAnnotationController';\nimport { LineAnnotationController } from './annotations/lineAnnotationController';\nimport { GitCodeLensController } from './codelens/codeLensController';\nimport { Commands, ToggleFileBlameCommandArgs } from './commands';\nimport { AnnotationsToggleMode, Config, configuration } from './configuration';\nimport { GitFileSystemProvider } from './git/fsProvider';\nimport { GitService } from './git/gitService';\nimport { LineHoverController } from './hovers/lineHoverController';\nimport { Keyboard } from './keyboard';\nimport { StatusBarController } from './statusbar/statusBarController';\nimport { GitDocumentTracker } from './trackers/gitDocumentTracker';\nimport { GitLineTracker } from './trackers/gitLineTracker';\nimport { CompareView } from './views/compareView';\nimport { FileHistoryView } from './views/fileHistoryView';\nimport { LineHistoryView } from './views/lineHistoryView';\nimport { RepositoriesView } from './views/repositoriesView';\nimport { SearchView } from './views/searchView';\nimport { ViewCommands } from './views/viewCommands';\nimport { VslsController } from './vsls/vsls';\nimport { SettingsEditor } from './webviews/settingsEditor';\nimport { WelcomeEditor } from './webviews/welcomeEditor';\n\nexport class Container {\n    static initialize(context: ExtensionContext, config: Config) {\n        this._context = context;\n        this._config = Container.applyMode(config);\n\n        context.subscriptions.push((this._lineTracker = new GitLineTracker()));\n        context.subscriptions.push((this._tracker = new GitDocumentTracker()));\n        context.subscriptions.push((this._vsls = new VslsController()));\n\n        context.subscriptions.push((this._git = new GitService()));\n\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, initialize the tracker once the GitService is loaded\n        this._tracker.initialize();\n\n        context.subscriptions.push((this._fileAnnotationController = new FileAnnotationController()));\n        context.subscriptions.push((this._lineAnnotationController = new LineAnnotationController()));\n        context.subscriptions.push((this._lineHoverController = new LineHoverController()));\n        context.subscriptions.push((this._statusBarController = new StatusBarController()));\n        context.subscriptions.push((this._codeLensController = new GitCodeLensController()));\n        context.subscriptions.push((this._keyboard = new Keyboard()));\n        context.subscriptions.push((this._settingsEditor = new SettingsEditor()));\n        context.subscriptions.push((this._welcomeEditor = new WelcomeEditor()));\n\n        if (config.views.compare.enabled) {\n            context.subscriptions.push((this._compareView = new CompareView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('compare')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._compareView = new CompareView()));\n                }\n            });\n        }\n\n        if (config.views.fileHistory.enabled) {\n            context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.lineHistory.enabled) {\n            context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.repositories.enabled) {\n            context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('repositories')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n                }\n            });\n        }\n\n        if (config.views.search.enabled) {\n            context.subscriptions.push((this._searchView = new SearchView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('search')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._searchView = new SearchView()));\n                }\n            });\n        }\n\n        context.subscriptions.push(new GitFileSystemProvider());\n    }\n\n    private static _codeLensController: GitCodeLensController;\n    static get codeLens() {\n        return this._codeLensController;\n    }\n\n    private static _compareView: CompareView | undefined;\n    static get compareView() {\n        if (this._compareView === undefined) {\n            this._context.subscriptions.push((this._compareView = new CompareView()));\n        }\n\n        return this._compareView;\n    }\n\n    private static _config: Config | undefined;\n    static get config() {\n        if (this._config === undefined) {\n            this._config = Container.applyMode(configuration.get<Config>());\n        }\n        return this._config;\n    }\n\n    private static _context: ExtensionContext;\n    static get context() {\n        return this._context;\n    }\n\n    private static _fileAnnotationController: FileAnnotationController;\n    static get fileAnnotations() {\n        return this._fileAnnotationController;\n    }\n\n    private static _fileHistoryView: FileHistoryView | undefined;\n    static get fileHistoryView() {\n        if (this._fileHistoryView === undefined) {\n            this._context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n\n        return this._fileHistoryView;\n    }\n\n    private static _git: GitService;\n    static get git() {\n        return this._git;\n    }\n\n    private static _keyboard: Keyboard;\n    static get keyboard() {\n        return this._keyboard;\n    }\n\n    private static _lineAnnotationController: LineAnnotationController;\n    static get lineAnnotations() {\n        return this._lineAnnotationController;\n    }\n\n    private static _lineHistoryView: LineHistoryView | undefined;\n    static get lineHistoryView() {\n        if (this._lineHistoryView === undefined) {\n            this._context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n\n        return this._lineHistoryView;\n    }\n\n    private static _lineHoverController: LineHoverController;\n    static get lineHovers() {\n        return this._lineHoverController;\n    }\n\n    private static _lineTracker: GitLineTracker;\n    static get lineTracker() {\n        return this._lineTracker;\n    }\n\n    private static _repositoriesView: RepositoriesView | undefined;\n    static get repositoriesView(): RepositoriesView {\n        return this._repositoriesView!;\n    }\n\n    private static _searchView: SearchView | undefined;\n    static get searchView() {\n        if (this._searchView === undefined) {\n            this._context.subscriptions.push((this._searchView = new SearchView()));\n        }\n\n        return this._searchView;\n    }\n\n    private static _settingsEditor: SettingsEditor;\n    static get settingsEditor() {\n        return this._settingsEditor;\n    }\n\n    private static _statusBarController: StatusBarController;\n    static get statusBar() {\n        return this._statusBarController;\n    }\n\n    private static _tracker: GitDocumentTracker;\n    static get tracker() {\n        return this._tracker;\n    }\n\n    private static _viewCommands: ViewCommands | undefined;\n    static get viewCommands() {\n        if (this._viewCommands === undefined) {\n            this._context.subscriptions.push((this._viewCommands = new ViewCommands()));\n        }\n        return this._viewCommands;\n    }\n\n    private static _vsls: VslsController;\n    static get vsls() {\n        return this._vsls;\n    }\n\n    private static _welcomeEditor: WelcomeEditor;\n    static get welcomeEditor() {\n        return this._welcomeEditor;\n    }\n\n    static resetConfig() {\n        this._config = undefined;\n    }\n\n    private static applyMode(config: Config) {\n        if (!config.mode.active) return config;\n\n        const mode = config.modes[config.mode.active];\n        if (mode == null) return config;\n\n        if (mode.annotations != null) {\n            let command: string | undefined;\n            switch (mode.annotations) {\n                case 'blame':\n                    config.blame.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileBlame;\n                    break;\n                case 'heatmap':\n                    config.heatmap.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileHeatmap;\n                    break;\n                case 'recentChanges':\n                    config.recentChanges.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileRecentChanges;\n                    break;\n            }\n\n            if (command !== undefined) {\n                // Make sure to delay the execution by a bit so that the configuration changes get propegated first\n                setTimeout(\n                    () =>\n                        commands.executeCommand(command!, {\n                            on: true\n                        } as ToggleFileBlameCommandArgs),\n                    50\n                );\n            }\n        }\n\n        if (mode.codeLens != null) {\n            config.codeLens.enabled = mode.codeLens;\n        }\n\n        if (mode.currentLine != null) {\n            config.currentLine.enabled = mode.currentLine;\n        }\n\n        if (mode.hovers != null) {\n            config.hovers.enabled = mode.hovers;\n        }\n\n        if (mode.statusBar != null) {\n            config.statusBar.enabled = mode.statusBar;\n        }\n\n        if (mode.views != null) {\n            config.views.compare.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.fileHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.lineHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.repositories.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.search.enabled = mode.views;\n        }\n\n        return config;\n    }\n}\n","'use strict';\nexport * from './ui/config';\n\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Uri,\n    workspace\n} from 'vscode';\nimport { extensionId } from './constants';\nimport { Container } from './container';\nimport { clearGravatarCache } from './git/gitService';\nimport { Functions } from './system';\nimport { Config } from './ui/config';\n\nconst emptyConfig: any = new Proxy<any>({} as Config, {\n    get(target, propKey, receiver) {\n        return emptyConfig;\n    }\n});\n\nexport class Configuration {\n    static configure(context: ExtensionContext) {\n        context.subscriptions.push(\n            workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration)\n        );\n    }\n\n    private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n    get onDidChange(): Event<ConfigurationChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private readonly _configAffectedByMode: string[];\n\n    constructor() {\n        this._configAffectedByMode = [\n            `gitlens.${this.name('mode').value}`,\n            `gitlens.${this.name('modes').value}`,\n            `gitlens.${this.name('blame')('toggleMode').value}`,\n            `gitlens.${this.name('codeLens').value}`,\n            `gitlens.${this.name('currentLine').value}`,\n            `gitlens.${this.name('heatmap')('toggleMode').value}`,\n            `gitlens.${this.name('hovers').value}`,\n            `gitlens.${this.name('recentChanges')('toggleMode').value}`,\n            `gitlens.${this.name('statusBar').value}`,\n            `gitlens.${this.name('views')('compare').value}`,\n            `gitlens.${this.name('views')('fileHistory').value}`,\n            `gitlens.${this.name('views')('lineHistory').value}`,\n            `gitlens.${this.name('views')('repositories').value}`,\n            `gitlens.${this.name('views')('search').value}`\n        ];\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!e.affectsConfiguration(extensionId, null!)) return;\n\n        Container.resetConfig();\n\n        if (configuration.changed(e, configuration.name('defaultGravatarsStyle').value)) {\n            clearGravatarCache();\n        }\n\n        if (\n            configuration.changed(e, configuration.name('mode').value) ||\n            configuration.changed(e, configuration.name('modes').value)\n        ) {\n            const original = e.affectsConfiguration;\n            e = {\n                ...e,\n                affectsConfiguration: (section: string, resource?: Uri) => {\n                    if (this._configAffectedByMode.some(n => section.startsWith(n))) {\n                        return true;\n                    }\n\n                    return original(section, resource);\n                }\n            } as ConfigurationChangeEvent;\n        }\n\n        this._onDidChange.fire(e);\n    }\n\n    readonly initializingChangeEvent: ConfigurationChangeEvent = {\n        affectsConfiguration: (section: string, resource?: Uri) => true\n    };\n\n    get<T>(section?: string, resource?: Uri | null, defaultValue?: T) {\n        return defaultValue === undefined\n            ? workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section)!\n            : workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section, defaultValue)!;\n    }\n\n    changed(e: ConfigurationChangeEvent, section: string, resource?: Uri | null) {\n        return e.affectsConfiguration(`${extensionId}.${section}`, resource!);\n    }\n\n    initializing(e: ConfigurationChangeEvent) {\n        return e === this.initializingChangeEvent;\n    }\n\n    inspect(section?: string, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n            .inspect(section === undefined ? extensionId : section);\n    }\n\n    async migrate<TFrom, TTo>(\n        from: string,\n        to: string,\n        options: { fallbackValue?: TTo; migrationFn?(value: TFrom): TTo } = {}\n    ): Promise<boolean> {\n        const inspection = configuration.inspect(from);\n        if (inspection === undefined) return false;\n\n        let migrated = false;\n        if (inspection.globalValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn ? options.migrationFn(inspection.globalValue as TFrom) : inspection.globalValue,\n                ConfigurationTarget.Global\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Global);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceValue as TFrom)\n                    : inspection.workspaceValue,\n                ConfigurationTarget.Workspace\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceFolderValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceFolderValue as TFrom)\n                    : inspection.workspaceFolderValue,\n                ConfigurationTarget.WorkspaceFolder\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (!migrated && options.fallbackValue !== undefined) {\n            await this.update(to, options.fallbackValue, ConfigurationTarget.Global);\n            migrated = true;\n        }\n\n        return migrated;\n    }\n\n    async migrateIfMissing<TFrom, TTo>(from: string, to: string, options: { migrationFn?(value: TFrom): TTo } = {}) {\n        const fromInspection = configuration.inspect(from);\n        if (fromInspection === undefined) return;\n\n        const toInspection = configuration.inspect(to);\n        if (fromInspection.globalValue !== undefined) {\n            if (toInspection === undefined || toInspection.globalValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.globalValue as TFrom)\n                        : fromInspection.globalValue,\n                    ConfigurationTarget.Global\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Global);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceValue as TFrom)\n                        : fromInspection.workspaceValue,\n                    ConfigurationTarget.Workspace\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceFolderValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceFolderValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceFolderValue as TFrom)\n                        : fromInspection.workspaceFolderValue,\n                    ConfigurationTarget.WorkspaceFolder\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n    }\n\n    name<K extends keyof Config>(name: K) {\n        return Functions.propOf(emptyConfig as Config, name);\n    }\n\n    update(section: string, value: any, target: ConfigurationTarget, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(extensionId, target === ConfigurationTarget.Global ? undefined : resource!)\n            .update(section, value, target);\n    }\n\n    async updateEffective(section: string, value: any, resource: Uri | null = null) {\n        const inspect = await configuration.inspect(section, resource)!;\n        if (inspect.workspaceFolderValue !== undefined) {\n            if (value === inspect.workspaceFolderValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.WorkspaceFolder, resource);\n        }\n\n        if (inspect.workspaceValue !== undefined) {\n            if (value === inspect.workspaceValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.Workspace);\n        }\n\n        if (inspect.globalValue === value || (inspect.globalValue === undefined && value === inspect.defaultValue)) {\n            return;\n        }\n\n        return await configuration.update(\n            section,\n            value === inspect.defaultValue ? undefined : value,\n            ConfigurationTarget.Global\n        );\n    }\n}\n\nexport const configuration = new Configuration();\n","'use strict';\nimport { commands, TextEditor, TextEditorEdit, Uri, window } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, EditorCommand } from './common';\n\n@command()\nexport class ClearFileAnnotationsCommand extends EditorCommand {\n    constructor() {\n        super([Commands.ClearFileAnnotations, Commands.ComputingFileAnnotations]);\n    }\n\n    async execute(editor: TextEditor, edit: TextEditorEdit, uri?: Uri): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            return Container.fileAnnotations.clear(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ClearFileAnnotationsCommand');\n            return Messages.showGenericErrorMessage('Unable to clear file annotations');\n        }\n    }\n}\n\nexport interface ToggleFileBlameCommandArgs {\n    on?: boolean;\n    sha?: string;\n    type?: FileAnnotationType;\n}\n\n@command()\nexport class ToggleFileBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            if (args.type === undefined) {\n                args = { ...args, type: FileAnnotationType.Blame };\n            }\n\n            return Container.fileAnnotations.toggle(\n                editor,\n                args.type!,\n                args.sha !== undefined ? args.sha : editor && editor.selection.active.line,\n                args.on\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleFileBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle file ${args.type} annotations. See output channel for more details`\n            );\n        }\n    }\n}\n\n@command()\nexport class ToggleFileHeatmapCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileHeatmap);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            ...args,\n            type: FileAnnotationType.Heatmap\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleFileRecentChangesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileRecentChanges);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            ...args,\n            type: FileAnnotationType.RecentChanges\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleLineBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleLineBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        try {\n            return Container.lineAnnotations.toggle(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleLineBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle line blame annotations. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { TextEditorComparer, UriComparer } from '../comparers';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Functions } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt } from './common';\n\nexport interface CloseUnchangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class CloseUnchangedFilesCommand extends ActiveEditorCommand {\n    private _onEditorChangedFn: ((editor: TextEditor | undefined) => void) | undefined;\n\n    constructor() {\n        super(Commands.CloseUnchangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CloseUnchangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Close all files except those changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to close unchanged files`);\n\n                args.uris = status.files.map(f => f.uri);\n            }\n\n            if (args.uris.length === 0) return commands.executeCommand(BuiltInCommands.CloseAllEditors);\n\n            const disposable = window.onDidChangeActiveTextEditor(\n                Functions.debounce(\n                    (e: TextEditor | undefined) => this._onEditorChangedFn && this._onEditorChangedFn(e),\n                    50\n                )\n            );\n\n            editor = window.activeTextEditor;\n\n            let count = 0;\n            let loopCount = 0;\n            const editors: TextEditor[] = [];\n\n            // Find out how many editors there are\n            while (true) {\n                if (editor != null) {\n                    let found = false;\n                    for (const e of editors) {\n                        if (TextEditorComparer.equals(e, editor, { useId: true, usePosition: true })) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found) break;\n\n                    // Start counting at the first real editor\n                    count++;\n                    editors.push(editor);\n                }\n                else {\n                    if (count !== 0) {\n                        count++;\n                    }\n                }\n\n                editor = await this.nextEditor();\n\n                loopCount++;\n                // Break out if we've looped 4 times and haven't found any editors\n                if (loopCount >= 4 && editors.length === 0) break;\n            }\n\n            if (editors.length) {\n                editor = window.activeTextEditor;\n\n                for (let i = 0; i <= count; i++) {\n                    if (\n                        editor == null ||\n                        (editor.document !== undefined &&\n                            (editor.document.isDirty ||\n                                args.uris.some(uri =>\n                                    UriComparer.equals(uri, editor!.document && editor!.document.uri)\n                                )))\n                    ) {\n                        editor = await this.nextEditor();\n                    }\n                    else {\n                        editor = await this.closeEditor();\n                    }\n                }\n            }\n\n            disposable.dispose();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'CloseUnchangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to close all unchanged files');\n        }\n    }\n\n    private async closeEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.CloseActiveEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private async nextEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.NextEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private waitForEditorChange(timeout: number = 500): Promise<TextEditor | undefined> {\n        return new Promise<TextEditor>((resolve, reject) => {\n            let timer: NodeJS.Timer | undefined;\n\n            this._onEditorChangedFn = (editor: TextEditor | undefined) => {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = undefined;\n\n                    resolve(editor);\n                }\n            };\n\n            timer = setTimeout(() => {\n                timer = undefined;\n\n                resolve(window.activeTextEditor);\n            }, timeout);\n        });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyMessageToClipboardCommandArgs {\n    message?: string;\n    sha?: string;\n}\n\n@command()\nexport class CopyMessageToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyMessageToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the message of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.message = Iterables.first(log.commits.values()).message;\n            }\n            else if (args.message === undefined) {\n                const gitUri = await GitUri.fromUri(uri);\n\n                if (args.sha === undefined) {\n                    const blameline = (editor && editor.selection.active.line) || 0;\n                    if (blameline < 0) return undefined;\n\n                    try {\n                        const blame =\n                            editor && editor.document && editor.document.isDirty\n                                ? await Container.git.getBlameForLineContents(\n                                      gitUri,\n                                      blameline,\n                                      editor.document.getText()\n                                  )\n                                : await Container.git.getBlameForLine(gitUri, blameline);\n                        if (!blame) return undefined;\n\n                        if (blame.commit.isUncommitted) return undefined;\n\n                        args.sha = blame.commit.sha;\n                        if (!gitUri.repoPath) {\n                            gitUri.repoPath = blame.commit.repoPath;\n                        }\n                    }\n                    catch (ex) {\n                        Logger.error(ex, 'CopyMessageToClipboardCommand', `getBlameForLine(${blameline})`);\n                        return Messages.showGenericErrorMessage('Unable to copy message');\n                    }\n                }\n\n                // Get the full commit message -- since blame only returns the summary\n                const commit = await Container.git.getLogCommit(gitUri.repoPath!, args.sha);\n                if (commit === undefined) return undefined;\n\n                args.message = commit.message;\n            }\n\n            void (await env.clipboard.writeText(args.message));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy message, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyMessageToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy message');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyRemoteFileUrlToClipboardCommandArgs {\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class CopyRemoteFileUrlToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyRemoteFileUrlToClipboard);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            args.sha = context.node.commit.sha;\n\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        if (args.sha === undefined) {\n            uri = getCommandUri(uri, editor);\n            if (uri == null) return undefined;\n\n            const gitUri = await GitUri.fromUri(uri);\n            if (!gitUri.repoPath) return undefined;\n\n            args = { ...args };\n            if (gitUri.sha === undefined) {\n                const commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    firstIfNotFound: true\n                });\n\n                if (commit !== undefined) {\n                    args.sha = commit.sha;\n                }\n            }\n            else {\n                args.sha = gitUri.sha;\n            }\n        }\n\n        return commands.executeCommand(Commands.OpenFileInRemote, uri, { ...args, clipboard: true });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyShaToClipboardCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class CopyShaToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyShaToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the sha of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.sha = Iterables.first(log.commits.values()).sha;\n            }\n            else if (args.sha === undefined) {\n                const blameline = (editor && editor.selection.active.line) || 0;\n                if (blameline < 0) return undefined;\n\n                try {\n                    const gitUri = await GitUri.fromUri(uri);\n                    const blame =\n                        editor && editor.document && editor.document.isDirty\n                            ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                            : await Container.git.getBlameForLine(gitUri, blameline);\n                    if (blame === undefined) return undefined;\n\n                    args.sha = blame.commit.sha;\n                }\n                catch (ex) {\n                    Logger.error(ex, 'CopyShaToClipboardCommand', `getBlameForLine(${blameline})`);\n                    return Messages.showGenericErrorMessage('Unable to copy commit id');\n                }\n            }\n\n            void (await env.clipboard.writeText(args.sha));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy commit id, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyShaToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy commit id');\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt\n} from './common';\n\nexport interface DiffBranchWithBranchCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffBranchWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffHeadWithBranch, Commands.DiffWorkingWithBranch]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffHeadWithBranch:\n                args.ref2 = 'HEAD';\n                break;\n\n            case Commands.DiffWorkingWithBranch:\n                args.ref2 = '';\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        if (args.ref2 === undefined) return;\n\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare with branch or tag in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                let placeHolder;\n                switch (args.ref2) {\n                    case '':\n                        placeHolder = `Compare Working Tree with${GlyphChars.Ellipsis}`;\n                        break;\n                    case 'HEAD':\n                        placeHolder = `Compare HEAD with${GlyphChars.Ellipsis}`;\n                        break;\n                    default:\n                        placeHolder = `Compare ${args.ref2} with${GlyphChars.Ellipsis}`;\n                        break;\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(placeHolder, {\n                    allowCommitId: true\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.compareView.compare(repoPath, args.ref1, args.ref2);\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffBranchWithBranchCommand');\n            return Messages.showGenericErrorMessage('Unable to open branch compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { CompareResultsNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRef\n} from './common';\n\nexport interface DiffDirectoryCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffDirectoryCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffDirectory,\n            Commands.DiffDirectoryWithHead,\n            Commands.ViewsOpenDirectoryDiff,\n            Commands.ViewsOpenDirectoryDiffWithWorking\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffDirectoryWithHead:\n                args.ref1 = 'HEAD';\n                args.ref2 = undefined;\n                break;\n\n            case Commands.ViewsOpenDirectoryDiff:\n                if (context.type === 'viewItem' && context.node instanceof CompareResultsNode) {\n                    args.ref1 = context.node.ref1.ref;\n                    args.ref2 = context.node.ref2.ref;\n                }\n                break;\n\n            case Commands.ViewsOpenDirectoryDiffWithWorking:\n                if (isCommandViewContextWithRef(context)) {\n                    args.ref1 = context.node.ref;\n                    args.ref2 = undefined;\n                }\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare directory in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Compare Working Tree with${GlyphChars.Ellipsis}`,\n                    { allowCommitId: true }\n                );\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.git.openDirectoryDiff(repoPath, args.ref1, args.ref2);\n            return undefined;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (msg === 'No diff tool found') {\n                const result = await window.showWarningMessage(\n                    `Unable to open directory compare because there is no Git diff tool configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            Logger.error(ex, 'DiffDirectoryCommand');\n            return Messages.showGenericErrorMessage('Unable to open directory compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithPrevious);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined && status.indexStatus !== undefined) {\n                        args.commit = args.commit.with({\n                            sha: GitService.stagedUncommittedSha\n                        });\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithPreviousCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    args.commit = args.commit.with({\n                        sha:\n                            status !== undefined && status.indexStatus !== undefined\n                                ? GitService.stagedUncommittedSha\n                                : args.commit.previousSha!,\n                        fileName: args.commit.previousFileName!,\n                        originalFileName: null,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                    args.line = blame.line.line + 1;\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithWorkingCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri, ViewColumn } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface DiffWithCommandArgsRevision {\n    sha: string;\n    uri: Uri;\n    title?: string;\n}\n\nexport interface DiffWithCommandArgs {\n    lhs?: DiffWithCommandArgsRevision;\n    rhs?: DiffWithCommandArgsRevision;\n    repoPath?: string;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: DiffWithCommandArgs): string;\n    static getMarkdownCommandArgs(commit1: GitCommit, commit2: GitCommit): string;\n    static getMarkdownCommandArgs(argsOrCommit1: DiffWithCommandArgs | GitCommit, commit2?: GitCommit): string {\n        let args: DiffWithCommandArgs | GitCommit;\n        if (argsOrCommit1 instanceof GitCommit) {\n            const commit1 = argsOrCommit1;\n\n            if (commit2 === undefined) {\n                if (commit1.isUncommitted) {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha: 'HEAD',\n                            uri: commit1.uri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: commit1.uri\n                        }\n                    };\n                }\n                else {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha:\n                                commit1.previousSha !== undefined\n                                    ? commit1.previousSha\n                                    : GitService.deletedOrMissingSha,\n                            uri: commit1.previousUri!\n                        },\n                        rhs: {\n                            sha: commit1.sha,\n                            uri: commit1.uri\n                        }\n                    };\n                }\n            }\n            else {\n                args = {\n                    repoPath: commit1.repoPath,\n                    lhs: {\n                        sha: commit1.sha,\n                        uri: commit1.uri\n                    },\n                    rhs: {\n                        sha: commit2.sha,\n                        uri: commit2.uri\n                    }\n                };\n            }\n        }\n        else {\n            args = argsOrCommit1;\n        }\n\n        return super.getMarkdownCommandArgsCore<DiffWithCommandArgs>(Commands.DiffWith, args);\n    }\n\n    constructor() {\n        super(Commands.DiffWith);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithCommandArgs = {}): Promise<any> {\n        args = {\n            ...args,\n            lhs: { ...args.lhs },\n            rhs: { ...args.rhs },\n            showOptions: { ...args.showOptions }\n        } as DiffWithCommandArgs;\n        if (args.repoPath === undefined || args.lhs === undefined || args.rhs === undefined) return undefined;\n\n        try {\n            let lhsSha = args.lhs.sha;\n            let rhsSha = args.rhs.sha;\n\n            [args.lhs.sha, args.rhs.sha] = await Promise.all([\n                await Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri),\n                await Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri)\n            ]);\n\n            if (args.lhs.sha !== GitService.deletedOrMissingSha) {\n                lhsSha = args.lhs.sha;\n            }\n\n            if (args.rhs.sha && args.rhs.sha !== GitService.deletedOrMissingSha) {\n                // Ensure that the file still exists in this commit\n                const status = await Container.git.getFileStatusForCommit(\n                    args.repoPath,\n                    args.rhs.uri.fsPath,\n                    args.rhs.sha\n                );\n                if (status !== undefined && status.status === 'D') {\n                    args.rhs.sha = GitService.deletedOrMissingSha;\n                }\n                else {\n                    rhsSha = args.rhs.sha;\n                }\n            }\n\n            const [lhs, rhs] = await Promise.all([\n                Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),\n                Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)\n            ]);\n\n            let rhsSuffix = GitService.shortenSha(rhsSha, { uncommitted: 'Working Tree' }) || '';\n            if (rhs === undefined) {\n                if (GitService.isUncommitted(args.rhs.sha)) {\n                    rhsSuffix = 'deleted';\n                }\n                else if (rhsSuffix.length === 0 && args.rhs.sha === GitService.deletedOrMissingSha) {\n                    rhsSuffix = 'not in Working Tree';\n                }\n                else {\n                    rhsSuffix = `deleted in ${rhsSuffix}`;\n                }\n            }\n            else if (lhs === undefined) {\n                rhsSuffix = `added in ${rhsSuffix}`;\n            }\n\n            let lhsSuffix = args.lhs.sha !== GitService.deletedOrMissingSha ? GitService.shortenSha(lhsSha) || '' : '';\n            if (lhs === undefined && args.rhs.sha.length === 0) {\n                if (rhs !== undefined) {\n                    lhsSuffix = `not in ${lhsSuffix}`;\n                    rhsSuffix = '';\n                }\n                else {\n                    lhsSuffix = `deleted in ${lhsSuffix})`;\n                }\n            }\n\n            if (args.lhs.title === undefined && (lhs !== undefined || lhsSuffix.length !== 0)) {\n                args.lhs.title = `${paths.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ''}`;\n            }\n            if (args.rhs.title === undefined) {\n                args.rhs.title = `${paths.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ''}`;\n            }\n\n            const title =\n                args.lhs.title !== undefined && args.rhs.title !== undefined\n                    ? `${args.lhs.title} ${GlyphChars.ArrowLeftRightLong} ${args.rhs.title}`\n                    : args.lhs.title || args.rhs.title;\n\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n\n            if (args.showOptions.viewColumn === undefined) {\n                args.showOptions.viewColumn = ViewColumn.Active;\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            return await commands.executeCommand(\n                BuiltInCommands.Diff,\n                lhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.lhs.uri.fsPath, args.repoPath)\n                    : lhs,\n                rhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.rhs.uri.fsPath, args.repoPath)\n                    : rhs,\n                title,\n                args.showOptions\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithCommand', 'getVersionedFile');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithBranchCommandArgs {\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithBranch);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithBranchCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return Messages.showNoRepositoryWarningMessage(`Unable to open file compare`);\n\n        const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n            `Compare ${paths.basename(gitUri.fsPath)} with${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                goBack: args.goBackCommand\n            }\n        );\n        if (pick === undefined) return undefined;\n\n        if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n        const ref = pick.ref;\n        if (ref === undefined) return undefined;\n\n        let renamedUri: Uri | undefined;\n        let renamedTitle: string | undefined;\n\n        // Check to see if this file has been renamed\n        const files = await Container.git.getDiffStatus(gitUri.repoPath, 'HEAD', ref, { filter: 'R' });\n        if (files !== undefined) {\n            const fileName = Strings.normalizePath(paths.relative(gitUri.repoPath, gitUri.fsPath));\n            const rename = files.find(s => s.fileName === fileName);\n            if (rename !== undefined && rename.originalFileName !== undefined) {\n                renamedUri = GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);\n                renamedTitle = `${paths.basename(rename.originalFileName)} (${ref})`;\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: gitUri.repoPath,\n            lhs: {\n                sha: pick.remote ? `remotes/${ref}` : ref,\n                uri: renamedUri || (gitUri as Uri),\n                title: renamedTitle || `${paths.basename(gitUri.fsPath)} (${ref})`\n            },\n            rhs: {\n                sha: '',\n                uri: gitUri as Uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitLogCommit, GitService, GitStatusFile, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithNextCommandArgs {\n    commit?: GitLogCommit;\n    range?: Range;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithNextCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithNext);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithNextCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        let status: GitStatusFile | undefined;\n\n        if (args.commit === undefined || !(args.commit instanceof GitLogCommit) || args.range !== undefined) {\n            try {\n                const sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n\n                if (GitService.isStagedUncommitted(sha!)) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath!,\n                        lhs: {\n                            sha: sha!,\n                            uri: gitUri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: sha !== undefined ? undefined : 2,\n                    range: args.range!,\n                    renames: true\n                });\n                if (log === undefined) {\n                    const fileName = await Container.git.findNextFileName(gitUri.repoPath!, gitUri.fsPath);\n                    if (fileName !== undefined) {\n                        log = await Container.git.getLogForFile(gitUri.repoPath, fileName, {\n                            maxCount: sha !== undefined ? undefined : 2,\n                            range: args.range!,\n                            renames: true\n                        });\n                    }\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n                }\n\n                args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n\n                // If the sha is missing or the file is uncommitted, treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) return commands.executeCommand(Commands.DiffWithWorking, uri);\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithNextCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        if (args.commit.nextSha === undefined) {\n            // Check if the file is staged\n            status = status || (await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath));\n            if (status !== undefined && status.indexStatus === 'M') {\n                const diffArgs: DiffWithCommandArgs = {\n                    repoPath: args.commit.repoPath,\n                    lhs: {\n                        sha: args.commit.sha,\n                        uri: args.commit.uri\n                    },\n                    rhs: {\n                        sha: GitService.stagedUncommittedSha,\n                        uri: args.commit.uri\n                    },\n                    line: args.line,\n                    showOptions: args.showOptions\n                };\n\n                return commands.executeCommand(Commands.DiffWith, diffArgs);\n            }\n\n            return commands.executeCommand(Commands.DiffWithWorking, uri);\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: args.commit.nextSha,\n                uri: args.commit.nextUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { DiffWithWorkingCommandArgs } from './diffWithWorking';\n\nexport interface DiffWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    inDiffEditor?: boolean;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithPrevious, Commands.DiffWithPreviousInDiff]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.DiffWithPreviousInDiff) {\n            args.inDiffEditor = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || !args.commit.isFile) {\n            const gitUri = await GitUri.fromUri(uri);\n\n            try {\n                let sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n                if (sha === GitService.deletedOrMissingSha) {\n                    return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                }\n\n                // If we are a fake \"staged\" sha, remove it\n                let isStagedUncommitted = false;\n                if (GitService.isStagedUncommitted(sha!)) {\n                    gitUri.sha = sha = undefined;\n                    isStagedUncommitted = true;\n                }\n\n                // If we are in a diff editor, assume we are on the right side, and need to move back 2 revisions\n                const originalSha = sha;\n                if (args.inDiffEditor && sha !== undefined) {\n                    sha = `${sha}^`;\n                }\n\n                args.commit = undefined;\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: 2,\n                    ref: sha,\n                    renames: true\n                });\n\n                if (log !== undefined) {\n                    args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n                }\n                else {\n                    // Only kick out if we aren't looking for the previous sha -- since renames won't return a log above\n                    if (sha === undefined || !sha.endsWith('^')) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    // Check for renames\n                    log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                        maxCount: 3,\n                        ref: originalSha,\n                        renames: true\n                    });\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    args.commit =\n                        Iterables.next(Iterables.skip(log.commits.values(), 1)) ||\n                        Iterables.first(log.commits.values());\n\n                    if (args.commit.sha === originalSha) {\n                        return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                    }\n                }\n\n                // If the sha is missing (i.e. working tree), check the file status\n                // If file is uncommitted, then treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) {\n                        if (isStagedUncommitted) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor\n                                        ? args.commit.previousSha || GitService.deletedOrMissingSha\n                                        : args.commit.sha,\n                                    uri: args.inDiffEditor ? args.commit.previousUri : args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        // Check if the file is staged\n                        if (status.indexStatus !== undefined) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? GitService.stagedUncommittedSha : '',\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        if (!args.inDiffEditor) {\n                            return commands.executeCommand(Commands.DiffWithWorking, uri, {\n                                commit: args.commit,\n                                showOptions: args.showOptions\n                            } as DiffWithWorkingCommandArgs);\n                        }\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithPreviousCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRevisionCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithRevision);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRevisionCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        const placeHolder = `Compare ${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''} with revision${\n            GlyphChars.Ellipsis\n        }`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n        try {\n            const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                maxCount: args.maxCount,\n                ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n            });\n            if (log === undefined) {\n                if (args.branchOrTag) {\n                    return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                }\n                return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n            }\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.DiffWithRevision,\n                    [uri, { ...args } as DiffWithRevisionCommandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.DiffWithRevision,\n                        [new GitUri(uri, last), { ...args, nextPageCommand: npc } as DiffWithRevisionCommandArgs]\n                    );\n                }\n            }\n\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${gitUri.getFormattedPath()}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                                ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                : ''\n                    }`\n                },\n                Commands.DiffWithRevision,\n                [uri, { ...args }]\n            );\n\n            const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                pickerOnly: true,\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand: log.truncated\n                    ? new CommandQuickPickItem(\n                          {\n                              label: `$(sync) Show All Commits`,\n                              description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                          },\n                          Commands.DiffWithRevision,\n                          [uri, { ...args, maxCount: 0 } as DiffWithRevisionCommandArgs]\n                      )\n                    : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            let ref: string;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.DiffWithRevision, gitUri, {\n                    ...args,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as DiffWithRevisionCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                ref = pick.commit.sha;\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: gitUri.repoPath,\n                lhs: {\n                    sha: ref,\n                    uri: gitUri as Uri\n                },\n                rhs: {\n                    sha: '',\n                    uri: gitUri as Uri\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return await commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            // If the sha is missing, just let the user know the file matches\n            if (gitUri.sha === undefined) return window.showInformationMessage('File matches the working tree');\n            if (gitUri.sha === GitService.deletedOrMissingSha) {\n                return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n            }\n\n            // If we are a fake \"staged\" sha, check the status\n            if (GitService.isStagedUncommitted(gitUri.sha!)) {\n                gitUri.sha = undefined;\n\n                const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                if (status !== undefined && status.indexStatus !== undefined) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath,\n                        lhs: {\n                            sha: GitService.stagedUncommittedSha,\n                            uri: gitUri.documentUri()\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri.documentUri()\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n            }\n\n            try {\n                args.commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    ref: gitUri.sha,\n                    firstIfNotFound: true\n                });\n                if (args.commit === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n            }\n            catch (ex) {\n                Logger.error(\n                    ex,\n                    'DiffWithWorkingCommand',\n                    `getLogCommit(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n                );\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const [workingFileName] = await Container.git.findWorkingFileName(gitUri.fsPath, gitUri.repoPath);\n        if (workingFileName === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        args.commit.workingFileName = workingFileName;\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, SourceControlResourceState, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFileCommit,\n    isCommandViewContextWithFileRefs\n} from './common';\n\nenum Status {\n    INDEX_MODIFIED,\n    INDEX_ADDED,\n    INDEX_DELETED,\n    INDEX_RENAMED,\n    INDEX_COPIED,\n\n    MODIFIED,\n    DELETED,\n    UNTRACKED,\n    IGNORED,\n\n    ADDED_BY_US,\n    ADDED_BY_THEM,\n    DELETED_BY_US,\n    DELETED_BY_THEM,\n    BOTH_ADDED,\n    BOTH_DELETED,\n    BOTH_MODIFIED\n}\n\nenum ResourceGroupType {\n    Merge,\n    Index,\n    WorkingTree\n}\n\ninterface Resource extends SourceControlResourceState {\n    readonly resourceGroupType: ResourceGroupType;\n    readonly type: Status;\n}\n\ninterface ExternalDiffFile {\n    uri: Uri;\n    staged: boolean;\n    ref1?: string;\n    ref2?: string;\n}\n\nexport interface ExternalDiffCommandArgs {\n    files?: ExternalDiffFile[];\n}\n\n@command()\nexport class ExternalDiffCommand extends Command {\n    constructor() {\n        super([Commands.ExternalDiff, Commands.ExternalDiffAll]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ExternalDiffCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFileCommit(context)) {\n            args = { ...args };\n\n            const ref1 = GitService.isUncommitted(context.node.commit.previousFileSha)\n                ? ''\n                : context.node.commit.previousFileSha;\n            const ref2 = context.node.commit.isUncommitted ? '' : context.node.commit.sha;\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.commit.isStagedUncommitted || context.node.file.indexStatus !== undefined,\n                    ref1: ref1,\n                    ref2: ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (isCommandViewContextWithFileRefs(context)) {\n            args = { ...args };\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.file.indexStatus !== undefined,\n                    ref1: context.node.ref1,\n                    ref2: context.node.ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (args.files === undefined) {\n            if (context.type === 'scm-states') {\n                args = { ...args };\n                args.files = context.scmResourceStates.map(r => ({\n                    uri: r.resourceUri,\n                    staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                }));\n            }\n            else if (context.type === 'scm-groups') {\n                args = { ...args };\n                args.files = Arrays.filterMap(context.scmResourceGroups[0].resourceStates, r =>\n                    this.isModified(r)\n                        ? {\n                              uri: r.resourceUri,\n                              staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                          }\n                        : undefined\n                );\n            }\n        }\n\n        if (context.command === Commands.ExternalDiffAll) {\n            if (args.files === undefined) {\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open changes from which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The repository doesn't have any changes\");\n                }\n\n                args.files = [];\n\n                for (const file of status.files) {\n                    if (file.indexStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: true });\n                    }\n\n                    if (file.workingTreeStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: false });\n                    }\n                }\n            }\n        }\n\n        return this.execute(args);\n    }\n\n    private isModified(resource: SourceControlResourceState) {\n        const status = (resource as Resource).type;\n        return status === Status.BOTH_MODIFIED || status === Status.INDEX_MODIFIED || status === Status.MODIFIED;\n    }\n\n    async execute(args: ExternalDiffCommandArgs = {}) {\n        try {\n            let repoPath;\n            if (args.files === undefined) {\n                const editor = window.activeTextEditor;\n                if (editor === undefined) return undefined;\n\n                repoPath = await Container.git.getRepoPathOrActive(undefined, editor);\n                if (!repoPath) return undefined;\n\n                const uri = editor.document.uri;\n                const status = await Container.git.getStatusForFile(repoPath, uri.fsPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The current file doesn't have any changes\");\n                }\n\n                args.files = [];\n                if (status.indexStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: true });\n                }\n\n                if (status.workingTreeStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: false });\n                }\n            }\n            else {\n                repoPath = await Container.git.getRepoPath(args.files[0].uri.fsPath);\n                if (!repoPath) return undefined;\n            }\n\n            const tool = await Container.git.getDiffTool(repoPath);\n            if (tool === undefined) {\n                const result = await window.showWarningMessage(\n                    `Unable to open changes in diff tool. No Git diff tool is configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            for (const file of args.files) {\n                void Container.git.openDiffTool(repoPath, file.uri, {\n                    ref1: file.ref1,\n                    ref2: file.ref2,\n                    staged: file.staged,\n                    tool: tool\n                });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ExternalDiffCommand');\n            return Messages.showGenericErrorMessage('Unable to open changes in diff tool');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchesInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchesInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchesInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchesInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchesInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branches on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branches'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchesInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open branches on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithBranch\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchInRemoteCommandArgs {\n    branch?: string;\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithBranch(context)) {\n            args = { ...args };\n            args.branch = context.node.branch.name;\n            args.remote = context.node.branch.getRemote();\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branch on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            if (args.branch === undefined) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Open which branch on remote${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branch',\n                    branch: args.branch || 'HEAD'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchInRemoteCommandArgs');\n            return window.showErrorMessage(\n                `Unable to open branch on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt, openEditor } from './common';\n\nexport interface OpenChangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class OpenChangedFilesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenChangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenChangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open all files changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to open changed files`);\n\n                args.uris = Arrays.filterMap(status.files, f => (f.status !== 'D' ? f.uri : undefined));\n            }\n\n            for (const uri of args.uris) {\n                await openEditor(uri, { preserveFocus: true, preview: false } as TextDocumentShowOptions);\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenChangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to open all changed files');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenCommitInRemoteCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class OpenCommitInRemoteCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: OpenCommitInRemoteCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: OpenCommitInRemoteCommandArgs | string): string {\n        const args: OpenCommitInRemoteCommandArgs = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<OpenCommitInRemoteCommandArgs>(Commands.OpenCommitInRemote, args);\n    }\n\n    constructor() {\n        super(Commands.OpenCommitInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenCommitInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenCommitInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            if (args.sha === undefined) {\n                const blameline = editor == null ? 0 : editor.selection.active.line;\n                if (blameline < 0) return undefined;\n\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage(\n                        'Unable to open commit on remote provider'\n                    );\n                }\n\n                let commit = blame.commit;\n                // If the line is uncommitted, find the previous commit\n                if (commit.isUncommitted) {\n                    commit = commit.with({\n                        sha: commit.previousSha,\n                        fileName: commit.previousFileName,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                }\n\n                args.sha = commit.sha;\n            }\n\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: RemoteResourceType.Commit,\n                    sha: args.sha\n                },\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenCommitInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open commit on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenFileInRemoteCommandArgs {\n    branch?: string;\n    clipboard?: boolean;\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class OpenFileInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenFileInRemote);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: OpenFileInRemoteCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        if (args.branch === undefined && args.sha === undefined) {\n            const branch = await Container.git.getBranch(gitUri.repoPath);\n            if (branch === undefined || branch.tracking === undefined) {\n                const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n                    args.clipboard\n                        ? `Copy url for ${gitUri.getRelativePath()} to clipboard for which branch${GlyphChars.Ellipsis}`\n                        : `Open ${gitUri.getRelativePath()} on remote for which branch${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n            else {\n                args.branch = branch.name;\n            }\n        }\n\n        try {\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n            const range =\n                args.range && editor != null\n                    ? new Range(\n                          editor.selection.start.with({ line: editor.selection.start.line + 1 }),\n                          editor.selection.end.with({ line: editor.selection.end.line + 1 })\n                      )\n                    : undefined;\n            const sha = args.sha || gitUri.sha;\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: sha === undefined ? RemoteResourceType.File : RemoteResourceType.Revision,\n                    branch: args.branch || 'HEAD',\n                    fileName: gitUri.getRelativePath(),\n                    range: range,\n                    sha: sha\n                },\n                remotes,\n                clipboard: args.clipboard\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open file on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    uri?: Uri;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenFileRevisionCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: OpenFileRevisionCommandArgs): string;\n    static getMarkdownCommandArgs(uri: Uri, annotationType?: FileAnnotationType, line?: number): string;\n    static getMarkdownCommandArgs(\n        argsOrUri: OpenFileRevisionCommandArgs | Uri,\n        annotationType?: FileAnnotationType,\n        line?: number\n    ): string {\n        let args: OpenFileRevisionCommandArgs | Uri;\n        if (argsOrUri instanceof Uri) {\n            const uri = argsOrUri;\n\n            args = {\n                uri: uri,\n                line: line,\n                annotationType: annotationType\n            };\n        }\n        else {\n            args = argsOrUri;\n        }\n\n        return super.getMarkdownCommandArgsCore<OpenFileRevisionCommandArgs>(Commands.OpenFileRevision, args);\n    }\n\n    constructor() {\n        super(Commands.OpenFileRevision);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenFileRevisionCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        let progressCancellation: CancellationTokenSource | undefined;\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                const gitUri = await GitUri.fromUri(uri);\n\n                const placeHolder = `Open revision of ${gitUri.getFormattedPath({\n                    suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n                })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}${\n                    GlyphChars.Ellipsis\n                }`;\n\n                progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n                const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n                }\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n                if (log.truncated) {\n                    const npc = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-right) Show Next Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                        },\n                        Commands.OpenFileRevision,\n                        [uri, { ...args } as OpenFileRevisionCommandArgs]\n                    );\n\n                    const last = Iterables.last(log.commits.values());\n                    if (last != null) {\n                        previousPageCommand = new CommandQuickPickItem(\n                            {\n                                label: `$(arrow-left) Show Previous Commits`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                            },\n                            Commands.OpenFileRevision,\n                            [new GitUri(uri, last), { ...args, nextPageCommand: npc } as OpenFileRevisionCommandArgs]\n                        );\n                    }\n                }\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${gitUri.getFormattedPath()}${\n                            args.branchOrTag\n                                ? ` from ${GlyphChars.Space}${\n                                      args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                                  } ${args.branchOrTag.name}`\n                                : gitUri.sha\n                                    ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                    : ''\n                        }`\n                    },\n                    Commands.OpenFileRevision,\n                    [uri, { ...args }]\n                );\n\n                const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                    pickerOnly: true,\n                    progressCancellation: progressCancellation,\n                    currentCommand: currentCommand,\n                    nextPageCommand: args.nextPageCommand,\n                    previousPageCommand: previousPageCommand,\n                    showAllCommand: log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.OpenFileRevision,\n                              [uri, { ...args, maxCount: 0 } as OpenFileRevisionCommandArgs]\n                          )\n                        : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                    const branchOrTag = await pick.execute();\n                    if (branchOrTag === undefined) return undefined;\n                    if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                    return commands.executeCommand(Commands.OpenFileRevision, gitUri, {\n                        ...args,\n                        branchOrTag: branchOrTag.item,\n                        goBackCommand: currentCommand\n                    } as OpenFileRevisionCommandArgs);\n                }\n                else {\n                    if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                    args.uri = GitUri.toRevisionUri(pick.commit.sha, pick.commit.uri.fsPath, pick.commit.repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri!, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open file revision');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitLogCommit, GitRemote, GitService, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, OpenRemoteCommandQuickPickItem, RemotesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface OpenInRemoteCommandArgs {\n    remote?: string;\n    remotes?: GitRemote[];\n    resource?: RemoteResource;\n    clipboard?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenInRemote);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenInRemoteCommandArgs = {}) {\n        args = { ...args };\n        if (args.remotes === undefined || args.resource === undefined) return undefined;\n\n        if (args.remote !== undefined) {\n            const remotes = args.remotes.filter(r => r.name === args.remote);\n            // Only filter if we get some results\n            if (remotes.length > 0) {\n                args.remotes = remotes;\n            }\n        }\n\n        try {\n            let remote: GitRemote | undefined;\n            if (args.remotes.length > 1) {\n                remote = args.remotes.find(r => r.default);\n            }\n            else if (args.remotes.length === 1) {\n                remote = args.remotes[0];\n            }\n\n            if (remote != null) {\n                this.ensureRemoteBranchName(args);\n                const command = new OpenRemoteCommandQuickPickItem(remote, args.resource, args.clipboard);\n                return await command.execute();\n            }\n\n            const verb = args.clipboard ? 'Copy url for' : 'Open';\n            const suffix = args.clipboard ? `to clipboard from${GlyphChars.Ellipsis}` : `on${GlyphChars.Ellipsis}`;\n            let placeHolder = '';\n            switch (args.resource.type) {\n                case RemoteResourceType.Branch:\n                    this.ensureRemoteBranchName(args);\n                    placeHolder = `${verb} ${args.resource.branch} branch ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Commit:\n                    const shortSha = GitService.shortenSha(args.resource.sha);\n                    placeHolder = `${verb} commit ${shortSha} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.File:\n                    placeHolder = `${verb} ${args.resource.fileName} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Revision:\n                    if (args.resource.commit !== undefined && args.resource.commit instanceof GitLogCommit) {\n                        if (args.resource.commit.status === 'D') {\n                            args.resource.sha = args.resource.commit.previousSha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.previousShortSha\n                            } ${suffix}`;\n                        }\n                        else {\n                            args.resource.sha = args.resource.commit.sha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.shortSha\n                            } ${suffix}`;\n                        }\n                    }\n                    else {\n                        const shortFileSha =\n                            args.resource.sha === undefined ? '' : GitService.shortenSha(args.resource.sha);\n                        const shaSuffix = shortFileSha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${shortFileSha}` : '';\n\n                        placeHolder = `${verb} ${args.resource.fileName}${shaSuffix} ${suffix}`;\n                    }\n                    break;\n            }\n\n            const pick = await RemotesQuickPick.show(\n                args.remotes,\n                placeHolder,\n                args.resource,\n                args.clipboard,\n                args.goBackCommand\n            );\n            if (pick === undefined) return undefined;\n\n            return await pick.execute();\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenInRemoteCommand');\n            return Messages.showGenericErrorMessage('Unable to open in remote provider');\n        }\n    }\n\n    private ensureRemoteBranchName(args: OpenInRemoteCommandArgs) {\n        if (args.remotes === undefined || args.resource === undefined || args.resource.type !== 'branch') return;\n\n        // Check to see if the remote is in the branch\n        const index = args.resource.branch.indexOf('/');\n        if (index >= 0) {\n            const remoteName = args.resource.branch.substring(0, index);\n            const remote = args.remotes.find(r => r.name === remoteName);\n            if (remote !== undefined) {\n                args.resource.branch = args.resource.branch.substring(index + 1);\n                args.remotes = [remote];\n            }\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenRepoInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenRepoInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenRepoInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenRepoInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenRepoInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open which repository on remote${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'repo'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenRepoInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open repository on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenWorkingFileCommandArgs {\n    uri?: Uri;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n}\n\n@command()\nexport class OpenWorkingFileCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenWorkingFile);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenWorkingFileCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                args.uri = await GitUri.fromUri(uri);\n                if (args.uri instanceof GitUri && args.uri.sha) {\n                    const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                        args.uri.fsPath,\n                        args.uri.repoPath\n                    );\n                    if (fileName === undefined) {\n                        return window.showWarningMessage(\n                            'Unable to open working file. File could not be found in the working tree'\n                        );\n                    }\n\n                    args.uri = new GitUri(GitUri.resolveToUri(fileName, repoPath), repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenWorkingFileCommand');\n            return Messages.showGenericErrorMessage('Unable to open working file');\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class FetchRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.FetchRepositories);\n    }\n\n    async execute() {\n        return Container.git.fetchAll();\n    }\n}\n\n@command()\nexport class PullRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PullRepositories);\n    }\n\n    async execute() {\n        return Container.git.pullAll();\n    }\n}\n\n@command()\nexport class PushRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PushRepositories);\n    }\n\n    async execute() {\n        return Container.git.pushAll();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ResetSuppressedWarningsCommand extends Command {\n    constructor() {\n        super(Commands.ResetSuppressedWarnings);\n    }\n\n    async execute() {\n        await configuration.update(\n            configuration.name('advanced')('messages').value,\n            undefined,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { commands, InputBoxOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitRepoSearchBy, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitsQuickPick, ShowCommitSearchResultsInViewQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { SearchResultsCommitsNode } from '../views/nodes';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRepo\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nconst searchByRegex = /^([@~=:#])/;\nconst symbolToSearchByMap = new Map<string, GitRepoSearchBy>([\n    ['@', GitRepoSearchBy.Author],\n    ['~', GitRepoSearchBy.ChangedLines],\n    ['=', GitRepoSearchBy.Changes],\n    [':', GitRepoSearchBy.Files],\n    ['#', GitRepoSearchBy.Sha]\n]);\n\nconst searchByToSymbolMap = new Map<GitRepoSearchBy, string>([\n    [GitRepoSearchBy.Author, '@'],\n    [GitRepoSearchBy.ChangedLines, '~'],\n    [GitRepoSearchBy.Changes, '='],\n    [GitRepoSearchBy.Files, ':'],\n    [GitRepoSearchBy.Sha, '#']\n]);\n\nexport interface SearchCommitsCommandArgs {\n    search?: string;\n    searchBy?: GitRepoSearchBy;\n    maxCount?: number;\n    prefillOnly?: boolean;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class SearchCommitsCommand extends ActiveEditorCachedCommand {\n    private _lastSearch: string | undefined;\n\n    constructor() {\n        super([Commands.SearchCommits, Commands.SearchCommitsInView]);\n    }\n\n    protected async preExecute(context: CommandContext, args: SearchCommitsCommandArgs = {}) {\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.showInView = true;\n\n            if (context.node instanceof SearchResultsCommitsNode) {\n                args.search = context.node.search;\n                args.searchBy = context.node.searchBy;\n                args.prefillOnly = true;\n            }\n\n            if (isCommandViewContextWithRepo(context)) {\n                return this.execute(context.editor, context.node.uri, args);\n            }\n        }\n        else if (context.command === Commands.SearchCommitsInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n        else {\n            // TODO: Add a user setting (default to view?)\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: SearchCommitsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Search for commits in which repository${GlyphChars.Ellipsis}`,\n            args.goBackCommand\n        );\n        if (!repoPath) return undefined;\n\n        args = { ...args };\n        const originalArgs = { ...args };\n\n        if (args.prefillOnly && args.search && args.searchBy) {\n            args.search = `${searchByToSymbolMap.get(args.searchBy) || ''}${args.search}`;\n            args.searchBy = undefined;\n        }\n\n        if (!args.search || args.searchBy == null) {\n            let selection;\n            if (!args.search) {\n                if (args.searchBy != null) {\n                    args.search = searchByToSymbolMap.get(args.searchBy);\n                    selection = [1, 1];\n                }\n                else {\n                    args.search = this._lastSearch;\n                }\n            }\n\n            if (args.showInView) {\n                await Container.searchView.show();\n            }\n\n            args.search = await window.showInputBox({\n                value: args.search,\n                prompt: `Please enter a search string`,\n                placeHolder: `Search commits by message, author (@<pattern>), files (:<path/glob>), commit id (#<sha>), changes (=<pattern>), changed lines (~<pattern>)`,\n                valueSelection: selection\n            } as InputBoxOptions);\n            if (args.search === undefined) {\n                return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n            }\n\n            this._lastSearch = originalArgs.search = args.search;\n\n            const match = searchByRegex.exec(args.search);\n            if (match && match[1]) {\n                args.searchBy = symbolToSearchByMap.get(match[1]);\n                args.search = args.search.substring(args.search[1] === ' ' ? 2 : 1);\n            }\n            else if (GitService.isShaLike(args.search)) {\n                args.searchBy = GitRepoSearchBy.Sha;\n            }\n            else {\n                args.searchBy = GitRepoSearchBy.Message;\n            }\n        }\n\n        if (args.searchBy === undefined) {\n            args.searchBy = GitRepoSearchBy.Message;\n        }\n\n        let searchLabel: string | undefined = undefined;\n        switch (args.searchBy) {\n            case GitRepoSearchBy.Author:\n                searchLabel = `commits with an author matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.ChangedLines:\n                searchLabel = `commits with changed lines matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Changes:\n                searchLabel = `commits with changes matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Files:\n                searchLabel = `commits with files matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Message:\n                searchLabel = args.search ? `commits with a message matching '${args.search}'` : 'all commits';\n                break;\n\n            case GitRepoSearchBy.Sha:\n                searchLabel = `commits with an id matching '${args.search}'`;\n                break;\n        }\n\n        if (args.showInView) {\n            void Container.searchView.search(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount,\n                label: { label: searchLabel! }\n            });\n\n            return;\n        }\n\n        const progressCancellation = CommitsQuickPick.showProgress(searchLabel!);\n        try {\n            const log = await Container.git.getLogForSearch(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount\n            });\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let goBackCommand: CommandQuickPickItem | undefined =\n                args.goBackCommand ||\n                new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to commit search`\n                    },\n                    Commands.SearchCommits,\n                    [uri, originalArgs]\n                );\n\n            let commit;\n            if (args.searchBy !== GitRepoSearchBy.Sha || log === undefined || log.count !== 1) {\n                const pick = await CommitsQuickPick.show(log, searchLabel!, progressCancellation, {\n                    goBackCommand: goBackCommand,\n                    showAllCommand:\n                        log !== undefined && log.truncated\n                            ? new CommandQuickPickItem(\n                                  {\n                                      label: `$(sync) Show All Commits`,\n                                      description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                                  },\n                                  Commands.SearchCommits,\n                                  [uri, { ...args, maxCount: 0, goBackCommand: goBackCommand }]\n                              )\n                            : undefined,\n                    showInViewCommand:\n                        log !== undefined\n                            ? new ShowCommitSearchResultsInViewQuickPickItem(args.search, args.searchBy, log, {\n                                  label: searchLabel!\n                              })\n                            : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                commit = pick.commit;\n                goBackCommand = undefined;\n            }\n            else {\n                commit = Iterables.first(log.commits.values());\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, commit.toGitUri(), {\n                sha: commit.sha,\n                commit: commit,\n                goBackCommand:\n                    goBackCommand ||\n                    new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} to search for ${searchLabel}`\n                        },\n                        Commands.SearchCommits,\n                        [uri, args]\n                    )\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowCommitSearchCommand');\n            return Messages.showGenericErrorMessage('Unable to find commits');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { command, Command, Commands, getLastCommand } from './common';\n\n@command()\nexport class ShowLastQuickPickCommand extends Command {\n    constructor() {\n        super(Commands.ShowLastQuickPick);\n    }\n\n    async execute() {\n        const command = getLastCommand();\n        if (command === undefined) return undefined;\n\n        try {\n            return commands.executeCommand(command.command, ...command.args);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowLastQuickPickCommand');\n            return Messages.showGenericErrorMessage('Unable to show last quick pick');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, BranchHistoryQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickBranchHistoryCommandArgs {\n    branch?: string;\n    log?: GitLog;\n    maxCount?: number;\n    repoPath?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        args = { ...args };\n\n        let progressCancellation =\n            args.branch === undefined ? undefined : BranchHistoryQuickPick.showProgress(args.branch);\n        try {\n            const repoPath =\n                args.repoPath ||\n                (await getRepoPathOrActiveOrPrompt(\n                    gitUri,\n                    editor,\n                    `Show branch history in which repository${GlyphChars.Ellipsis}`\n                ));\n            if (!repoPath) return undefined;\n\n            if (args.branch === undefined) {\n                let goBackCommand;\n                if (!(await Container.git.getRepoPathOrActive(uri, editor))) {\n                    goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to which repository`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [uri, args]\n                    );\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Show history for branch${GlyphChars.Ellipsis}`,\n                    {\n                        goBack: goBackCommand,\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined) return undefined;\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.branch = pick.ref;\n                if (args.branch === undefined) return undefined;\n\n                progressCancellation = BranchHistoryQuickPick.showProgress(args.branch);\n            }\n\n            if (args.log === undefined) {\n                args.log = await Container.git.getLog(repoPath, {\n                    maxCount: args.maxCount,\n                    ref: (gitUri && gitUri.sha) || args.branch\n                });\n                if (args.log === undefined) return window.showWarningMessage(`Unable to show branch history`);\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            const pick = await BranchHistoryQuickPick.show(\n                args.log,\n                gitUri,\n                args.branch,\n                progressCancellation!,\n                args.goBackCommand,\n                args.nextPageCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                        args.branch\n                    } history`\n                },\n                Commands.ShowQuickBranchHistory,\n                [uri, { ...args }]\n            );\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                sha: pick.commit.sha,\n                commit: pick.commit,\n                repoLog: args.log,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitRepoSearchBy, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitQuickPick, CommitWithFileStatusQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickCommitDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    repoLog?: GitLog;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitDetailsCommandArgs>(\n            Commands.ShowQuickCommitDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowCommitInView, Commands.ShowQuickCommitDetails]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickCommitDetailsCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowCommitInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        let repoPath = gitUri.repoPath;\n        let workingFileName = repoPath ? paths.relative(repoPath, gitUri.fsPath) : gitUri.fsPath;\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit details');\n                }\n\n                args.sha = blame.commit.sha;\n                repoPath = blame.commit.repoPath;\n                workingFileName = blame.commit.fileName;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitDetailsCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to show commit details');\n            }\n        }\n\n        try {\n            if (args.commit === undefined || args.commit.isFile) {\n                if (args.repoLog !== undefined) {\n                    args.commit = args.repoLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the repoLog\n                    if (args.commit === undefined) {\n                        args.repoLog = undefined;\n                    }\n                }\n\n                if (args.repoLog === undefined) {\n                    const log = await Container.git.getLog(repoPath!, { maxCount: 2, ref: args.sha });\n                    if (log === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n                    }\n\n                    args.commit = log.commits.get(args.sha!);\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n            }\n\n            if (args.commit.workingFileName === undefined) {\n                args.commit.workingFileName = workingFileName;\n            }\n\n            if (args.showInView) {\n                void (await Container.searchView.search(repoPath!, args.commit.sha, GitRepoSearchBy.Sha, {\n                    label: { label: `commits with an id matching '${args.commit.shortSha}'` }\n                }));\n\n                return undefined;\n            }\n\n            if (args.goBackCommand === undefined) {\n                const branch = await Container.git.getBranch(args.commit.repoPath);\n                if (branch !== undefined) {\n                    // Create a command to get back to the branch history\n                    args.goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${branch.name} history`\n                        },\n                        Commands.ShowQuickCurrentBranchHistory,\n                        [args.commit.toGitUri()]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(git-commit) ${args.commit.shortSha}`\n                },\n                Commands.ShowQuickCommitDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.repoLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (!(pick instanceof CommitWithFileStatusQuickPickItem)) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit details');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitFileQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickCommitFileDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    fileLog?: GitLog;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitFileDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitFileDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitFileDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitFileDetailsCommandArgs>(\n            Commands.ShowQuickCommitFileDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowQuickCommitFileDetails, Commands.ShowQuickRevisionDetails]);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: ShowQuickCommitFileDetailsCommandArgs = {}\n    ): Promise<any> {\n        if (context.command === Commands.ShowQuickRevisionDetails && context.editor !== undefined) {\n            args = { ...args };\n\n            const gitUri = await GitUri.fromUri(context.editor.document.uri);\n            args.sha = gitUri.sha;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        let workingFileName = args.commit && args.commit.workingFileName;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit file details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit file details');\n                }\n\n                args.sha = blame.commit.sha;\n\n                args.commit = blame.commit;\n                workingFileName = paths.relative(args.commit.repoPath, gitUri.fsPath);\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitFileDetailsCommand', `getBlameForLine(${blameline})`);\n                return window.showErrorMessage(\n                    `Unable to show commit file details. See output channel for more details`\n                );\n            }\n        }\n\n        try {\n            if (args.commit === undefined || !args.commit.isFile) {\n                if (args.commit !== undefined) {\n                    workingFileName = undefined;\n                }\n\n                if (args.fileLog !== undefined) {\n                    args.commit = args.fileLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the fileLog\n                    if (args.commit === undefined) {\n                        args.fileLog = undefined;\n                    }\n                }\n\n                if (args.fileLog === undefined) {\n                    args.commit = await Container.git.getLogCommitForFile(\n                        args.commit === undefined ? gitUri.repoPath : args.commit.repoPath,\n                        gitUri.fsPath,\n                        { ref: args.sha }\n                    );\n                    if (args.commit === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n                    }\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n            }\n\n            // Attempt to the most recent commit -- so that we can find the real working filename if there was a rename\n            args.commit.workingFileName = workingFileName;\n            [args.commit.workingFileName] = await Container.git.findWorkingFileName(args.commit);\n\n            const shortSha = GitService.shortenSha(args.sha!);\n\n            if (args.goBackCommand === undefined) {\n                // Create a command to get back to the commit details\n                args.goBackCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                            GlyphChars.Space\n                        }$(git-commit) ${shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        args.commit.toGitUri(),\n                        {\n                            commit: args.commit,\n                            sha: args.sha\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                );\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(args.commit.fileName)} in ${\n                        GlyphChars.Space\n                    }$(git-commit) ${shortSha}`\n                },\n                Commands.ShowQuickCommitFileDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitFileQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.fileLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitFileDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit file details');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickBranchHistoryCommandArgs } from './showQuickBranchHistory';\n\nexport interface ShowQuickCurrentBranchHistoryCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCurrentBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickCurrentBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCurrentBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show current branch history for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const branch = await Container.git.getBranch(repoPath);\n            if (branch === undefined) return undefined;\n\n            return commands.executeCommand(Commands.ShowQuickBranchHistory, uri, {\n                branch: branch.name,\n                repoPath: repoPath,\n                goBackCommand: args.goBackCommand\n            } as ShowQuickBranchHistoryCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCurrentBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitLog, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    FileHistoryQuickPick,\n    ShowFileHistoryInViewQuickPickItem\n} from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickFileHistoryCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    log?: GitLog;\n    maxCount?: number;\n    range?: Range;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickFileHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.ShowFileHistoryInView, Commands.ShowQuickFileHistory]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickFileHistoryCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowFileHistoryInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickFileHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return commands.executeCommand(Commands.ShowQuickCurrentBranchHistory);\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        if (args.showInView) {\n            await Container.fileHistoryView.showHistoryForUri(gitUri);\n\n            return undefined;\n        }\n\n        args = { ...args };\n\n        const placeHolder = `${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n        try {\n            if (args.log === undefined) {\n                args.log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    range: args.range,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (args.log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show file history');\n                }\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (args.log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${args.log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [gitUri, { ...args, log: undefined } as ShowQuickFileHistoryCommandArgs]\n                );\n\n                const last = Iterables.last(args.log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${\n                                args.log.maxCount\n                            } older commits`\n                        },\n                        Commands.ShowQuickFileHistory,\n                        [\n                            new GitUri(uri, last),\n                            { ...args, log: undefined, nextPageCommand: npc } as ShowQuickFileHistoryCommandArgs\n                        ]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(gitUri.fsPath)}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.ShowQuickFileHistory,\n                [uri, args]\n            );\n\n            const pick = await FileHistoryQuickPick.show(args.log, gitUri, placeHolder, {\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand:\n                    args.log !== undefined && args.log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.ShowQuickFileHistory,\n                              [uri, { ...args, log: undefined, maxCount: 0 }]\n                          )\n                        : undefined,\n                showInViewCommand:\n                    args.log !== undefined\n                        ? new ShowFileHistoryInViewQuickPickItem(\n                              gitUri,\n                              (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                          )\n                        : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.ShowQuickFileHistory, gitUri, {\n                    ...args,\n                    log: undefined,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as ShowQuickFileHistoryCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                fileLog: args.log,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickFileHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show file history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, RepoStatusQuickPick } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\n\nexport interface ShowQuickRepoStatusCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickRepoStatusCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickRepoStatus);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickRepoStatusCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show status for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const status = await Container.git.getStatusForRepo(repoPath);\n            if (status === undefined) return window.showWarningMessage(`Unable to show repository status`);\n\n            const pick = await RepoStatusQuickPick.show(status, args.goBackCommand);\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickRepoStatusCommand');\n            return Messages.showGenericErrorMessage('Unable to show repository status');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickStashListCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickStashListCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickStashList);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickStashListCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const progressCancellation = StashListQuickPick.showProgress('list');\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show stashed changes for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const stash = await Container.git.getStashList(repoPath);\n            if (stash === undefined) return window.showWarningMessage(`Unable to show stashed changes`);\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to stashed changes`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    uri,\n                    {\n                        goBackCommand: args.goBackCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            );\n\n            const pick = await StashListQuickPick.show(\n                stash,\n                'list',\n                progressCancellation,\n                args.goBackCommand,\n                currentCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickStashListCommand');\n            return Messages.showGenericErrorMessage('Unable to show stashed changes');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, CommandContext, Commands } from './common';\n\n@command()\nexport class ShowViewCommand extends Command {\n    constructor() {\n        super([\n            Commands.ShowCompareView,\n            Commands.ShowFileHistoryView,\n            Commands.ShowLineHistoryView,\n            Commands.ShowRepositoriesView,\n            Commands.ShowSearchView\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext): Promise<any> {\n        return this.execute(context.command as Commands);\n    }\n\n    execute(command: Commands) {\n        switch (command) {\n            case Commands.ShowCompareView:\n                return Container.compareView.show();\n            case Commands.ShowFileHistoryView:\n                return Container.fileHistoryView.show();\n            case Commands.ShowLineHistoryView:\n                return Container.lineHistoryView.show();\n            case Commands.ShowRepositoriesView:\n                return Container.repositoriesView.show();\n            case Commands.ShowSearchView:\n                return Container.searchView.show();\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithCommit,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashApplyCommandArgs {\n    confirm?: boolean;\n    deleteAfter?: boolean;\n    repoPath?: string;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashApplyCommand extends Command {\n    constructor() {\n        super(Commands.StashApply);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }\n    ) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        args = { ...args };\n\n        if (args.stashItem === undefined || args.stashItem.stashName === undefined) {\n            if (args.repoPath === undefined) {\n                args.repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Apply stashed changes from which repository${GlyphChars.Ellipsis}`,\n                    args.goBackCommand\n                );\n            }\n            if (!args.repoPath) return undefined;\n\n            const progressCancellation = StashListQuickPick.showProgress('apply');\n\n            try {\n                const stash = await Container.git.getStashList(args.repoPath);\n                if (stash === undefined) return window.showInformationMessage(`There are no stashed changes`);\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to apply stashed changes`\n                    },\n                    Commands.StashApply,\n                    [args]\n                );\n\n                const pick = await StashListQuickPick.show(\n                    stash,\n                    'apply',\n                    progressCancellation,\n                    args.goBackCommand,\n                    currentCommand\n                );\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n                if (pick === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.goBackCommand = currentCommand;\n                args.stashItem = pick.commit as GitStashCommit;\n            }\n            finally {\n                progressCancellation.cancel();\n            }\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Apply stashed changes '${message}' to your working tree?`,\n                    { title: 'Yes, delete after applying' } as MessageItem,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title === 'No') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.deleteAfter = result.title !== 'Yes';\n            }\n\n            return await Container.git.stashApply(args.stashItem.repoPath, args.stashItem.stashName, args.deleteAfter);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashApplyCommand');\n            if (ex.message.includes('Your local changes to the following files would be overwritten by merge')) {\n                return window.showWarningMessage(\n                    `Unable to apply stash. Your working tree changes would be overwritten.`\n                );\n            }\n            else if (ex.message.includes('Auto-merging') && ex.message.includes('CONFLICT')) {\n                return window.showInformationMessage(`Stash applied with conflicts`);\n            }\n            else {\n                return Messages.showGenericErrorMessage(\n                    `Unable to apply stash \\u2014 ${ex.message.trim().replace(/\\n+?/g, '; ')}`\n                );\n            }\n        }\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithCommit } from './common';\n\nexport interface StashDeleteCommandArgs {\n    confirm?: boolean;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashDeleteCommand extends Command {\n    constructor() {\n        super(Commands.StashDelete);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashDeleteCommandArgs = { confirm: true }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashDeleteCommandArgs = { confirm: true }) {\n        args = { ...args };\n        if (\n            args.stashItem === undefined ||\n            args.stashItem.stashName === undefined ||\n            args.stashItem.repoPath === undefined\n        ) {\n            return undefined;\n        }\n\n        if (args.confirm === undefined) {\n            args.confirm = true;\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Delete stashed changes '${message}'?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title !== 'Yes') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashDelete(args.stashItem.repoPath, args.stashItem.stashName);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashDeleteCommand');\n            return Messages.showGenericErrorMessage('Unable to delete stash');\n        }\n    }\n}\n","'use strict';\nimport { InputBoxOptions, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFile,\n    isCommandViewContextWithRepo,\n    isCommandViewContextWithRepoPath\n} from './common';\n\nexport interface StashSaveCommandArgs {\n    message?: string;\n    repoPath?: string;\n    uris?: Uri[];\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashSaveCommand extends Command {\n    constructor() {\n        super([Commands.StashSave, Commands.StashSaveFiles]);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashSaveCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFile(context)) {\n            args = { ...args };\n            args.uris = [GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath)];\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n        else if (isCommandViewContextWithRepoPath(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repoPath;\n        }\n        else if (context.type === 'scm-states') {\n            args = { ...args };\n            args.uris = context.scmResourceStates.map(s => s.resourceUri);\n        }\n        else if (context.type === 'scm-groups') {\n            args = { ...args };\n            args.uris = context.scmResourceGroups.reduce<Uri[]>(\n                (a, b) => a.concat(b.resourceStates.map(s => s.resourceUri)),\n                []\n            );\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashSaveCommandArgs = {}) {\n        args = { ...args };\n\n        const uri = args.uris !== undefined && args.uris.length !== 0 ? args.uris[0] : undefined;\n        if (args.repoPath === undefined) {\n            args.repoPath = await getRepoPathOrPrompt(\n                uri,\n                `Stash changes for which repository${GlyphChars.Ellipsis}`,\n                args.goBackCommand\n            );\n        }\n        if (!args.repoPath) return undefined;\n\n        try {\n            if (args.message == null) {\n                args.message = await window.showInputBox({\n                    prompt: `Please provide a stash message`,\n                    placeHolder: `Stash message`\n                } as InputBoxOptions);\n                if (args.message === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashSave(args.repoPath, args.message, args.uris);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashSaveCommand');\n\n            const msg = ex && ex.message;\n            if (msg.includes('newer version of Git')) {\n                return window.showErrorMessage(`Unable to save stash. ${msg}`);\n            }\n            return Messages.showGenericErrorMessage('Unable to save stash');\n        }\n    }\n}\n","'use strict';\nimport { Messages } from '../messages';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SupportGitLensCommand extends Command {\n    constructor() {\n        super(Commands.SupportGitLens);\n    }\n\n    async execute() {\n        return Messages.showSupportGitLensMessage();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { ModesQuickPick } from '../quickpicks';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SwitchModeCommand extends Command {\n    constructor() {\n        super(Commands.SwitchMode);\n    }\n\n    async execute() {\n        const pick = await ModesQuickPick.show();\n        if (pick === undefined) return;\n\n        const active = Container.config.mode.active;\n        if (active === pick.key) return;\n\n        // Check if we have applied any annotations and clear them if we won't be applying them again\n        if (active != null && active.length !== 0) {\n            const activeAnnotations = Container.config.modes[active].annotations;\n            if (activeAnnotations != null) {\n                const newAnnotations = pick.key != null ? Container.config.modes[pick.key].annotations : undefined;\n                if (activeAnnotations !== newAnnotations) {\n                    await Container.fileAnnotations.clearAll();\n                }\n            }\n        }\n\n        await configuration.update(configuration.name('mode')('active').value, pick.key, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleReviewModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleReviewMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('review')) return;\n\n        const mode = Container.config.mode.active === 'review' ? undefined : 'review';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleZenModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleZenMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('zen')) return;\n\n        const mode = Container.config.mode.active === 'zen' ? undefined : 'zen';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\n\nexport interface ModesQuickPickItem extends QuickPickItem {\n    key: string | undefined;\n}\n\nexport class ModesQuickPick {\n    static async show(): Promise<ModesQuickPickItem | undefined> {\n        const modes = Object.keys(Container.config.modes);\n        if (modes.length === 0) return undefined;\n\n        const mode = Container.config.mode.active;\n\n        const items = modes.map(key => {\n            const modeCfg = Container.config.modes[key];\n            return {\n                label: `${mode === key ? '$(check)\\u00a0\\u00a0' : '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0'}${\n                    modeCfg.name\n                } mode`,\n                description: modeCfg.description ? `\\u00a0${GlyphChars.Dash}\\u00a0 ${modeCfg.description}` : '',\n                key: key\n            } as ModesQuickPickItem;\n        });\n\n        if (mode) {\n            items.splice(0, 0, {\n                label: `Exit ${Container.config.modes[mode].name} mode`,\n                key: undefined\n            } as ModesQuickPickItem);\n        }\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: 'select a GitLens mode to enter'\n        } as QuickPickOptions);\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ToggleCodeLensCommand extends Command {\n    constructor() {\n        super(Commands.ToggleCodeLens);\n    }\n\n    execute() {\n        return Container.codeLens.toggleCodeLens();\n    }\n}\n","'use strict';\nimport { commands, ExtensionContext, extensions, window, workspace } from 'vscode';\nimport { Commands, registerCommands } from './commands';\nimport { Config, configuration, Configuration } from './configuration';\nimport { CommandContext, extensionQualifiedId, GlobalState, GlyphChars, setCommandContext } from './constants';\nimport { Container } from './container';\nimport { GitCommit, GitService, GitUri } from './git/gitService';\nimport { Logger } from './logger';\nimport { Messages } from './messages';\nimport { Strings, Versions } from './system';\nimport { ModeConfig } from './ui/config';\n// import { Telemetry } from './telemetry';\n\nexport async function activate(context: ExtensionContext) {\n    const start = process.hrtime();\n\n    // Pretend we are enabled (until we know otherwise) and set the view contexts to reduce flashing on load\n    setCommandContext(CommandContext.Enabled, true);\n\n    Logger.configure(context, o => {\n        if (o instanceof GitUri) {\n            return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ''}${\n                o.sha ? ` sha=${o.sha}` : ''\n            })`;\n        }\n\n        if (o instanceof GitCommit) {\n            return `GitCommit(${o.sha ? ` sha=${o.sha}` : ''}${o.repoPath ? ` repoPath=${o.repoPath}` : ''})`;\n        }\n\n        return undefined;\n    });\n\n    const gitlens = extensions.getExtension(extensionQualifiedId)!;\n    const gitlensVersion = gitlens.packageJSON.version;\n\n    const enabled = workspace.getConfiguration('git', null!).get<boolean>('enabled', true);\n    if (!enabled) {\n        Logger.log(`GitLens(v${gitlensVersion}) was NOT activated -- \"git.enabled\": false`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        void Messages.showGitDisabledErrorMessage();\n\n        return;\n    }\n\n    Configuration.configure(context);\n\n    const cfg = configuration.get<Config>();\n\n    const previousVersion = context.globalState.get<string>(GlobalState.GitLensVersion);\n    await migrateSettings(context, previousVersion);\n\n    try {\n        await GitService.initialize();\n    }\n    catch (ex) {\n        Logger.error(ex, `GitLens(v${gitlensVersion}).activate`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        if (ex.message.includes('Unable to find git')) {\n            await window.showErrorMessage(\n                `GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.`\n            );\n        }\n\n        return;\n    }\n\n    Container.initialize(context, cfg);\n\n    registerCommands(context);\n\n    const gitVersion = GitService.getGitVersion();\n\n    // Telemetry.configure(ApplicationInsightsKey);\n\n    // const telemetryContext: { [id: string]: any } = Object.create(null);\n    // telemetryContext.version = gitlensVersion;\n    // telemetryContext['git.version'] = gitVersion;\n    // Telemetry.setContext(telemetryContext);\n\n    notifyOnUnsupportedGitVersion(gitVersion);\n    void showWelcomePage(gitlensVersion, previousVersion);\n\n    context.globalState.update(GlobalState.GitLensVersion, gitlensVersion);\n\n    // Constantly over my data cap so stop collecting initialized event\n    // Telemetry.trackEvent('initialized', Objects.flatten(cfg, 'config', true));\n\n    Logger.log(`GitLens(v${gitlensVersion}) activated ${GlyphChars.Dot} ${Strings.getDurationMilliseconds(start)} ms`);\n}\n\nexport function deactivate() {}\n\nasync function migrateSettings(context: ExtensionContext, previousVersion: string | undefined) {\n    if (previousVersion === undefined) return;\n\n    const previous = Versions.fromString(previousVersion);\n\n    try {\n        if (Versions.compare(previous, Versions.from(9, 2, 2)) !== 1) {\n            await configuration.migrate('views.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('repositories')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('search')('avatars').value);\n        }\n        else if (Versions.compare(previous, Versions.from(9, 0, 0)) !== 1) {\n            await configuration.migrate(\n                'gitExplorer.autoRefresh',\n                configuration.name('views')('repositories')('autoRefresh').value\n            );\n            await configuration.migrate(\n                'gitExplorer.branches.layout',\n                configuration.name('views')('repositories')('branches')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.enabled',\n                configuration.name('views')('repositories')('enabled').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.compact',\n                configuration.name('views')('repositories')('files')('compact').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.layout',\n                configuration.name('views')('repositories')('files')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.threshold',\n                configuration.name('views')('repositories')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'gitExplorer.includeWorkingTree',\n                configuration.name('views')('repositories')('includeWorkingTree').value\n            );\n            await configuration.migrate(\n                'gitExplorer.location',\n                configuration.name('views')('repositories')('location').value\n            );\n            await configuration.migrate(\n                'gitExplorer.showTrackingBranch',\n                configuration.name('views')('repositories')('showTrackingBranch').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('fileHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('fileHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('fileHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('lineHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('lineHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('lineHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('compare')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('compare')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('compare')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('compare')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('search')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('search')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('search')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('search')('location').value\n            );\n\n            await configuration.migrate('explorers.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate(\n                'explorers.avatars',\n                configuration.name('views')('repositories')('avatars').value\n            );\n            await configuration.migrate('explorers.avatars', configuration.name('views')('search')('avatars').value);\n            await configuration.migrate(\n                'explorers.commitFileFormat',\n                configuration.name('views')('commitFileFormat').value\n            );\n            await configuration.migrate('explorers.commitFormat', configuration.name('views')('commitFormat').value);\n            await configuration.migrate(\n                'explorers.defaultItemLimit',\n                configuration.name('views')('defaultItemLimit').value\n            );\n            await configuration.migrate(\n                'explorers.stashFileFormat',\n                configuration.name('views')('stashFileFormat').value\n            );\n            await configuration.migrate('explorers.stashFormat', configuration.name('views')('stashFormat').value);\n            await configuration.migrate(\n                'explorers.statusFileFormat',\n                configuration.name('views')('statusFileFormat').value\n            );\n\n            await configuration.migrate<\n                {\n                    [key: string]: {\n                        name: string;\n                        statusBarItemName?: string;\n                        description?: string;\n                        codeLens?: boolean;\n                        currentLine?: boolean;\n                        explorers?: boolean;\n                        hovers?: boolean;\n                        statusBar?: boolean;\n                    };\n                },\n                {\n                    [key: string]: ModeConfig;\n                }\n            >('modes', configuration.name('modes').value, {\n                migrationFn: v => {\n                    const modes = Object.create(null);\n\n                    for (const k in v) {\n                        const { explorers, ...mode } = v[k];\n                        modes[k] = { ...mode, views: explorers };\n                    }\n\n                    return modes;\n                }\n            });\n        }\n    }\n    catch (ex) {\n        Logger.error(ex, 'migrateSettings');\n    }\n}\n\nfunction notifyOnUnsupportedGitVersion(version: string) {\n    if (GitService.compareGitVersion('2.2.0') !== -1) return;\n\n    // If git is less than v2.2.0\n    void Messages.showGitVersionUnsupportedErrorMessage(version);\n}\n\nasync function showWelcomePage(version: string, previousVersion: string | undefined) {\n    if (previousVersion === undefined) {\n        Logger.log(`GitLens first-time install`);\n\n        if (Container.config.showWhatsNewAfterUpgrades) {\n            await commands.executeCommand(Commands.ShowWelcomePage);\n        }\n\n        return;\n    }\n\n    if (previousVersion !== version) {\n        Logger.log(`GitLens upgraded from v${previousVersion} to v${version}`);\n    }\n\n    const [major, minor] = version.split('.');\n    const [prevMajor, prevMinor] = previousVersion.split('.');\n    if (\n        (major === prevMajor && minor === prevMinor) ||\n        // Don't notify on downgrades\n        (major < prevMajor || (major === prevMajor && minor < prevMinor))\n    ) {\n        return;\n    }\n\n    if (Container.config.showWhatsNewAfterUpgrades && major !== prevMajor) {\n        await commands.executeCommand(Commands.ShowWelcomePage);\n    }\n    else {\n        await Messages.showWhatsNewMessage(version);\n    }\n}\n"],"sourceRoot":""}