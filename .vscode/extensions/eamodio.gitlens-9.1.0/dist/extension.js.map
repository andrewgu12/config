{"version":3,"sources":["file:///webpack/bootstrap","file:///external \"vscode\"","file:///external \"path\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\parse\\index.js","file:///external \"fs\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\safer-buffer\\safer.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\clipboardy\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_asc\\index.js","file:///external \"buffer\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\index.js","file:///external \"child_process\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_milliseconds\\index.js","file:///external \"stream\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\execa\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\vsls\\vscode.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_desc\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\index.js","file:///external \"crypto\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_valid\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_leap_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_month\\index.js","file:///external \"util\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\util\\resolveCommand.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lru-cache\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\util\\escapeArgument.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\are_ranges_overlapping\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_index_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_distance_in_words_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_format_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\_lib\\build_formatting_tokens_reg_exp\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_strict\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_to_now\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\each_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\format\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_weeks_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_overlapping_days_in_ranges\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_time\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_after\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_before\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_equal\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_first_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_friday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_future\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_monday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_past\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_saturday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_sunday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_thursday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tuesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_wednesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_weekend\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_within_range\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\max\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\min\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\bom-handling.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\internal.js","file:///external \"string_decoder\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf16.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf7.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\streams.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\extend-node.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\clipboardy\\lib\\termux.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\parse.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\which\\which.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\isexe\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\isexe\\windows.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\isexe\\mode.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\pseudomap\\map.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\pseudomap\\pseudomap.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\yallist\\yallist.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\yallist\\iterator.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\util\\hasEmptyArgumentBug.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\util\\escapeCommand.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\util\\readShebang.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\shebang-command\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\shebang-regex\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\cross-spawn\\lib\\enoent.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\strip-eof\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\npm-run-path\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\path-key\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\is-stream\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\get-stream\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\get-stream\\buffer-stream.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\p-finally\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\signal-exit\\index.js","file:///external \"assert\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\signal-exit\\signals.js","file:///external \"events\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\execa\\lib\\errname.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\execa\\lib\\stdio.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\clipboardy\\lib\\linux.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\clipboardy\\lib\\macos.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\clipboardy\\lib\\windows.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\arch\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\tslib\\tslib.es6.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\comparers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\config.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\constants.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\object.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\array.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\date.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObject.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_freeGlobal.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_root.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\now.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_Symbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_getRawTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_objectToString.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_baseGetTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObjectLike.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isSymbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toNumber.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\debounce.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toFinite.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toInteger.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\before.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\once.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\function.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\gate.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\string.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\log.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\iterable.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\version.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\searchTree.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\logger.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\messages.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\trackedDocument.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\documentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitDocumentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\shell.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\locator.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\formatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\commitFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitUri.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\file.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\statusFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\commit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\blameCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\status.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\branch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\diffParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\diff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\logCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\remote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\provider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\azure-devops.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket-server.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\custom.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\github.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\gitlab.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\factory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\repository.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\stashCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\tag.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\blameParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\branchParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\logParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\remoteParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\stashParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\statusParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\tagParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\treeParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\git.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\protocol.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\host.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\guest.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\vsls.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitService.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\shared\\colors.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\blameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\gutterBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\heatmapBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\recentChangesAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\fileAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\lineAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\fsProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\hovers\\lineHoverController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\keyboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\statusbar\\statusBarController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\lineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitLineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\viewNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\folderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\helpers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchTrackingStatusNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchOrTagFolderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commonQuickPicks.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchesAndTagsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\remotesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitFileQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\fileHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repositoriesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repoStatusQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\stashListQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remoteNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remotesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewBase.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoriesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareResultsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\comparePickerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\compareView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\fileHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\lineHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\repositoriesView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\searchView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewCommands.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\webviewEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\settingsEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\welcomeEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\container.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\configuration.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\closeUnchangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyMessageToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyRemoteFileUrlToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyShaToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffBranchWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffDirectory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWith.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithNext.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\externalDiff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchesInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openChangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openCommitInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openRepoInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openWorkingFile.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\repositories.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\resetSuppressedWarnings.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\searchCommits.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showLastQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitFileDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCurrentBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickFileHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickRepoStatus.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickStashList.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashApply.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashDelete.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashSave.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\supportGitLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\switchMode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\modesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\toggleCodeLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","getTimezoneOffset","parse","startOfISOWeek","dirtyDate","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfWeek","weekStartsOn","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","termux","linux","macos","windows","platform","env","PREFIX","Error","write","input","Promise","reject","copy","then","read","paste","stripEof","writeSync","copySync","readSync","pasteSync","stdout","dirtyAmount","amount","setDate","getDate","getISOYear","fourthOfJanuary","dirtyDateLeft","dirtyDateRight","timeLeft","timeRight","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","format","getDay","startOfDay","MILLISECONDS_IN_DAY","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","Math","round","getDaysInMonth","desiredMonth","getMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","dateLeft","dateRight","childProcess","util","crossSpawn","npmRunPath","isStream","_getStream","pFinally","onExit","errname","stdio","TEN_MEGABYTES","handleArgs","cmd","args","opts","parsed","assign","extendEnv","__winShell","command","options","file","original","_parse","maxBuffer","preferLocal","localDir","cwd","cleanup","handleOutput","val","handleShell","fn","comspec","windowsVerbatimArguments","shell","getStream","stream","ret","catch","err","message","joinedCmd","Array","isArray","join","spawned","removeExitHandler","spawn","kill","timeoutId","timedOut","cleanupTimeout","clearTimeout","timeout","setTimeout","killSignal","processDone","resolve","on","code","signal","stdin","destroy","stderr","handlePromise","all","arr","result","output","killed","failed","_enoent","hookChildProcess","pipe","end","handleInput","onfulfilled","onrejected","apply","arguments","x","sync","spawnSync","error","status","shellSync","deprecate","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","encoder","getEncoder","res","trail","concat","decode","skipDecodeWarning","console","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","type","toLowerCase","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","map","vscode","async","getApi","liveshareExtension","extensions","getExtension","extensionId","extensionApi","isActive","activate","getApiAsync","Role","Access","View","ViewItem","monthIndex","lastDayOfMonth","addDays","differenceInCalendarMonths","compareAsc","sign","difference","abs","differenceInMilliseconds","floor","ceil","startOfISOYear","MILLISECONDS_IN_WEEK","dateLeftStartOfWeek","dateRightStartOfWeek","addHours","addISOYears","addMilliseconds","addMinutes","addMonths","addQuarters","addSeconds","addWeeks","addYears","areRangesOverlapping","closestIndexTo","closestTo","compareDesc","differenceInCalendarDays","differenceInCalendarISOWeeks","differenceInCalendarISOYears","differenceInCalendarQuarters","differenceInCalendarWeeks","differenceInCalendarYears","differenceInDays","differenceInHours","differenceInISOYears","differenceInMinutes","differenceInMonths","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","distanceInWordsStrict","distanceInWordsToNow","eachDay","endOfDay","endOfHour","endOfISOWeek","endOfISOYear","endOfMinute","endOfMonth","endOfQuarter","endOfSecond","endOfToday","endOfTomorrow","endOfWeek","endOfYear","endOfYesterday","getDayOfYear","getDaysInYear","getHours","getISODay","getISOWeek","getISOWeeksInYear","getMilliseconds","getMinutes","getOverlappingDaysInRanges","getQuarter","getSeconds","getYear","isAfter","isBefore","isEqual","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isLeapYear","isMonday","isPast","isSameDay","isSameHour","isSameISOWeek","isSameISOYear","isSameMinute","isSameMonth","isSameQuarter","isSameSecond","isSameWeek","isSameYear","isSaturday","isSunday","isThisHour","isThisISOWeek","isThisISOYear","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isValid","isWednesday","isWeekend","isWithinRange","isYesterday","lastDayOfISOWeek","lastDayOfISOYear","lastDayOfQuarter","lastDayOfWeek","lastDayOfYear","max","setDay","setDayOfYear","setISODay","setISOWeek","setISOYear","setMilliseconds","setMinutes","setQuarter","setSeconds","setYear","startOfHour","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfToday","startOfTomorrow","startOfYear","startOfYesterday","subDays","subHours","subISOYears","subMilliseconds","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","dirtyISOYear","enLocale","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDateToCompare","comparison","locale","localize","localizeOptions","addSuffix","Boolean","months","includeSeconds","monthsSinceStartOfYear","years","cleanDate","isNaN","toString","dateLeftStartOfHour","dateRightStartOfHour","dateLeftStartOfYear","dateRightStartOfYear","dateLeftStartOfMinute","dateRightStartOfMinute","dateLeftStartOfQuarter","dateRightStartOfQuarter","currentMonth","dateLeftStartOfSecond","dateRightStartOfSecond","dirtyMonth","path","which","commandCache","maxAge","noExtension","resolved","has","pathExt","delimiter","PATHEXT","set","LRUCache","makeSymbol","Map","Yallist","MAX","_nodeLRUCacheForceNoSymbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","naiveLength","this","Infinity","lc","stale","dispose","noDisposeOnSet","reset","forEachStep","self","thisp","hit","isStale","del","undefined","doUse","unshiftNode","now","trim","walker","tail","prev","delete","removeNode","Entry","mL","allowStale","mA","lC","forEach","rforEach","head","next","keys","toArray","k","values","dump","v","filter","h","dumpLru","inspect","extras","didFirst","item","len","unshift","peek","pop","load","expiresAt","prune","arg","quote","dirtyInitialRangeStartDate","dirtyInitialRangeEndDate","dirtyComparedRangeStartDate","dirtyComparedRangeEndDate","initialStartTime","initialEndTime","comparedStartTime","comparedEndTime","dirtyDatesArray","minDistance","timeToCompare","index","currentDate","distance","startOfISOWeekLeft","startOfISOWeekRight","startOfWeekLeft","startOfWeekRight","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","MMMM","dd","ddd","dddd","A","a","aa","formatterToken","number","rem100","ordinal","formattingTokensRegExp","commonFormatterKeys","formatterKeys","push","formattingTokens","sort","reverse","RegExp","MINUTES_IN_YEAR","unit","mathPartial","partialMethod","String","dirtyStartDate","dirtyEndDate","dirtyStep","startDate","step","endTime","dates","M","MM","addLeadingZeros","Q","D","DD","DDD","DDDD","E","W","WW","YY","substr","YYYY","GG","GGGG","H","HH","hh","mm","ss","S","SS","SSS","Z","formatTimezone","ZZ","X","delimeter","absOffset","targetLength","dirtyFormatStr","formatStr","localeFormatters","formatter","match","Function","buildFormatFn","formatFn","thisYear","valueOf","differenceInMs","dateToCompare","dirtyLeftDate","dirtyRightDate","dateLeftStartOfDay","dateRightStartOfDay","tomorrow","startTime","yesterday","latestTimestamp","earliestTimestamp","dirtyDayOfMonth","dayOfMonth","dirtyDay","currentDay","dirtyDayOfYear","dirtyHours","dirtyISOWeek","isoWeek","dirtyMilliseconds","milliseconds","dirtyMinutes","dirtyQuarter","dirtySeconds","dirtyYear","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","j","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","addr","bytes","curAddr","writeTable","part","codeTrail","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","constructor","_transform","done","_flush","cb","chunks","isBuffer","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","isFinite","swap","remaining","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","execa","handler","cp","enoent","cpSpawnSync","ex","verifyENOENTSync","resolveCommand","hasEmptyArgumentBug","escapeArgument","escapeCommand","readShebang","isWin","skipShellRegExp","supportsShellOption","version","shellCommand","parseShell","shebang","needsShell","applyQuotes","parseNonShell","opt","info","getPathInfo","pathEnv","ext","pathExtExe","extExe","found","pathPart","charAt","ll","cur","isexe","nothrow","getNotFoundError","isWindows","OSTYPE","COLON","er","colon","PATH","indexOf","F","ii","is","core","ignoreErrors","global","TESTING_WINDOWS","checkStat","fs","statSync","stat","isSymbolicLink","isFile","pathext","checkPathExt","mod","uid","gid","myUid","getuid","myGid","getgid","u","g","ug","checkMode","npm_package_name","npm_lifecycle_script","TEST_PSEUDOMAP","PseudoMap","clear","kv","same","b","_index","find","data","_data","configurable","writable","entries","list","Node","pushNode","shift","forEachReverse","getReverse","mapReverse","reduce","initial","reduceReverse","toArrayReverse","sliceReverse","iterator","num","LRU","shebangCommand","shebangCache","fd","openSync","closeSync","shebangRegex","bin","isNode10","notFoundError","syscall","errno","verifyENOENT","originalEmit","emit","arg1","lf","cr","pathKey","pth","dirname","execPath","toUpperCase","_write","_writableState","readable","_read","duplex","transform","_transformState","bufferStream","inputStream","clean","bufferedData","getBufferedValue","once","getBufferedLength","unpipe","PassThrough","objectMode","promise","onFinally","emitter","assert","signals","EE","unload","loaded","sig","removeListener","sigListeners","originalProcessEmit","reallyExit","originalProcessReallyExit","event","emitted","EventEmitter","__signal_exit_emitter__","infinite","setMaxListeners","equal","ev","alwaysLast","listeners","pid","processEmit","processReallyExit","exitCode","uv","__test__","alias","some","hasAlias","xsel","__dirname","LC_CTYPE","winBinPath","arch","useEnv","SYSTEMROOT","sysRoot","isWOW64","execSync","__rest","getOwnPropertySymbols","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","Comparer","textDocumentComparer","TextDocumentComparer","[object Object]","lhs","rhs","textEditorComparer","TextEditorComparer","useId","usePosition","viewColumn","document","equals","id","uriComparer","UriComparer","scheme","fsPath","AnnotationsToggleMode","CodeLensCommand","CodeLensScopes","CustomRemoteType","DateStyle","FileAnnotationType","GravatarDefaultStyle","HighlightLocations","KeyMap","LogLevel","StatusBarCommand","ViewBranchesLayout","ViewFilesLayout","extensionOutputChannelName","extensionQualifiedId","extensionTerminalName","BuiltInCommands","CommandContext","DocumentSchemes","GlyphChars","GlobalState","setCommandContext","external_vscode_","executeCommand","SetContext","isActiveDocument","editor","activeTextEditor","isTextEditor","uri","Output","DebugConsole","ImageMimetypes",".png",".gif",".jpg",".jpeg",".jpe",".webp",".tif",".tiff",".bmp","WorkspaceState","Objects","array_Arrays","flatten","stringify","flattened","_flatten","JSON","isEmpty","paths","results","child","Arrays","compactHierarchy","root","joinPath","isRoot","children","relativePath","countUniques","source","accessor","uniqueCounts","filterMap","predicateMapper","accumulator","current","mapped","filterMapAsync","groupBy","groupings","groupByMap","group","groupByFilterMap","makeHierarchical","splitPath","compact","seed","descendants","hierarchy","folder","folderName","f","uniqueBy","predicate","uniqueValues","date_patch","formatterOptions","date_Dates","Dates","newDate","MillisecondsPerMinute","MillisecondsPerHour","MillisecondsPerDay","dateDaysFromNow","toFormatter","fromNow","date_fns","lodash_es_isObject","_freeGlobal","freeSelf","lodash_es_root","lodash_es_now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","tag","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","isBinary","FUNC_ERROR_TEXT","nativeMax","nativeMin","lodash_es_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","INFINITY","MAX_INTEGER","lodash_es_toFinite","lodash_es_toInteger","remainder","before_FUNC_ERROR_TEXT","lodash_es_before","function_Functions","lodash_es_once","gate","descriptor","gateKey","isPromise","Functions","cachedOnce","cached","cancellable","onCancellationRequested","debounce","_a","track","pending","tracked","comma","empty","openBrace","openParen","closeParen","fnBodyRegex","fnBodyStripCommentsRegex","fnBodyStripParamDefaultValueRegex","ms","getParameters","fnBody","open","close","param","propOf","propOfCore","interval","timer","disposable","clearInterval","setInterval","waitUntil","counter","string_Strings","Strings","getDurationMilliseconds","secs","nanosecs","hrtime","pathNormalizeRegex","pathStripTrailingSlashRegex","tokenRegex","tokenSanitizeRegex","padLeft","padTo","padding","width","getWidth","repeat","padRight","getTokensFromTemplate","template","tokens","truncateTo","option","suffix","collapseWhitespace","padDirection","interpolate","context","lines","substring","md5","external_crypto_","update","digest","normalizePath","fileName","stripTrailingSlash","normalized","addLeadingSlash","pad","before","after","padLeftOrTruncate","truncate","padOrTruncate","left","padRightOrTruncate","pluralize","zero","plural","illegalCharsForFSRegex","ellipsis","sanitizeForFileSystem","replacement","sha1","ansiRegex","containsNonAsciiRegex","emoji","joiners","graphemes","codePointAt","isFullwidthCodePoint","log_correlationContext","correlationCounter","clearCorrelationContext","correlationId","LogInstanceNameFn","log_debug","timed","log_log","debug","logFn","logger_Logger","log","parameters","MAX_SAFE_INTEGER","level","Debug","Verbose","condition","instanceName","toLoggableName","correlate","correlationContext","instance","setCorrelationContext","enter","loggableParams","singleLine","argFns","argFn","loggable","toLoggable","sanitize","logWithDebugParams","exit","logError","timing","exitDetails","logResult","Iterables","Versions","every","first","flatMap","mapper","isIterable","separator","last","skip","take","union","sources","StringIterator","_value","_pos","PathIterator","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","right","searchTree_TernarySearchTree","segments","_iter","_root","element","iter","segment","hasNext","oldElement","stack","dir","parent","candidate","limit","_nodeIterator","_forEach","callback","_iterator","major","minor","patch","pre","compare","v1","v2","localeCompare","fromString","ver","ConsolePrefix","isDebuggingRegex","loggableFn","customLoggableFn","subscriptions","configuration","onDidChange","onConfigurationChanged","initializingChangeEvent","section","changed","Silent","createOutputChannel","contextOrMessage","params","isDebugging","appendLine","toLoggableParams","warn","show","toISOString","getUTCMilliseconds","gitOutput","debugOnly","_isDebugging","VSCODE_DEBUGGING_EXTENSION","AnnotationStatus","annotationProvider_AnnotationProviderBase","trackedDocument","decoration","highlightDecoration","correlationKey","getCorrelationKey","onDidChangeTextEditorSelection","onTextEditorSelectionChanged","textEditor","selection","selections","active","line","editorId","editorUri","setDecorations","additionalDecorations","_b","_c","changes","_resetDebounced","onReset","provideAnnotation","_disposed","Computing","decorations","ranges","Computed","shaOrLine","onProvideAnnotation","SuppressedMessages","messages_Messages","commit","showMessage","CommitHasNoPreviousCommitWarning","shortSha","author","formattedDate","CommitNotFoundWarning","title","showOutputChannel","FileNotUnderSourceControlWarning","GitDisabledWarning","GitVersionWarning","LineUncommittedWarning","NoRepositoryWarning","actions","ViewsHideSupportGitLens","suppressedMessage","SupportGitLensNotification","Open","Commands","ShowWelcomePage","suppressionKey","dontShowAgain","showInformationMessage","showWarningMessage","showErrorMessage","messages","Global","trackedDocument_TrackedDocument","_document","dirty","_eventDelegates","_onDidBlameStateChange","_forceDirtyStateChangeOnNextDocumentChange","_hasRemotes","_isDirtyIdle","_isTracked","_blameFailed","_repo","initialize","onDidBlameStateChange","_disposable","container_Container","git","_uri","gitUri_GitUri","fromUri","repo","getRepository","onRepositoryChanged","initializing","RepositoryChange","Repository","forceDirtyStateChangeOnNextDocumentChange","hasRemotes","isBlameable","isDirtyIdle","isRevision","sha","isTracked","lineCount","ActiveFileStatus","getStatus","reason","state","wasBlameable","forceBlameChange","getEditorIfActive","blameable","fire","documentTracker_DocumentTracker","_onDidChangeBlameState","_onDidChangeDirtyState","_onDidTriggerDirtyIdle","_documentMap","onDidChangeActiveTextEditor","onActiveTextEditorChanged","onDidChangeTextDocument","onTextDocumentChanged","onDidCloseTextDocument","onTextDocumentClosed","onDidSaveTextDocument","onTextDocumentSaved","onDidChangeBlameState","onDidChangeDirtyState","onDidTriggerDirtyIdle","_dirtyIdleTriggerDelay","_dirtyIdleTriggeredDebounced","_timer","doc","addCore","File","Vsls","isDirty","resetForceDirtyStateChangeOnNextDocumentChange","fireDocumentDirtyStateChanged","documentOrId","_add","_get","toKey","openTextDocument","documentUri","useVersionedPath","msg","includes","BinaryTextDocument","MissingRevisionTextDocument","ensureInitialized","setImmediate","_dirtyStateChangedDebounced","documentTracker_EmptyTextDocument","gitUri","eol","LF","isClosed","isUntitled","languageId","range","position","regex","GitDocumentState","cache","gitDocumentTracker_GitDocumentTracker","runDownPath","exe","external_path_","external_fs_","haystack","needle","RunError","super","captureStackTrace","run","stdinEncoding","proc","external_child_process_","lib","findSpecificGit","findExecutable","possibleExts","possibleFullPath","raw","findSystemGitWin32","basePath","findGitPath","findGitDarwin","spaceReplacementRegex","formatter_Formatter","collapsableWhitespace","_item","_options","dateFormat","tokenOptions","dateFormatOrOptions","_formatter","emojiMap","emojiRegex","commitFormatter_CommitFormatter","_ago","_date","formatDate","_agoOrDate","dateStyle","config","defaultDateStyle","Absolute","ago","_padOrTruncate","agoOrDate","authorAgo","authorAgoOrDate","logCommit_GitLogCommit","GitCommitType","getFormattedDiffStatus","changesShort","isStagedUncommitted","isUncommitted","truncateMessageAtNewLine","Space","Ellipsis","fromTemplateCore","gitUri_empty","slash","commitOrRepoPath","GitLens","query","authority","fragment","repoPath","gitService_GitService","ref","ensureValidUNCPath","versionedPath","shortenSha","relativeTo","getDirectory","Dot","directory","useVslsScheme","vsls","isMaybeGuest","with","previous","previousUri","previousSha","fileOrName","resolveToUri","originalFileName","isTrackable","Git","getRepoPath","stagedUncommittedSha","fileNameOrUri","getFormattedPath","getRelativePath","normalizedFileName","normalizedRepoPath","startsWith","uriOrRef","fileNameOrFile","repoName","filePath","file_GitFile","GitFile","getFormattedDirectory","includeOriginal","ArrowLeft","statusIconsMap","!","?","C","R","T","U","B","getStatusIcon","statusOcticonsMap","getStatusOcticon","missing","statusTextMap","getStatusText","statusFormatter_StatusFileFormatter","working","statusFile","files","icon","workingTreeStatus","indexStatus","Pencil","SpaceThinnest","Check","SpaceThin","EnDash","gravatarCache","missingGravatarHash","CommitFormatting","commit_GitCommit","email","previousFileName","_fileName","_previousSha","_shortSha","git_Git","Blame","StashFile","isStash","Stash","_isStagedUncommitted","_isUncommitted","previousFileShortSha","previousFileSha","_resolvedPreviousFileSha","previousShortSha","workingUri","workingFileName","_dateFormatter","fallback","hash","gravatar","fromTemplate","resolveReference","fromCommit","change","blameCommit_GitBlameCommit","getChangedValue","status_GitStatus","branch","upstream","detached","branch_GitBranch","isDetached","formatDetached","_diff","added","deleted","getDiffStatus","expand","getUpstreamStatus","behind","ahead","ArrowDown","ArrowUp","status_GitStatusFile","staged","workTreeStatus","tracking","remote","_basename","getName","lastIndexOf","_name","getRemote","nameStatusDiffRegex","shortStatDiffRegex","unifiedDiffRegex","diffParser_GitDiffParser","currentStart","previousStart","diff_GitDiffChunk","currentLines","previousLines","removed","chunkLines","chunkLine","insertions","deletions","currentPosition","previousPosition","_chunk","_lines","parseChunk","committedDate","parentShas","isMerge","nextShortSha","nextSha","nextUri","nextFileName","GitRemoteType","GitRemote","domain","provider","types","RemoteResourceType","getNameFromRemoteResource","resource","Branch","Branches","Commit","Repo","Revision","provider_RemoteProvider","protocol","custom","baseUrl","url","clipboardy","showGenericErrorMessage","openUrl","getUrlForBranch","getUrlForBranches","getUrlForCommit","getUrlForFile","getUrlForRepository","issueEnricherRegex","stripGitRegex","sshDomainRegex","sshPathRegex","azure_devops_AzureDevOpsRemote","bitbucket_issueEnricherRegex","prEnricherRegex","bitbucket_BitbucketRemote","formatName","bitbucket_server_issueEnricherRegex","bitbucket_server_prEnricherRegex","bitbucket_server_BitbucketServerRemote","project","custom_CustomRemote","urls","repository","getContext","branches","fileLine","fileRange","fileInCommit","fileInBranch","repoBase","github_issueEnricherRegex","issueEnricher3rdParyRegex","github_GitHubRemote","gitlab_issueEnricherRegex","gitlab_GitLabRemote","defaultProviders","factory_RemoteProviderFactory","providers","matcher","creator","cfg","rc","getCustomProvider","Bitbucket","BitbucketServer","Custom","GitHub","GitLab","RepositoryChangeEvent","solely","repository_Repository","onAnyRepositoryChanged","suspended","closed","_onDidChange","_onDidChangeFileSystem","_fireChangeDebounced","_fireFileSystemChangeDebounced","_fsWatchCounter","_pendingChanges","_closed","formattedName","normalizedPath","endsWith","_suspended","watcher","createFileSystemWatcher","onDidCreate","onDidDelete","onDidChangeFileSystem","stopWatchingFileSystem","_providers","loadProviders","_remotes","fireChange","Remotes","fireFileSystemChange","Stashes","_branch","Tags","Config","Closed","getWorkspaceFolder","progress","fetchCore","withProgress","location","Notification","fetch","getBranch","getBranches","getChangedFilesCount","mtime","remotesCfg","getRemotesCore","getStashList","getStatusForRepo","getTags","remotes","getRemotes","pullCore","force","pushCore","_fsWatcherDisposable","onFileSystemChanged","reasons","fireChangeCore","fireFileSystemChangeCore","uris","stashCommit_GitStashCommit","stashName","GitTag","annotation","blameParser_GitBlameParser","currentUser","authors","commits","lineParts","relativeFileName","entry","authorEmail","authorDate","authorTimeZone","summary","parseEntry","originalLine","branchWithTrackingRegex","branchWithTrackingStateRegex","branchParser_GitBranchParser","parseState","diffRegex","emptyEntry","logParser_GitLogParser","maxCount","recentCommit","truncationCount","parseFileName","matches","truncated","remoteRegex","urlRegex","remoteParser_GitRemoteParser","providerFactory","groups","parseGitUrl","uniqueness","stashParser_emptyEntry","stashParser_GitStashParser","fileNames","aheadStatusV1Regex","behindStatusV1Regex","statusParser_GitStatusParser","porcelainVersion","parseV1","parseV2","upstreamStatus","aheadStatus","behindStatus","rawStatus","file1","file2","parseStatusFile","tagWithRefRegex","tagWithAnnotationRegex","tagParser_GitTagParser","tags","treeRegex","GitTreeParser","trees","commitSha","rootSha","defaultBlameParams","defaultLogParams","defaultStashParams","GitErrors","badRevision","notAValidObjectName","GitWarnings","notARepository","outsideRepository","noPath","noCommits","notFound","foundButNotInRevision","headNotABranch","noUpstream","unknownRevision","mustRunInWorkTree","patchWithConflicts","noRemoteRepositorySpecified","remoteConnectionError","notAGitCommand","GitErrorHandling","pendingCommands","emptyArray","emptyObj","local","guest","configs","errors","errorHandling","runOpts","GCM_INTERACTIVE","GCM_PRESERVE_CREDS","LC_ALL","gitCommand","waiting","exception","splice","gitInfo","Ignore","Throw","defaultExceptionHandler","duration","logGitCommand","warning","gitPath","shaRegex","shaLikeRegex","stagedUncommittedRegex","uncommittedRegex","strings","stagedUncommitted","uncommitted","extract","gitMajor","gitMinor","allowConflicts","ignoreWhitespace","startLine","endLine","contents","deletedOrMissingSha","pattern","ref1","ref2","tool","renames","search","forkPoint","deleteAfter","pathspecs","GIT_OPTIONAL_LOCKS","uncommittedSha","RequestType","GitCommandRequestType","RepositoriesInFolderRequestType","WorkspaceFileExistsRequestType","defaultWhitelistFn","gitWhitelist","leadingSlashRegex","host_VslsHostService","_api","_service","_localToSharedPaths","_sharedToLocalPaths","onDidChangeIsServiceAvailable","onAvailabilityChanged","onDidChangeWorkspaceFolders","onWorkspaceFoldersChanged","onRequest","onGitCommandRequest","onRepositoriesInFolderRequest","onWorkspaceFileExistsRequest","api","service","shareService","ServiceId","unshareService","requestType","cancellation","available","workspaceFolders","cc","getCorrelationContext","localPath","sharedPath","convertLocalUriToShared","localPaths","_localPathsRegex","sharedPaths","_sharedPathsRegex","request","isRootWorkspace","shared","localCwd","convertSharedUriToLocal","folderUri","repositories","getRepositories","vslsUri","exists","fileExists","localUri","sharedUri","vslsUriRootRegex","guest_VslsGuestService","isServiceAvailable","getSharedService","Enabled","response","sendRequest","ensureCase","vslsUriPrefixRegex","vsls_VslsController","_host","_guest","Readonly","_waitForReady","_onReady","onDidChangeSession","onLiveShareSessionChanged","session","role","Host","liveshare","allowGuestAccess","share","Guest","connect","RepoSearchWarnings","doesNotExist","userConfigRegex","mappedAuthorRegex","GitRepoSearchBy","_onDidChangeRepositories","_branchesCache","_tagsCache","_tagsWithRefsCache","_trackedCache","_userMapCache","_repositoryTree","forPaths","onDidChangeWindowState","onWindowStateChanged","_repositoriesLoadingPromise","onDidChangeRepositories","UseCaching","advanced","caching","enabled","updateContext","fireRepositoriesChanged","focused","resume","suspend","getRepositoriesInFolder","repositorySearch","repos","findSuperstr","reposToDelete","depth","anyRepoChangedFn","rootPath","getRepoPathCore","excludes","getConfiguration","repoPaths","repositorySearchCore","rp","folders","promises","rej","isDirectory","repositoryTree","hasRepository","any","HasRemotes","isCloseAffordance","checkout","getOrderedRepositories","total","report","increment","isCancellationRequested","pull","fileExistsWithCase","repoPathLength","getLogForFile","findNextFileName","findNextFileNameCore","getRecentShaForFile","getLog","commitOrFileName","tracker","getOrAdd","getHighlanderRepoPath","highlander","cachedBlame","getBlameForFileCore","emptyPromise","blame","customArguments","getCurrentUser","errorMessage","setBlameFailure","getBlameForFileContentsCore","blame_contents","skipCache","getBlameForFile","blameLine","lineToBlame","getBlameForFileContents","getBlameForRangeSync","allLines","shas","Set","revparse_currentBranch","diff_shortstat","parseShortStat","config_get","user","config_getRegex","mappedAuthor","check_mailmap","cachedDiff","getDiffForFileCore","getEncoding","getDiffForFile","diff_nameStatus","parseNameStatus","show_status","getLogCommitForFile","log_recent","firstIfNotFound","isSha","maxListItems","searchBy","searchArgs","Author","ChangedLines","Changes","Files","Message","Sha","log_search","getLogForSearch","fileHistoryFollowsRenames","fromFile","cachedLog","getLogForFileCore","log_file","hasTrackingBranch","merge_base","includeAll","factory","filePathOrUri","skipCacheUpdate","isVslsScheme","findRepositoryForPath","parts","revparse_toplevel","getActiveRepoPath","getRepositoryTree","repoPathOrUri","findSubstr","vslsPath","stash_list","validateVersion","status_file","includeRefs","showref_tag","parseWithRef","ls_tree","toRevisionUri","schemeOruri","cacheKey","isTrackedCore","ls_files","getDiffTool","difftool_fileDiff","difftool_dirDiff","isShaLike","revparse","ensuredRef","cat_file_validate","cat_validate","add","stash_apply","stash_delete","stash_save","ensureGitVersion","stash_push","gitExtension","getAPI","setOrFindGitPath","getGitPath","getGitVersion","deletedOrMissing","throwIfLessThan","feature","gitVersion","0","1","2","cssColorRegex","toRgba","color","defaultHeatmapHotColor","defaultHeatmapColdColor","escapeMarkdownRegex","markdownHeaderReplacement","ZeroWidthSpace","computedHeatmapColor","annotations_Annotations","heatmap","getHeatmapColor","renderOptions","borderColor","baseColor","cold","colors","hot","age","computeAge","rgba","rgb","toFixed","hasRemote","annotationType","commandBar","MuchGreaterThan","diffWith_DiffWithCommand","getMarkdownCommandArgs","RecentChanges","SquareWithTopShadow","openFileRevision_OpenFileRevisionCommand","ArrowUpRight","openCommitInRemote_OpenCommitInRemoteCommand","MiddleEllipsis","showQuickCommitFileDetails_ShowQuickCommitFileDetailsCommand","showCommitDetailsCommand","avatar","getHoverCommandBar","showQuickCommitDetails_ShowQuickCommitDetailsCommand","enrichMessage","hovers","avatars","getGravatarUri","defaultGravatarsStyle","markdown","isTrusted","codeDiff","getCodeDiff","Dash","ArrowLeftRightLong","getDiffForLine","hoverMessage","getHoverDiffMessage","dateFormatOrFormatOptions","uncommittedColor","contentText","separateLines","borderStyle","borderWidth","spacing","backgroundColor","fontWeight","fontStyle","height","margin","textDecoration","applyHeatmap","scrollable","blameAnnotationProvider_BlameAnnotationProviderBase","_blame","getText","setForceDirtyStateChangeOnNextDocumentChange","_hoverProviderDisposable","commitLine","highlightDecorationRanges","validateRange","half","median","lookup","newest","oldest","ageThreshold","coldColor","hotColor","annotations","details","registerHoverProvider","provideHover","provideChangesHover","provideDetailsHover","getCommitForHover","logCommit","getHoverMessage","defaultDateFormat","hover","changesHover","over","character","getBlame","gutterBlameAnnotationProvider_GutterBlameAnnotationProvider","gravatarDefault","gutterRenderOptions","decorationsMap","avatarDecorationsMap","gutter","computedHeatmap","compacted","getComputedHeatmap","addOrUpdateGravatarDecoration","registerHoverProviders","avatarDecoration","createTextEditorDecorationType","gutterIconPath","gutterIconSize","heatmapBlameAnnotationProvider_HeatmapBlameAnnotationProvider","Heatmap","heatmapRenderOptions","recentChangesAnnotationProvider_RecentChangesAnnotationProvider","getRecentLogCommitForFile","AnnotationClearReason","Decorations","blameAnnotation","rangeBehavior","ClosedOpen","blameHighlight","heatmapAnnotation","heatmapHighlight","recentChangesAnnotation","recentChangesHighlight","fileAnnotationController_FileAnnotationController","_onDidToggleAnnotations","_annotationProviders","_keyboardScope","_annotationType","_toggleModes","onDidToggleAnnotations","clearAll","_annotationsDisposable","cfgHighlight","highlight","isWholeLine","overviewRulerLane","Right","locations","Line","overviewRulerColor","Overview","dark","Gutter","asAbsolutePath","light","recentChanges","toggleMode","_editor","isInWindowToggle","getProvider","detachKeyboardHook","attachKeyboardHook","BlameabilityChanged","clearCore","DocumentChanged","DocumentClosed","restore","fuzzyProvider","ColumnChanged","editors","getToggleMode","Window","User","Disposing","visibleTextEditors","currentProvider","computingAnnotations","showAnnotationsCore","reopen","keyboard","beginScope","escape","onDidPressKey","annotationsLabel","validate","onDidChangeTextEditorViewColumn","onTextEditorViewColumnChanged","onDidChangeVisibleTextEditors","onVisibleTextEditorsChanged","onBlameStateChanged","onDirtyStateChanged","annotationDecoration","lineAnnotationController_LineAnnotationController","_enabled","fileAnnotations","onFileAnnotationsToggled","onDidStartDebugSession","onDebugSessionStarted","clearAnnotations","_debugSessionEndDisposable","lineTracker","stop","currentLine","setLineTracker","refresh","onDidTerminateDebugSession","onDebugSessionEnded","includesAll","getState","isSubscribed","onDidChangeActiveLines","onActiveLinesChanged","codeLensProvider_GitRecentChangeCodeLens","symbol","blameRange","isFullRange","desiredCommand","codeLensProvider_GitAuthorsCodeLens","codeLensProvider_GitCodeLensProvider","_git","_tracker","_onDidChangeCodeLenses","onDidChangeCodeLenses","maxLines","sizeThresholdAfterEdit","languageScope","scopesByLanguage","language","scopes","symbolScopes","lenses","symbols","Document","ExecuteDocumentSymbolProvider","documentRangeFn","dirtyCommand","getDirtyTitle","sym","provideCodeLens","blameForRangeFn","recentChange","fileSymbol","getFilename","getRangeFromSymbol","includeSingleLineSymbols","valid","symbolName","kind","Containers","Package","Class","Interface","Module","Namespace","Struct","isSingleLine","Constructor","Enum","Method","Property","Blocks","getValidateSymbolRange","lineAt","lineNumber","startChar","multiline","isDocumentSymbol","lens","resolveGitRecentChangeCodeLens","resolveGitAuthorsCodeLens","containerName","DiffWithPrevious","applyDiffWithPreviousCommand","ShowQuickCommitDetails","applyShowQuickCommitDetailsCommand","ShowQuickCommitFileDetails","applyShowQuickCommitFileDetailsCommand","ShowQuickCurrentBranchHistory","applyShowQuickCurrentBranchHistoryCommand","ShowQuickFileHistory","applyShowQuickFileHistoryCommand","ToggleFileBlame","applyToggleFileBlameCommand","toFileUri","codeLens","unsavedChanges","recentChangeAndAuthors","recentChangeOnly","authorsOnly","selector","codeLensController_GitCodeLensController","_canToggle","_providerDisposable","_provider","createProvider","CanToggleCodeLens","registerCodeLensProvider","onDirtyIdleTriggered","fromGitLensFSUri","fromRevisionUri","fsProvider_emptyArray","fsProvider_GitFileSystemProvider","_searchTreeMap","_onDidChangeFile","registerFileSystemProvider","isCaseSensitive","isReadonly","onDidChangeFile","NoPermissions","tree","getTree","FileNotFound","typeToFileType","getVersionedFileBuffer","ctime","treeItem","searchTree","Directory","getTreeFileForRevision","getTreeForRevision","createSearchTree","getOrCreateSearchTree","Unknown","lineHoverController_LineHoverController","unregister","register","debugging","lineState","getAnnotationType","wholeLine","lineAnnotations","keyNoopCommand","mappings","keyboard_KeyboardScope","mapping","updateKeyCommandsContext","Key","keyboard_Keyboard","registerCommand","execute","begin","statusBarController_StatusBarController","clearBlame","_blameStatusBarItem","_modeStatusBarItem","statusBar","modes","statusBarItemName","alignment","Left","createStatusBarItem","SwitchMode","text","tooltip","reduceFlicker","updateBlame","hide","DiffLineWithPrevious","DiffWithWorking","DiffLineWithWorking","ToggleCodeLens","lineTracker_LineTracker","_onDidChangeActiveLines","_state","trigger","subscriber","subscription","_linesChangedDebounced","onLinesChanged","fireLinesChanged","lines1","lines2","GitLineState","gitLineTracker_GitLineTracker","_count","_subscriptions","updated","updateState","getBlameForLineContents","getBlameForLine","setState","ResourceType","unknownGitUri","viewNode_ViewNode","ViewNode","view","refreshNode","CommitFileNodeDisplayAs","ViewRefNode","supportsAutoRefresh","onDidChangeAutoRefresh","viewNode_SubscribeableViewNode","_canSubscribe","disposables","onDidChangeVisibility","onVisibilityChanged","onDidChangeNodeState","onNodeStateChanged","onAutoRefreshChanged","unsubscribe","canSubscribe","ensureSubscription","triggerChange","_subscription","subscriptionPromise","visible","onStateChanged","onParentStateChanged","autoRefresh","subscribe","commitFileNode_CommitFileNode","_displayAs","_selection","priority","toFileCommit","label","None","contextValue","resourceType","CommitIcon","iconPath","StatusIcon","Gravatar","getCommand","_label","_tooltip","_folderName","CommitLabel","getCommitTemplate","getCommitFileTemplate","_relativePath","FileStaged","FileUnstaged","CommitFile","commitFormat","commitFileFormat","showOptions","preserveFocus","preview","folderNode_FolderNode","fromRepoPath","getFileNesting","List","numeric","sensitivity","Collapsed","Folder","nesting","layout","Auto","nestingThreshold","threshold","Tree","commitNode_CommitNode","getBranchAndTagTips","toGitUri","getChildren","branchAndTagTips","AngleBracketLeftHeavy","AngleBracketRightHeavy","ArrowHeadRight","CommitOnCurrentBranch","common_MessageNode","_message","_iconPath","common_CommandMessageNode","_command","getTreeItem","common_PagerNode","_args","Pager","common_ShowMoreNode","getBranchesAndTagTipsFn","currentName","branchesAndTagsBySha","bt","branchesAndTags","markers","insertDateMarkers","iterable","daysAgo","marker","setUTCHours","nextDate","branchTrackingStatusNode_BranchTrackingStatusNode","direction","supportsPaging","defaultItemLimit","previousLog","StatusAheadOfUpstream","StatusBehindUpstream","BranchStatusAheadOfUpstream","BranchStatusBehindUpstream","iconSuffix","branchNode_BranchNode","branchName","getBasename","_children","showTrackingBranch","getTrackingStatus","RemoteBranch","CurrentBranchWithTracking","CurrentBranch","BranchWithTracking","branchOrTagFolderNode_BranchOrTagFolderNode","_expanded","expanded","Expanded","branchesNode_BranchesNode","branchNodes","BranchesWithRemotes","fileHistoryNode_FileHistoryNode","displayAs","getStatusForFile","FileHistory","onRepoChanged","onRepoFileSystemChanged","startWatchingFileSystem","getQuickPickIgnoreFocusOut","showQuickPickProgress","scope","showQuickPick","_getInfiniteCancellablePromise","placeHolder","ignoreFocusOut","_showQuickPickProgress","commonQuickPicks_CommandQuickPickItem","commandOrArgs","commonQuickPicks_CommitQuickPickItem","getShortMessage","description","detail","commonQuickPicks_ChooseFromBranchesAndTagsQuickPickItem","_goBack","branchesAndTagsQuickPick_BranchesAndTagsQuickPick","allowCommitId","goBack","KeyCommandQuickPickItem","MessageQuickPickItem","commonQuickPicks_OpenFileCommandQuickPickItem","openEditor","commonQuickPicks_OpenFilesCommandQuickPickItem","commonQuickPicks_ShowCommitInViewQuickPickItem","searchView","commonQuickPicks_ShowCommitSearchResultsInViewQuickPickItem","resultsLabel","showSearchResults","commonQuickPicks_ShowFileHistoryInViewQuickPickItem","baseRef","fileHistoryView","showHistoryForUri","branchesAndTagsQuickPick_RefQuickPickItem","checked","branchesAndTagsQuickPick_BranchQuickPickItem","branchesAndTagsQuickPick_TagQuickPickItem","autoPick","pick","items","getItems","itms","quickpick","createQuickPick","busy","placeholder","onDidHide","onDidChangeValue","onDidAccept","selectedItems","validateReference","filters","include","remotesQuickPick_OpenRemoteCommandQuickPickItem","clipboard","remotesQuickPick_OpenRemotesCommandQuickPickItem","goBackCommand","shortFileSha","OpenInRemote","branchHistoryQuickPick_BranchHistoryQuickPick",",",".","progressCancellation","nextPageCommand","currentCommand","ArrowBack","ShowQuickBranchHistory","previousPageCommand","npc","matchOnDescription","matchOnDetail","commitFileQuickPick_ApplyCommitFileChangesCommandQuickPickItem","applyChangesToWorkingFile","commitFileQuickPick_OpenCommitFileCommandQuickPickItem","commitFileQuickPick_OpenCommitFileRevisionCommandQuickPickItem","commitQuickPick_CommitWithFileStatusQuickPickItem","octicon","commitQuickPick_OpenCommitFilesCommandQuickPickItem","versioned","commitQuickPick_OpenCommitFileRevisionsCommandQuickPickItem","commitsQuickPick_CommitsQuickPick","showInViewCommand","showAllCommand","fileHistoryQuickPick_FileHistoryQuickPick","pickerOnly","findWorkingFileName","RepositoryQuickPickItem","repositoriesQuickPick_RepositoriesQuickPick","repoStatusQuickPick_OpenStatusFileCommandQuickPickItem","realIndexStatus","getOcticon","repoStatusQuickPick_OpenStatusFilesCommandQuickPickItem","OpenChangedFiles","stashListQuickPick_StashListQuickPick","stash","StashSave","fileHistoryTrackerNode_FileHistoryTrackerNode","resetChild","_child","_fileUri","fileUri","_baseRef","ActiveFileHistory","onActiveEditorChanged","lineHistoryNode_LineHistoryNode","LineHistory","lineHistoryTrackerNode_LineHistoryTrackerNode","_base","ActiveLineHistory","remoteNode_RemoteNode","rt","Fetch","Push","ArrowRight","Remote","remotesNode_RemotesNode","RefreshReason","viewBase_ViewBase","_onDidChangeTreeData","_onDidChangeVisibility","_onDidChangeNodeState","registerCommands","onDidChangeTreeData","container","_tree","createTreeView","treeDataProvider","onDidCollapseElement","onElementCollapsed","onDidExpandElement","onElementExpanded","getRoot","ensureRoot","getParent","triggerNodeChange","isPageable","reveal","stashFileNode_StashFileNode","stashFormat","stashFileFormat","stashNode_StashNode","stashesNode_StashesNode","statusFileNode_StatusFileNode","_hasStagedChanges","_hasUnstagedChanges","resourceUri","collapsibleState","FileStagedAndUnstaged","StatusFileCommits","getChangedIn","statusFileFormat","changedIn","statusFilesNode_StatusFilesNode","includeWorkingTree","older","toStatusFile","aheadFiles","uniques","stats","StatusFiles","previousRef","tagNode_TagNode","Tag","tagsNode_TagsNode","tagNodes","repositoryNode_RepositoryNode","_lastFetched","_status","getLastFetched","lastFetchedTooltip","formatLastFetched","workingStatus","updateLastFetched","prevLastFetched","repositoriesNode_RepositoriesNode","Repositories","ConfigurationChanged","onRepositoriesChanged","autoReveal","containsUri","resultsCommitsNode_ResultsCommitsNode","_commitsQuery","_contextValue","ResultsCommits","getCommitsQueryResults","_commitsQueryResults","resultsFileNode_ResultsFileNode","ResultsFile","statusIcon","DiffWith","resultsFilesNode_ResultsFilesNode","_ref1","_ref2","getFilesQueryResults","ResultsFiles","_filesQueryResults","getFilesQueryResultsCore","compareResultsNode_CompareResultsNode","getCommitsQuery","getRepositoryCount","CompareResults","comparePickerNode_ComparePickerNode","selectedRef","ComparePicker","getQualifiedCommand","ComparePickerWithRef","compareNode_CompareNode","_selectedRef","_comparePickerNode","focus","select","Compare","ViewsCanCompare","selectForCompare","getRefName","getRepoPathOrPrompt","autoCompare","compareWithSelected","searchNode_SearchNode","Search","findIndex","compareView_CompareView","ViewsCompareKeepResults","keepResults","viewCommands","setFilesLayout","setKeepResults","swapComparision","views","workspaceState","dismiss","addResults","addOrReplace","updateEffective","fileHistoryView_FileHistoryView","changeBase","setEditorFollowing","setRenameFollowing","ViewsFileHistoryEditorFollowing","fileHistory","lineHistoryView_LineHistoryView","ViewsLineHistoryEditorFollowing","lineHistory","repositoriesView_RepositoriesView","_onDidChangeAutoRefresh","setAutoRefresh","ViewsRepositoriesAutoRefresh","workspaceEnabled","searchView_SearchView","ViewsSearchKeepResults","searchQueryFn","getSearchQueryFn","SearchResults","getSearchLabel","resultsType","singular","viewCommands_ViewCommands","dismissNode","canDismissNode","closeRepository","exploreRepoRevision","openChanges","openChangesWithWorking","openFile","openFileRevision","openFileRevisionInRemote","openChangedFiles","openChangedFileChanges","openChangedFileChangesWithWorking","openChangedFileRevisions","applyChanges","stageFile","unstageFile","compareAncestryWithWorking","compareWithHead","compareWithRemote","compareFileWithSelected","selectFileForCompare","compareWithWorking","terminalCheckoutBranch","terminalCreateBranch","terminalDeleteBranch","terminalMergeBranch","terminalRebaseBranch","terminalRebaseBranchToRemote","terminalSquashBranchIntoCommit","terminalCheckoutCommit","terminalCherryPickCommit","terminalPushCommit","terminalRebaseCommit","terminalResetCommit","terminalRevertCommit","terminalRemoveRemote","terminalCreateTag","terminalDeleteTag","compareView","commonAncestor","getMergeBase","_selectedFile","selected","ViewsCanCompareFile","diffArgs","openInNewWindow","OpenFolder","updateWorkspaceFolders","openWorkspace","FocusFilesExplorer","openDiffWith","OpenFileInRemote","unStageFile","sendTerminalCommand","remoteBranch","showInputBox","prompt","_terminal","createTerminal","onDidCloseTerminal","_terminalCwd","sendText","terminal","ensureTerminal","webviewEditor_WebviewEditor","_disposablePanel","postUpdatedConfiguration","_panel","webviewPanel","Workspace","defaultValue","removes","html","getHtml","createWebviewPanel","Active","retainContextWhenHidden","enableFindWidget","enableCommandUris","enableScripts","onDidDispose","onPanelDisposed","onDidChangeViewState","onViewStateChanged","webview","onDidReceiveMessage","onMessageReceived","content","filename","_html","getBootstrap","postMessage","settingsEditor_SettingsEditor","getAvailableScopes","ShowSettingsPage","welcomeEditor_WelcomeEditor","_context","_config","applyMode","_lineTracker","_vsls","_fileAnnotationController","_lineAnnotationController","_lineHoverController","_statusBarController","_codeLensController","_keyboard","_settingsEditor","_welcomeEditor","_compareView","_fileHistoryView","_lineHistoryView","_repositoriesView","_searchView","lineHistoryView","lineHovers","repositoriesView","settingsEditor","_viewCommands","welcomeEditor","emptyConfig","Proxy","propKey","receiver","configuration_Configuration","affectsConfiguration","_configAffectedByMode","onDidChangeConfiguration","resetConfig","inspection","migrated","globalValue","migrationFn","workspaceValue","workspaceFolderValue","WorkspaceFolder","fallbackValue","fromInspection","toInspection","registrableCommands","common_command","getCommandUri","getRepoPathOrActiveOrPrompt","getRepoPathOrActive","isCommandViewContextWithBranch","isCommandViewContextWithCommit","isCommandViewContextWithRemote","isCommandViewContextWithRepo","isScmResourceGroup","handle","resourceStates","isScmResourceState","common_Command","contextParsingOptions","_execute","encodeURIComponent","rest","parseContext","preExecute","firstArg","edit","common_isTextEditor","states","scmResourceStates","scmResourceGroups","common_ActiveEditorCommand","lastCommand","ActiveEditorCachedCommand","rethrow","showTextDocument","annotations_ClearFileAnnotationsCommand","ClearFileAnnotationsCommand","common_EditorCommand","registerTextEditorCommand","executeCore","ClearFileAnnotations","ComputingFileAnnotations","annotations_ToggleFileBlameCommand","ToggleFileBlameCommand","toggle","annotations_ToggleFileHeatmapCommand","ToggleFileHeatmapCommand","ToggleFileHeatmap","annotations_ToggleFileRecentChangesCommand","ToggleFileRecentChangesCommand","ToggleFileRecentChanges","annotations_ToggleLineBlameCommand","ToggleLineBlameCommand","ToggleLineBlame","closeUnchangedFiles_CloseUnchangedFilesCommand","CloseUnchangedFilesCommand","CloseUnchangedFiles","CloseAllEditors","_onEditorChangedFn","loopCount","nextEditor","closeEditor","CloseActiveEditor","waitForEditorChange","NextEditor","copyMessageToClipboard_CopyMessageToClipboardCommand","CopyMessageToClipboardCommand","CopyMessageToClipboard","blameline","getLogCommit","copyRemoteFileUrlToClipboard_CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboard","copyShaToClipboard_CopyShaToClipboardCommand","CopyShaToClipboardCommand","CopyShaToClipboard","diffBranchWithBranch_DiffBranchWithBranchCommand","DiffBranchWithBranchCommand","DiffHeadWithBranch","DiffWorkingWithBranch","diffDirectory_DiffDirectoryCommand","DiffDirectoryCommand","DiffDirectory","DiffDirectoryWithHead","ViewsOpenDirectoryDiff","ViewsOpenDirectoryDiffWithWorking","isCommandViewContextWithRef","openDirectoryDiff","diffLineWithPrevious_DiffLineWithPreviousCommand","DiffLineWithPreviousCommand","showFileNotUnderSourceControlWarningMessage","diffLineWithWorking_DiffLineWithWorkingCommand","DiffLineWithWorkingCommand","DiffWithCommand","argsOrCommit1","commit2","commit1","getMarkdownCommandArgsCore","lhsSha","rhsSha","getFileStatusForCommit","getVersionedUri","rhsSuffix","lhsSuffix","Diff","diffWithBranch_DiffWithBranchCommand","DiffWithBranchCommand","DiffWithBranch","showNoRepositoryWarningMessage","renamedUri","renamedTitle","rename","diffWithNext_DiffWithNextCommand","DiffWithNextCommand","DiffWithNext","diffWithPrevious_DiffWithPreviousCommand","DiffWithPreviousCommand","DiffWithPreviousInDiff","inDiffEditor","showCommitHasNoPreviousCommitWarningMessage","originalSha","diffWithRevision_DiffWithRevisionCommand","DiffWithRevisionCommand","DiffWithRevision","branchOrTag","showProgress","diffWithWorking_DiffWithWorkingCommand","DiffWithWorkingCommand","Status","ResourceGroupType","externalDiff_ExternalDiffCommand","ExternalDiffCommand","ExternalDiff","ExternalDiffAll","isCommandViewContextWithFileCommit","isCommandViewContextWithFileRefs","resourceGroupType","Index","isModified","BOTH_MODIFIED","INDEX_MODIFIED","MODIFIED","openDiffTool","openBranchesInRemote_OpenBranchesInRemoteCommand","OpenBranchesInRemoteCommand","OpenBranchesInRemote","openBranchInRemote_OpenBranchInRemoteCommand","OpenBranchInRemoteCommand","OpenBranchInRemote","openChangedFiles_OpenChangedFilesCommand","OpenChangedFilesCommand","OpenCommitInRemoteCommand","OpenCommitInRemote","argsOrSha","openFileInRemote_OpenFileInRemoteCommand","OpenFileInRemoteCommand","OpenFileRevisionCommand","OpenFileRevision","argsOrUri","openInRemote_OpenInRemoteCommand","OpenInRemoteCommand","ensureRemoteBranchName","verb","shaSuffix","remotesQuickPick_RemotesQuickPick","remoteName","openRepoInRemote_OpenRepoInRemoteCommand","OpenRepoInRemoteCommand","OpenRepoInRemote","openWorkingFile_OpenWorkingFileCommand","OpenWorkingFileCommand","OpenWorkingFile","repositories_FetchRepositoriesCommand","FetchRepositoriesCommand","FetchRepositories","fetchAll","repositories_PullRepositoriesCommand","PullRepositoriesCommand","PullRepositories","pullAll","repositories_PushRepositoriesCommand","PushRepositoriesCommand","PushRepositories","pushAll","resetSuppressedWarnings_ResetSuppressedWarningsCommand","ResetSuppressedWarningsCommand","ResetSuppressedWarnings","searchByRegex","symbolToSearchByMap","searchByToSymbolMap","searchCommits_SearchCommitsCommand","SearchCommitsCommand","SearchCommits","SearchCommitsInView","showInView","originalArgs","valueSelection","searchLabel","showLastQuickPick_ShowLastQuickPickCommand","ShowLastQuickPickCommand","ShowLastQuickPick","showQuickBranchHistory_ShowQuickBranchHistoryCommand","ShowQuickBranchHistoryCommand","repoLog","ShowQuickCommitDetailsCommand","ShowCommitInView","showLineUncommittedWarningMessage","showCommitNotFoundWarningMessage","commitQuickPick_CommitQuickPick","resolvePreviousFileSha","StashApply","confirm","stashItem","StashDelete","previousCommand","nextCommand","nextLog","onDidSelectItem","setKeyCommand","onDidSelect","ShowQuickCommitFileDetailsCommand","ShowQuickRevisionDetails","fileLog","commitFileQuickPick_CommitFileQuickPick","workingName","findNextCommit","ArrowRightHollow","showQuickCurrentBranchHistory_ShowQuickCurrentBranchHistoryCommand","ShowQuickCurrentBranchHistoryCommand","showQuickFileHistory_ShowQuickFileHistoryCommand","ShowQuickFileHistoryCommand","ShowFileHistoryInView","showQuickRepoStatus_ShowQuickRepoStatusCommand","ShowQuickRepoStatusCommand","ShowQuickRepoStatus","repoStatusQuickPick_RepoStatusQuickPick","stagedAdds","unstagedAdds","stagedChanges","unstagedChanges","stagedDeletes","unstagedDeletes","stagedAddsAndChanges","unstagedAddsAndChanges","unstaged","stagedStatus","unstagedStatus","computed","computeStatus","unstagedIndex","ShowQuickStashList","showQuickStashList_ShowQuickStashListCommand","ShowQuickStashListCommand","showView_ShowViewCommand","ShowViewCommand","ShowCompareView","ShowFileHistoryView","ShowLineHistoryView","ShowRepositoriesView","ShowSearchView","stashApply_StashApplyCommand","StashApplyCommand","stashApply","stashDelete_StashDeleteCommand","StashDeleteCommand","stashDelete","stashSave_StashSaveCommand","StashSaveCommand","isCommandViewContextWithFile","stashSave","supportGitLens_SupportGitLensCommand","SupportGitLensCommand","SupportGitLens","showSupportGitLensMessage","switchMode_SwitchModeCommand","SwitchModeCommand","modesQuickPick_ModesQuickPick","modeCfg","switchMode_ToggleReviewModeCommand","ToggleReviewModeCommand","ToggleReviewMode","switchMode_ToggleZenModeCommand","ToggleZenModeCommand","ToggleZenMode","toggleCodeLens_ToggleCodeLensCommand","ToggleCodeLensCommand","toggleCodeLens","configure","gitlensVersion","packageJSON","showGitDisabledErrorMessage","previousVersion","globalState","GitLensVersion","migrate","explorers","migrateSettings","compareGitVersion","showGitVersionUnsupportedErrorMessage","notifyOnUnsupportedGitVersion","showWhatsNewAfterUpgrades","prevMajor","prevMinor","showWhatsNewMessage","showWelcomePage","deactivate","__webpack_exports__"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 231);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","var isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone)\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = new Date(timestamp + time).getTimezoneOffset()\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()\n    }\n\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","module.exports = require(\"fs\");","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","'use strict';\nconst termux = require('./lib/termux.js');\nconst linux = require('./lib/linux.js');\nconst macos = require('./lib/macos.js');\nconst windows = require('./lib/windows.js');\n\nfunction platform() {\n\tswitch (process.platform) {\n\t\tcase 'darwin':\n\t\t\treturn macos;\n\t\tcase 'win32':\n\t\t\treturn windows;\n\t\tcase 'android':\n\t\t\tif (process.env.PREFIX !== '/data/data/com.termux/files/usr') {\n\t\t\t\tthrow new Error('You need to install Termux for this module to work on Android: https://termux.com');\n\t\t\t}\n\t\t\treturn termux;\n\t\tdefault:\n\t\t\treturn linux;\n\t}\n}\n\nexports.write = input => {\n\tif (typeof input !== 'string') {\n\t\treturn Promise.reject(new TypeError(`Expected a string, got ${typeof input}`));\n\t}\n\n\treturn platform().copy({input}).then(() => {});\n};\n\nexports.read = () => platform().paste({stripEof: false});\n\nexports.writeSync = input => {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof input}`);\n\t}\n\n\tplatform().copySync({input});\n};\n\nexports.readSync = () => platform().pasteSync({stripEof: false}).stdout;\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n","module.exports = require(\"buffer\");","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","module.exports = require(\"child_process\");","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n","module.exports = require(\"stream\");","'use strict';\nconst childProcess = require('child_process');\nconst util = require('util');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nfunction handleArgs(cmd, args, opts) {\n\tlet parsed;\n\n\topts = Object.assign({\n\t\textendEnv: true,\n\t\tenv: {}\n\t}, opts);\n\n\tif (opts.extendEnv) {\n\t\topts.env = Object.assign({}, process.env, opts.env);\n\t}\n\n\tif (opts.__winShell === true) {\n\t\tdelete opts.__winShell;\n\t\tparsed = {\n\t\t\tcommand: cmd,\n\t\t\targs,\n\t\t\toptions: opts,\n\t\t\tfile: cmd,\n\t\t\toriginal: cmd\n\t\t};\n\t} else {\n\t\tparsed = crossSpawn._parse(cmd, args, opts);\n\t}\n\n\topts = Object.assign({\n\t\tmaxBuffer: TEN_MEGABYTES,\n\t\tstripEof: true,\n\t\tpreferLocal: true,\n\t\tlocalDir: parsed.options.cwd || process.cwd(),\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true\n\t}, parsed.options);\n\n\topts.stdio = stdio(opts);\n\n\tif (opts.preferLocal) {\n\t\topts.env = npmRunPath.env(Object.assign({}, opts, {cwd: opts.localDir}));\n\t}\n\n\treturn {\n\t\tcmd: parsed.command,\n\t\targs: parsed.args,\n\t\topts,\n\t\tparsed\n\t};\n}\n\nfunction handleInput(spawned, opts) {\n\tconst input = opts.input;\n\n\tif (input === null || input === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n}\n\nfunction handleOutput(opts, val) {\n\tif (val && opts.stripEof) {\n\t\tval = stripEof(val);\n\t}\n\n\treturn val;\n}\n\nfunction handleShell(fn, cmd, opts) {\n\tlet file = '/bin/sh';\n\tlet args = ['-c', cmd];\n\n\topts = Object.assign({}, opts);\n\n\tif (process.platform === 'win32') {\n\t\topts.__winShell = true;\n\t\tfile = process.env.comspec || 'cmd.exe';\n\t\targs = ['/s', '/c', `\"${cmd}\"`];\n\t\topts.windowsVerbatimArguments = true;\n\t}\n\n\tif (opts.shell) {\n\t\tfile = opts.shell;\n\t\tdelete opts.shell;\n\t}\n\n\treturn fn(file, args, opts);\n}\n\nfunction getStream(process, stream, encoding, maxBuffer) {\n\tif (!process[stream]) {\n\t\treturn null;\n\t}\n\n\tlet ret;\n\n\tif (encoding) {\n\t\tret = _getStream(process[stream], {\n\t\t\tencoding,\n\t\t\tmaxBuffer\n\t\t});\n\t} else {\n\t\tret = _getStream.buffer(process[stream], {maxBuffer});\n\t}\n\n\treturn ret.catch(err => {\n\t\terr.stream = stream;\n\t\terr.message = `${stream} ${err.message}`;\n\t\tthrow err;\n\t});\n}\n\nmodule.exports = (cmd, args, opts) => {\n\tlet joinedCmd = cmd;\n\n\tif (Array.isArray(args) && args.length > 0) {\n\t\tjoinedCmd += ' ' + args.join(' ');\n\t}\n\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst encoding = parsed.opts.encoding;\n\tconst maxBuffer = parsed.opts.maxBuffer;\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n\n\tlet removeExitHandler;\n\tif (parsed.opts.cleanup) {\n\t\tremoveExitHandler = onExit(() => {\n\t\t\tspawned.kill();\n\t\t});\n\t}\n\n\tlet timeoutId = null;\n\tlet timedOut = false;\n\n\tconst cleanupTimeout = () => {\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t}\n\t};\n\n\tif (parsed.opts.timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutId = null;\n\t\t\ttimedOut = true;\n\t\t\tspawned.kill(parsed.opts.killSignal);\n\t\t}, parsed.opts.timeout);\n\t}\n\n\tconst processDone = new Promise(resolve => {\n\t\tspawned.on('exit', (code, signal) => {\n\t\t\tcleanupTimeout();\n\t\t\tresolve({code, signal});\n\t\t});\n\n\t\tspawned.on('error', err => {\n\t\t\tcleanupTimeout();\n\t\t\tresolve({err});\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', err => {\n\t\t\t\tcleanupTimeout();\n\t\t\t\tresolve({err});\n\t\t\t});\n\t\t}\n\t});\n\n\tfunction destroy() {\n\t\tif (spawned.stdout) {\n\t\t\tspawned.stdout.destroy();\n\t\t}\n\n\t\tif (spawned.stderr) {\n\t\t\tspawned.stderr.destroy();\n\t\t}\n\t}\n\n\tconst handlePromise = () => pFinally(Promise.all([\n\t\tprocessDone,\n\t\tgetStream(spawned, 'stdout', encoding, maxBuffer),\n\t\tgetStream(spawned, 'stderr', encoding, maxBuffer)\n\t]).then(arr => {\n\t\tconst result = arr[0];\n\t\tconst stdout = arr[1];\n\t\tconst stderr = arr[2];\n\n\t\tlet err = result.err;\n\t\tconst code = result.code;\n\t\tconst signal = result.signal;\n\n\t\tif (removeExitHandler) {\n\t\t\tremoveExitHandler();\n\t\t}\n\n\t\tif (err || code !== 0 || signal !== null) {\n\t\t\tif (!err) {\n\t\t\t\tlet output = '';\n\n\t\t\t\tif (Array.isArray(parsed.opts.stdio)) {\n\t\t\t\t\tif (parsed.opts.stdio[2] !== 'inherit') {\n\t\t\t\t\t\toutput += output.length > 0 ? stderr : `\\n${stderr}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (parsed.opts.stdio[1] !== 'inherit') {\n\t\t\t\t\t\toutput += `\\n${stdout}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (parsed.opts.stdio !== 'inherit') {\n\t\t\t\t\toutput = `\\n${stderr}${stdout}`;\n\t\t\t\t}\n\n\t\t\t\terr = new Error(`Command failed: ${joinedCmd}${output}`);\n\t\t\t\terr.code = code < 0 ? errname(code) : code;\n\t\t\t}\n\n\t\t\t// TODO: missing some timeout logic for killed\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n\t\t\t// err.killed = spawned.killed || killed;\n\t\t\terr.killed = err.killed || spawned.killed;\n\n\t\t\terr.stdout = stdout;\n\t\t\terr.stderr = stderr;\n\t\t\terr.failed = true;\n\t\t\terr.signal = signal || null;\n\t\t\terr.cmd = joinedCmd;\n\t\t\terr.timedOut = timedOut;\n\n\t\t\tif (!parsed.opts.reject) {\n\t\t\t\treturn err;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tstdout: handleOutput(parsed.opts, stdout),\n\t\t\tstderr: handleOutput(parsed.opts, stderr),\n\t\t\tcode: 0,\n\t\t\tfailed: false,\n\t\t\tkilled: false,\n\t\t\tsignal: null,\n\t\t\tcmd: joinedCmd,\n\t\t\ttimedOut: false\n\t\t};\n\t}), destroy);\n\n\tcrossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n\n\thandleInput(spawned, parsed.opts);\n\n\tspawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n\tspawned.catch = onrejected => handlePromise().catch(onrejected);\n\n\treturn spawned;\n};\n\nmodule.exports.stdout = function () {\n\t// TODO: set `stderr: 'ignore'` when that option is implemented\n\treturn module.exports.apply(null, arguments).then(x => x.stdout);\n};\n\nmodule.exports.stderr = function () {\n\t// TODO: set `stdout: 'ignore'` when that option is implemented\n\treturn module.exports.apply(null, arguments).then(x => x.stderr);\n};\n\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\n\nmodule.exports.sync = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\n\tif (isStream(parsed.opts.input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n\n\tconst result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n\n\tif (result.error || result.status !== 0) {\n\t\tthrow (result.error || new Error(result.stderr === '' ? result.stdout : result.stderr));\n\t}\n\n\tresult.stdout = handleOutput(parsed.opts, result.stdout);\n\tresult.stderr = handleOutput(parsed.opts, result.stderr);\n\n\treturn result;\n};\n\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);\n\nmodule.exports.spawn = util.deprecate(module.exports, 'execa.spawn() is deprecated. Use execa() instead.');\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n/**\n * Entrypoint and type definitions for Live Share for VS Code extension API\n */\nconst path = require('path');\nconst vscode = require('vscode');\n/**\n * Extension ID of the Live Share extension for VS Code.\n */\nexports.extensionId = 'ms-vsliveshare.vsliveshare';\n/**\n * Entrypoint for access to the Live Share API.\n *\n * @returns an instance of the Live Share API, or `null` if the Live Share extension\n * is not installed or failed to activate.\n *\n * @example To access the Live Share API from another extension:\n *\n *     import * as vsls from 'vsls/vscode';\n *     const liveshare = await vsls.getApi();\n */\nasync function getApi() {\n    const liveshareExtension = vscode.extensions.getExtension(exports.extensionId);\n    if (!liveshareExtension) {\n        // The extension is not installed.\n        return null;\n    }\n    const extensionApi = liveshareExtension.isActive ? liveshareExtension.exports : await liveshareExtension.activate();\n    if (!extensionApi) {\n        // The extensibility API is not enabled.\n        return null;\n    }\n    const liveShareApiVersion = '0.3.967'; //require(path.join(__dirname, 'package.json')).version;\n    // Support deprecated function name to preserve compatibility with older versions of VSLS.\n    if (!extensionApi.getApi) return extensionApi.getApiAsync(liveShareApiVersion);\n    return extensionApi.getApi(liveShareApiVersion);\n}\nexports.getApi = getApi;\n/** @deprecated */\nfunction getApiAsync() {\n    return getApi();\n}\nexports.getApiAsync = getApiAsync;\nvar Role;\n(function(Role) {\n    Role[(Role['None'] = 0)] = 'None';\n    Role[(Role['Host'] = 1)] = 'Host';\n    Role[(Role['Guest'] = 2)] = 'Guest';\n})((Role = exports.Role || (exports.Role = {})));\n/** This is just a placeholder for a richer access control model to be added later. */\nvar Access;\n(function(Access) {\n    Access[(Access['None'] = 0)] = 'None';\n    Access[(Access['ReadOnly'] = 1)] = 'ReadOnly';\n    Access[(Access['ReadWrite'] = 3)] = 'ReadWrite';\n    Access[(Access['Owner'] = 255)] = 'Owner';\n})((Access = exports.Access || (exports.Access = {})));\n/**\n * Identifiers for Live Share tree views. These identifiers may be used by other extensions\n * to extend Live Share tree views with additional nodes via the `registerTreeDataProvider()`\n * API.\n */\nvar View;\n(function(View) {\n    View['Session'] = 'liveshare.session';\n    View['ExplorerSession'] = 'liveshare.session.explorer';\n    View['Contacts'] = 'liveshare.contacts';\n    View['Feedback'] = 'liveshare.feedback';\n})((View = exports.View || (exports.View = {})));\n/**\n * Identifiers for Live Share tree view items. These identifiers may be used by other\n * extensions to extend Live Share tree items with additional commands using conditional\n * expressions in the `view/item/context` section of their own package.json.\n */\nvar ViewItem;\n(function(ViewItem) {\n    // session item groups\n    ViewItem['Participants'] = 'participants';\n    ViewItem['Servers'] = 'servers';\n    ViewItem['Terminals'] = 'terminals';\n    // participants\n    ViewItem['CurrentUser'] = 'participants.currentuser';\n    ViewItem['Guest'] = 'participants.guest';\n    ViewItem['FollowedGuest'] = 'participants.guest.followed';\n    ViewItem['Participant'] = 'participants.participant';\n    ViewItem['FollowedParticipant'] = 'participants.participant.followed';\n    // servers\n    ViewItem['LocalServer'] = 'servers.local';\n    ViewItem['RemoteServer'] = 'servers.remote';\n    // terminals\n    ViewItem['LocalTerminalReadOnly'] = 'terminals.local.readonly';\n    ViewItem['LocalTerminalReadWrite'] = 'terminals.local.readwrite';\n    ViewItem['RemoteTerminal'] = 'terminals.remote';\n    // contacts\n    ViewItem['SuggestedContacts'] = 'contacts.suggested';\n    ViewItem['AvailableContacts'] = 'contacts.available';\n    ViewItem['ContactsProvider'] = 'contacts.provider';\n    ViewItem['ContactsStatus'] = 'contacts.status';\n    ViewItem['Contact'] = 'contacts.contact';\n    // feedback\n    ViewItem['SessionFeedbackQuestion'] = 'feedback.sessionFeedback';\n    ViewItem['ReportAProblem'] = 'feedback.reportAProblem';\n    ViewItem['TweetUsYourFeedback'] = 'feedback.tweetUsYourFeedback';\n    ViewItem['Survey'] = 'feedback.survey';\n    ViewItem['GoodFeedback'] = 'feedback.goodFeedback';\n    ViewItem['BadFeedback'] = 'feedback.badFeedback';\n    ViewItem['DontAskAgain'] = 'feedback.dontAskAgain';\n    ViewItem['Thankyou'] = 'feedback.thankyou';\n    // Shown while session sharing / joining is in progress\n    ViewItem['Loading'] = 'loading';\n    // Other / unspecified item type\n    ViewItem['Other'] = 'other';\n})((ViewItem = exports.ViewItem || (exports.ViewItem = {})));\n\n//# sourceMappingURL=liveShare.js.map\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var days = amount * 7\n  return addDays(dirtyDate, days)\n}\n\nmodule.exports = addWeeks\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n","var parse = require('../parse/index.js')\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nfunction endOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4)\n * )\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4),\n *   {weekStartsOn: 1}\n * )\n * //=> false\n */\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\n}\n\nmodule.exports = isSameWeek\n","module.exports = {\n  addDays: require('./add_days/index.js'),\n  addHours: require('./add_hours/index.js'),\n  addISOYears: require('./add_iso_years/index.js'),\n  addMilliseconds: require('./add_milliseconds/index.js'),\n  addMinutes: require('./add_minutes/index.js'),\n  addMonths: require('./add_months/index.js'),\n  addQuarters: require('./add_quarters/index.js'),\n  addSeconds: require('./add_seconds/index.js'),\n  addWeeks: require('./add_weeks/index.js'),\n  addYears: require('./add_years/index.js'),\n  areRangesOverlapping: require('./are_ranges_overlapping/index.js'),\n  closestIndexTo: require('./closest_index_to/index.js'),\n  closestTo: require('./closest_to/index.js'),\n  compareAsc: require('./compare_asc/index.js'),\n  compareDesc: require('./compare_desc/index.js'),\n  differenceInCalendarDays: require('./difference_in_calendar_days/index.js'),\n  differenceInCalendarISOWeeks: require('./difference_in_calendar_iso_weeks/index.js'),\n  differenceInCalendarISOYears: require('./difference_in_calendar_iso_years/index.js'),\n  differenceInCalendarMonths: require('./difference_in_calendar_months/index.js'),\n  differenceInCalendarQuarters: require('./difference_in_calendar_quarters/index.js'),\n  differenceInCalendarWeeks: require('./difference_in_calendar_weeks/index.js'),\n  differenceInCalendarYears: require('./difference_in_calendar_years/index.js'),\n  differenceInDays: require('./difference_in_days/index.js'),\n  differenceInHours: require('./difference_in_hours/index.js'),\n  differenceInISOYears: require('./difference_in_iso_years/index.js'),\n  differenceInMilliseconds: require('./difference_in_milliseconds/index.js'),\n  differenceInMinutes: require('./difference_in_minutes/index.js'),\n  differenceInMonths: require('./difference_in_months/index.js'),\n  differenceInQuarters: require('./difference_in_quarters/index.js'),\n  differenceInSeconds: require('./difference_in_seconds/index.js'),\n  differenceInWeeks: require('./difference_in_weeks/index.js'),\n  differenceInYears: require('./difference_in_years/index.js'),\n  distanceInWords: require('./distance_in_words/index.js'),\n  distanceInWordsStrict: require('./distance_in_words_strict/index.js'),\n  distanceInWordsToNow: require('./distance_in_words_to_now/index.js'),\n  eachDay: require('./each_day/index.js'),\n  endOfDay: require('./end_of_day/index.js'),\n  endOfHour: require('./end_of_hour/index.js'),\n  endOfISOWeek: require('./end_of_iso_week/index.js'),\n  endOfISOYear: require('./end_of_iso_year/index.js'),\n  endOfMinute: require('./end_of_minute/index.js'),\n  endOfMonth: require('./end_of_month/index.js'),\n  endOfQuarter: require('./end_of_quarter/index.js'),\n  endOfSecond: require('./end_of_second/index.js'),\n  endOfToday: require('./end_of_today/index.js'),\n  endOfTomorrow: require('./end_of_tomorrow/index.js'),\n  endOfWeek: require('./end_of_week/index.js'),\n  endOfYear: require('./end_of_year/index.js'),\n  endOfYesterday: require('./end_of_yesterday/index.js'),\n  format: require('./format/index.js'),\n  getDate: require('./get_date/index.js'),\n  getDay: require('./get_day/index.js'),\n  getDayOfYear: require('./get_day_of_year/index.js'),\n  getDaysInMonth: require('./get_days_in_month/index.js'),\n  getDaysInYear: require('./get_days_in_year/index.js'),\n  getHours: require('./get_hours/index.js'),\n  getISODay: require('./get_iso_day/index.js'),\n  getISOWeek: require('./get_iso_week/index.js'),\n  getISOWeeksInYear: require('./get_iso_weeks_in_year/index.js'),\n  getISOYear: require('./get_iso_year/index.js'),\n  getMilliseconds: require('./get_milliseconds/index.js'),\n  getMinutes: require('./get_minutes/index.js'),\n  getMonth: require('./get_month/index.js'),\n  getOverlappingDaysInRanges: require('./get_overlapping_days_in_ranges/index.js'),\n  getQuarter: require('./get_quarter/index.js'),\n  getSeconds: require('./get_seconds/index.js'),\n  getTime: require('./get_time/index.js'),\n  getYear: require('./get_year/index.js'),\n  isAfter: require('./is_after/index.js'),\n  isBefore: require('./is_before/index.js'),\n  isDate: require('./is_date/index.js'),\n  isEqual: require('./is_equal/index.js'),\n  isFirstDayOfMonth: require('./is_first_day_of_month/index.js'),\n  isFriday: require('./is_friday/index.js'),\n  isFuture: require('./is_future/index.js'),\n  isLastDayOfMonth: require('./is_last_day_of_month/index.js'),\n  isLeapYear: require('./is_leap_year/index.js'),\n  isMonday: require('./is_monday/index.js'),\n  isPast: require('./is_past/index.js'),\n  isSameDay: require('./is_same_day/index.js'),\n  isSameHour: require('./is_same_hour/index.js'),\n  isSameISOWeek: require('./is_same_iso_week/index.js'),\n  isSameISOYear: require('./is_same_iso_year/index.js'),\n  isSameMinute: require('./is_same_minute/index.js'),\n  isSameMonth: require('./is_same_month/index.js'),\n  isSameQuarter: require('./is_same_quarter/index.js'),\n  isSameSecond: require('./is_same_second/index.js'),\n  isSameWeek: require('./is_same_week/index.js'),\n  isSameYear: require('./is_same_year/index.js'),\n  isSaturday: require('./is_saturday/index.js'),\n  isSunday: require('./is_sunday/index.js'),\n  isThisHour: require('./is_this_hour/index.js'),\n  isThisISOWeek: require('./is_this_iso_week/index.js'),\n  isThisISOYear: require('./is_this_iso_year/index.js'),\n  isThisMinute: require('./is_this_minute/index.js'),\n  isThisMonth: require('./is_this_month/index.js'),\n  isThisQuarter: require('./is_this_quarter/index.js'),\n  isThisSecond: require('./is_this_second/index.js'),\n  isThisWeek: require('./is_this_week/index.js'),\n  isThisYear: require('./is_this_year/index.js'),\n  isThursday: require('./is_thursday/index.js'),\n  isToday: require('./is_today/index.js'),\n  isTomorrow: require('./is_tomorrow/index.js'),\n  isTuesday: require('./is_tuesday/index.js'),\n  isValid: require('./is_valid/index.js'),\n  isWednesday: require('./is_wednesday/index.js'),\n  isWeekend: require('./is_weekend/index.js'),\n  isWithinRange: require('./is_within_range/index.js'),\n  isYesterday: require('./is_yesterday/index.js'),\n  lastDayOfISOWeek: require('./last_day_of_iso_week/index.js'),\n  lastDayOfISOYear: require('./last_day_of_iso_year/index.js'),\n  lastDayOfMonth: require('./last_day_of_month/index.js'),\n  lastDayOfQuarter: require('./last_day_of_quarter/index.js'),\n  lastDayOfWeek: require('./last_day_of_week/index.js'),\n  lastDayOfYear: require('./last_day_of_year/index.js'),\n  max: require('./max/index.js'),\n  min: require('./min/index.js'),\n  parse: require('./parse/index.js'),\n  setDate: require('./set_date/index.js'),\n  setDay: require('./set_day/index.js'),\n  setDayOfYear: require('./set_day_of_year/index.js'),\n  setHours: require('./set_hours/index.js'),\n  setISODay: require('./set_iso_day/index.js'),\n  setISOWeek: require('./set_iso_week/index.js'),\n  setISOYear: require('./set_iso_year/index.js'),\n  setMilliseconds: require('./set_milliseconds/index.js'),\n  setMinutes: require('./set_minutes/index.js'),\n  setMonth: require('./set_month/index.js'),\n  setQuarter: require('./set_quarter/index.js'),\n  setSeconds: require('./set_seconds/index.js'),\n  setYear: require('./set_year/index.js'),\n  startOfDay: require('./start_of_day/index.js'),\n  startOfHour: require('./start_of_hour/index.js'),\n  startOfISOWeek: require('./start_of_iso_week/index.js'),\n  startOfISOYear: require('./start_of_iso_year/index.js'),\n  startOfMinute: require('./start_of_minute/index.js'),\n  startOfMonth: require('./start_of_month/index.js'),\n  startOfQuarter: require('./start_of_quarter/index.js'),\n  startOfSecond: require('./start_of_second/index.js'),\n  startOfToday: require('./start_of_today/index.js'),\n  startOfTomorrow: require('./start_of_tomorrow/index.js'),\n  startOfWeek: require('./start_of_week/index.js'),\n  startOfYear: require('./start_of_year/index.js'),\n  startOfYesterday: require('./start_of_yesterday/index.js'),\n  subDays: require('./sub_days/index.js'),\n  subHours: require('./sub_hours/index.js'),\n  subISOYears: require('./sub_iso_years/index.js'),\n  subMilliseconds: require('./sub_milliseconds/index.js'),\n  subMinutes: require('./sub_minutes/index.js'),\n  subMonths: require('./sub_months/index.js'),\n  subQuarters: require('./sub_quarters/index.js'),\n  subSeconds: require('./sub_seconds/index.js'),\n  subWeeks: require('./sub_weeks/index.js'),\n  subYears: require('./sub_years/index.js')\n}\n","module.exports = require(\"crypto\");","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nfunction addHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR)\n}\n\nmodule.exports = addHours\n","var getISOYear = require('../get_iso_year/index.js')\nvar setISOYear = require('../set_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nfunction addISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return setISOYear(dirtyDate, getISOYear(dirtyDate) + amount)\n}\n\nmodule.exports = addISOYears\n","var parse = require('../parse/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year setted\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOYear (dirtyDate, dirtyISOYear) {\n  var date = parse(dirtyDate)\n  var isoYear = Number(dirtyISOYear)\n  var diff = differenceInCalendarDays(date, startOfISOYear(date))\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(isoYear, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  date = startOfISOYear(fourthOfJanuary)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = setISOYear\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nfunction addMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE)\n}\n\nmodule.exports = addMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nfunction addQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var months = amount * 3\n  return addMonths(dirtyDate, months)\n}\n\nmodule.exports = addQuarters\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * 1000)\n}\n\nmodule.exports = addSeconds\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nfunction addYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, amount * 12)\n}\n\nmodule.exports = addYears\n","var getISOYear = require('../get_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nfunction differenceInCalendarISOYears (dirtyDateLeft, dirtyDateRight) {\n  return getISOYear(dirtyDateLeft) - getISOYear(dirtyDateRight)\n}\n\nmodule.exports = differenceInCalendarISOYears\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nfunction getQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var quarter = Math.floor(date.getMonth() / 3) + 1\n  return quarter\n}\n\nmodule.exports = getQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInCalendarYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  return dateLeft.getFullYear() - dateRight.getFullYear()\n}\n\nmodule.exports = differenceInCalendarYears\n","var parse = require('../parse/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n","var addISOYears = require('../add_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nfunction subISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addISOYears(dirtyDate, -amount)\n}\n\nmodule.exports = subISOYears\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar differenceInMonths = require('../difference_in_months/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setDate(date.getDate() + diff)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nfunction isLeapYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0\n}\n\nmodule.exports = isLeapYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n\n  if (day === 0) {\n    day = 7\n  }\n\n  return day\n}\n\nmodule.exports = getISODay\n","var startOfHour = require('../start_of_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 6, 30)\n * )\n * //=> true\n */\nfunction isSameHour (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft)\n  var dateRightStartOfHour = startOfHour(dirtyDateRight)\n\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()\n}\n\nmodule.exports = isSameHour\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nfunction startOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfHour\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 8, 7)\n * )\n * //=> true\n */\nfunction isSameISOWeek (dirtyDateLeft, dirtyDateRight) {\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {weekStartsOn: 1})\n}\n\nmodule.exports = isSameISOWeek\n","var startOfISOYear = require('../start_of_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOYear(\n *   new Date(2003, 11, 29),\n *   new Date(2005, 0, 2)\n * )\n * //=> true\n */\nfunction isSameISOYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfYear = startOfISOYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n\nmodule.exports = isSameISOYear\n","var startOfMinute = require('../start_of_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\nfunction isSameMinute (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft)\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight)\n\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()\n}\n\nmodule.exports = isSameMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nfunction startOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(0, 0)\n  return date\n}\n\nmodule.exports = startOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfQuarter = require('../start_of_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(\n *   new Date(2014, 0, 1),\n *   new Date(2014, 2, 8)\n * )\n * //=> true\n */\nfunction isSameQuarter (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft)\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight)\n\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime()\n}\n\nmodule.exports = isSameQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nfunction startOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3\n  date.setMonth(month, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfQuarter\n","var startOfSecond = require('../start_of_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\nfunction isSameSecond (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft)\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight)\n\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()\n}\n\nmodule.exports = isSameSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nfunction startOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(0)\n  return date\n}\n\nmodule.exports = startOfSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear()\n}\n\nmodule.exports = isSameYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setHours(0, 0, 0, 0)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = lastDayOfWeek\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month setted\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth (dirtyDate, dirtyMonth) {\n  var date = parse(dirtyDate)\n  var month = Number(dirtyMonth)\n  var year = date.getFullYear()\n  var day = date.getDate()\n\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(year, month, 15)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth))\n  return date\n}\n\nmodule.exports = setMonth\n","module.exports = require(\"util\");","'use strict';\n\nvar path = require('path');\nvar which = require('which');\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\n\nfunction resolveCommand(command, noExtension) {\n    var resolved;\n\n    noExtension = !!noExtension;\n    resolved = commandCache.get(command + '!' + noExtension);\n\n    // Check if its resolved in the cache\n    if (commandCache.has(command)) {\n        return commandCache.get(command);\n    }\n\n    try {\n        resolved = !noExtension ?\n            which.sync(command) :\n            which.sync(command, { pathExt: path.delimiter + (process.env.PATHEXT || '') });\n    } catch (e) { /* empty */ }\n\n    commandCache.set(command + '!' + noExtension, resolved);\n\n    return resolved;\n}\n\nmodule.exports = resolveCommand;\n","'use strict'\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\n/* istanbul ignore next */\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n","'use strict';\n\nfunction escapeArgument(arg, quote) {\n    // Convert to string\n    arg = '' + arg;\n\n    // If we are not going to quote the argument,\n    // escape shell metacharacters, including double and single quotes:\n    if (!quote) {\n        arg = arg.replace(/([()%!^<>&|;,\"'\\s])/g, '^$1');\n    } else {\n        // Sequence of backslashes followed by a double quote:\n        // double up all the backslashes and escape the double quote\n        arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n        // Sequence of backslashes followed by the end of the string\n        // (which will become a double quote later):\n        // double up all the backslashes\n        arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n        // All other backslashes occur literally\n\n        // Quote the whole thing:\n        arg = '\"' + arg + '\"';\n    }\n\n    return arg;\n}\n\nmodule.exports = escapeArgument;\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date range overlapping with another date range?\n *\n * @description\n * Is the given date range overlapping with another date range?\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Boolean} whether the date ranges are overlapping\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> false\n */\nfunction areRangesOverlapping (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n}\n\nmodule.exports = areRangesOverlapping\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate, index) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = index\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestIndexTo\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nfunction closestTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = currentDate\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestTo\n","var startOfISOWeek = require('../start_of_iso_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nfunction differenceInCalendarISOWeeks (dirtyDateLeft, dirtyDateRight) {\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft)\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight)\n\n  var timestampLeft = startOfISOWeekLeft.getTime() -\n    startOfISOWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfISOWeekRight.getTime() -\n    startOfISOWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarISOWeeks\n","var getQuarter = require('../get_quarter/index.js')\nvar parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nfunction differenceInCalendarQuarters (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight)\n\n  return yearDiff * 4 + quarterDiff\n}\n\nmodule.exports = differenceInCalendarQuarters\n","var startOfWeek = require('../start_of_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   {weekStartsOn: 1}\n * )\n * //=> 2\n */\nfunction differenceInCalendarWeeks (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  var timestampLeft = startOfWeekLeft.getTime() -\n    startOfWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfWeekRight.getTime() -\n    startOfWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarWeeks\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nfunction differenceInHours (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInHours\n","var parse = require('../parse/index.js')\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\nvar subISOYears = require('../sub_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\n  dateLeft = subISOYears(dateLeft, sign * difference)\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastISOYearNotFull)\n}\n\nmodule.exports = differenceInISOYears\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\nfunction differenceInMinutes (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInMinutes\n","var differenceInMonths = require('../difference_in_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInQuarters (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInQuarters\n","var differenceInDays = require('../difference_in_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 2\n */\nfunction differenceInWeeks (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInWeeks\n","var parse = require('../parse/index.js')\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 1\n */\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastYearNotFull)\n}\n\nmodule.exports = differenceInYears\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_YEAR = 525600\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWordsStrict(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {unit: 'm'}\n * )\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 28 January 2015, in months, rounded up?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 28),\n *   new Date(2015, 0, 1),\n *   {unit: 'M', partialMethod: 'ceil'}\n * )\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsStrict(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var unit\n  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = mathPartial(seconds / 60) - offset\n  var hours, days, months, years\n\n  if (options.unit) {\n    unit = String(options.unit)\n  } else {\n    if (minutes < 1) {\n      unit = 's'\n    } else if (minutes < 60) {\n      unit = 'm'\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'h'\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'd'\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'M'\n    } else {\n      unit = 'Y'\n    }\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 's') {\n    return localize('xSeconds', seconds, localizeOptions)\n\n  // 1 up to 60 mins\n  } else if (unit === 'm') {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 1 up to 24 hours\n  } else if (unit === 'h') {\n    hours = mathPartial(minutes / 60)\n    return localize('xHours', hours, localizeOptions)\n\n  // 1 up to 30 days\n  } else if (unit === 'd') {\n    days = mathPartial(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 up to 12 months\n  } else if (unit === 'M') {\n    months = mathPartial(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', months, localizeOptions)\n\n  // 1 year up to max Date\n  } else if (unit === 'Y') {\n    years = mathPartial(minutes / MINUTES_IN_YEAR)\n    return localize('xYears', years, localizeOptions)\n  }\n\n  throw new Error('Unknown unit: ' + unit)\n}\n\nmodule.exports = distanceInWordsStrict\n","var distanceInWords = require('../distance_in_words/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nfunction endOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfHour\n","var endOfWeek = require('../end_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfISOWeek (dirtyDate) {\n  return endOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = endOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear)\n  date.setMilliseconds(date.getMilliseconds() - 1)\n  return date\n}\n\nmodule.exports = endOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nfunction endOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(59, 999)\n  return date\n}\n\nmodule.exports = endOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nfunction endOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(999)\n  return date\n}\n\nmodule.exports = endOfSecond\n","var endOfDay = require('../end_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of today.\n *\n * @description\n * Return the end of today.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday () {\n  return endOfDay(new Date())\n}\n\nmodule.exports = endOfToday\n","/**\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n *\n * @description\n * Return the end of tomorrow.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nfunction endOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nfunction endOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYear\n","/**\n * @category Day Helpers\n * @summary Return the end of yesterday.\n *\n * @description\n * Return the end of yesterday.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYesterday\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate (dirtyDate) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = date.getDate()\n  return dayOfMonth\n}\n\nmodule.exports = getDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n","var isLeapYear = require('../is_leap_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear (dirtyDate) {\n  return isLeapYear(dirtyDate) ? 366 : 365\n}\n\nmodule.exports = getDaysInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nfunction getHours (dirtyDate) {\n  var date = parse(dirtyDate)\n  var hours = date.getHours()\n  return hours\n}\n\nmodule.exports = getHours\n","var startOfISOYear = require('../start_of_iso_year/index.js')\nvar addWeeks = require('../add_weeks/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nfunction getMilliseconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var milliseconds = date.getMilliseconds()\n  return milliseconds\n}\n\nmodule.exports = getMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nfunction getMinutes (dirtyDate) {\n  var date = parse(dirtyDate)\n  var minutes = date.getMinutes()\n  return minutes\n}\n\nmodule.exports = getMinutes\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var parse = require('../parse/index.js')\n\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @category Range Helpers\n * @summary Get the number of days that overlap in two date ranges\n *\n * @description\n * Get the number of days that overlap in two date ranges\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Number} the number of days that overlap in two date ranges\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges adds 1 for each started overlapping day:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping date ranges returns 0:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> 0\n */\nfunction getOverlappingDaysInRanges (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  var isOverlapping = initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n\n  if (!isOverlapping) {\n    return 0\n  }\n\n  var overlapStartDate = comparedStartTime < initialStartTime\n    ? initialStartTime\n    : comparedStartTime\n\n  var overlapEndDate = comparedEndTime > initialEndTime\n    ? initialEndTime\n    : comparedEndTime\n\n  var differenceInMs = overlapEndDate - overlapStartDate\n\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = getOverlappingDaysInRanges\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the seconds\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nfunction getSeconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var seconds = date.getSeconds()\n  return seconds\n}\n\nmodule.exports = getSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the year\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nfunction getYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year\n}\n\nmodule.exports = getYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() > dateToCompare.getTime()\n}\n\nmodule.exports = isAfter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual (dirtyLeftDate, dirtyRightDate) {\n  var dateLeft = parse(dirtyLeftDate)\n  var dateRight = parse(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\nmodule.exports = isEqual\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nfunction isFirstDayOfMonth (dirtyDate) {\n  return parse(dirtyDate).getDate() === 1\n}\n\nmodule.exports = isFirstDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nfunction isFriday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 5\n}\n\nmodule.exports = isFriday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the future?\n *\n * @description\n * Is the given date in the future?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture (dirtyDate) {\n  return parse(dirtyDate).getTime() > new Date().getTime()\n}\n\nmodule.exports = isFuture\n","var parse = require('../parse/index.js')\nvar endOfDay = require('../end_of_day/index.js')\nvar endOfMonth = require('../end_of_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nfunction isLastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  return endOfDay(date).getTime() === endOfMonth(date).getTime()\n}\n\nmodule.exports = isLastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isMonday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 1\n}\n\nmodule.exports = isMonday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nfunction isSaturday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 6\n}\n\nmodule.exports = isSaturday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nfunction isSunday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 0\n}\n\nmodule.exports = isSunday\n","var isSameHour = require('../is_same_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nfunction isThisHour (dirtyDate) {\n  return isSameHour(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisHour\n","var isSameISOWeek = require('../is_same_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isThisISOWeek (dirtyDate) {\n  return isSameISOWeek(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOWeek\n","var isSameISOYear = require('../is_same_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Is the given date in the same ISO week-numbering year as the current date?\n *\n * @description\n * Is the given date in the same ISO week-numbering year as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week-numbering year\n *\n * @example\n * // If today is 25 September 2014,\n * // is 30 December 2013 in this ISO week-numbering year?\n * var result = isThisISOYear(new Date(2013, 11, 30))\n * //=> true\n */\nfunction isThisISOYear (dirtyDate) {\n  return isSameISOYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOYear\n","var isSameMinute = require('../is_same_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nfunction isThisMinute (dirtyDate) {\n  return isSameMinute(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMinute\n","var isSameMonth = require('../is_same_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nfunction isThisMonth (dirtyDate) {\n  return isSameMonth(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMonth\n","var isSameQuarter = require('../is_same_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisQuarter (dirtyDate) {\n  return isSameQuarter(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisQuarter\n","var isSameSecond = require('../is_same_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nfunction isThisSecond (dirtyDate) {\n  return isSameSecond(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisSecond\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), {weekStartsOn: 1})\n * //=> false\n */\nfunction isThisWeek (dirtyDate, dirtyOptions) {\n  return isSameWeek(new Date(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = isThisWeek\n","var isSameYear = require('../is_same_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisYear (dirtyDate) {\n  return isSameYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nfunction isThursday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 4\n}\n\nmodule.exports = isThursday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow (dirtyDate) {\n  var tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(tomorrow).getTime()\n}\n\nmodule.exports = isTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nfunction isTuesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 2\n}\n\nmodule.exports = isTuesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nfunction isWednesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 3\n}\n\nmodule.exports = isWednesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nfunction isWeekend (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day === 0 || day === 6\n}\n\nmodule.exports = isWeekend\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date within the range?\n *\n * @description\n * Is the given date within the range?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Date|String|Number} startDate - the start of range\n * @param {Date|String|Number} endDate - the end of range\n * @returns {Boolean} the date is within the range\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // For the date within the range:\n * isWithinRange(\n *   new Date(2014, 0, 3), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> true\n *\n * @example\n * // For the date outside of the range:\n * isWithinRange(\n *   new Date(2014, 0, 10), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> false\n */\nfunction isWithinRange (dirtyDate, dirtyStartDate, dirtyEndDate) {\n  var time = parse(dirtyDate).getTime()\n  var startTime = parse(dirtyStartDate).getTime()\n  var endTime = parse(dirtyEndDate).getTime()\n\n  if (startTime > endTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return time >= startTime && time <= endTime\n}\n\nmodule.exports = isWithinRange\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date yesterday?\n *\n * @description\n * Is the given date yesterday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday (dirtyDate) {\n  var yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(yesterday).getTime()\n}\n\nmodule.exports = isYesterday\n","var lastDayOfWeek = require('../last_day_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfISOWeek (dirtyDate) {\n  return lastDayOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = lastDayOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year + 1, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  date.setDate(date.getDate() - 1)\n  return date\n}\n\nmodule.exports = lastDayOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a quarter\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a year\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nfunction lastDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month setted\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction setDate (dirtyDate, dirtyDayOfMonth) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = Number(dirtyDayOfMonth)\n  date.setDate(dayOfMonth)\n  return date\n}\n\nmodule.exports = setDate\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year setted\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nfunction setDayOfYear (dirtyDate, dirtyDayOfYear) {\n  var date = parse(dirtyDate)\n  var dayOfYear = Number(dirtyDayOfYear)\n  date.setMonth(0)\n  date.setDate(dayOfYear)\n  return date\n}\n\nmodule.exports = setDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours setted\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nfunction setHours (dirtyDate, dirtyHours) {\n  var date = parse(dirtyDate)\n  var hours = Number(dirtyHours)\n  date.setHours(hours)\n  return date\n}\n\nmodule.exports = setHours\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\nvar getISODay = require('../get_iso_day/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setISODay (dirtyDate, dirtyDay) {\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = getISODay(date)\n  var diff = day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setISODay\n","var parse = require('../parse/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week setted\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nfunction setISOWeek (dirtyDate, dirtyISOWeek) {\n  var date = parse(dirtyDate)\n  var isoWeek = Number(dirtyISOWeek)\n  var diff = getISOWeek(date) - isoWeek\n  date.setDate(date.getDate() - diff * 7)\n  return date\n}\n\nmodule.exports = setISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds setted\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nfunction setMilliseconds (dirtyDate, dirtyMilliseconds) {\n  var date = parse(dirtyDate)\n  var milliseconds = Number(dirtyMilliseconds)\n  date.setMilliseconds(milliseconds)\n  return date\n}\n\nmodule.exports = setMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes setted\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nfunction setMinutes (dirtyDate, dirtyMinutes) {\n  var date = parse(dirtyDate)\n  var minutes = Number(dirtyMinutes)\n  date.setMinutes(minutes)\n  return date\n}\n\nmodule.exports = setMinutes\n","var parse = require('../parse/index.js')\nvar setMonth = require('../set_month/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter setted\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nfunction setQuarter (dirtyDate, dirtyQuarter) {\n  var date = parse(dirtyDate)\n  var quarter = Number(dirtyQuarter)\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1\n  var diff = quarter - oldQuarter\n  return setMonth(date, date.getMonth() + diff * 3)\n}\n\nmodule.exports = setQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds setted\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nfunction setSeconds (dirtyDate, dirtySeconds) {\n  var date = parse(dirtyDate)\n  var seconds = Number(dirtySeconds)\n  date.setSeconds(seconds)\n  return date\n}\n\nmodule.exports = setSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year setted\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear (dirtyDate, dirtyYear) {\n  var date = parse(dirtyDate)\n  var year = Number(dirtyYear)\n  date.setFullYear(year)\n  return date\n}\n\nmodule.exports = setYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","/**\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n *\n * @description\n * Return the start of tomorrow.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nfunction startOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfTomorrow\n","/**\n * @category Day Helpers\n * @summary Return the start of yesterday.\n *\n * @description\n * Return the start of yesterday.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nfunction startOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYesterday\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nfunction subDays (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addDays(dirtyDate, -amount)\n}\n\nmodule.exports = subDays\n","var addHours = require('../add_hours/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nfunction subHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addHours(dirtyDate, -amount)\n}\n\nmodule.exports = subHours\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n\nmodule.exports = subMilliseconds\n","var addMinutes = require('../add_minutes/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the mintues subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nfunction subMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMinutes(dirtyDate, -amount)\n}\n\nmodule.exports = subMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","var addQuarters = require('../add_quarters/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nfunction subQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addQuarters(dirtyDate, -amount)\n}\n\nmodule.exports = subQuarters\n","var addSeconds = require('../add_seconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nfunction subSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addSeconds(dirtyDate, -amount)\n}\n\nmodule.exports = subSeconds\n","var addWeeks = require('../add_weeks/index.js')\n\n/**\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nfunction subWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addWeeks(dirtyDate, -amount)\n}\n\nmodule.exports = subWeeks\n","var addYears = require('../add_years/index.js')\n\n/**\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nfunction subYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addYears(dirtyDate, -amount)\n}\n\nmodule.exports = subYears\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","'use strict';\nconst execa = require('execa');\n\nconst handler = err => {\n\tif (err.code === 'ENOENT') {\n\t\tthrow new Error('Couldn\\'t find the termux-api scripts. You can install them with: apt install termux-api');\n\t}\n\n\tthrow err;\n};\n\nmodule.exports = {\n\tcopy: opts => execa('termux-clipboard-set', opts).catch(handler),\n\tpaste: opts => execa.stdout('termux-clipboard-get', opts).catch(handler),\n\tcopySync: opts => {\n\t\ttry {\n\t\t\treturn execa.sync('termux-clipboard-set', opts);\n\t\t} catch (err) {\n\t\t\thandler(err);\n\t\t}\n\t},\n\tpasteSync: opts => {\n\t\ttry {\n\t\t\treturn execa.sync('termux-clipboard-get', opts);\n\t\t} catch (err) {\n\t\t\thandler(err);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar cp = require('child_process');\nvar parse = require('./lib/parse');\nvar enoent = require('./lib/enoent');\n\nvar cpSpawnSync = cp.spawnSync;\n\nfunction spawn(command, args, options) {\n    var parsed;\n    var spawned;\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    var parsed;\n    var result;\n\n    if (!cpSpawnSync) {\n        try {\n            cpSpawnSync = require('spawn-sync');  // eslint-disable-line global-require\n        } catch (ex) {\n            throw new Error(\n                'In order to use spawnSync on node 0.10 or older, you must ' +\n                'install spawn-sync:\\n\\n' +\n                '  npm install spawn-sync --save'\n            );\n        }\n    }\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    result = cpSpawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n","'use strict';\n\nvar resolveCommand = require('./util/resolveCommand');\nvar hasEmptyArgumentBug = require('./util/hasEmptyArgumentBug');\nvar escapeArgument = require('./util/escapeArgument');\nvar escapeCommand = require('./util/escapeCommand');\nvar readShebang = require('./util/readShebang');\n\nvar isWin = process.platform === 'win32';\nvar skipShellRegExp = /\\.(?:com|exe)$/i;\n\n// Supported in Node >= 6 and >= 4.8\nvar supportsShellOption = parseInt(process.version.substr(1).split('.')[0], 10) >= 6 ||\n parseInt(process.version.substr(1).split('.')[0], 10) === 4 && parseInt(process.version.substr(1).split('.')[1], 10) >= 8;\n\nfunction parseNonShell(parsed) {\n    var shebang;\n    var needsShell;\n    var applyQuotes;\n\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    parsed.file = resolveCommand(parsed.command);\n    parsed.file = parsed.file || resolveCommand(parsed.command, true);\n    shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n        needsShell = hasEmptyArgumentBug || !skipShellRegExp.test(resolveCommand(shebang) || resolveCommand(shebang, true));\n    } else {\n        needsShell = hasEmptyArgumentBug || !skipShellRegExp.test(parsed.file);\n    }\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    if (needsShell) {\n        // Escape command & arguments\n        applyQuotes = (parsed.command !== 'echo');  // Do not quote arguments for the special \"echo\" command\n        parsed.command = escapeCommand(parsed.command);\n        parsed.args = parsed.args.map(function (arg) {\n            return escapeArgument(arg, applyQuotes);\n        });\n\n        // Make use of cmd.exe\n        parsed.args = ['/d', '/s', '/c', '\"' + parsed.command + (parsed.args.length ? ' ' + parsed.args.join(' ') : '') + '\"'];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true;  // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parseShell(parsed) {\n    var shellCommand;\n\n    // If node supports the shell option, there's no need to mimic its behavior\n    if (supportsShellOption) {\n        return parsed;\n    }\n\n    // Mimic node shell option, see: https://github.com/nodejs/node/blob/b9f6a2dc059a1062776133f3d4fd848c4da7d150/lib/child_process.js#L335\n    shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n    if (isWin) {\n        parsed.command = typeof parsed.options.shell === 'string' ? parsed.options.shell : process.env.comspec || 'cmd.exe';\n        parsed.args = ['/d', '/s', '/c', '\"' + shellCommand + '\"'];\n        parsed.options.windowsVerbatimArguments = true;  // Tell node's spawn that the arguments are already escaped\n    } else {\n        if (typeof parsed.options.shell === 'string') {\n            parsed.command = parsed.options.shell;\n        } else if (process.platform === 'android') {\n            parsed.command = '/system/bin/sh';\n        } else {\n            parsed.command = '/bin/sh';\n        }\n\n        parsed.args = ['-c', shellCommand];\n    }\n\n    return parsed;\n}\n\n// ------------------------------------------------\n\nfunction parse(command, args, options) {\n    var parsed;\n\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : [];  // Clone array to avoid changing the original\n    options = options || {};\n\n    // Build our parsed object\n    parsed = {\n        command: command,\n        args: args,\n        options: options,\n        file: undefined,\n        original: command,\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parseShell(parsed) : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n","module.exports = which\nwhich.sync = whichSync\n\nvar isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nvar path = require('path')\nvar COLON = isWindows ? ';' : ':'\nvar isexe = require('isexe')\n\nfunction getNotFoundError (cmd) {\n  var er = new Error('not found: ' + cmd)\n  er.code = 'ENOENT'\n\n  return er\n}\n\nfunction getPathInfo (cmd, opt) {\n  var colon = opt.colon || COLON\n  var pathEnv = opt.path || process.env.PATH || ''\n  var pathExt = ['']\n\n  pathEnv = pathEnv.split(colon)\n\n  var pathExtExe = ''\n  if (isWindows) {\n    pathEnv.unshift(process.cwd())\n    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')\n    pathExt = pathExtExe.split(colon)\n\n\n    // Always test the cmd itself first.  isexe will check to make sure\n    // it's found in the pathExt set.\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  if (cmd.match(/\\//) || isWindows && cmd.match(/\\\\/))\n    pathEnv = ['']\n\n  return {\n    env: pathEnv,\n    ext: pathExt,\n    extExe: pathExtExe\n  }\n}\n\nfunction which (cmd, opt, cb) {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  ;(function F (i, l) {\n    if (i === l) {\n      if (opt.all && found.length)\n        return cb(null, found)\n      else\n        return cb(getNotFoundError(cmd))\n    }\n\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && (/^\\.[\\\\\\/]/).test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    ;(function E (ii, ll) {\n      if (ii === ll) return F(i + 1, l)\n      var ext = pathExt[ii]\n      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {\n        if (!er && is) {\n          if (opt.all)\n            found.push(p + ext)\n          else\n            return cb(null, p + ext)\n        }\n        return E(ii + 1, ll)\n      })\n    })(0, pathExt.length)\n  })(0, pathEnv.length)\n}\n\nfunction whichSync (cmd, opt) {\n  opt = opt || {}\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  for (var i = 0, l = pathEnv.length; i < l; i ++) {\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && /^\\.[\\\\\\/]/.test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    for (var j = 0, ll = pathExt.length; j < ll; j ++) {\n      var cur = p + pathExt[j]\n      var is\n      try {\n        is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n","var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict';\n\n// See: https://github.com/IndigoUnited/node-cross-spawn/pull/34#issuecomment-221623455\nfunction hasEmptyArgumentBug() {\n    var nodeVer;\n\n    if (process.platform !== 'win32') {\n        return false;\n    }\n\n    nodeVer = process.version.substr(1).split('.').map(function (num) {\n        return parseInt(num, 10);\n    });\n\n    return (nodeVer[0] === 0 && nodeVer[1] < 12);\n}\n\nmodule.exports = hasEmptyArgumentBug();\n","'use strict';\n\nvar escapeArgument = require('./escapeArgument');\n\nfunction escapeCommand(command) {\n    // Do not escape if this command is not dangerous..\n    // We do this so that commands like \"echo\" or \"ifconfig\" work\n    // Quoting them, will make them unaccessible\n    return /^[a-z0-9_-]+$/i.test(command) ? command : escapeArgument(command, true);\n}\n\nmodule.exports = escapeCommand;\n","'use strict';\n\nvar fs = require('fs');\nvar LRU = require('lru-cache');\nvar shebangCommand = require('shebang-command');\n\nvar shebangCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\n\nfunction readShebang(command) {\n    var buffer;\n    var fd;\n    var shebang;\n\n    // Check if it is in the cache first\n    if (shebangCache.has(command)) {\n        return shebangCache.get(command);\n    }\n\n    // Read the first 150 bytes from the file\n    buffer = new Buffer(150);\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, 150, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    shebang = shebangCommand(buffer.toString());\n\n    // Store the shebang in the cache\n    shebangCache.set(command, shebang);\n\n    return shebang;\n}\n\nmodule.exports = readShebang;\n","'use strict';\nvar shebangRegex = require('shebang-regex');\n\nmodule.exports = function (str) {\n\tvar match = str.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tvar arr = match[0].replace(/#! ?/, '').split(' ');\n\tvar bin = arr[0].split('/').pop();\n\tvar arg = arr[1];\n\n\treturn (bin === 'env' ?\n\t\targ :\n\t\tbin + (arg ? ' ' + arg : '')\n\t);\n};\n","'use strict';\nmodule.exports = /^#!.*/;\n","'use strict';\n\nvar isWin = process.platform === 'win32';\nvar resolveCommand = require('./util/resolveCommand');\n\nvar isNode10 = process.version.indexOf('v0.10.') === 0;\n\nfunction notFoundError(command, syscall) {\n    var err;\n\n    err = new Error(syscall + ' ' + command + ' ENOENT');\n    err.code = err.errno = 'ENOENT';\n    err.syscall = syscall + ' ' + command;\n\n    return err;\n}\n\nfunction hookChildProcess(cp, parsed) {\n    var originalEmit;\n\n    if (!isWin) {\n        return;\n    }\n\n    originalEmit = cp.emit;\n    cp.emit = function (name, arg1) {\n        var err;\n\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments);\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    // If we are in node 10, then we are using spawn-sync; if it exited\n    // with -1 it probably means that the command does not exist\n    if (isNode10 && status === -1) {\n        parsed.file = isWin ? parsed.file : resolveCommand(parsed.original);\n\n        if (!parsed.file) {\n            return notFoundError(parsed.original, 'spawnSync');\n        }\n    }\n\n    return null;\n}\n\nmodule.exports.hookChildProcess = hookChildProcess;\nmodule.exports.verifyENOENT = verifyENOENT;\nmodule.exports.verifyENOENTSync = verifyENOENTSync;\nmodule.exports.notFoundError = notFoundError;\n","'use strict';\nmodule.exports = function (x) {\n\tvar lf = typeof x === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tvar cr = typeof x === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (x[x.length - 1] === lf) {\n\t\tx = x.slice(0, x.length - 1);\n\t}\n\n\tif (x[x.length - 1] === cr) {\n\t\tx = x.slice(0, x.length - 1);\n\t}\n\n\treturn x;\n};\n","'use strict';\nconst path = require('path');\nconst pathKey = require('path-key');\n\nmodule.exports = opts => {\n\topts = Object.assign({\n\t\tcwd: process.cwd(),\n\t\tpath: process.env[pathKey()]\n\t}, opts);\n\n\tlet prev;\n\tlet pth = path.resolve(opts.cwd);\n\tconst ret = [];\n\n\twhile (prev !== pth) {\n\t\tret.push(path.join(pth, 'node_modules/.bin'));\n\t\tprev = pth;\n\t\tpth = path.resolve(pth, '..');\n\t}\n\n\t// ensure the running `node` binary is used\n\tret.push(path.dirname(process.execPath));\n\n\treturn ret.concat(opts.path).join(path.delimiter);\n};\n\nmodule.exports.env = opts => {\n\topts = Object.assign({\n\t\tenv: process.env\n\t}, opts);\n\n\tconst env = Object.assign({}, opts.env);\n\tconst path = pathKey({env});\n\n\topts.path = env[path];\n\tenv[path] = module.exports(opts);\n\n\treturn env;\n};\n","'use strict';\nmodule.exports = opts => {\n\topts = opts || {};\n\n\tconst env = opts.env || process.env;\n\tconst platform = opts.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).find(x => x.toUpperCase() === 'PATH') || 'Path';\n};\n","'use strict';\n\nvar isStream = module.exports = function (stream) {\n\treturn stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';\n};\n\nisStream.writable = function (stream) {\n\treturn isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';\n};\n\nisStream.readable = function (stream) {\n\treturn isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';\n};\n\nisStream.duplex = function (stream) {\n\treturn isStream.writable(stream) && isStream.readable(stream);\n};\n\nisStream.transform = function (stream) {\n\treturn isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';\n};\n","'use strict';\nconst bufferStream = require('./buffer-stream');\n\nfunction getStream(inputStream, opts) {\n\tif (!inputStream) {\n\t\treturn Promise.reject(new Error('Expected a stream'));\n\t}\n\n\topts = Object.assign({maxBuffer: Infinity}, opts);\n\n\tconst maxBuffer = opts.maxBuffer;\n\tlet stream;\n\tlet clean;\n\n\tconst p = new Promise((resolve, reject) => {\n\t\tconst error = err => {\n\t\t\tif (err) { // null check\n\t\t\t\terr.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(err);\n\t\t};\n\n\t\tstream = bufferStream(opts);\n\t\tinputStream.once('error', error);\n\t\tinputStream.pipe(stream);\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\treject(new Error('maxBuffer exceeded'));\n\t\t\t}\n\t\t});\n\t\tstream.once('error', error);\n\t\tstream.on('end', resolve);\n\n\t\tclean = () => {\n\t\t\t// some streams doesn't implement the `stream.Readable` interface correctly\n\t\t\tif (inputStream.unpipe) {\n\t\t\t\tinputStream.unpipe(stream);\n\t\t\t}\n\t\t};\n\t});\n\n\tp.then(clean, clean);\n\n\treturn p.then(() => stream.getBufferedValue());\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, opts) => getStream(stream, Object.assign({}, opts, {encoding: 'buffer'}));\nmodule.exports.array = (stream, opts) => getStream(stream, Object.assign({}, opts, {array: true}));\n","'use strict';\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = opts => {\n\topts = Object.assign({}, opts);\n\n\tconst array = opts.array;\n\tlet encoding = opts.encoding;\n\tconst buffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || buffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (buffer) {\n\t\tencoding = null;\n\t}\n\n\tlet len = 0;\n\tconst ret = [];\n\tconst stream = new PassThrough({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tstream.on('data', chunk => {\n\t\tret.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlen = ret.length;\n\t\t} else {\n\t\t\tlen += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn buffer ? Buffer.concat(ret, len) : ret.join('');\n\t};\n\n\tstream.getBufferedLength = () => len;\n\n\treturn stream;\n};\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\nvar assert = require('assert')\nvar signals = require('./signals.js')\n\nvar EE = require('events')\n/* istanbul ignore if */\nif (typeof EE !== 'function') {\n  EE = EE.EventEmitter\n}\n\nvar emitter\nif (process.__signal_exit_emitter__) {\n  emitter = process.__signal_exit_emitter__\n} else {\n  emitter = process.__signal_exit_emitter__ = new EE()\n  emitter.count = 0\n  emitter.emitted = {}\n}\n\n// Because this emitter is a global, we have to check to see if a\n// previous version of this library failed to enable infinite listeners.\n// I know what you're about to say.  But literally everything about\n// signal-exit is a compromise with evil.  Get used to it.\nif (!emitter.infinite) {\n  emitter.setMaxListeners(Infinity)\n  emitter.infinite = true\n}\n\nmodule.exports = function (cb, opts) {\n  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n  if (loaded === false) {\n    load()\n  }\n\n  var ev = 'exit'\n  if (opts && opts.alwaysLast) {\n    ev = 'afterexit'\n  }\n\n  var remove = function () {\n    emitter.removeListener(ev, cb)\n    if (emitter.listeners('exit').length === 0 &&\n        emitter.listeners('afterexit').length === 0) {\n      unload()\n    }\n  }\n  emitter.on(ev, cb)\n\n  return remove\n}\n\nmodule.exports.unload = unload\nfunction unload () {\n  if (!loaded) {\n    return\n  }\n  loaded = false\n\n  signals.forEach(function (sig) {\n    try {\n      process.removeListener(sig, sigListeners[sig])\n    } catch (er) {}\n  })\n  process.emit = originalProcessEmit\n  process.reallyExit = originalProcessReallyExit\n  emitter.count -= 1\n}\n\nfunction emit (event, code, signal) {\n  if (emitter.emitted[event]) {\n    return\n  }\n  emitter.emitted[event] = true\n  emitter.emit(event, code, signal)\n}\n\n// { <signal>: <listener fn>, ... }\nvar sigListeners = {}\nsignals.forEach(function (sig) {\n  sigListeners[sig] = function listener () {\n    // If there are no other listeners, an exit is coming!\n    // Simplest way: remove us and then re-send the signal.\n    // We know that this will kill the process, so we can\n    // safely emit now.\n    var listeners = process.listeners(sig)\n    if (listeners.length === emitter.count) {\n      unload()\n      emit('exit', null, sig)\n      /* istanbul ignore next */\n      emit('afterexit', null, sig)\n      /* istanbul ignore next */\n      process.kill(process.pid, sig)\n    }\n  }\n})\n\nmodule.exports.signals = function () {\n  return signals\n}\n\nmodule.exports.load = load\n\nvar loaded = false\n\nfunction load () {\n  if (loaded) {\n    return\n  }\n  loaded = true\n\n  // This is the number of onSignalExit's that are in play.\n  // It's important so that we can count the correct number of\n  // listeners on signals, and don't wait for the other one to\n  // handle it instead of us.\n  emitter.count += 1\n\n  signals = signals.filter(function (sig) {\n    try {\n      process.on(sig, sigListeners[sig])\n      return true\n    } catch (er) {\n      return false\n    }\n  })\n\n  process.emit = processEmit\n  process.reallyExit = processReallyExit\n}\n\nvar originalProcessReallyExit = process.reallyExit\nfunction processReallyExit (code) {\n  process.exitCode = code || 0\n  emit('exit', process.exitCode, null)\n  /* istanbul ignore next */\n  emit('afterexit', process.exitCode, null)\n  /* istanbul ignore next */\n  originalProcessReallyExit.call(process, process.exitCode)\n}\n\nvar originalProcessEmit = process.emit\nfunction processEmit (ev, arg) {\n  if (ev === 'exit') {\n    if (arg !== undefined) {\n      process.exitCode = arg\n    }\n    var ret = originalProcessEmit.apply(this, arguments)\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    return ret\n  } else {\n    return originalProcessEmit.apply(this, arguments)\n  }\n}\n","module.exports = require(\"assert\");","// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n","module.exports = require(\"events\");","'use strict';\n// The Node team wants to deprecate `process.bind(...)`.\n//   https://github.com/nodejs/node/pull/2768\n//\n// However, we need the 'uv' binding for errname support.\n// This is a defensive wrapper around it so `execa` will not fail entirely if it stops working someday.\n//\n// If this ever stops working. See: https://github.com/sindresorhus/execa/issues/31#issuecomment-215939939 for another possible solution.\nlet uv;\n\ntry {\n\tuv = process.binding('uv');\n\n\tif (typeof uv.errname !== 'function') {\n\t\tthrow new TypeError('uv.errname is not a function');\n\t}\n} catch (err) {\n\tconsole.error('execa/lib/errname: unable to establish process.binding(\\'uv\\')', err);\n\tuv = null;\n}\n\nfunction errname(uv, code) {\n\tif (uv) {\n\t\treturn uv.errname(code);\n\t}\n\n\tif (!(code < 0)) {\n\t\tthrow new Error('err >= 0');\n\t}\n\n\treturn `Unknown system error ${code}`;\n}\n\nmodule.exports = code => errname(uv, code);\n\n// Used for testing the fallback behavior\nmodule.exports.__test__ = errname;\n","'use strict';\nconst alias = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = opts => alias.some(x => Boolean(opts[x]));\n\nmodule.exports = opts => {\n\tif (!opts) {\n\t\treturn null;\n\t}\n\n\tif (opts.stdio && hasAlias(opts)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${alias.map(x => `\\`${x}\\``).join(', ')}`);\n\t}\n\n\tif (typeof opts.stdio === 'string') {\n\t\treturn opts.stdio;\n\t}\n\n\tconst stdio = opts.stdio || [];\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst result = [];\n\tconst len = Math.max(stdio.length, alias.length);\n\n\tfor (let i = 0; i < len; i++) {\n\t\tlet value = null;\n\n\t\tif (stdio[i] !== undefined) {\n\t\t\tvalue = stdio[i];\n\t\t} else if (opts[alias[i]] !== undefined) {\n\t\t\tvalue = opts[alias[i]];\n\t\t}\n\n\t\tresult[i] = value;\n\t}\n\n\treturn result;\n};\n","'use strict';\nconst path = require('path');\nconst execa = require('execa');\n\nconst handler = err => {\n\tif (err.code === 'ENOENT') {\n\t\tthrow new Error('Couldn\\'t find the required `xsel` binary. On Debian/Ubuntu you can install it with: sudo apt install xsel');\n\t}\n\n\tthrow err;\n};\n\nconst xsel = path.join(__dirname, '../fallbacks/linux/xsel');\n\nmodule.exports = {\n\tcopy: opts => {\n\t\treturn execa(xsel, ['--clipboard', '--input'], opts)\n\t\t\t.catch(() => execa('xsel', ['--clipboard', '--input'], opts))\n\t\t\t.catch(handler);\n\t},\n\tpaste: opts => {\n\t\treturn execa.stdout(xsel, ['--clipboard', '--output'], opts)\n\t\t\t.catch(() => execa.stdout('xsel', ['--clipboard', '--output'], opts))\n\t\t\t.catch(handler);\n\t},\n\tcopySync: opts => {\n\t\ttry {\n\t\t\treturn execa.sync(xsel, ['--clipboard', '--input'], opts);\n\t\t} catch (err) {\n\t\t\ttry {\n\t\t\t\treturn execa.sync('xsel', ['--clipboard', '--input'], opts);\n\t\t\t} catch (err) {\n\t\t\t\thandler(err);\n\t\t\t}\n\t\t}\n\t},\n\tpasteSync: opts => {\n\t\ttry {\n\t\t\treturn execa.sync(xsel, ['--clipboard', '--output'], opts);\n\t\t} catch (err) {\n\t\t\ttry {\n\t\t\t\treturn execa.sync('xsel', ['--clipboard', '--output'], opts);\n\t\t\t} catch (err) {\n\t\t\t\thandler(err);\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\nconst execa = require('execa');\n\nconst env = Object.assign({}, process.env, {LC_CTYPE: 'UTF-8'});\n\nmodule.exports = {\n\tcopy: opts => execa('pbcopy', Object.assign({}, opts, {env})),\n\tpaste: opts => execa.stdout('pbpaste', Object.assign({}, opts, {env})),\n\tcopySync: opts => execa.sync('pbcopy', Object.assign({}, opts, {env})),\n\tpasteSync: opts => execa.sync('pbpaste', Object.assign({}, opts, {env}))\n};\n","'use strict';\nconst path = require('path');\nconst execa = require('execa');\nconst arch = require('arch');\n\n// Binaries from: https://github.com/sindresorhus/win-clipboard\nconst winBinPath = arch() === 'x64' ?\n\tpath.join(__dirname, '../fallbacks/windows/clipboard_x86_64.exe') :\n\tpath.join(__dirname, '../fallbacks/windows/clipboard_i686.exe');\n\nmodule.exports = {\n\tcopy: opts => execa(winBinPath, ['--copy'], opts),\n\tpaste: opts => execa.stdout(winBinPath, ['--paste'], opts),\n\tcopySync: opts => execa.sync(winBinPath, ['--copy'], opts),\n\tpasteSync: opts => execa.sync(winBinPath, ['--paste'], opts)\n};\n","var cp = require('child_process')\nvar fs = require('fs')\nvar path = require('path')\n\n/**\n * Returns the operating system's CPU architecture. This is different than\n * `process.arch` or `os.arch()` which returns the architecture the Node.js (or\n * Electron) binary was compiled for.\n */\nmodule.exports = function arch () {\n  /**\n   * The running binary is 64-bit, so the OS is clearly 64-bit.\n   */\n  if (process.arch === 'x64') {\n    return 'x64'\n  }\n\n  /**\n   * All recent versions of Mac OS are 64-bit.\n   */\n  if (process.platform === 'darwin') {\n    return 'x64'\n  }\n\n  /**\n   * On Windows, the most reliable way to detect a 64-bit OS from within a 32-bit\n   * app is based on the presence of a WOW64 file: %SystemRoot%\\SysNative.\n   * See: https://twitter.com/feross/status/776949077208510464\n   */\n  if (process.platform === 'win32') {\n    var useEnv = false\n    try {\n      useEnv = !!(process.env.SYSTEMROOT && fs.statSync(process.env.SYSTEMROOT))\n    } catch (err) {}\n\n    var sysRoot = useEnv ? process.env.SYSTEMROOT : 'C:\\\\Windows'\n\n    // If %SystemRoot%\\SysNative exists, we are in a WOW64 FS Redirected application.\n    var isWOW64 = false\n    try {\n      isWOW64 = !!fs.statSync(path.join(sysRoot, 'sysnative'))\n    } catch (err) {}\n\n    return isWOW64 ? 'x64' : 'x86'\n  }\n\n  /**\n   * On Linux, use the `getconf` command to get the architecture.\n   */\n  if (process.platform === 'linux') {\n    var output = cp.execSync('getconf LONG_BIT', {encoding: 'utf8'})\n    return output === '64\\n' ? 'x64' : 'x86'\n  }\n\n  /**\n   * If none of the above, assume the architecture is 32-bit.\n   */\n  return 'x86'\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\nimport { TextDocument, TextEditor, Uri } from 'vscode';\n\nabstract class Comparer<T> {\n    abstract equals(lhs: T, rhs: T): boolean;\n}\n\nclass UriComparer extends Comparer<Uri> {\n    equals(lhs: Uri | undefined, rhs: Uri | undefined) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;\n    }\n}\n\nclass TextDocumentComparer extends Comparer<TextDocument> {\n    equals(lhs: TextDocument | undefined, rhs: TextDocument | undefined) {\n        return lhs === rhs;\n        // if (lhs === rhs) return true;\n        // if (lhs === undefined || rhs === undefined) return false;\n\n        // return uriComparer.equals(lhs.uri, rhs.uri);\n    }\n}\n\nclass TextEditorComparer extends Comparer<TextEditor> {\n    equals(\n        lhs: TextEditor | undefined,\n        rhs: TextEditor | undefined,\n        options: { useId: boolean; usePosition: boolean } = { useId: false, usePosition: false }\n    ) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.usePosition && lhs.viewColumn !== rhs.viewColumn) return false;\n\n        if (options.useId && (!lhs.document || !rhs.document)) {\n            if ((lhs as any).id !== (rhs as any).id) return false;\n\n            return true;\n        }\n\n        return textDocumentComparer.equals(lhs.document, rhs.document);\n    }\n}\n\nconst textDocumentComparer = new TextDocumentComparer();\nconst textEditorComparer = new TextEditorComparer();\nconst uriComparer = new UriComparer();\nexport {\n    textDocumentComparer as TextDocumentComparer,\n    textEditorComparer as TextEditorComparer,\n    uriComparer as UriComparer\n};\n","'use strict';\n\nexport interface Config {\n    blame: {\n        avatars: boolean;\n        compact: boolean;\n        dateFormat: string | null;\n        format: string;\n        heatmap: {\n            enabled: boolean;\n            location: 'left' | 'right';\n        };\n        highlight: {\n            enabled: boolean;\n            locations: HighlightLocations[];\n        };\n        ignoreWhitespace: boolean;\n        separateLines: boolean;\n        toggleMode: AnnotationsToggleMode;\n    };\n    currentLine: {\n        scrollable: boolean;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n    };\n    codeLens: CodeLensConfig;\n    debug: boolean;\n    defaultDateFormat: string | null;\n    defaultDateStyle: DateStyle;\n    defaultGravatarsStyle: GravatarDefaultStyle;\n    heatmap: {\n        ageThreshold: number;\n        coldColor: string;\n        hotColor: string;\n        toggleMode: AnnotationsToggleMode;\n    };\n    hovers: {\n        annotations: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        currentLine: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        avatars: boolean;\n        enabled: boolean;\n    };\n    insiders: boolean;\n    keymap: KeyMap;\n    liveshare: {\n        allowGuestAccess: boolean;\n    };\n    menus: boolean | MenuConfig;\n    mode: {\n        active: string;\n        statusBar: {\n            enabled: boolean;\n            alignment: 'left' | 'right';\n        };\n    };\n    modes: { [key: string]: ModeConfig };\n    outputLevel: LogLevel;\n    recentChanges: {\n        highlight: {\n            locations: HighlightLocations[];\n        };\n        toggleMode: AnnotationsToggleMode;\n    };\n    remotes: RemotesConfig[];\n    showWhatsNewAfterUpgrades: boolean;\n    statusBar: {\n        alignment: 'left' | 'right';\n        command: StatusBarCommand;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        reduceFlicker: boolean;\n    };\n    strings: {\n        codeLens: {\n            unsavedChanges: {\n                recentChangeAndAuthors: string;\n                recentChangeOnly: string;\n                authorsOnly: string;\n            };\n        };\n    };\n    views: ViewsConfig;\n    advanced: AdvancedConfig;\n}\n\nexport enum AnnotationsToggleMode {\n    File = 'file',\n    Window = 'window'\n}\n\nexport enum CodeLensCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum CodeLensScopes {\n    Document = 'document',\n    Containers = 'containers',\n    Blocks = 'blocks'\n}\n\nexport enum CustomRemoteType {\n    Bitbucket = 'Bitbucket',\n    BitbucketServer = 'BitbucketServer',\n    Custom = 'Custom',\n    GitHub = 'GitHub',\n    GitLab = 'GitLab'\n}\n\nexport enum DateStyle {\n    Absolute = 'absolute',\n    Relative = 'relative'\n}\n\nexport enum FileAnnotationType {\n    Blame = 'blame',\n    Heatmap = 'heatmap',\n    RecentChanges = 'recentChanges'\n}\n\nexport enum GravatarDefaultStyle {\n    Faces = 'wavatar',\n    Geometric = 'identicon',\n    Monster = 'monsterid',\n    MysteryPerson = 'mp',\n    Retro = 'retro',\n    Robot = 'robohash'\n}\n\nexport enum HighlightLocations {\n    Gutter = 'gutter',\n    Line = 'line',\n    Overview = 'overview'\n}\n\nexport enum KeyMap {\n    Alternate = 'alternate',\n    Chorded = 'chorded',\n    None = 'none'\n}\n\nexport enum LogLevel {\n    Silent = 'silent',\n    Errors = 'errors',\n    Verbose = 'verbose',\n    Debug = 'debug'\n}\n\nexport enum StatusBarCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum ViewBranchesLayout {\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewFilesLayout {\n    Auto = 'auto',\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport interface AdvancedConfig {\n    blame: {\n        customArguments: string[] | null;\n        delayAfterEdit: number;\n        sizeThresholdAfterEdit: number;\n    };\n    caching: {\n        enabled: boolean;\n    };\n    fileHistoryFollowsRenames: boolean;\n    maxListItems: number;\n    messages: {\n        suppressCommitHasNoPreviousCommitWarning: boolean;\n        suppressCommitNotFoundWarning: boolean;\n        suppressFileNotUnderSourceControlWarning: boolean;\n        suppressGitDisabledWarning: boolean;\n        suppressGitVersionWarning: boolean;\n        suppressLineUncommittedWarning: boolean;\n        suppressNoRepositoryWarning: boolean;\n        suppressSupportGitLensNotification: boolean;\n    };\n    quickPick: {\n        closeOnFocusOut: boolean;\n    };\n    repositorySearchDepth: number;\n    telemetry: {\n        enabled: boolean;\n    };\n}\n\nexport interface CodeLensConfig {\n    authors: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    enabled: boolean;\n    includeSingleLineSymbols: boolean;\n    recentChange: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    scopes: CodeLensScopes[];\n    scopesByLanguage: CodeLensLanguageScope[];\n    symbolScopes: string[];\n}\n\nexport interface CodeLensLanguageScope {\n    language: string | undefined;\n    scopes?: CodeLensScopes[];\n    symbolScopes?: string[];\n}\n\nexport interface CompareViewConfig {\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface FileHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface LineHistoryViewConfig extends FileHistoryViewConfig {}\n\nexport interface MenuConfig {\n    editor:\n        | false\n        | {\n              blame: boolean;\n              clipboard: boolean;\n              compare: boolean;\n              details: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    editorGroup:\n        | false\n        | {\n              compare: boolean;\n              history: boolean;\n          };\n    editorTab:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    explorer:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    scmGroup:\n        | false\n        | {\n              compare: boolean;\n              openClose: boolean;\n              stash: boolean;\n              stashInline: boolean;\n          };\n    scmItem:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n              stash: boolean;\n          };\n}\n\nexport interface ModeConfig {\n    name: string;\n    statusBarItemName?: string;\n    description?: string;\n    codeLens?: boolean;\n    currentLine?: boolean;\n    hovers?: boolean;\n    statusBar?: boolean;\n    views?: boolean;\n}\n\nexport interface RemotesConfig {\n    domain: string;\n    name?: string;\n    protocol?: string;\n    type: CustomRemoteType;\n    urls?: RemotesUrlsConfig;\n}\n\nexport interface RemotesUrlsConfig {\n    repository: string;\n    branches: string;\n    branch: string;\n    commit: string;\n    file: string;\n    fileInBranch: string;\n    fileInCommit: string;\n    fileLine: string;\n    fileRange: string;\n}\n\nexport interface RepositoriesViewConfig {\n    autoRefresh: boolean;\n    autoReveal: boolean;\n    branches: {\n        layout: ViewBranchesLayout;\n    };\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    includeWorkingTree: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n    showTrackingBranch: boolean;\n}\n\nexport interface SearchViewConfig {\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface ViewsConfig {\n    avatars: boolean;\n    fileHistory: FileHistoryViewConfig;\n    files: {\n        layout: ViewFilesLayout;\n        compact: boolean;\n        threshold: number;\n    };\n    commitFileFormat: string;\n    commitFormat: string;\n    compare: CompareViewConfig;\n    // dateFormat: string | null;\n    defaultItemLimit: number;\n    lineHistory: LineHistoryViewConfig;\n    repositories: RepositoriesViewConfig;\n    search: SearchViewConfig;\n    stashFileFormat: string;\n    stashFormat: string;\n    statusFileFormat: string;\n}\n\nexport interface ViewsFilesConfig {\n    compact: boolean;\n    layout: ViewFilesLayout;\n    threshold: number;\n}\n","'use strict';\nimport { commands, TextDocument, TextEditor, window } from 'vscode';\n\nexport const applicationInsightsKey = 'a9c302f8-6483-4d01-b92c-c159c799c679';\nexport const extensionId = 'gitlens';\nexport const extensionOutputChannelName = 'GitLens';\nexport const extensionQualifiedId = `eamodio.${extensionId}`;\nexport const extensionTerminalName = 'GitLens';\n\nexport enum BuiltInCommands {\n    CloseActiveEditor = 'workbench.action.closeActiveEditor',\n    CloseAllEditors = 'workbench.action.closeAllEditors',\n    CursorMove = 'cursorMove',\n    Diff = 'vscode.diff',\n    EditorScroll = 'editorScroll',\n    ExecuteDocumentSymbolProvider = 'vscode.executeDocumentSymbolProvider',\n    ExecuteCodeLensProvider = 'vscode.executeCodeLensProvider',\n    FocusFilesExplorer = 'workbench.files.action.focusFilesExplorer',\n    Open = 'vscode.open',\n    OpenFolder = 'vscode.openFolder',\n    NextEditor = 'workbench.action.nextEditor',\n    PreviewHtml = 'vscode.previewHtml',\n    RevealLine = 'revealLine',\n    SetContext = 'setContext',\n    ShowExplorerActivity = 'workbench.view.explorer',\n    ShowReferences = 'editor.action.showReferences'\n}\n\nexport enum CommandContext {\n    ActiveFileStatus = 'gitlens:activeFileStatus',\n    AnnotationStatus = 'gitlens:annotationStatus',\n    CanToggleCodeLens = 'gitlens:canToggleCodeLens',\n    Enabled = 'gitlens:enabled',\n    HasRemotes = 'gitlens:hasRemotes',\n    Key = 'gitlens:key',\n    Readonly = 'gitlens:readonly',\n    ViewsCanCompare = 'gitlens:views:canCompare',\n    ViewsCanCompareFile = 'gitlens:views:canCompare:file',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsHideSupportGitLens = 'gitlens:views:supportGitLens:hide',\n    ViewsFileHistoryEditorFollowing = 'gitlens:views:fileHistory:editorFollowing',\n    ViewsLineHistoryEditorFollowing = 'gitlens:views:lineHistory:editorFollowing',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n\nexport function setCommandContext(key: CommandContext | string, value: any) {\n    return commands.executeCommand(BuiltInCommands.SetContext, key, value);\n}\n\nexport enum DocumentSchemes {\n    DebugConsole = 'debug',\n    File = 'file',\n    Git = 'git',\n    GitLens = 'gitlens',\n    Output = 'output',\n    Vsls = 'vsls'\n}\n\nexport function getEditorIfActive(document: TextDocument): TextEditor | undefined {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document ? editor : undefined;\n}\n\nexport function isActiveDocument(document: TextDocument): boolean {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document;\n}\n\nexport function isTextEditor(editor: TextEditor): boolean {\n    const scheme = editor.document.uri.scheme;\n    return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;\n}\n\nexport enum GlyphChars {\n    AngleBracketLeftHeavy = '\\u2770',\n    AngleBracketRightHeavy = '\\u2771',\n    ArrowBack = '\\u21a9',\n    ArrowDown = '\\u2193',\n    ArrowDropRight = '\\u2937',\n    ArrowHeadRight = '\\u27A4',\n    ArrowLeft = '\\u2190',\n    ArrowLeftDouble = '\\u21d0',\n    ArrowLeftRight = '\\u2194',\n    ArrowLeftRightDouble = '\\u21d4',\n    ArrowLeftRightDoubleStrike = '\\u21ce',\n    ArrowLeftRightLong = '\\u27f7',\n    ArrowRight = '\\u2192',\n    ArrowRightDouble = '\\u21d2',\n    ArrowRightHollow = '\\u21e8',\n    ArrowUp = '\\u2191',\n    ArrowUpRight = '\\u2197',\n    ArrowsHalfLeftRight = '\\u21cb',\n    ArrowsHalfRightLeft = '\\u21cc',\n    ArrowsLeftRight = '\\u21c6',\n    ArrowsRightLeft = '\\u21c4',\n    Asterisk = '\\u2217',\n    Check = '\\u2713',\n    Dash = '\\u2014',\n    Dot = '\\u2022',\n    Ellipsis = '\\u2026',\n    EnDash = '\\u2013',\n    MiddleEllipsis = '\\u22EF',\n    MuchGreaterThan = '\\u226A',\n    MuchLessThan = '\\u22D8',\n    Pencil = '\\u270E',\n    Space = '\\u00a0',\n    SpaceThin = '\\u2009',\n    SpaceThinnest = '\\u200A',\n    SquareWithBottomShadow = '\\u274F',\n    SquareWithTopShadow = '\\u2750',\n    ZeroWidthSpace = '\\u200b'\n}\n\nexport enum GlobalState {\n    GitLensVersion = 'gitlensVersion'\n}\n\nexport const ImageMimetypes: { [key: string]: string } = {\n    '.png': 'image/png',\n    '.gif': 'image/gif',\n    '.jpg': 'image/jpeg',\n    '.jpeg': 'image/jpeg',\n    '.jpe': 'image/jpeg',\n    '.webp': 'image/webp',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.bmp': 'image/bmp'\n};\n\nexport enum WorkspaceState {\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n","'use strict';\n\nexport namespace Objects {\n    export function entries<T>(o: { [key: string]: T }): IterableIterator<[string, T]>;\n    export function entries<T>(o: { [key: number]: T }): IterableIterator<[string, T]>;\n    export function* entries<T>(o: any): IterableIterator<[string, T]> {\n        for (const key in o) {\n            yield [key, o[key]];\n        }\n    }\n\n    export function flatten(o: any, prefix: string = '', stringify: boolean = false): { [key: string]: any } {\n        const flattened = Object.create(null);\n        _flatten(flattened, prefix, o, stringify);\n        return flattened;\n    }\n\n    function _flatten(flattened: { [key: string]: any }, key: string, value: any, stringify: boolean = false) {\n        if (Object(value) !== value) {\n            if (stringify) {\n                if (value == null) {\n                    flattened[key] = null;\n                }\n                else if (typeof value === 'string') {\n                    flattened[key] = value;\n                }\n                else {\n                    flattened[key] = JSON.stringify(value);\n                }\n            }\n            else {\n                flattened[key] = value;\n            }\n        }\n        else if (Array.isArray(value)) {\n            const len = value.length;\n            for (let i = 0; i < len; i++) {\n                _flatten(flattened, `${key}[${i}]`, value[i], stringify);\n            }\n            if (len === 0) {\n                flattened[key] = null;\n            }\n        }\n        else {\n            let isEmpty = true;\n            for (const p in value) {\n                isEmpty = false;\n                _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);\n            }\n            if (isEmpty && key) {\n                flattened[key] = null;\n            }\n        }\n    }\n\n    export function paths(o: { [key: string]: any }, path?: string): string[] {\n        const results = [];\n\n        for (const key in o) {\n            const child = o[key];\n            if (typeof child === 'object') {\n                results.push(...paths(child, path === undefined ? key : `${path}.${key}`));\n            }\n            else {\n                results.push(path === undefined ? key : `${path}.${key}`);\n            }\n        }\n\n        return results;\n    }\n\n    export function values<T>(o: { [key: string]: T }): IterableIterator<T>;\n    export function values<T>(o: { [key: number]: T }): IterableIterator<T>;\n    export function* values<T>(o: any): IterableIterator<T> {\n        for (const key in o) {\n            yield o[key];\n        }\n    }\n}\n","'use strict';\nimport { Objects } from './object';\n\nexport namespace Arrays {\n    export function countUniques<T>(source: T[], accessor: (item: T) => string): { [key: string]: number } {\n        const uniqueCounts = Object.create(null);\n        for (const item of source) {\n            const value = accessor(item);\n            uniqueCounts[value] = (uniqueCounts[value] || 0) + 1;\n        }\n        return uniqueCounts;\n    }\n\n    export function filterMap<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => TMapped | null | undefined\n    ): TMapped[] {\n        return source.reduce(\n            (accumulator, current) => {\n                const mapped = predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as TMapped[]\n        );\n    }\n\n    export async function filterMapAsync<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => Promise<TMapped | null | undefined>\n    ): Promise<TMapped[]> {\n        return source.reduce(\n            async (accumulator, current) => {\n                const mapped = await predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as any\n        );\n    }\n\n    export function groupBy<T>(source: T[], accessor: (item: T) => string): { [key: string]: T[] } {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            groupings[value] = groupings[value] || [];\n            groupings[value].push(current);\n            return groupings;\n        }, Object.create(null));\n    }\n\n    export function groupByMap<TKey, TValue>(source: TValue[], accessor: (item: TValue) => TKey): Map<TKey, TValue[]> {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            const group = groupings.get(value) || [];\n            groupings.set(value, group);\n            group.push(current);\n            return groupings;\n        }, new Map<TKey, TValue[]>());\n    }\n\n    export function groupByFilterMap<TKey, TValue, TMapped>(\n        source: TValue[],\n        accessor: (item: TValue) => TKey,\n        predicateMapper: (item: TValue) => TMapped | null | undefined\n    ): Map<TKey, TMapped[]> {\n        return source.reduce((groupings, current) => {\n            const mapped = predicateMapper(current);\n            if (mapped != null) {\n                const value = accessor(current);\n                const group = groupings.get(value) || [];\n                groupings.set(value, group);\n                group.push(mapped);\n            }\n            return groupings;\n        }, new Map<TKey, TMapped[]>());\n    }\n\n    export interface IHierarchicalItem<T> {\n        name: string;\n        relativePath: string;\n        value?: T;\n\n        // parent?: IHierarchicalItem<T>;\n        children: { [key: string]: IHierarchicalItem<T> } | undefined;\n        descendants: T[] | undefined;\n    }\n\n    export function makeHierarchical<T>(\n        values: T[],\n        splitPath: (i: T) => string[],\n        joinPath: (...paths: string[]) => string,\n        compact: boolean = false\n    ): IHierarchicalItem<T> {\n        const seed = {\n            name: '',\n            relativePath: '',\n            children: Object.create(null),\n            descendants: []\n        };\n\n        const hierarchy = values.reduce((root: IHierarchicalItem<T>, value) => {\n            let folder = root;\n\n            let relativePath = '';\n            for (const folderName of splitPath(value)) {\n                relativePath = joinPath(relativePath, folderName);\n\n                if (folder.children === undefined) {\n                    folder.children = Object.create(null);\n                }\n\n                let f = folder.children![folderName];\n                if (f === undefined) {\n                    folder.children![folderName] = f = {\n                        name: folderName,\n                        relativePath: relativePath,\n                        // parent: folder,\n                        children: undefined,\n                        descendants: undefined\n                    };\n                }\n\n                if (folder.descendants === undefined) {\n                    folder.descendants = [];\n                }\n                folder.descendants.push(value);\n                folder = f;\n            }\n\n            folder.value = value;\n\n            return root;\n        }, seed);\n\n        if (compact) return compactHierarchy(hierarchy, joinPath, true);\n        return hierarchy;\n    }\n\n    export function compactHierarchy<T>(\n        root: IHierarchicalItem<T>,\n        joinPath: (...paths: string[]) => string,\n        isRoot: boolean = true\n    ): IHierarchicalItem<T> {\n        if (root.children === undefined) return root;\n\n        const children = [...Objects.values(root.children)];\n\n        // // Attempts less nesting but duplicate roots\n        // if (!isRoot && children.every(c => c.value === undefined)) {\n        //     const parentSiblings = root.parent!.children!;\n        //     if (parentSiblings[root.name] !== undefined) {\n        //         delete parentSiblings[root.name];\n\n        //         for (const child of children) {\n        //             child.name = joinPath(root.name, child.name);\n        //             parentSiblings[child.name] = child;\n        //         }\n        //     }\n        // }\n\n        for (const child of children) {\n            compactHierarchy(child, joinPath, false);\n        }\n\n        if (!isRoot && children.length === 1) {\n            const child = children[0];\n            if (child.value === undefined) {\n                root.name = joinPath(root.name, child.name);\n                root.relativePath = child.relativePath;\n                root.children = child.children;\n            }\n        }\n\n        return root;\n    }\n\n    export function uniqueBy<T>(source: T[], accessor: (item: T) => any, predicate?: (item: T) => boolean): T[] {\n        const uniqueValues = Object.create(null);\n        return source.filter(item => {\n            const value = accessor(item);\n            if (uniqueValues[value]) return false;\n\n            uniqueValues[value] = accessor;\n            return predicate ? predicate(item) : true;\n        });\n    }\n}\n","'use strict';\nimport { distanceInWordsToNow as _fromNow, format as _format } from 'date-fns';\nimport * as en from 'date-fns/locale/en';\n\n// Taken from https://github.com/date-fns/date-fns/blob/601bc8e5708cbaebee5389bdaf51c2b4b33b73c4/src/locale/en/build_distance_in_words_locale/index.js\nfunction buildDistanceInWordsLocale() {\n    const distanceInWordsLocale: { [key: string]: string | { one: string; other: string } } = {\n        lessThanXSeconds: {\n            one: 'less than a second',\n            other: 'less than {{count}} seconds'\n        },\n\n        xSeconds: {\n            one: '1 second',\n            other: '{{count}} seconds'\n        },\n\n        halfAMinute: 'half a minute',\n\n        lessThanXMinutes: {\n            one: 'a few seconds',\n            other: 'less than {{count}} minutes'\n        },\n\n        xMinutes: {\n            one: 'a minute',\n            other: '{{count}} minutes'\n        },\n\n        aboutXHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xDays: {\n            one: 'a day',\n            other: '{{count}} days'\n        },\n\n        aboutXMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        xMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        aboutXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        xYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        overXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        almostXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        }\n    };\n\n    function localize(token: string, count: number, options: any) {\n        options = options || {};\n\n        if (count === 12 && token === 'xMonths') {\n            token = 'aboutXYears';\n            count = 1;\n        }\n\n        const result = distanceInWordsLocale[token];\n\n        let value: string;\n        if (typeof result === 'string') {\n            value = result;\n        }\n        else {\n            if (count === 1) {\n                value = result.one;\n            }\n            else {\n                value = result.other.replace('{{count}}', count.toString());\n            }\n        }\n\n        if (!options.addSuffix) return value;\n\n        if (options.comparison > 0) return 'in ' + value;\n\n        return value + ' ago';\n    }\n\n    return {\n        localize: localize\n    };\n}\n\n// Monkey patch the locale to customize the wording\nconst patch = en as any;\npatch.distanceInWords = buildDistanceInWordsLocale();\n\nconst formatterOptions = { addSuffix: true, locale: patch };\n\nexport namespace Dates {\n    export const MillisecondsPerMinute = 60000; // 60 * 1000\n    export const MillisecondsPerHour = 3600000; // 60 * 60 * 1000\n    export const MillisecondsPerDay = 86400000; // 24 * 60 * 60 * 1000\n\n    export interface IDateFormatter {\n        fromNow(): string;\n        format(format: string): string;\n    }\n\n    export function dateDaysFromNow(date: Date, now: number = Date.now()) {\n        const startOfDayLeft = startOfDay(now);\n        const startOfDayRight = startOfDay(date);\n\n        const timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MillisecondsPerMinute;\n        const timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MillisecondsPerMinute;\n\n        return Math.round((timestampLeft - timestampRight) / MillisecondsPerDay);\n    }\n\n    export function startOfDay(date: Date | number) {\n        const newDate = new Date(typeof date === 'number' ? date : date.getTime());\n        newDate.setHours(0, 0, 0, 0);\n        return newDate;\n    }\n\n    export function toFormatter(date: Date): IDateFormatter {\n        return {\n            fromNow: () => {\n                return _fromNow(date, formatterOptions);\n            },\n            format: (format: string) => _format(date, format)\n        };\n    }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n","import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n","'use strict';\nimport { debounce as _debounce, once as _once } from 'lodash-es';\nimport { CancellationToken, Disposable } from 'vscode';\n\nexport interface IDeferrable {\n    cancel(): void;\n    flush(...args: any[]): void;\n    pending?(): boolean;\n}\n\ninterface IPropOfValue {\n    (): any;\n    value: string | undefined;\n}\n\nexport namespace Functions {\n    export function cachedOnce<T>(fn: (...args: any[]) => Promise<T>, seed: T): (...args: any[]) => Promise<T> {\n        let cached: T | undefined = seed;\n        return (...args: any[]) => {\n            if (cached !== undefined) {\n                const promise = Promise.resolve(cached);\n                cached = undefined;\n\n                return promise;\n            }\n            return fn(...args);\n        };\n    }\n\n    export function cancellable<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            token.onCancellationRequested(() => resolve(undefined));\n\n            promise.then(resolve, reject);\n        });\n    }\n\n    export function debounce<T extends (...args: any[]) => any>(\n        fn: T,\n        wait?: number,\n        options?: { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean }\n    ): T & IDeferrable {\n        const { track, ...opts } = {\n            track: false,\n            ...(options || {})\n        } as { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean };\n\n        if (track !== true) return _debounce(fn, wait, opts);\n\n        let pending = false;\n\n        const debounced = _debounce(\n            (function(this: any, ...args: any[]) {\n                pending = false;\n                return fn.apply(this, args);\n            } as any) as T,\n            wait,\n            options\n        ) as T & IDeferrable;\n\n        const tracked = (function(this: any, ...args: any[]) {\n            pending = true;\n            return debounced.apply(this, args);\n        } as any) as T & IDeferrable;\n\n        tracked.pending = function() {\n            return pending;\n        };\n        tracked.cancel = function() {\n            return debounced.cancel.apply(debounced);\n        };\n        tracked.flush = function(...args: any[]) {\n            return debounced.flush.apply(debounced, args);\n        };\n\n        return tracked;\n    }\n\n    const comma = ',';\n    const empty = '';\n    const equals = '=';\n    const openBrace = '{';\n    const openParen = '(';\n    const closeParen = ')';\n\n    const fnBodyRegex = /\\(([\\s\\S]*)\\)/;\n    const fnBodyStripCommentsRegex = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/gm;\n    const fnBodyStripParamDefaultValueRegex = /\\s?=.*$/;\n\n    export function getParameters(fn: Function): string[] {\n        if (typeof fn !== 'function') throw new Error('Not supported');\n\n        if (fn.length === 0) return [];\n\n        let fnBody: string = Function.prototype.toString.call(fn);\n        fnBody = fnBody.replace(fnBodyStripCommentsRegex, empty) || fnBody;\n        fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));\n\n        let open = fnBody.indexOf(openParen);\n        let close = fnBody.indexOf(closeParen);\n\n        open = open >= 0 ? open + 1 : 0;\n        close = close > 0 ? close : fnBody.indexOf(equals);\n\n        fnBody = fnBody.slice(open, close);\n        fnBody = `(${fnBody})`;\n\n        const match = fnBody.match(fnBodyRegex);\n        return match != null\n            ? match[1].split(comma).map(param => param.trim().replace(fnBodyStripParamDefaultValueRegex, empty))\n            : [];\n    }\n\n    export function isPromise(o: any): o is Promise<any> {\n        return (typeof o === 'object' || typeof o === 'function') && typeof o.then === 'function';\n    }\n\n    export function once<T extends (...args: any[]) => any>(fn: T): T {\n        return _once(fn);\n    }\n\n    export function propOf<T, K extends Extract<keyof T, string>>(o: T, key: K) {\n        const propOfCore = <T, K extends Extract<keyof T, string>>(o: T, key: K) => {\n            const value: string =\n                (propOfCore as IPropOfValue).value === undefined ? key : `${(propOfCore as IPropOfValue).value}.${key}`;\n            (propOfCore as IPropOfValue).value = value;\n            const fn = <Y extends Extract<keyof T[K], string>>(k: Y) => propOfCore(o[key], k);\n            return Object.assign(fn, { value: value });\n        };\n        return propOfCore(o, key);\n    }\n\n    export function interval(fn: (...args: any[]) => void, ms: number): Disposable {\n        let timer: NodeJS.Timer | undefined;\n        const disposable = {\n            dispose: () => {\n                if (timer !== undefined) {\n                    clearInterval(timer);\n                    timer = undefined;\n                }\n            }\n        };\n        timer = setInterval(fn, ms);\n\n        return disposable;\n    }\n\n    export async function wait(ms: number) {\n        await new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    export async function waitUntil(fn: (...args: any[]) => boolean, timeout: number): Promise<boolean> {\n        const max = Math.round(timeout / 100);\n        let counter = 0;\n        while (true) {\n            if (fn()) return true;\n            if (counter > max) return false;\n\n            await wait(100);\n            counter++;\n        }\n    }\n}\n","'use strict';\nimport { Functions } from '../function';\n\nexport function gate() {\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const gateKey = `$gate$${key}`;\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            if (!this.hasOwnProperty(gateKey)) {\n                Object.defineProperty(this, gateKey, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                });\n            }\n\n            let promise = this[gateKey];\n            if (promise === undefined) {\n                const result = fn!.apply(this, args);\n                if (result == null || !Functions.isPromise(result)) {\n                    return result;\n                }\n\n                this[gateKey] = promise = result.then((r: any) => {\n                    this[gateKey] = undefined;\n                    return r;\n                });\n            }\n\n            return promise;\n        };\n    };\n}\n","'use strict';\nimport { createHash, HexBase64Latin1Encoding } from 'crypto';\n\nexport namespace Strings {\n    export const enum CharCode {\n        /**\n         * The `/` character.\n         */\n        Slash = 47,\n        /**\n         * The `\\` character.\n         */\n        Backslash = 92\n    }\n\n    export function getDurationMilliseconds(start: [number, number]) {\n        const [secs, nanosecs] = process.hrtime(start);\n        return secs * 1000 + Math.floor(nanosecs / 1000000);\n    }\n\n    const pathNormalizeRegex = /\\\\/g;\n    const pathStripTrailingSlashRegex = /\\/$/g;\n    const tokenRegex = /\\$\\{(\\W*)?([^|]*?)(?:\\|(\\d+)(\\-|\\?)?)?(\\W*)?\\}/g;\n    const tokenSanitizeRegex = /\\$\\{(?:\\W*)?(\\w*?)(?:[\\W\\d]*)\\}/g;\n\n    export interface ITokenOptions {\n        collapseWhitespace: boolean;\n        padDirection: 'left' | 'right';\n        prefix: string | undefined;\n        suffix: string | undefined;\n        truncateTo: number | undefined;\n    }\n\n    export function getTokensFromTemplate(template: string) {\n        const tokens: { key: string; options: ITokenOptions }[] = [];\n\n        let match = tokenRegex.exec(template);\n        while (match != null) {\n            const [, prefix, key, truncateTo, option, suffix] = match;\n            tokens.push({\n                key: key,\n                options: {\n                    collapseWhitespace: option === '?',\n                    padDirection: option === '-' ? 'left' : 'right',\n                    prefix: prefix,\n                    suffix: suffix,\n                    truncateTo: truncateTo == null ? undefined : parseInt(truncateTo, 10)\n                }\n            });\n            match = tokenRegex.exec(template);\n        }\n\n        return tokens;\n    }\n\n    export function interpolate(template: string, context: object | undefined): string {\n        if (!template) return template;\n        if (context === undefined) return template.replace(tokenSanitizeRegex, '');\n\n        template = template.replace(tokenSanitizeRegex, '$${this.$1}');\n        return new Function(`return \\`${template}\\`;`).call(context);\n    }\n\n    export function* lines(s: string): IterableIterator<string> {\n        let i = 0;\n        while (i < s.length) {\n            let j = s.indexOf('\\n', i);\n            if (j === -1) {\n                j = s.length;\n            }\n\n            yield s.substring(i, j);\n            i = j + 1;\n        }\n    }\n\n    export function md5(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('md5')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function normalizePath(\n        fileName: string,\n        options: { addLeadingSlash?: boolean; stripTrailingSlash?: boolean } = { stripTrailingSlash: true }\n    ) {\n        if (fileName == null || fileName.length === 0) return fileName;\n\n        let normalized = fileName.replace(pathNormalizeRegex, '/');\n\n        const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };\n\n        if (stripTrailingSlash) {\n            normalized = normalized.replace(pathStripTrailingSlashRegex, '');\n        }\n\n        if (addLeadingSlash && normalized.charCodeAt(0) !== CharCode.Slash) {\n            normalized = `/${normalized}`;\n        }\n\n        return normalized;\n    }\n\n    export function pad(s: string, before: number = 0, after: number = 0, padding: string = `\\u00a0`) {\n        if (before === 0 && after === 0) return s;\n\n        return `${before === 0 ? '' : padding.repeat(before)}${s}${after === 0 ? '' : padding.repeat(after)}`;\n    }\n\n    export function padLeft(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : padding.repeat(diff) + s;\n    }\n\n    export function padLeftOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padLeft(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRight(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : s + padding.repeat(diff);\n    }\n\n    export function padOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        const left = max < 0;\n        max = Math.abs(max);\n\n        width = width || getWidth(s);\n        if (width < max) return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRightOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max);\n        return s;\n    }\n\n    export function pluralize(\n        s: string,\n        count: number,\n        options?: { number?: string; plural?: string; suffix?: string; zero?: string }\n    ) {\n        if (options === undefined) return `${count} ${s}${count === 1 ? '' : 's'}`;\n\n        return `${count === 0 ? options.zero || count : options.number || count} ${\n            count === 1 ? s : options.plural || `${s}${options.suffix || 's'}`\n        }`;\n    }\n\n    // Removes \\ / : * ? \" < > | and C0 and C1 control codes\n    const illegalCharsForFSRegex = /[\\\\/:*?\"<>|\\x00-\\x1f\\x80-\\x9f]/g;\n\n    export function sanitizeForFileSystem(s: string, replacement: string = '_') {\n        if (!s) return s;\n        return s.replace(illegalCharsForFSRegex, replacement);\n    }\n\n    export function sha1(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('sha1')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function truncate(s: string, truncateTo: number, ellipsis: string = '\\u2026', width?: number) {\n        if (!s) return s;\n\n        width = width || getWidth(s);\n        if (width <= truncateTo) return s;\n        if (width === s.length) return `${s.substring(0, truncateTo - 1)}${ellipsis}`;\n\n        // Skip ahead to start as far as we can by assuming all the double-width characters won't be truncated\n        let chars = Math.floor(truncateTo / (width / s.length));\n        let count = getWidth(s.substring(0, chars));\n        while (count < truncateTo) {\n            count += getWidth(s[chars++]);\n        }\n\n        if (count >= truncateTo) {\n            chars--;\n        }\n\n        return `${s.substring(0, chars)}${ellipsis}`;\n    }\n\n    const ansiRegex = /[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))/g;\n    const containsNonAsciiRegex = /[^\\x20-\\x7F\\u00a0\\u2026]/;\n\n    export function getWidth(s: string): number {\n        if (s == null || s.length === 0) return 0;\n\n        // Shortcut to avoid needless string `RegExp`s, replacements, and allocations\n        if (!containsNonAsciiRegex.test(s)) return s.length;\n\n        s = s.replace(ansiRegex, '');\n\n        let count = 0;\n        let emoji = 0;\n        let joiners = 0;\n\n        const graphemes = [...s];\n        for (let i = 0; i < graphemes.length; i++) {\n            const code = graphemes[i].codePointAt(0)!;\n\n            // Ignore control characters\n            if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) continue;\n\n            // Ignore combining characters\n            if (code >= 0x300 && code <= 0x36f) continue;\n\n            // https://stackoverflow.com/questions/30757193/find-out-if-character-in-string-is-emoji\n            if (\n                (code >= 0x1f600 && code <= 0x1f64f) || // Emoticons\n                (code >= 0x1f300 && code <= 0x1f5ff) || // Misc Symbols and Pictographs\n                (code >= 0x1f680 && code <= 0x1f6ff) || // Transport and Map\n                (code >= 0x2600 && code <= 0x26ff) || // Misc symbols\n                (code >= 0x2700 && code <= 0x27bf) || // Dingbats\n                (code >= 0xfe00 && code <= 0xfe0f) || // Variation Selectors\n                (code >= 0x1f900 && code <= 0x1f9ff) || // Supplemental Symbols and Pictographs\n                (code >= 65024 && code <= 65039) || // Variation selector\n                (code >= 8400 && code <= 8447) // Combining Diacritical Marks for Symbols\n            ) {\n                if (code >= 0x1f3fb && code <= 0x1f3ff) continue; // emoji modifier fitzpatrick type\n\n                emoji++;\n                count += 2;\n                continue;\n            }\n\n            // Ignore zero-width joiners '\\u200d'\n            if (code === 8205) {\n                joiners++;\n                count -= 2;\n                continue;\n            }\n\n            // Surrogates\n            if (code > 0xffff) {\n                i++;\n            }\n\n            count += isFullwidthCodePoint(code) ? 2 : 1;\n        }\n\n        const offset = emoji - joiners;\n        if (offset > 1) {\n            count += offset - 1;\n        }\n        return count;\n    }\n\n    function isFullwidthCodePoint(cp: number) {\n        // code points are derived from:\n        // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n        if (\n            cp >= 0x1100 &&\n            (cp <= 0x115f || // Hangul Jamo\n            cp === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n            cp === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n                // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n                (0x2e80 <= cp && cp <= 0x3247 && cp !== 0x303f) ||\n                // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n                (0x3250 <= cp && cp <= 0x4dbf) ||\n                // CJK Unified Ideographs .. Yi Radicals\n                (0x4e00 <= cp && cp <= 0xa4c6) ||\n                // Hangul Jamo Extended-A\n                (0xa960 <= cp && cp <= 0xa97c) ||\n                // Hangul Syllables\n                (0xac00 <= cp && cp <= 0xd7a3) ||\n                // CJK Compatibility Ideographs\n                (0xf900 <= cp && cp <= 0xfaff) ||\n                // Vertical Forms\n                (0xfe10 <= cp && cp <= 0xfe19) ||\n                // CJK Compatibility Forms .. Small Form Variants\n                (0xfe30 <= cp && cp <= 0xfe6b) ||\n                // Halfwidth and Fullwidth Forms\n                (0xff01 <= cp && cp <= 0xff60) ||\n                (0xffe0 <= cp && cp <= 0xffe6) ||\n                // Kana Supplement\n                (0x1b000 <= cp && cp <= 0x1b001) ||\n                // Enclosed Ideographic Supplement\n                (0x1f200 <= cp && cp <= 0x1f251) ||\n                // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n                (0x20000 <= cp && cp <= 0x3fffd))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","'use strict';\nimport { LogCorrelationContext, Logger, LogLevel } from '../../logger';\nimport { Functions } from './../function';\nimport { Strings } from './../string';\n\nconst correlationContext = new Map<number, LogCorrelationContext>();\nlet correlationCounter = 0;\n\nexport function getCorrelationContext() {\n    return correlationContext.get(correlationCounter);\n}\n\nexport function getCorrelationId() {\n    return correlationCounter;\n}\n\nfunction getNextCorrelationId() {\n    if (correlationCounter === Number.MAX_SAFE_INTEGER) {\n        correlationCounter = 0;\n    }\n    return ++correlationCounter;\n}\n\nfunction clearCorrelationContext(correlationId: number) {\n    correlationContext.delete(correlationId);\n}\n\nfunction setCorrelationContext(correlationId: number, context: LogCorrelationContext) {\n    correlationContext.set(correlationId, context);\n}\n\nexport interface LogContext<T> {\n    id: number;\n    instance: T;\n    instanceName: string;\n    name: string;\n    prefix: string;\n}\n\nexport const LogInstanceNameFn = Symbol('logInstanceNameFn');\n\nexport function logName<T>(fn: (c: T, name: string) => string) {\n    return (target: Function) => {\n        (target as any)[LogInstanceNameFn] = fn;\n    };\n}\n\nexport function debug<T>(\n    options: {\n        args?: false | { [arg: string]: (arg: any) => string | false };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    return log<T>({ debug: true, ...options });\n}\n\nexport function log<T>(\n    options: {\n        args?: false | { [arg: number]: ((arg: any) => string | false) };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        debug?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    options = { timed: true, ...options };\n\n    const logFn = (options.debug ? Logger.debug.bind(Logger) : Logger.log.bind(Logger)) as\n        | typeof Logger.debug\n        | typeof Logger.log;\n\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const parameters = Functions.getParameters(fn);\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            const correlationId = getNextCorrelationId();\n\n            if (\n                (Logger.level !== LogLevel.Debug && !(Logger.level === LogLevel.Verbose && !options.debug)) ||\n                (typeof options.condition === 'function' && !options.condition(...args))\n            ) {\n                return fn!.apply(this, args);\n            }\n\n            let instanceName: string;\n            if (this != null) {\n                instanceName = Logger.toLoggableName(this);\n                if (this.constructor != null && this.constructor[LogInstanceNameFn]) {\n                    instanceName = target.constructor[LogInstanceNameFn](this, instanceName);\n                }\n            }\n            else {\n                instanceName = '';\n            }\n\n            let { correlate } = options;\n            if (!correlate && options.timed) {\n                correlate = true;\n            }\n\n            let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : ''}${\n                instanceName ? `${instanceName}.` : ''\n            }${key}`;\n\n            if (options.prefix != null) {\n                prefix = options.prefix(\n                    {\n                        id: correlationId,\n                        instance: this,\n                        instanceName: instanceName,\n                        name: key,\n                        prefix: prefix\n                    } as LogContext<T>,\n                    ...args\n                );\n            }\n\n            let correlationContext: LogCorrelationContext | undefined;\n            if (correlate) {\n                correlationContext = { correlationId: correlationId, prefix: prefix };\n                setCorrelationContext(correlationId, correlationContext);\n            }\n\n            const enter = options.enter != null ? options.enter(...args) : '';\n\n            let loggableParams: string;\n            if (options.args === false || args.length === 0) {\n                loggableParams = '';\n\n                if (!options.singleLine) {\n                    logFn(`${prefix}${enter}`);\n                }\n            }\n            else {\n                const argFns = typeof options.args === 'object' ? options.args : undefined;\n                let argFn;\n                let loggable;\n                loggableParams = args\n                    .map((v: any, index: number) => {\n                        const p = parameters[index];\n\n                        argFn = argFns !== undefined ? argFns[index] : undefined;\n                        if (argFn !== undefined) {\n                            loggable = argFn(v);\n                            if (loggable === false) return undefined;\n                        }\n                        else {\n                            loggable = Logger.toLoggable(v, options.sanitize);\n                        }\n\n                        return p ? `${p}=${loggable}` : loggable;\n                    })\n                    .filter(Boolean)\n                    .join(', ');\n\n                if (!options.singleLine) {\n                    if (!options.debug) {\n                        Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);\n                    }\n                    else {\n                        logFn(`${prefix}${enter}`, loggableParams);\n                    }\n                }\n            }\n\n            if (options.timed || options.exit != null) {\n                const start = options.timed ? process.hrtime() : undefined;\n\n                const logError = (ex: Error) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    if (options.singleLine) {\n                        Logger.error(\n                            ex,\n                            `${prefix}${enter}`,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`,\n                            loggableParams\n                        );\n                    }\n                    else {\n                        Logger.error(\n                            ex,\n                            prefix,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                let result;\n                try {\n                    result = fn!.apply(this, args);\n                }\n                catch (ex) {\n                    logError(ex);\n                    throw ex;\n                }\n\n                const logResult = (r: any) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    let exit;\n                    if (options.exit != null) {\n                        try {\n                            exit = options.exit(r);\n                        }\n                        catch (ex) {\n                            exit = `@log.exit error: ${ex}`;\n                        }\n                    }\n                    else {\n                        exit = 'completed';\n                    }\n\n                    if (options.singleLine) {\n                        if (!options.debug) {\n                            Logger.logWithDebugParams(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                        else {\n                            logFn(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                    }\n                    else {\n                        logFn(\n                            `${prefix} ${exit}${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                if (result != null && Functions.isPromise(result)) {\n                    const promise = result.then(logResult);\n                    promise.catch(logError);\n                }\n                else {\n                    logResult(result);\n                }\n\n                return result;\n            }\n\n            return fn!.apply(this, args);\n        };\n    };\n}\n","'use strict';\n\nexport namespace Iterables {\n    export function count<T>(source: Iterable<T> | IterableIterator<T>, predicate?: (item: T) => boolean): number {\n        let count = 0;\n        let next: IteratorResult<T>;\n\n        while (true) {\n            next = (source as IterableIterator<T>).next();\n            if (next.done) break;\n\n            if (predicate === undefined || predicate(next.value)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    export function every<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (!predicate(item)) return false;\n        }\n        return true;\n    }\n\n    export function filter<T>(\n        source: Iterable<T | undefined | null> | IterableIterator<T | undefined | null>\n    ): Iterable<T>;\n    export function filter<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): Iterable<T>;\n    export function* filter<T>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicate?: (item: T) => boolean\n    ): Iterable<T> {\n        if (predicate === undefined) {\n            for (const item of source) {\n                if (item != null) yield item;\n            }\n        }\n        else {\n            for (const item of source) {\n                if (predicate(item)) yield item;\n            }\n        }\n    }\n\n    export function* filterMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicateMapper: (item: T) => TMapped | undefined | null\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            const mapped = predicateMapper(item);\n            if (mapped != null) yield mapped;\n        }\n    }\n\n    export function forEach<T>(source: Iterable<T> | IterableIterator<T>, fn: (item: T, index: number) => void): void {\n        let i = 0;\n        for (const item of source) {\n            fn(item, i);\n            i++;\n        }\n    }\n\n    export function find<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): T | null {\n        for (const item of source) {\n            if (predicate(item)) return item;\n        }\n        return null;\n    }\n\n    export function first<T>(source: Iterable<T>): T {\n        return source[Symbol.iterator]().next().value;\n    }\n\n    export function* flatMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => Iterable<TMapped>\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield* mapper(item);\n        }\n    }\n\n    export function has<T>(source: Iterable<T> | IterableIterator<T>, item: T): boolean {\n        return some(source, i => i === item);\n    }\n\n    export function isIterable(source: Iterable<any>): boolean {\n        return typeof source[Symbol.iterator] === 'function';\n    }\n\n    export function join(source: Iterable<any>, separator: string): string {\n        let value = '';\n\n        const iterator = source[Symbol.iterator]();\n        let next = iterator.next();\n        if (next.done) return value;\n\n        while (true) {\n            const s = next.value.toString();\n\n            next = iterator.next();\n            if (next.done) {\n                value += s;\n                break;\n            }\n\n            value += `${s}${separator}`;\n        }\n\n        return value;\n    }\n\n    export function last<T>(source: Iterable<T>): T | null {\n        let item: T | null = null;\n        for (item of source) {\n            /* noop */\n        }\n        return item;\n    }\n\n    export function* map<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => TMapped\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield mapper(item);\n        }\n    }\n\n    export function next<T>(source: IterableIterator<T>): T {\n        return source.next().value;\n    }\n\n    export function* skip<T>(source: Iterable<T> | IterableIterator<T>, count: number): IterableIterator<T> {\n        let i = 0;\n        for (const item of source) {\n            if (i >= count) yield item;\n            i++;\n        }\n    }\n\n    export function some<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (predicate(item)) return true;\n        }\n        return false;\n    }\n\n    export function* take<T>(source: Iterable<T> | IterableIterator<T>, count: number): Iterable<T> {\n        if (count > 0) {\n            let i = 0;\n            for (const item of source) {\n                yield item;\n                i++;\n                if (i >= count) break;\n            }\n        }\n    }\n\n    export function* union<T>(...sources: (Iterable<T> | IterableIterator<T>)[]): Iterable<T> {\n        for (const source of sources) {\n            for (const item of source) {\n                yield item;\n            }\n        }\n    }\n}\n","'use strict';\n\nexport namespace Versions {\n    declare type VersionComparisonResult = -1 | 0 | 1;\n\n    export interface Version {\n        major: number;\n        minor: number;\n        patch: number;\n        pre?: string;\n    }\n\n    export function compare(v1: Version, v2: Version): VersionComparisonResult {\n        if (v1.major > v2.major) return 1;\n        if (v1.major < v2.major) return -1;\n\n        if (v1.minor > v2.minor) return 1;\n        if (v1.minor < v2.minor) return -1;\n\n        if (v1.patch > v2.patch) return 1;\n        if (v1.patch < v2.patch) return -1;\n\n        if (v1.pre === undefined && v2.pre !== undefined) return 1;\n        if (v1.pre !== undefined && v2.pre === undefined) return -1;\n\n        if (v1.pre !== undefined && v2.pre !== undefined) {\n            return v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n        }\n\n        return 0;\n    }\n\n    export function from(\n        major: string | number,\n        minor: string | number,\n        patch: string | number,\n        pre?: string\n    ): Version {\n        return {\n            major: typeof major === 'string' ? parseInt(major, 10) : major,\n            minor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n            patch: typeof patch === 'string' ? parseInt(patch, 10) : patch,\n            pre: pre\n        };\n    }\n\n    export function fromString(version: string): Version {\n        const [ver, pre] = version.split('-');\n        const [major, minor, patch] = ver.split('.');\n        return from(major, minor, patch, pre);\n    }\n}\n","'use strict';\nimport { Iterables } from './iterable';\nimport { Strings } from './string';\n\n// Code stolen from https://github.com/Microsoft/vscode/blob/b3e6d5bb039a4a9362b52a2c8726267ca68cf64e/src/vs/base/common/map.ts#L352\n\nexport interface IKeyIterator {\n    reset(key: string): this;\n    next(): this;\n\n    hasNext(): boolean;\n    cmp(a: string): number;\n    value(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n    private _value: string = '';\n    private _pos: number = 0;\n\n    reset(key: string): this {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n\n    next(): this {\n        this._pos += 1;\n        return this;\n    }\n\n    hasNext(): boolean {\n        return this._pos < this._value.length - 1;\n    }\n\n    cmp(a: string): number {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n\n    value(): string {\n        return this._value[this._pos];\n    }\n}\n\nexport class PathIterator implements IKeyIterator {\n    private _value!: string;\n    private _from!: number;\n    private _to!: number;\n\n    reset(key: string): this {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n\n    hasNext(): boolean {\n        return this._to < this._value.length;\n    }\n\n    next(): this {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === Strings.CharCode.Slash || ch === Strings.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n\n    cmp(a: string): number {\n        let aPos = 0;\n        const aLen = a.length;\n        let thisPos = this._from;\n\n        while (aPos < aLen && thisPos < this._to) {\n            const cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n\n    value(): string {\n        return this._value.substring(this._from, this._to);\n    }\n}\n\nclass TernarySearchTreeNode<E> {\n    segment!: string;\n    value: E | undefined;\n    key!: string;\n    left: TernarySearchTreeNode<E> | undefined;\n    mid: TernarySearchTreeNode<E> | undefined;\n    right: TernarySearchTreeNode<E> | undefined;\n\n    isEmpty(): boolean {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n}\n\nexport class TernarySearchTree<E> {\n    static forPaths<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new PathIterator());\n    }\n\n    static forStrings<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new StringIterator());\n    }\n\n    private _iter: IKeyIterator;\n    private _root: TernarySearchTreeNode<E> | undefined;\n\n    constructor(segments: IKeyIterator) {\n        this._iter = segments;\n    }\n\n    clear(): void {\n        this._root = undefined;\n    }\n\n    set(key: string, element: E): E | undefined {\n        const iter = this._iter.reset(key);\n        let node: TernarySearchTreeNode<E>;\n\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode<E>();\n            this._root.segment = iter.value();\n        }\n\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode<E>();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode<E>();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode<E>();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    }\n\n    get(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    }\n\n    delete(key: string): void {\n        const iter = this._iter.reset(key);\n        const stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n        let node = this._root;\n\n        // find and unset node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    const [dir, parent] = stack.pop()!;\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    }\n\n    findSubstr(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate: E | undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return (node && node.value) || candidate;\n    }\n\n    findSuperstr(key: string, limit: boolean = false): Iterable<E> | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    node = node.mid;\n                    return {\n                        [Symbol.iterator]: () => this._nodeIterator(node!, limit)\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _nodeIterator(node: TernarySearchTreeNode<E>, limit: boolean = false): Iterator<E> {\n        const res = {\n            done: false,\n            value: undefined! as E\n        };\n        let idx: number;\n        let data: E[];\n        const next = () => {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                this._forEach(node, value => data.push(value), limit);\n            }\n            if (idx >= data.length) {\n                res.done = true;\n                res.value = undefined!;\n            }\n            else {\n                res.done = false;\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next };\n    }\n\n    forEach(callback: (value: E, index: string) => any) {\n        this._forEach(this._root!, callback);\n    }\n\n    private _forEach(\n        node: TernarySearchTreeNode<E>,\n        callback: (value: E, index: string) => any,\n        limit: boolean = false\n    ) {\n        if (node === undefined) return;\n\n        // left\n        this._forEach(node.left!, callback, limit);\n\n        // node\n        if (node.value) {\n            callback(node.value, node.key);\n        }\n\n        if (!limit) {\n            // mid\n            this._forEach(node.mid!, callback, limit);\n        }\n\n        // right\n        this._forEach(node.right!, callback, limit);\n    }\n\n    any(): boolean {\n        return this._root !== undefined && !this._root.isEmpty();\n    }\n\n    count(predicate?: (entry: E) => boolean): number {\n        if (this._root === undefined || this._root.isEmpty()) return 0;\n\n        return Iterables.count(this.entries(), predicate === undefined ? undefined : ([e]) => predicate(e));\n    }\n\n    entries(): Iterable<[E, string]> {\n        return this._iterator(this._root!);\n    }\n\n    values(): Iterable<E> {\n        return Iterables.map(this.entries(), ([e]) => e);\n    }\n\n    highlander(): [E, string] | undefined {\n        if (this._root === undefined || this._root.isEmpty()) return undefined;\n\n        const entries = this.entries() as IterableIterator<[E, string]>;\n\n        let count = 0;\n        let next: IteratorResult<[E, string]>;\n        let value: [E, string] | undefined;\n\n        while (true) {\n            next = entries.next();\n            if (next.done) break;\n\n            value = next.value;\n\n            count++;\n            if (count > 1) return undefined;\n        }\n\n        return value;\n    }\n\n    some(predicate: (entry: E) => boolean): boolean {\n        if (this._root === undefined || this._root.isEmpty()) return false;\n\n        return Iterables.some(this.entries(), ([e]) => predicate(e));\n    }\n\n    private *_iterator(node: TernarySearchTreeNode<E> | undefined): IterableIterator<[E, string]> {\n        if (node !== undefined) {\n            // left\n            yield* this._iterator(node.left!);\n\n            // node\n            if (node.value) {\n                yield [node.value, node.key];\n            }\n\n            // mid\n            yield* this._iterator(node.mid!);\n\n            // right\n            yield* this._iterator(node.right!);\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, ExtensionContext, OutputChannel, Uri, window } from 'vscode';\nimport { configuration, LogLevel } from './configuration';\nimport { extensionOutputChannelName } from './constants';\nimport { getCorrelationContext } from './system';\n// import { Telemetry } from './telemetry';\n\nexport { LogLevel } from './configuration';\n\nconst ConsolePrefix = `[${extensionOutputChannelName}]`;\n\nconst isDebuggingRegex = /\\bgitlens\\b/i;\n\nexport interface LogCorrelationContext {\n    readonly correlationId?: number;\n    readonly prefix: string;\n    exitDetails?: string;\n}\n\nexport class Logger {\n    static level: LogLevel = LogLevel.Silent;\n    static output: OutputChannel | undefined;\n    static customLoggableFn: ((o: object) => string | undefined) | undefined;\n\n    static configure(context: ExtensionContext, loggableFn?: (o: any) => string | undefined) {\n        this.customLoggableFn = loggableFn;\n\n        context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    private static onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('outputLevel').value;\n        if (configuration.changed(e, section)) {\n            this.level = configuration.get<LogLevel>(section);\n\n            if (this.level === LogLevel.Silent) {\n                if (this.output !== undefined) {\n                    this.output.dispose();\n                    this.output = undefined;\n                }\n            }\n            else {\n                this.output = this.output || window.createOutputChannel(extensionOutputChannelName);\n            }\n        }\n    }\n\n    static debug(message: string, ...params: any[]): void;\n    static debug(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static debug(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Debug && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level === LogLevel.Debug) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static error(ex: Error, message?: string, ...params: any[]): void;\n    static error(ex: Error, context?: LogCorrelationContext, message?: string, ...params: any[]): void;\n    static error(ex: Error, contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (contextOrMessage === undefined || typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (message === undefined) {\n            const stack = ex.stack;\n            if (stack) {\n                const match = /.*\\s*?at\\s(.+?)\\s/.exec(stack);\n                if (match != null) {\n                    message = match[1];\n                }\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.error(this.timestamp, ConsolePrefix, message || '', ...params, ex);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}\\n${ex}`);\n        }\n\n        // Telemetry.trackException(ex);\n    }\n\n    static getCorrelationContext() {\n        return getCorrelationContext();\n    }\n\n    static log(message: string, ...params: any[]): void;\n    static log(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static log(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static logWithDebugParams(message: string, ...params: any[]): void;\n    static logWithDebugParams(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static logWithDebugParams(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static warn(message: string, ...params: any[]): void;\n    static warn(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static warn(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.warn(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static showOutputChannel() {\n        if (this.output === undefined) return;\n\n        this.output.show();\n    }\n\n    static toLoggable(p: any, sanitize?: ((key: string, value: any) => any) | undefined) {\n        if (typeof p !== 'object') return String(p);\n        if (this.customLoggableFn !== undefined) {\n            const loggable = this.customLoggableFn(p);\n            if (loggable != null) return loggable;\n        }\n        if (p instanceof Uri) return `Uri(${p.toString(true)})`;\n\n        try {\n            return JSON.stringify(p, sanitize);\n        }\n        catch {\n            return `<error>`;\n        }\n    }\n\n    static toLoggableName(instance: Function | object) {\n        let name;\n        if (typeof instance === 'function') {\n            if (instance.prototype == null || instance.prototype.constructor == null) {\n                return instance.name;\n            }\n\n            name = instance.prototype.constructor.name;\n        }\n        else {\n            name = instance.constructor != null ? instance.constructor.name : '';\n        }\n\n        // Strip webpack module name (since I never name classes with an _)\n        const index = name.indexOf('_');\n        return index === -1 ? name : name.substr(index + 1);\n    }\n\n    private static get timestamp(): string {\n        const now = new Date();\n        return `[${now\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/\\..+/, '')}:${('00' + now.getUTCMilliseconds()).slice(-3)}]`;\n    }\n\n    static gitOutput: OutputChannel | undefined;\n\n    static logGitCommand(command: string, ex?: Error): void {\n        if (this.level !== LogLevel.Debug) return;\n\n        if (this.gitOutput === undefined) {\n            this.gitOutput = window.createOutputChannel(`${extensionOutputChannelName} (Git)`);\n        }\n        this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `\\n\\n${ex.toString()}` : ''}`);\n    }\n\n    private static toLoggableParams(debugOnly: boolean, params: any[]) {\n        if (params.length === 0 || (debugOnly && this.level !== LogLevel.Debug && !Logger.isDebugging)) {\n            return '';\n        }\n\n        const loggableParams = params.map(p => this.toLoggable(p)).join(', ');\n        return ` \\u2014 ${loggableParams}` || '';\n    }\n\n    private static _isDebugging: boolean | undefined;\n    static get isDebugging() {\n        if (this._isDebugging === undefined) {\n            const env = process.env;\n            this._isDebugging =\n                env && env.VSCODE_DEBUGGING_EXTENSION ? isDebuggingRegex.test(env.VSCODE_DEBUGGING_EXTENSION) : false;\n        }\n\n        return this._isDebugging;\n    }\n}\n","'use strict';\nimport {\n    DecorationOptions,\n    Disposable,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorSelectionChangeEvent,\n    Uri,\n    window\n} from 'vscode';\nimport { TextDocumentComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Functions } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\n\nexport enum AnnotationStatus {\n    Computing = 'computing',\n    Computed = 'computed'\n}\n\nexport type TextEditorCorrelationKey = string;\n\nexport abstract class AnnotationProviderBase implements Disposable {\n    static getCorrelationKey(editor: TextEditor | undefined): TextEditorCorrelationKey {\n        return editor !== undefined ? (editor as any).id : '';\n    }\n\n    annotationType: FileAnnotationType | undefined;\n    correlationKey: TextEditorCorrelationKey;\n    document: TextDocument;\n    status: AnnotationStatus | undefined;\n\n    protected decorations: DecorationOptions[] | undefined;\n    protected disposable: Disposable;\n\n    constructor(\n        public editor: TextEditor,\n        protected readonly trackedDocument: TrackedDocument<GitDocumentState>,\n        protected decoration: TextEditorDecorationType,\n        protected highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);\n        this.document = this.editor.document;\n\n        this.disposable = Disposable.from(\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n    }\n\n    dispose() {\n        this.clear();\n\n        this.disposable && this.disposable.dispose();\n    }\n\n    private async onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        if (!TextDocumentComparer.equals(this.document, e.textEditor && e.textEditor.document)) return;\n\n        return this.selection(e.selections[0].active.line);\n    }\n\n    get editorId(): string {\n        if (this.editor === undefined || this.editor.document === undefined) return '';\n        return (this.editor as any).id;\n    }\n\n    get editorUri(): Uri | undefined {\n        if (this.editor === undefined || this.editor.document === undefined) return undefined;\n        return this.editor.document.uri;\n    }\n\n    protected additionalDecorations: { decoration: TextEditorDecorationType; ranges: Range[] }[] | undefined;\n\n    clear() {\n        this.status = undefined;\n        if (this.editor === undefined) return;\n\n        if (this.decoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.decoration, []);\n            }\n            catch {}\n        }\n\n        if (this.additionalDecorations !== undefined && this.additionalDecorations.length > 0) {\n            for (const d of this.additionalDecorations) {\n                try {\n                    this.editor.setDecorations(d.decoration, []);\n                }\n                catch {}\n            }\n\n            this.additionalDecorations = undefined;\n        }\n\n        if (this.highlightDecoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.highlightDecoration, []);\n            }\n            catch {}\n        }\n    }\n\n    private _resetDebounced:\n        | ((\n              changes?: {\n                  decoration: TextEditorDecorationType;\n                  highlightDecoration: TextEditorDecorationType | undefined;\n              }\n          ) => void)\n        | undefined;\n\n    reset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this._resetDebounced === undefined) {\n            this._resetDebounced = Functions.debounce(this.onReset, 250);\n        }\n\n        this._resetDebounced(changes);\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (changes !== undefined) {\n            this.clear();\n\n            this.decoration = changes.decoration;\n            this.highlightDecoration = changes.highlightDecoration;\n        }\n\n        await this.provideAnnotation(this.editor === undefined ? undefined : this.editor.selection.active.line);\n    }\n\n    async restore(editor: TextEditor) {\n        // If the editor isn't disposed then we don't need to do anything\n        // Explicitly check for `false`\n        if ((this.editor as any)._disposed === false) return;\n\n        this.status = AnnotationStatus.Computing;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n\n        this.editor = editor;\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);\n        this.document = editor.document;\n\n        if (this.decorations !== undefined && this.decorations.length) {\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            if (this.additionalDecorations !== undefined && this.additionalDecorations.length) {\n                for (const d of this.additionalDecorations) {\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        this.status = AnnotationStatus.Computed;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n            await this.selection(editor.selection.active.line);\n        }\n    }\n\n    async provideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.status = AnnotationStatus.Computing;\n        if (await this.onProvideAnnotation(shaOrLine)) {\n            this.status = AnnotationStatus.Computed;\n            return true;\n        }\n\n        this.status = undefined;\n        return false;\n    }\n\n    abstract async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean>;\n    abstract async selection(shaOrLine?: string | number): Promise<void>;\n    abstract async validate(): Promise<boolean>;\n}\n","'use strict';\nimport { commands, ConfigurationTarget, MessageItem, Uri, window } from 'vscode';\nimport { Commands } from './commands';\nimport { configuration } from './configuration';\nimport { BuiltInCommands, CommandContext, setCommandContext } from './constants';\nimport { GitCommit } from './git/gitService';\nimport { Logger } from './logger';\n\nexport enum SuppressedMessages {\n    CommitHasNoPreviousCommitWarning = 'suppressCommitHasNoPreviousCommitWarning',\n    CommitNotFoundWarning = 'suppressCommitNotFoundWarning',\n    FileNotUnderSourceControlWarning = 'suppressFileNotUnderSourceControlWarning',\n    GitDisabledWarning = 'suppressGitDisabledWarning',\n    GitVersionWarning = 'suppressGitVersionWarning',\n    LineUncommittedWarning = 'suppressLineUncommittedWarning',\n    NoRepositoryWarning = 'suppressNoRepositoryWarning',\n    SupportGitLensNotification = 'suppressSupportGitLensNotification'\n}\n\nexport class Messages {\n    static showCommitHasNoPreviousCommitWarningMessage(commit?: GitCommit): Promise<MessageItem | undefined> {\n        if (commit === undefined) {\n            return Messages.showMessage(\n                'info',\n                `Commit has no previous commit.`,\n                SuppressedMessages.CommitHasNoPreviousCommitWarning\n            );\n        }\n        return Messages.showMessage(\n            'info',\n            `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`,\n            SuppressedMessages.CommitHasNoPreviousCommitWarning\n        );\n    }\n\n    static showCommitNotFoundWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The commit could not be found.`,\n            SuppressedMessages.CommitNotFoundWarning\n        );\n    }\n\n    static async showGenericErrorMessage(message: string): Promise<MessageItem | undefined> {\n        const actions: MessageItem[] = [{ title: 'Open Output Channel' }];\n        const result = await Messages.showMessage(\n            'error',\n            `${message}. See output channel for more details`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result !== undefined) {\n            Logger.showOutputChannel();\n        }\n        return result;\n    }\n\n    static showFileNotUnderSourceControlWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The file is probably not under source control.`,\n            SuppressedMessages.FileNotUnderSourceControlWarning\n        );\n    }\n\n    static showGitDisabledErrorMessage() {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires Git to be enabled. Please re-enable Git \\u2014 set \\`git.enabled\\` to true and reload`,\n            SuppressedMessages.GitDisabledWarning\n        );\n    }\n\n    static showGitVersionUnsupportedErrorMessage(version: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires a newer version of Git (>= 2.2.0) than is currently installed (${version}). Please install a more recent version of Git.`,\n            SuppressedMessages.GitVersionWarning\n        );\n    }\n\n    static showLineUncommittedWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The line has uncommitted changes.`,\n            SuppressedMessages.LineUncommittedWarning\n        );\n    }\n\n    static showNoRepositoryWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. No repository could be found.`,\n            SuppressedMessages.NoRepositoryWarning\n        );\n    }\n\n    static async showSupportGitLensMessage() {\n        const actions: MessageItem[] = [\n            { title: 'Become a Sponsor' },\n            { title: 'Donate via PayPal' },\n            { title: 'Donate via Cash App' }\n        ];\n\n        const result = await Messages.showMessage(\n            'info',\n            `While GitLens is offered to everyone for free, if you find it useful, please consider [supporting](https://gitlens.amod.io/#support-gitlens) it. Thank you! ❤`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            let uri;\n            if (result === actions[0]) {\n                uri = Uri.parse('https://www.patreon.com/eamodio');\n            }\n            else if (result === actions[1]) {\n                uri = Uri.parse('https://www.paypal.me/eamodio');\n            }\n            else if (result === actions[2]) {\n                uri = Uri.parse('https://cash.me/$eamodio');\n            }\n\n            if (uri !== undefined) {\n                await setCommandContext(CommandContext.ViewsHideSupportGitLens, true);\n                await this.suppressedMessage(SuppressedMessages.SupportGitLensNotification!);\n                await commands.executeCommand(BuiltInCommands.Open, uri);\n            }\n        }\n    }\n\n    static async showWhatsNewMessage(version: string) {\n        const actions: MessageItem[] = [{ title: \"What's New\" }, { title: 'Release Notes' }, { title: '❤' }];\n\n        const result = await Messages.showMessage(\n            'info',\n            `GitLens has been updated to v${version} — check out what's new!`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            if (result === actions[0]) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n            else if (result === actions[1]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://github.com/eamodio/vscode-gitlens/blob/master/CHANGELOG.md')\n                );\n            }\n            else if (result === actions[2]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://gitlens.amod.io/#support-gitlens')\n                );\n            }\n        }\n    }\n\n    private static async showMessage<T extends MessageItem>(\n        type: 'info' | 'warn' | 'error',\n        message: string,\n        suppressionKey?: SuppressedMessages,\n        dontShowAgain: T | null = { title: \"Don't Show Again\" } as T,\n        ...actions: T[]\n    ): Promise<T | undefined> {\n        Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain})`);\n\n        if (\n            suppressionKey !== undefined &&\n            configuration.get<boolean>(configuration.name('advanced')('messages')(suppressionKey).value)\n        ) {\n            Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) skipped`);\n            return undefined;\n        }\n\n        if (suppressionKey !== undefined && dontShowAgain !== null) {\n            actions.push(dontShowAgain);\n        }\n\n        let result: T | undefined = undefined;\n        switch (type) {\n            case 'info':\n                result = await window.showInformationMessage(message, ...actions);\n                break;\n\n            case 'warn':\n                result = await window.showWarningMessage(message, ...actions);\n                break;\n\n            case 'error':\n                result = await window.showErrorMessage(message, ...actions);\n                break;\n        }\n\n        if ((suppressionKey !== undefined && dontShowAgain === null) || result === dontShowAgain) {\n            Logger.log(\n                `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) don't show again requested`\n            );\n            await this.suppressedMessage(suppressionKey!);\n\n            if (result === dontShowAgain) return undefined;\n        }\n\n        Logger.log(\n            `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) returned ${\n                result ? result.title : result\n            }`\n        );\n        return result;\n    }\n\n    private static suppressedMessage(suppressionKey: SuppressedMessages) {\n        const section = configuration.name('advanced')('messages').value;\n        const messages: { [key: string]: boolean | undefined } = configuration.get<{}>(section);\n\n        messages[suppressionKey] = true;\n\n        for (const [key, value] of Object.entries(messages)) {\n            if (value !== true) {\n                messages[key] = undefined;\n            }\n        }\n\n        return configuration.update(section, messages, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextDocument, TextEditor, Uri } from 'vscode';\nimport { CommandContext, getEditorIfActive, isActiveDocument, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, Repository, RepositoryChange, RepositoryChangeEvent } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions } from '../system';\n\nexport interface DocumentBlameStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly blameable: boolean;\n}\n\nexport class TrackedDocument<T> implements Disposable {\n    private _onDidBlameStateChange = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidBlameStateChange(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidBlameStateChange.event;\n    }\n\n    state: T | undefined;\n\n    private _disposable: Disposable | undefined;\n    private _disposed: boolean = false;\n    private _repo: Promise<Repository | undefined>;\n    private _uri!: GitUri;\n\n    constructor(\n        private readonly _document: TextDocument,\n        public readonly key: string,\n        public dirty: boolean,\n        private _eventDelegates: { onDidBlameStateChange(e: DocumentBlameStateChangeEvent<T>): void }\n    ) {\n        this._repo = this.initialize(_document.uri);\n    }\n\n    dispose() {\n        this._disposed = true;\n        this.reset('dispose');\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async initialize(uri: Uri): Promise<Repository | undefined> {\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, wait for the GitService to load if it isn't\n        if (Container.git === undefined) {\n            if (!(await Functions.waitUntil(() => Container.git !== undefined, 2000))) {\n                Logger.log(\n                    `TrackedDocument.initialize(${uri.toString(true)})`,\n                    'Timed out waiting for the GitService to start'\n                );\n                throw new Error('TrackedDocument timed out waiting for the GitService to start');\n            }\n        }\n\n        this._uri = await GitUri.fromUri(uri);\n        if (this._disposed) return undefined;\n\n        const repo = await Container.git.getRepository(this._uri);\n        if (this._disposed) return undefined;\n\n        if (repo !== undefined) {\n            this._disposable = repo.onDidChange(this.onRepositoryChanged, this);\n        }\n\n        await this.update({ initializing: true, repo: repo });\n\n        return repo;\n    }\n\n    private onRepositoryChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        // Reset any cached state\n        this.reset('repository');\n        void this.update();\n    }\n\n    private _forceDirtyStateChangeOnNextDocumentChange: boolean = false;\n    get forceDirtyStateChangeOnNextDocumentChange() {\n        return this._forceDirtyStateChangeOnNextDocumentChange;\n    }\n\n    private _hasRemotes: boolean = false;\n    get hasRemotes() {\n        return this._hasRemotes;\n    }\n\n    get isBlameable() {\n        if (this._blameFailed) return false;\n\n        return this._isTracked;\n    }\n\n    private _isDirtyIdle: boolean = false;\n    get isDirtyIdle() {\n        return this._isDirtyIdle;\n    }\n    set isDirtyIdle(value: boolean) {\n        this._isDirtyIdle = value;\n    }\n\n    get isRevision() {\n        return this._uri !== undefined ? Boolean(this._uri.sha) : false;\n    }\n\n    private _isTracked: boolean = false;\n    get isTracked() {\n        return this._isTracked;\n    }\n\n    get lineCount(): number {\n        return this._document.lineCount;\n    }\n\n    get uri() {\n        return this._uri;\n    }\n\n    activate() {\n        setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n    }\n\n    async ensureInitialized() {\n        await this._repo;\n    }\n\n    is(document: TextDocument) {\n        return document === this._document;\n    }\n\n    reset(reason: 'config' | 'dispose' | 'document' | 'repository') {\n        this._blameFailed = false;\n        this._isDirtyIdle = false;\n\n        if (this.state === undefined) return;\n\n        // // Don't remove broken blame on change (since otherwise we'll have to run the broken blame again)\n        // if (!this.state.hasErrors) {\n\n        this.state = undefined;\n        Logger.log(`Reset state for '${this.key}', reason=${reason}`);\n\n        // }\n    }\n\n    private _blameFailed: boolean = false;\n    setBlameFailure() {\n        const wasBlameable = this.isBlameable;\n\n        this._blameFailed = true;\n\n        if (wasBlameable && isActiveDocument(this._document)) {\n            void this.update({ forceBlameChange: true });\n        }\n    }\n\n    resetForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = false;\n    }\n\n    setForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = true;\n    }\n\n    async update(options: { forceBlameChange?: boolean; initializing?: boolean; repo?: Repository } = {}) {\n        if (this._disposed || this._uri === undefined) {\n            this._hasRemotes = false;\n            this._isTracked = false;\n\n            return;\n        }\n\n        this._isDirtyIdle = false;\n\n        const active = getEditorIfActive(this._document);\n        const wasBlameable = options.forceBlameChange ? undefined : this.isBlameable;\n\n        this._isTracked = await Container.git.isTracked(this._uri);\n\n        let repo = undefined;\n        if (this._isTracked) {\n            repo = options.repo;\n            if (repo === undefined) {\n                repo = await this._repo;\n            }\n        }\n\n        if (repo !== undefined) {\n            this._hasRemotes = await repo.hasRemotes();\n        }\n        else {\n            this._hasRemotes = false;\n        }\n\n        if (active !== undefined) {\n            const blameable = this.isBlameable;\n\n            setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n\n            if (!options.initializing && wasBlameable !== blameable) {\n                const e = { editor: active, document: this, blameable: blameable } as DocumentBlameStateChangeEvent<T>;\n                this._onDidBlameStateChange.fire(e);\n                this._eventDelegates.onDidBlameStateChange(e);\n            }\n        }\n    }\n\n    private getStatus() {\n        let status = '';\n        if (this.isTracked) {\n            status += 'tracked|';\n        }\n        if (this.isBlameable) {\n            status += 'blameable|';\n        }\n        if (this.isRevision) {\n            status += 'revision|';\n        }\n        if (this.hasRemotes) {\n            status += 'remotes|';\n        }\n\n        return status ? status : undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    EndOfLine,\n    Event,\n    EventEmitter,\n    Position,\n    Range,\n    TextDocument,\n    TextDocumentChangeEvent,\n    TextEditor,\n    TextLine,\n    Uri,\n    window,\n    workspace\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, DocumentSchemes, isActiveDocument, isTextEditor, setCommandContext } from '../constants';\nimport { GitUri } from '../git/gitService';\nimport { Functions, IDeferrable } from '../system';\nimport { DocumentBlameStateChangeEvent, TrackedDocument } from './trackedDocument';\n\nexport * from './trackedDocument';\n\nexport interface DocumentDirtyStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly dirty: boolean;\n}\n\nexport interface DocumentDirtyIdleTriggerEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n}\n\nexport class DocumentTracker<T> implements Disposable {\n    private _onDidChangeBlameState = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidChangeBlameState(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidChangeBlameState.event;\n    }\n\n    private _onDidChangeDirtyState = new EventEmitter<DocumentDirtyStateChangeEvent<T>>();\n    get onDidChangeDirtyState(): Event<DocumentDirtyStateChangeEvent<T>> {\n        return this._onDidChangeDirtyState.event;\n    }\n\n    private _onDidTriggerDirtyIdle = new EventEmitter<DocumentDirtyIdleTriggerEvent<T>>();\n    get onDidTriggerDirtyIdle(): Event<DocumentDirtyIdleTriggerEvent<T>> {\n        return this._onDidTriggerDirtyIdle.event;\n    }\n\n    private _dirtyIdleTriggerDelay!: number;\n    private readonly _disposable: Disposable | undefined;\n    private readonly _documentMap: Map<TextDocument | string, TrackedDocument<T>> = new Map();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this),\n            // window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleEditorsChanged, 5000), this),\n            workspace.onDidChangeTextDocument(Functions.debounce(this.onTextDocumentChanged, 50), this),\n            workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n            workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this)\n        );\n\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n\n        this.clear();\n    }\n\n    initialize() {\n        this.onActiveTextEditorChanged(window.activeTextEditor);\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        // Only rest the cached state if we aren't initializing\n        if (\n            !configuration.initializing(e) &&\n            (configuration.changed(e, configuration.name('blame')('ignoreWhitespace').value, null) ||\n                configuration.changed(e, configuration.name('advanced')('caching')('enabled').value))\n        ) {\n            for (const d of this._documentMap.values()) {\n                d.reset('config');\n            }\n        }\n\n        const section = configuration.name('advanced')('blame')('delayAfterEdit').value;\n        if (configuration.changed(e, section)) {\n            this._dirtyIdleTriggerDelay = configuration.get<number>(section);\n            this._dirtyIdleTriggeredDebounced = undefined;\n        }\n    }\n\n    private _timer: NodeJS.Timer | undefined;\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n\n        if (editor === undefined) {\n            this._timer = setTimeout(() => {\n                this._timer = undefined;\n\n                setCommandContext(CommandContext.ActiveFileStatus, undefined);\n            }, 250);\n\n            return;\n        }\n\n        const doc = this._documentMap.get(editor.document);\n        if (doc !== undefined) {\n            doc.activate();\n\n            return;\n        }\n\n        // No need to activate this, as it is implicit in initialization if currently active\n        this.addCore(editor.document);\n    }\n\n    private onTextDocumentChanged(e: TextDocumentChangeEvent) {\n        const { scheme } = e.document.uri;\n        if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) return;\n\n        let doc = this._documentMap.get(e.document);\n        if (doc === undefined) {\n            doc = this.addCore(e.document);\n        }\n\n        doc.reset('document');\n\n        const dirty = e.document.isDirty;\n        const editor = window.activeTextEditor;\n\n        // If we have an idle tracker, either reset or cancel it\n        if (this._dirtyIdleTriggeredDebounced !== undefined) {\n            if (dirty) {\n                this._dirtyIdleTriggeredDebounced({ editor: editor!, document: doc });\n            }\n            else {\n                this._dirtyIdleTriggeredDebounced.cancel();\n            }\n        }\n\n        if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty) return;\n\n        doc.resetForceDirtyStateChangeOnNextDocumentChange();\n        doc.dirty = dirty;\n\n        // Only fire state change events for the active document\n        if (editor === undefined || editor.document !== e.document) return;\n\n        this.fireDocumentDirtyStateChanged({ editor: editor, document: doc, dirty: doc.dirty });\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc === undefined) return;\n\n        doc.dispose();\n        this._documentMap.delete(document);\n        this._documentMap.delete(doc.key);\n    }\n\n    private onTextDocumentSaved(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc !== undefined) {\n            void doc.update({ forceBlameChange: true });\n\n            return;\n        }\n\n        // If we are saving the active document make sure we are tracking it\n        if (isActiveDocument(document)) {\n            void this.addCore(document);\n        }\n    }\n\n    // private onVisibleEditorsChanged(editors: TextEditor[]) {\n    //     if (this._documentMap.size === 0) return;\n\n    //     // If we have no visible editors, or no \"real\" visible editors reset our cache\n    //     if (editors.length === 0 || editors.every(e => !isTextEditor(e))) {\n    //         this.clear();\n    //     }\n    // }\n\n    add(document: TextDocument): Promise<TrackedDocument<T>>;\n    add(uri: Uri): Promise<TrackedDocument<T>>;\n    add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        return this._add(documentOrId);\n    }\n\n    clear() {\n        for (const d of this._documentMap.values()) {\n            d.dispose();\n        }\n\n        this._documentMap.clear();\n    }\n\n    get(fileName: string): Promise<TrackedDocument<T> | undefined>;\n    get(document: TextDocument): Promise<TrackedDocument<T> | undefined>;\n    get(uri: Uri): Promise<TrackedDocument<T> | undefined>;\n    get(documentOrId: string | TextDocument | Uri): Promise<TrackedDocument<T> | undefined> {\n        return this._get(documentOrId);\n    }\n\n    async getOrAdd(document: TextDocument): Promise<TrackedDocument<T>>;\n    async getOrAdd(uri: Uri): Promise<TrackedDocument<T>>;\n    async getOrAdd(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let doc = await this._get(documentOrId);\n        if (doc === undefined) {\n            doc = await this._add(documentOrId);\n        }\n        return doc;\n    }\n\n    has(fileName: string): boolean;\n    has(document: TextDocument): boolean;\n    has(uri: Uri): boolean;\n    has(key: string | TextDocument | Uri): boolean {\n        if (typeof key === 'string' || key instanceof Uri) {\n            key = GitUri.toKey(key);\n        }\n        return this._documentMap.has(key);\n    }\n\n    private async _add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        if (documentOrId instanceof GitUri) {\n            try {\n                documentOrId = await workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));\n            }\n            catch (ex) {\n                const msg = ex.toString();\n                if (msg.includes('File seems to be binary and cannot be opened as text')) {\n                    documentOrId = new BinaryTextDocument(documentOrId);\n                }\n                else if (msg.includes('File not found')) {\n                    // If we can't find the file, assume it is because the file has been renamed or deleted at some point\n                    documentOrId = new MissingRevisionTextDocument(documentOrId);\n\n                    // const [fileName, repoPath] = await Container.git.findWorkingFileName(documentOrId, undefined, ref);\n                    // if (fileName === undefined) throw new Error(`Failed to add tracking for document: ${documentOrId}`);\n\n                    // documentOrId = await workspace.openTextDocument(path.resolve(repoPath!, fileName));\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n        else if (documentOrId instanceof Uri) {\n            documentOrId = await workspace.openTextDocument(documentOrId);\n        }\n\n        const doc = await this.addCore(documentOrId);\n        await doc.ensureInitialized();\n\n        return doc;\n    }\n\n    private async _get(documentOrId: string | TextDocument | Uri) {\n        if (documentOrId instanceof GitUri) {\n            documentOrId = GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));\n        }\n        else if (typeof documentOrId === 'string' || documentOrId instanceof Uri) {\n            documentOrId = GitUri.toKey(documentOrId);\n        }\n\n        const doc = this._documentMap.get(documentOrId);\n        if (doc === undefined) return undefined;\n\n        await doc.ensureInitialized();\n        return doc;\n    }\n\n    private addCore(document: TextDocument): TrackedDocument<T> {\n        const key = GitUri.toKey(document.uri);\n\n        // Always start out false, so we will fire the event if needed\n        const doc = new TrackedDocument<T>(document, key, false, {\n            onDidBlameStateChange: (e: DocumentBlameStateChangeEvent<T>) => this._onDidChangeBlameState.fire(e)\n        });\n        this._documentMap.set(document, doc);\n        this._documentMap.set(key, doc);\n\n        return doc;\n    }\n\n    private _dirtyIdleTriggeredDebounced: (((e: DocumentDirtyIdleTriggerEvent<T>) => void) & IDeferrable) | undefined;\n    private _dirtyStateChangedDebounced: (((e: DocumentDirtyStateChangeEvent<T>) => void) & IDeferrable) | undefined;\n    private fireDocumentDirtyStateChanged(e: DocumentDirtyStateChangeEvent<T>) {\n        if (e.dirty) {\n            setImmediate(async () => {\n                if (this._dirtyStateChangedDebounced !== undefined) {\n                    this._dirtyStateChangedDebounced.cancel();\n                }\n\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            });\n\n            if (this._dirtyIdleTriggerDelay > 0) {\n                if (this._dirtyIdleTriggeredDebounced === undefined) {\n                    this._dirtyIdleTriggeredDebounced = Functions.debounce(\n                        async (e: DocumentDirtyIdleTriggerEvent<T>) => {\n                            if (\n                                this._dirtyIdleTriggeredDebounced !== undefined &&\n                                this._dirtyIdleTriggeredDebounced.pending!()\n                            ) {\n                                return;\n                            }\n\n                            await e.document.ensureInitialized();\n\n                            e.document.isDirtyIdle = true;\n                            this._onDidTriggerDirtyIdle.fire(e);\n                        },\n                        this._dirtyIdleTriggerDelay,\n                        { track: true }\n                    );\n                }\n\n                this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });\n            }\n\n            return;\n        }\n\n        if (this._dirtyStateChangedDebounced === undefined) {\n            this._dirtyStateChangedDebounced = Functions.debounce(async (e: DocumentDirtyStateChangeEvent<T>) => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            }, 250);\n        }\n\n        this._dirtyStateChangedDebounced(e);\n    }\n}\n\nclass EmptyTextDocument implements TextDocument {\n    readonly eol: EndOfLine;\n    readonly fileName: string;\n    readonly isClosed: boolean;\n    readonly isDirty: boolean;\n    readonly isUntitled: boolean;\n    readonly languageId: string;\n    readonly lineCount: number;\n    readonly uri: Uri;\n    readonly version: number;\n\n    constructor(\n        public readonly gitUri: GitUri\n    ) {\n        this.uri = gitUri.documentUri({ useVersionedPath: true });\n\n        this.eol = EndOfLine.LF;\n        this.fileName = this.uri.fsPath;\n        this.isClosed = false;\n        this.isDirty = false;\n        this.isUntitled = false;\n        this.languageId = '';\n        this.lineCount = 0;\n        this.version = 0;\n    }\n\n    getText(range?: Range | undefined): string {\n        throw new Error('Method not supported.');\n    }\n\n    getWordRangeAtPosition(position: Position, regex?: RegExp | undefined): Range | undefined {\n        throw new Error('Method not supported.');\n    }\n\n    lineAt(line: number): TextLine;\n    lineAt(position: Position): TextLine;\n    lineAt(position: any): TextLine {\n        throw new Error('Method not supported.');\n    }\n\n    offsetAt(position: Position): number {\n        throw new Error('Method not supported.');\n    }\n\n    positionAt(offset: number): Position {\n        throw new Error('Method not supported.');\n    }\n\n    save(): Thenable<boolean> {\n        throw new Error('Method not supported.');\n    }\n\n    validatePosition(position: Position): Position {\n        throw new Error('Method not supported.');\n    }\n\n    validateRange(range: Range): Range {\n        throw new Error('Method not supported.');\n    }\n}\n\nclass BinaryTextDocument extends EmptyTextDocument {}\nclass MissingRevisionTextDocument extends EmptyTextDocument {}\n","'use strict';\nimport { GitBlame, GitDiff, GitLog } from '../git/git';\nimport { DocumentTracker } from './documentTracker';\n\nexport * from './documentTracker';\n\ninterface CachedItem<T> {\n    item: Promise<T>;\n    errorMessage?: string;\n}\n\nexport type CachedBlame = CachedItem<GitBlame>;\nexport type CachedDiff = CachedItem<GitDiff>;\nexport type CachedLog = CachedItem<GitLog>;\n\nexport class GitDocumentState {\n    private cache: Map<string, CachedBlame | CachedDiff | CachedLog> = new Map();\n\n    constructor(\n        public readonly key: string\n    ) {}\n\n    get<T extends CachedBlame | CachedDiff | CachedLog>(key: string): T | undefined {\n        return this.cache.get(key) as T;\n    }\n\n    set<T extends CachedBlame | CachedDiff | CachedLog>(key: string, value: T) {\n        this.cache.set(key, value);\n    }\n}\n\nexport class GitDocumentTracker extends DocumentTracker<GitDocumentState> {}\n","'use strict';\nimport { execFile } from 'child_process';\nimport * as fs from 'fs';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { Logger } from '../logger';\n\nconst isWindows = process.platform === 'win32';\n\n/**\n * Search PATH to see if a file exists in any of the path folders.\n *\n * @param  {string} exe The file to search for\n * @return {string}     A fully qualified path, or the original path if nothing\n *                      is found\n *\n * @private\n */\nfunction runDownPath(exe: string): string {\n    // NB: Windows won't search PATH looking for executables in spawn like\n    // Posix does\n\n    // Files with any directory path don't get this applied\n    if (exe.match(/[\\\\\\/]/)) return exe;\n\n    const target = paths.join('.', exe);\n    try {\n        if (fs.statSync(target)) return target;\n    }\n    catch {}\n\n    const haystack = process.env.PATH!.split(isWindows ? ';' : ':');\n    for (const p of haystack) {\n        const needle = paths.join(p, exe);\n        try {\n            if (fs.statSync(needle)) return needle;\n        }\n        catch {}\n    }\n\n    return exe;\n}\n\n/**\n * Finds the executable and parameters to run on Windows. This method\n * mimics the POSIX behavior of being able to run scripts as executables by\n * replacing the passed-in executable with the script runner, for PowerShell,\n * CMD, and node scripts.\n *\n * This method also does the work of running down PATH, which spawn on Windows\n * also doesn't do, unlike on POSIX.\n */\nexport function findExecutable(exe: string, args: string[]): { cmd: string; args: string[] } {\n    // POSIX can just execute scripts directly, no need for silly goosery\n    if (!isWindows) return { cmd: runDownPath(exe), args: args };\n\n    if (!fs.existsSync(exe)) {\n        // NB: When you write something like `surf-client ... -- surf-build` on Windows,\n        // a shell would normally convert that to surf-build.cmd, but since it's passed\n        // in as an argument, it doesn't happen\n        const possibleExts = ['.exe', '.bat', '.cmd', '.ps1'];\n        for (const ext of possibleExts) {\n            const possibleFullPath = runDownPath(`${exe}${ext}`);\n\n            if (fs.existsSync(possibleFullPath)) return findExecutable(possibleFullPath, args);\n        }\n    }\n\n    if (exe.match(/\\.ps1$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'WindowsPowerShell', 'v1.0', 'PowerShell.exe');\n        const psargs = ['-ExecutionPolicy', 'Unrestricted', '-NoLogo', '-NonInteractive', '-File', exe];\n\n        return { cmd: cmd, args: psargs.concat(args) };\n    }\n\n    if (exe.match(/\\.(bat|cmd)$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'cmd.exe');\n        const cmdArgs = ['/C', exe, ...args];\n\n        return { cmd: cmd, args: cmdArgs };\n    }\n\n    if (exe.match(/\\.(js)$/i)) {\n        const cmd = process.execPath;\n        const nodeArgs = [exe];\n\n        return { cmd: cmd, args: nodeArgs.concat(args) };\n    }\n\n    return { cmd: exe, args: args };\n}\n\nexport class RunError extends Error {\n    constructor(\n        public readonly exitCode: number,\n        ...args: any[]\n    ) {\n        super(...args);\n\n        Error.captureStackTrace(this, RunError);\n    }\n}\n\nexport interface RunOptions {\n    cwd?: string;\n    readonly env?: Object;\n    readonly encoding?: BufferEncoding | 'buffer';\n    /**\n     * The size the output buffer to allocate to the spawned process. Set this\n     * if you are anticipating a large amount of output.\n     *\n     * If not specified, this will be 10MB (10485760 bytes) which should be\n     * enough for most Git operations.\n     */\n    readonly maxBuffer?: number;\n    /**\n     * An optional string or buffer which will be written to\n     * the child process stdin stream immediately immediately\n     * after spawning the process.\n     */\n    readonly stdin?: string | Buffer;\n    /**\n     * The encoding to use when writing to stdin, if the stdin\n     * parameter is a string.\n     */\n    readonly stdinEncoding?: string;\n}\n\nexport function run<TOut extends string | Buffer>(\n    command: string,\n    args: any[],\n    encoding: BufferEncoding | 'buffer',\n    options: RunOptions = {}\n): Promise<TOut> {\n    const { stdin, stdinEncoding, ...opts } = { maxBuffer: 100 * 1024 * 1024, ...options } as RunOptions;\n\n    return new Promise<TOut>((resolve, reject) => {\n        const proc = execFile(\n            command,\n            args,\n            opts,\n            (err: (Error & { code?: string | number }) | null, stdout, stderr) => {\n                if (err != null) {\n                    reject(\n                        new RunError(\n                            err.code ? Number(err.code) : 0,\n                            err.message === 'stdout maxBuffer exceeded'\n                                ? `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${\n                                      opts.maxBuffer\n                                  } bytes`\n                                : stderr || stdout\n                        )\n                    );\n\n                    return;\n                }\n\n                if (stderr) {\n                    Logger.warn(`Warning(${command} ${args.join(' ')}): ${stderr}`);\n                }\n\n                resolve(\n                    encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                        ? (stdout as TOut)\n                        : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut)\n                );\n            }\n        );\n\n        if (stdin) {\n            proc.stdin.end(stdin, stdinEncoding || 'utf8');\n        }\n    });\n}\n","'use strict';\nimport * as paths from 'path';\nimport { findExecutable, run } from './shell';\n\nexport interface GitLocation {\n    path: string;\n    version: string;\n}\n\nfunction parseVersion(raw: string): string {\n    return raw.replace(/^git version /, '');\n}\n\nasync function findSpecificGit(path: string): Promise<GitLocation> {\n    const version = await run<string>(path, ['--version'], 'utf8');\n    // If needed, let's update our path to avoid the search on every command\n    if (!path || path === 'git') {\n        path = findExecutable(path, ['--version']).cmd;\n    }\n\n    return {\n        path,\n        version: parseVersion(version.trim())\n    };\n}\n\nasync function findGitDarwin(): Promise<GitLocation> {\n    try {\n        let path = await run<string>('which', ['git'], 'utf8');\n        path = path.replace(/^\\s+|\\s+$/g, '');\n\n        if (path !== '/usr/bin/git') {\n            return findSpecificGit(path);\n        }\n\n        try {\n            await run<string>('xcode-select', ['-p'], 'utf8');\n            return findSpecificGit(path);\n        }\n        catch (ex) {\n            if (ex.code === 2) {\n                return Promise.reject(new Error('Unable to find git'));\n            }\n            return findSpecificGit(path);\n        }\n    }\n    catch (ex) {\n        return Promise.reject(new Error('Unable to find git'));\n    }\n}\n\nfunction findSystemGitWin32(basePath: string): Promise<GitLocation> {\n    if (!basePath) return Promise.reject(new Error('Unable to find git'));\n    return findSpecificGit(paths.join(basePath, 'Git', 'cmd', 'git.exe'));\n}\n\nfunction findGitWin32(): Promise<GitLocation> {\n    return findSystemGitWin32(process.env['ProgramW6432']!)\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles(x86)']!))\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles']!))\n        .then(null, () => findSpecificGit('git'));\n}\n\nexport async function findGitPath(path?: string): Promise<GitLocation> {\n    try {\n        return await findSpecificGit(path || 'git');\n    }\n    catch (ex) {\n        try {\n            switch (process.platform) {\n                case 'darwin':\n                    return await findGitDarwin();\n                case 'win32':\n                    return await findGitWin32();\n                default:\n                    return Promise.reject('Unable to find git');\n            }\n        }\n        catch (ex) {\n            return Promise.reject(new Error('Unable to find git'));\n        }\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\n\nexport interface IFormatOptions {\n    dateFormat?: string | null;\n    tokenOptions?: { [id: string]: Strings.ITokenOptions | undefined };\n}\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nconst spaceReplacementRegex = / /g;\n\nexport abstract class Formatter<TItem = any, TOptions extends IFormatOptions = IFormatOptions> {\n    protected _item!: TItem;\n    protected _options!: TOptions;\n\n    constructor(item: TItem, options?: TOptions) {\n        this.reset(item, options);\n    }\n\n    reset(item: TItem, options?: TOptions) {\n        this._item = item;\n\n        if (options === undefined && this._options !== undefined) return;\n\n        if (options === undefined) {\n            options = {} as TOptions;\n        }\n\n        if (options.dateFormat == null) {\n            options.dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (options.tokenOptions == null) {\n            options.tokenOptions = {};\n        }\n\n        this._options = options;\n    }\n\n    private collapsableWhitespace: number = 0;\n\n    protected _padOrTruncate(s: string, options: Strings.ITokenOptions | undefined) {\n        if (s == null || s.length === 0) return s;\n\n        // NOTE: the collapsable whitespace logic relies on the javascript template evaluation to be left to right\n        if (options === undefined) {\n            options = {\n                collapseWhitespace: false,\n                padDirection: 'left',\n                prefix: undefined,\n                suffix: undefined,\n                truncateTo: undefined\n            };\n        }\n\n        let max = options.truncateTo;\n        if (max === undefined) {\n            this.collapsableWhitespace = 0;\n        }\n        else {\n            max += this.collapsableWhitespace;\n            this.collapsableWhitespace = 0;\n\n            const width = Strings.getWidth(s);\n            const diff = max - width;\n            if (diff > 0) {\n                if (options.collapseWhitespace) {\n                    this.collapsableWhitespace = diff;\n                }\n\n                if (options.padDirection === 'left') {\n                    s = Strings.padLeft(s, max, undefined, width);\n                }\n                else {\n                    if (options.collapseWhitespace) {\n                        max -= diff;\n                    }\n                    s = Strings.padRight(s, max, undefined, width);\n                }\n            }\n            else if (diff < 0) {\n                s = Strings.truncate(s, max, undefined, width);\n            }\n        }\n\n        if (options.prefix || options.suffix) {\n            s = `${options.prefix || ''}${s}${options.suffix || ''}`;\n        }\n\n        return s;\n    }\n\n    private static _formatter: Formatter | undefined = undefined;\n\n    protected static fromTemplateCore<\n        TFormatter extends Formatter<TItem, TOptions>,\n        TItem,\n        TOptions extends IFormatOptions\n    >(\n        formatter: TFormatter | Constructor<TFormatter>,\n        template: string,\n        item: TItem,\n        dateFormatOrOptions?: string | null | TOptions\n    ): string {\n        // Preserve spaces\n        template = template.replace(spaceReplacementRegex, '\\u00a0');\n        if (formatter instanceof Formatter) return Strings.interpolate(template, formatter);\n\n        let options: TOptions | undefined = undefined;\n        if (dateFormatOrOptions == null || typeof dateFormatOrOptions === 'string') {\n            options = {\n                dateFormat: dateFormatOrOptions\n            } as TOptions;\n        }\n        else {\n            options = dateFormatOrOptions;\n        }\n\n        if (options.tokenOptions == null) {\n            const tokenOptions = Strings.getTokensFromTemplate(template).reduce(\n                (map, token) => {\n                    map[token.key] = token.options;\n                    return map;\n                },\n                {} as { [token: string]: Strings.ITokenOptions | undefined }\n            );\n\n            options.tokenOptions = tokenOptions;\n        }\n\n        if (this._formatter === undefined) {\n            this._formatter = new formatter(item, options);\n        }\n        else {\n            this._formatter.reset(item, options);\n        }\n\n        return Strings.interpolate(template, this._formatter);\n    }\n}\n","'use strict';\nimport { DateStyle } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { Strings } from '../../system';\nimport { GitCommit, GitCommitType } from '../models/commit';\nimport { GitLogCommit } from '../models/models';\nimport { Formatter, IFormatOptions } from './formatter';\n\nconst emojiMap: { [key: string]: string } = require('../../../emoji/emojis.json');\nconst emojiRegex = /:([-+_a-z0-9]+):/g;\n\nexport interface ICommitFormatOptions extends IFormatOptions {\n    dateStyle?: DateStyle;\n    truncateMessageAtNewLine?: boolean;\n\n    tokenOptions?: {\n        ago?: Strings.ITokenOptions;\n        agoOrDate?: Strings.ITokenOptions;\n        author?: Strings.ITokenOptions;\n        authorAgo?: Strings.ITokenOptions;\n        authorAgoOrDate?: Strings.ITokenOptions;\n        changes?: Strings.ITokenOptions;\n        changesShort?: Strings.ITokenOptions;\n        date?: Strings.ITokenOptions;\n        id?: Strings.ITokenOptions;\n        message?: Strings.ITokenOptions;\n    };\n}\n\nexport class CommitFormatter extends Formatter<GitCommit, ICommitFormatOptions> {\n    private get _ago() {\n        return this._item.fromNow();\n    }\n\n    private get _date() {\n        return this._item.formatDate(this._options.dateFormat!);\n    }\n\n    private get _agoOrDate() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._date : this._ago;\n    }\n\n    get ago() {\n        return this._padOrTruncate(this._ago, this._options.tokenOptions!.ago);\n    }\n\n    get agoOrDate() {\n        return this._padOrTruncate(this._agoOrDate, this._options.tokenOptions!.agoOrDate);\n    }\n\n    get author() {\n        const author = this._item.author;\n        return this._padOrTruncate(author, this._options.tokenOptions!.author);\n    }\n\n    get authorAgo() {\n        const authorAgo = `${this._item.author}, ${this._ago}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgo);\n    }\n\n    get authorAgoOrDate() {\n        const authorAgo = `${this._item.author}, ${this._agoOrDate}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgoOrDate);\n    }\n\n    get changes() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changes);\n        }\n\n        return this._padOrTruncate(this._item.getFormattedDiffStatus(), this._options.tokenOptions!.changes);\n    }\n\n    get changesShort() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changesShort);\n        }\n\n        return this._padOrTruncate(\n            this._item.getFormattedDiffStatus({ compact: true, separator: '' }),\n            this._options.tokenOptions!.changesShort\n        );\n    }\n\n    get date() {\n        return this._padOrTruncate(this._date, this._options.tokenOptions!.date);\n    }\n\n    get id() {\n        return this._padOrTruncate(this._item.shortSha || '', this._options.tokenOptions!.id);\n    }\n\n    get message() {\n        let message: string;\n        if (this._item.isStagedUncommitted) {\n            message = 'Staged changes';\n        }\n        else if (this._item.isUncommitted) {\n            message = 'Uncommitted changes';\n        }\n        else {\n            if (this._options.truncateMessageAtNewLine) {\n                const index = this._item.message.indexOf('\\n');\n                message =\n                    index === -1\n                        ? this._item.message\n                        : `${this._item.message.substring(0, index)}${GlyphChars.Space}${GlyphChars.Ellipsis}`;\n            }\n            else {\n                message = this._item.message;\n            }\n\n            message = message.replace(emojiRegex, (s, code) => emojiMap[code] || s);\n        }\n\n        return this._padOrTruncate(message, this._options.tokenOptions!.message);\n    }\n\n    get sha() {\n        return this.id;\n    }\n\n    static fromTemplate(template: string, commit: GitCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, commit: GitCommit, options?: ICommitFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { DocumentSchemes, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitFile, GitService } from '../git/gitService';\nimport { Strings } from '../system';\n\nconst empty = '';\nconst slash = '/';\n\nexport interface GitCommitish {\n    fileName?: string;\n    repoPath: string;\n    sha?: string;\n    versionedPath?: string;\n}\n\n// Taken from https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L331-L337\ninterface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n}\n\ninterface UriEx {\n    new (): Uri;\n    new (scheme: string, authority: string, path: string, query: string, fragment: string): Uri;\n    // Use this ctor, because vscode doesn't validate it\n    new (components: UriComponents): Uri;\n}\n\nexport class GitUri extends ((Uri as any) as UriEx) {\n    repoPath?: string;\n    sha?: string;\n    versionedPath?: string;\n\n    constructor(uri?: Uri);\n    constructor(uri: Uri, commit: GitCommitish);\n    constructor(uri: Uri, repoPath: string | undefined);\n    constructor(uri?: Uri, commitOrRepoPath?: GitCommitish | string) {\n        if (uri == null) {\n            super();\n\n            return;\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens) {\n            const data = JSON.parse(uri.query) as IUriRevisionData;\n\n            // When Uri's come from the FileSystemProvider, the uri.query only contains the root repo info (not the actual file path), so fix that here\n            const index = uri.path.indexOf(data.path);\n            if (index + data.path.length < uri.path.length) {\n                data.path = uri.path.substr(index);\n            }\n\n            super({\n                scheme: uri.scheme,\n                authority: uri.authority,\n                path: data.path,\n                query: JSON.stringify(data),\n                fragment: uri.fragment\n            });\n\n            this.repoPath = data.repoPath;\n            if (GitService.isStagedUncommitted(data.ref) || !GitService.isUncommitted(data.ref)) {\n                this.sha = data.ref;\n            }\n\n            return;\n        }\n\n        if (commitOrRepoPath === undefined) {\n            super(uri);\n\n            return;\n        }\n\n        if (typeof commitOrRepoPath === 'string') {\n            super(uri);\n\n            this.repoPath = commitOrRepoPath;\n\n            return;\n        }\n\n        const [authority, fsPath] = GitUri.ensureValidUNCPath(\n            uri.authority,\n            GitUri.resolve(commitOrRepoPath.fileName || uri.fsPath, commitOrRepoPath.repoPath)\n        );\n\n        let path;\n        switch (uri.scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!fsPath) {\n                    path = slash;\n                }\n                else if (fsPath[0] !== slash) {\n                    path = `/${fsPath}`;\n                }\n                else {\n                    path = fsPath;\n                }\n                break;\n            default:\n                path = fsPath;\n                break;\n        }\n\n        super({\n            scheme: uri.scheme,\n            authority: authority,\n            path: path,\n            query: uri.query,\n            fragment: uri.fragment\n        });\n        this.repoPath = commitOrRepoPath.repoPath;\n        this.versionedPath = commitOrRepoPath.versionedPath;\n        if (GitService.isStagedUncommitted(commitOrRepoPath.sha) || !GitService.isUncommitted(commitOrRepoPath.sha)) {\n            this.sha = commitOrRepoPath.sha;\n        }\n    }\n\n    get shortSha() {\n        return this.sha && GitService.shortenSha(this.sha);\n    }\n\n    documentUri(options: { useVersionedPath?: boolean } = {}) {\n        if (options.useVersionedPath && this.versionedPath !== undefined) return GitUri.file(this.versionedPath);\n        if (this.scheme !== 'file') return this;\n\n        return GitUri.file(this.fsPath);\n    }\n\n    equals(uri: Uri | undefined) {\n        if (!UriComparer.equals(this, uri)) return false;\n\n        return this.sha === (uri instanceof GitUri ? uri.sha : undefined);\n    }\n\n    getDirectory(relativeTo?: string): string {\n        return GitUri.getDirectory(\n            this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath,\n            relativeTo\n        );\n    }\n\n    getFilename(relativeTo?: string): string {\n        return paths.basename(this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath, relativeTo);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        const { relativeTo = this.repoPath, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        const directory = GitUri.getDirectory(this.fsPath, relativeTo);\n        return `${paths.basename(this.fsPath)}${suffix}${directory ? `${separator}${directory}` : empty}`;\n    }\n\n    getRelativePath(relativeTo?: string): string {\n        let relativePath = this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    toFileUri() {\n        return GitUri.file(this.fsPath);\n    }\n\n    private static ensureValidUNCPath(authority: string, fsPath: string): [string, string] {\n        // Taken from https://github.com/Microsoft/vscode/blob/e444eaa768a1e8bd8315f2cee265d725e96a8162/src/vs/base/common/uri.ts#L300-L325\n        // check for authority as used in UNC shares or use the path as given\n        if (fsPath[0] === slash && fsPath[1] === slash) {\n            const index = fsPath.indexOf(slash, 2);\n            if (index === -1) {\n                authority = fsPath.substring(2);\n                fsPath = slash;\n            }\n            else {\n                authority = fsPath.substring(2, index);\n                fsPath = fsPath.substring(index) || slash;\n            }\n        }\n\n        return [authority, fsPath];\n    }\n\n    static file(path: string, useVslsScheme?: boolean) {\n        const uri = Uri.file(path);\n        if (Container.vsls.isMaybeGuest && useVslsScheme !== false) {\n            return uri.with({ scheme: DocumentSchemes.Vsls });\n        }\n\n        return uri;\n    }\n\n    static fromCommit(commit: GitCommit, previous: boolean = false) {\n        if (!previous) return new GitUri(commit.uri, commit);\n\n        return new GitUri(commit.previousUri, {\n            repoPath: commit.repoPath,\n            sha: commit.previousSha\n        });\n    }\n\n    static fromFile(fileName: string, repoPath: string, ref?: string): GitUri;\n    static fromFile(file: GitFile, repoPath: string, ref?: string, original?: boolean): GitUri;\n    static fromFile(fileOrName: GitFile | string, repoPath: string, ref?: string, original: boolean = false): GitUri {\n        const uri = GitUri.resolveToUri(\n            typeof fileOrName === 'string'\n                ? fileOrName\n                : (original && fileOrName.originalFileName) || fileOrName.fileName,\n            repoPath\n        );\n        return ref === undefined ? new GitUri(uri, repoPath) : new GitUri(uri, { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRepoPath(repoPath: string, ref?: string) {\n        return ref === undefined\n            ? new GitUri(GitUri.file(repoPath), repoPath)\n            : new GitUri(GitUri.file(repoPath), { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRevisionUri(uri: Uri): GitUri {\n        return new GitUri(uri);\n    }\n\n    static async fromUri(uri: Uri) {\n        if (uri instanceof GitUri) return uri;\n\n        if (!Container.git.isTrackable(uri)) return new GitUri(uri);\n\n        if (uri.scheme === DocumentSchemes.GitLens) return new GitUri(uri);\n\n        // If this is a git uri, find its repoPath\n        if (uri.scheme === DocumentSchemes.Git) {\n            const data: { path: string; ref: string } = JSON.parse(uri.query);\n\n            const repoPath = await Container.git.getRepoPath(data.path);\n\n            let ref;\n            switch (data.ref) {\n                case empty:\n                case '~':\n                    ref = GitService.stagedUncommittedSha;\n                    break;\n\n                case null:\n                    ref = undefined;\n                    break;\n\n                default:\n                    ref = data.ref;\n                    break;\n            }\n\n            return new GitUri(uri, {\n                fileName: data.path,\n                repoPath: repoPath,\n                sha: ref\n            } as GitCommitish);\n        }\n\n        return new GitUri(uri, await Container.git.getRepoPath(uri));\n    }\n\n    static getDirectory(fileName: string, relativeTo?: string): string {\n        let directory: string | undefined = paths.dirname(fileName);\n        if (relativeTo !== undefined) {\n            directory = paths.relative(relativeTo, directory);\n        }\n        directory = Strings.normalizePath(directory);\n        return !directory || directory === '.' ? empty : directory;\n    }\n\n    static getFormattedPath(\n        fileNameOrUri: string | Uri,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        const { relativeTo, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getFormattedPath(options);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        const directory = GitUri.getDirectory(fileName, relativeTo);\n        return !directory\n            ? `${paths.basename(fileName)}${suffix}`\n            : `${paths.basename(fileName)}${suffix}${separator}${directory}`;\n    }\n\n    static getRelativePath(fileNameOrUri: string | Uri, relativeTo?: string, repoPath?: string): string {\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getRelativePath(relativeTo);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        let relativePath = repoPath ? paths.relative(repoPath, fileName) : fileName;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    static git(fileName: string, repoPath?: string) {\n        const path = GitUri.resolve(fileName, repoPath);\n        return Uri.parse(\n            `git:${path}?${JSON.stringify({\n                // Ensure we use the fsPath here, otherwise the url won't open properly\n                path: Uri.file(path).fsPath,\n                ref: '~'\n            })}`\n        );\n    }\n\n    static resolve(fileName: string, repoPath?: string) {\n        const normalizedFileName = Strings.normalizePath(fileName);\n        if (repoPath === undefined) return normalizedFileName;\n\n        const normalizedRepoPath = Strings.normalizePath(repoPath);\n        if (normalizedFileName == null || normalizedFileName.length === 0) return normalizedRepoPath;\n\n        if (normalizedFileName.startsWith(normalizedRepoPath)) return normalizedFileName;\n\n        return Strings.normalizePath(paths.join(normalizedRepoPath, normalizedFileName));\n    }\n\n    static resolveToUri(fileName: string, repoPath?: string) {\n        return GitUri.file(this.resolve(fileName, repoPath));\n    }\n\n    static toKey(fileName: string): string;\n    static toKey(uri: Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string {\n        return Strings.normalizePath(typeof fileNameOrUri === 'string' ? fileNameOrUri : fileNameOrUri.fsPath);\n\n        // return typeof fileNameOrUri === 'string'\n        //     ? GitUri.file(fileNameOrUri).toString(true)\n        //     : fileNameOrUri.toString(true);\n    }\n\n    static toRevisionUri(uri: GitUri): Uri;\n    static toRevisionUri(ref: string, fileName: string, repoPath: string): Uri;\n    static toRevisionUri(ref: string, file: GitFile, repoPath: string): Uri;\n    static toRevisionUri(uriOrRef: string | GitUri, fileNameOrFile?: string | GitFile, repoPath?: string): Uri {\n        let fileName: string;\n        let ref: string | undefined;\n        let shortSha: string | undefined;\n\n        if (typeof uriOrRef === 'string') {\n            if (typeof fileNameOrFile === 'string') {\n                fileName = fileNameOrFile;\n            }\n            else {\n                fileName = GitUri.resolve(fileNameOrFile!.fileName, repoPath);\n            }\n\n            ref = uriOrRef;\n            shortSha = GitService.shortenSha(ref);\n        }\n        else {\n            fileName = uriOrRef.fsPath!;\n            repoPath = uriOrRef.repoPath!;\n            ref = uriOrRef.sha;\n            shortSha = uriOrRef.shortSha;\n        }\n\n        repoPath = Strings.normalizePath(repoPath!);\n        const repoName = paths.basename(repoPath);\n\n        const filePath = Strings.normalizePath(fileName, { addLeadingSlash: true });\n        const data: IUriRevisionData = {\n            path: filePath,\n            ref: ref,\n            repoPath: repoPath\n        };\n\n        const uri = Uri.parse(\n            `${DocumentSchemes.GitLens}:///${repoName}@${shortSha}${\n                filePath === slash ? empty : filePath\n            }?${JSON.stringify(data)}`\n        );\n        return uri;\n    }\n}\n\ninterface IUriRevisionData {\n    path: string;\n    ref?: string;\n    repoPath: string;\n}\n","'use strict';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitLogCommit } from './logCommit';\n\nexport declare type GitFileStatus = '!' | '?' | 'A' | 'C' | 'D' | 'M' | 'R' | 'T' | 'U' | 'X' | 'B';\n\nexport interface GitFile {\n    status: GitFileStatus;\n    readonly repoPath?: string;\n    readonly indexStatus?: GitFileStatus;\n    readonly workingTreeStatus?: GitFileStatus;\n    readonly fileName: string;\n    readonly originalFileName?: string;\n}\n\nexport interface GitFileWithCommit extends GitFile {\n    readonly commit: GitLogCommit;\n}\n\nexport namespace GitFile {\n    export function getFormattedDirectory(\n        file: GitFile,\n        includeOriginal: boolean = false,\n        relativeTo?: string\n    ): string {\n        const directory = GitUri.getDirectory(file.fileName, relativeTo);\n        return includeOriginal && file.status === 'R' && file.originalFileName\n            ? `${directory} ${Strings.pad(GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}`\n            : directory;\n    }\n\n    export function getFormattedPath(\n        file: GitFile,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        return GitUri.getFormattedPath(file.fileName, options);\n    }\n\n    export function getRelativePath(file: GitFile, relativeTo?: string): string {\n        return GitUri.getRelativePath(file.fileName, relativeTo);\n    }\n\n    const statusIconsMap = {\n        '!': 'icon-status-ignored.svg',\n        '?': 'icon-status-untracked.svg',\n        A: 'icon-status-added.svg',\n        C: 'icon-status-copied.svg',\n        D: 'icon-status-deleted.svg',\n        M: 'icon-status-modified.svg',\n        R: 'icon-status-renamed.svg',\n        T: 'icon-status-modified.svg',\n        U: 'icon-status-conflict.svg',\n        X: 'icon-status-unknown.svg',\n        B: 'icon-status-unknown.svg'\n    };\n\n    export function getStatusIcon(status: GitFileStatus): string {\n        return statusIconsMap[status] || statusIconsMap['X'];\n    }\n\n    const statusOcticonsMap = {\n        '!': '$(diff-ignored)',\n        '?': '$(diff-added)',\n        A: '$(diff-added)',\n        C: '$(diff-added)',\n        D: '$(diff-removed)',\n        M: '$(diff-modified)',\n        R: '$(diff-renamed)',\n        T: '$(diff-modified)',\n        U: '$(alert)',\n        X: '$(question)',\n        B: '$(question)'\n    };\n\n    export function getStatusOcticon(status: GitFileStatus, missing: string = GlyphChars.Space.repeat(4)): string {\n        return statusOcticonsMap[status] || missing;\n    }\n\n    const statusTextMap = {\n        '!': 'Ignored',\n        '?': 'Untracked',\n        A: 'Added',\n        C: 'Copied',\n        D: 'Deleted',\n        M: 'Modified',\n        R: 'Renamed',\n        T: 'Modified',\n        U: 'Conflict',\n        X: 'Unknown',\n        B: 'Unknown'\n    };\n\n    export function getStatusText(status: GitFileStatus): string {\n        return statusTextMap[status] || statusTextMap['X'];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitFile, GitFileWithCommit } from '../models/file';\nimport { Formatter, IFormatOptions } from './formatter';\n\nexport interface IStatusFormatOptions extends IFormatOptions {\n    relativePath?: string;\n\n    tokenOptions?: {\n        directory?: Strings.ITokenOptions;\n        file?: Strings.ITokenOptions;\n        filePath?: Strings.ITokenOptions;\n        path?: Strings.ITokenOptions;\n        status?: Strings.ITokenOptions;\n        working?: Strings.ITokenOptions;\n    };\n}\n\nexport class StatusFileFormatter extends Formatter<GitFile, IStatusFormatOptions> {\n    get directory() {\n        const directory = GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.directory);\n    }\n\n    get file() {\n        const file = paths.basename(this._item.fileName);\n        return this._padOrTruncate(file, this._options.tokenOptions!.file);\n    }\n\n    get filePath() {\n        const filePath = GitFile.getFormattedPath(this._item, { relativeTo: this._options.relativePath });\n        return this._padOrTruncate(filePath, this._options.tokenOptions!.filePath);\n    }\n\n    get path() {\n        const directory = GitFile.getRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.path);\n    }\n\n    get status() {\n        const status = GitFile.getStatusText(this._item.status);\n        return this._padOrTruncate(status, this._options.tokenOptions!.status);\n    }\n\n    get working() {\n        const commit = (this._item as GitFileWithCommit).commit;\n        const statusFile = commit === undefined ? this._item : commit.files[0];\n\n        let icon = '';\n        if (statusFile.workingTreeStatus !== undefined && statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.Space}${GlyphChars.SpaceThinnest}${GlyphChars.Check}`;\n        }\n        else if (statusFile.workingTreeStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.SpaceThin}${GlyphChars.SpaceThinnest}${GlyphChars.EnDash}${\n                GlyphChars.Space\n            }`;\n        }\n        else if (statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Space}${GlyphChars.EnDash}${GlyphChars.Space.repeat(2)}${GlyphChars.Check}`;\n        }\n        else {\n            icon = '';\n        }\n        return this._padOrTruncate(icon, this._options.tokenOptions!.working);\n    }\n\n    static fromTemplate(template: string, file: GitFile, dateFormat: string | null): string;\n    static fromTemplate(template: string, file: GitFile, options?: IStatusFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, file, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { configuration, DateStyle, GravatarDefaultStyle } from '../../configuration';\nimport { Container } from '../../container';\nimport { Dates, Strings } from '../../system';\nimport { CommitFormatter } from '../formatters/formatters';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\n\nconst gravatarCache: Map<string, Uri> = new Map();\nconst missingGravatarHash = '00000000000000000000000000000000';\n\nexport function clearGravatarCache() {\n    gravatarCache.clear();\n}\n\nexport interface GitAuthor {\n    name: string;\n    lineCount: number;\n}\n\nexport interface GitCommitLine {\n    sha: string;\n    previousSha?: string;\n    line: number;\n    originalLine: number;\n    code?: string;\n}\n\nexport enum GitCommitType {\n    Blame = 'blame',\n    Branch = 'branch',\n    File = 'file',\n    Stash = 'stash',\n    StashFile = 'stash-file'\n}\n\nexport const CommitFormatting = {\n    dateFormat: undefined! as string | null,\n    dateStyle: undefined! as DateStyle,\n\n    reset: () => {\n        CommitFormatting.dateStyle = configuration.get<DateStyle>(configuration.name('defaultDateStyle').value);\n        CommitFormatting.dateFormat = configuration.get<string | null>(configuration.name('defaultDateFormat').value);\n    }\n};\n\nexport abstract class GitCommit {\n    readonly type: GitCommitType;\n    readonly originalFileName: string | undefined;\n    previousFileName: string | undefined;\n    workingFileName?: string;\n\n    protected readonly _fileName: string;\n    protected _previousSha: string | undefined;\n\n    private _isStagedUncommitted: boolean | undefined;\n    private _isUncommitted: boolean | undefined;\n    private _shortSha: string | undefined;\n\n    constructor(\n        type: GitCommitType,\n        public readonly repoPath: string,\n        public readonly sha: string,\n        public readonly author: string,\n        public readonly email: string | undefined,\n        public readonly date: Date,\n        public readonly message: string,\n        fileName: string,\n        originalFileName?: string,\n        previousSha?: string,\n        previousFileName?: string\n    ) {\n        this.type = type;\n        this._fileName = fileName || '';\n        this.originalFileName = originalFileName;\n        this._previousSha = previousSha;\n        this.previousFileName = previousFileName;\n    }\n\n    get fileName() {\n        // If we aren't a single-file commit, return an empty file name (makes it default to the repoPath)\n        return this.isFile ? this._fileName : '';\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.fromNow();\n    }\n\n    get shortSha() {\n        if (this._shortSha === undefined) {\n            this._shortSha = Git.shortenSha(this.sha);\n        }\n        return this._shortSha;\n    }\n\n    get isFile() {\n        return (\n            this.type === GitCommitType.Blame ||\n            this.type === GitCommitType.File ||\n            this.type === GitCommitType.StashFile\n        );\n    }\n\n    get isStash() {\n        return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;\n    }\n\n    get isStagedUncommitted(): boolean {\n        if (this._isStagedUncommitted === undefined) {\n            this._isStagedUncommitted = Git.isStagedUncommitted(this.sha);\n        }\n        return this._isStagedUncommitted;\n    }\n\n    get isUncommitted(): boolean {\n        if (this._isUncommitted === undefined) {\n            this._isUncommitted = Git.isUncommitted(this.sha);\n        }\n        return this._isUncommitted;\n    }\n\n    abstract get previousFileSha(): string;\n    protected _resolvedPreviousFileSha: string | undefined;\n\n    get previousFileShortSha(): string {\n        return Git.shortenSha(this.previousFileSha)!;\n    }\n\n    get previousSha(): string | undefined {\n        return this._previousSha;\n    }\n    set previousSha(value: string | undefined) {\n        if (value === this._previousSha) return;\n\n        this._previousSha = value;\n        this._resolvedPreviousFileSha = undefined;\n    }\n\n    get previousShortSha() {\n        return this.previousSha && Git.shortenSha(this.previousSha);\n    }\n\n    get previousUri(): Uri {\n        return this.previousFileName ? GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    get workingUri(): Uri {\n        return this.workingFileName ? GitUri.resolveToUri(this.workingFileName, this.repoPath) : this.uri;\n    }\n\n    private _dateFormatter?: Dates.IDateFormatter;\n\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.format(format);\n    }\n\n    fromNow() {\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.fromNow();\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitUri.getFormattedPath(this.fileName, options);\n    }\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        const hash =\n            this.email != null && this.email.length !== 0\n                ? Strings.md5(this.email.trim().toLowerCase(), 'hex')\n                : missingGravatarHash;\n\n        const key = `${hash}:${size}`;\n        let gravatar = gravatarCache.get(key);\n        if (gravatar !== undefined) return gravatar;\n\n        gravatar = Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${fallback}`);\n        gravatarCache.set(key, gravatar);\n\n        return gravatar;\n    }\n\n    getShortMessage() {\n        return CommitFormatter.fromTemplate('${message}', this, { truncateMessageAtNewLine: true });\n    }\n\n    async resolvePreviousFileSha(): Promise<void> {\n        if (this._resolvedPreviousFileSha !== undefined) return;\n\n        this._resolvedPreviousFileSha = await Container.git.resolveReference(\n            this.repoPath,\n            this.previousFileSha,\n            this.fileName ? this.previousUri : undefined\n        );\n    }\n\n    toGitUri(previous: boolean = false): GitUri {\n        return GitUri.fromCommit(this, previous);\n    }\n\n    abstract with(changes: {\n        type?: GitCommitType;\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n    }): GitCommit;\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { GitCommit, GitCommitLine, GitCommitType } from './commit';\n\nexport class GitBlameCommit extends GitCommit {\n    constructor(\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        message: string,\n        fileName: string,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly lines: GitCommitLine[]\n    ) {\n        super(\n            GitCommitType.Blame,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return `${this.sha}^`;\n    }\n\n    with(changes: {\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        lines?: GitCommitLine[] | null;\n    }): GitBlameCommit {\n        return new GitBlameCommit(\n            this.repoPath,\n            changes.sha || this.sha,\n            this.author,\n            this.email,\n            this.date,\n            this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            this.getChangedValue(changes.lines, changes.sha || changes.fileName ? [] : this.lines) || []\n        );\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitBranch, GitTrackingState } from './branch';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitStatus {\n    readonly detached: boolean;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly branch: string,\n        public readonly sha: string,\n        public readonly files: GitStatusFile[],\n        public readonly state: GitTrackingState,\n        public readonly upstream?: string\n    ) {\n        this.detached = GitBranch.isDetached(branch);\n        if (this.detached) {\n            this.branch = GitBranch.formatDetached(this.sha);\n        }\n    }\n\n    get ref() {\n        return this.detached ? this.sha : this.branch;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    getUpstreamStatus(options: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.upstream, this.state, options);\n    }\n\n    static getUpstreamStatus(\n        upstream: string | undefined,\n        state: { ahead: number; behind: number },\n        options: { empty?: string; expand?: boolean; prefix?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        if (upstream === undefined || (state.behind === 0 && state.ahead === 0)) return options.empty || '';\n\n        const { expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (state.behind) {\n                status += `${Strings.pluralize('commit', state.behind)} behind`;\n            }\n            if (state.ahead) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('commit', state.ahead)} ahead`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${state.behind}${GlyphChars.ArrowDown}${separator}${state.ahead}${\n            GlyphChars.ArrowUp\n        }${suffix}`;\n    }\n}\n\nexport class GitStatusFile implements GitFile {\n    constructor(\n        public readonly repoPath: string,\n        public readonly indexStatus: GitFileStatus | undefined,\n        public readonly workingTreeStatus: GitFileStatus | undefined,\n        public readonly fileName: string,\n        public readonly originalFileName?: string\n    ) {}\n\n    get status(): GitFileStatus {\n        return (this.indexStatus || this.workingTreeStatus || '?') as GitFileStatus;\n    }\n\n    get staged() {\n        return this.indexStatus !== undefined;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    getFormattedDirectory(includeOriginal: boolean = false): string {\n        return GitFile.getFormattedDirectory(this, includeOriginal);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitFile.getFormattedPath(this, options);\n    }\n\n    getOcticon() {\n        return GitFile.getStatusOcticon(this.status);\n    }\n\n    getStatusText(file: GitFile): string {\n        return GitFile.getStatusText(this.status);\n    }\n\n    with(changes: {\n        indexStatus?: GitFileStatus | null;\n        workTreeStatus?: GitFileStatus | null;\n        fileName?: string;\n        originalFileName?: string | null;\n    }): GitStatusFile {\n        return new GitStatusFile(\n            this.repoPath,\n            this.getChangedValue(changes.indexStatus, this.indexStatus) as GitFileStatus,\n            this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus) as GitFileStatus,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName)\n        );\n    }\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { Git } from '../git';\nimport { GitStatus } from './status';\n\nexport interface GitTrackingState {\n    ahead: number;\n    behind: number;\n}\n\nexport class GitBranch {\n    readonly detached: boolean;\n    readonly name: string;\n    readonly remote: boolean;\n    readonly tracking?: string;\n    readonly state: GitTrackingState;\n\n    constructor(\n        public readonly repoPath: string,\n        name: string,\n        public readonly current: boolean = false,\n        public readonly sha?: string,\n        tracking?: string,\n        ahead: number = 0,\n        behind: number = 0,\n        detached: boolean = false\n    ) {\n        if (name.startsWith('remotes/')) {\n            name = name.substring(8);\n            this.remote = true;\n        }\n        else {\n            this.remote = false;\n        }\n\n        this.detached = detached || (this.current ? GitBranch.isDetached(name) : false);\n        if (this.detached) {\n            this.name = GitBranch.formatDetached(this.sha!);\n        }\n        else {\n            this.name = name;\n        }\n\n        this.tracking = tracking == null || tracking.length === 0 ? undefined : tracking;\n        this.state = {\n            ahead: ahead,\n            behind: behind\n        };\n    }\n\n    get ref() {\n        return this.detached ? this.sha! : this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const name = this.getName();\n            const index = name.lastIndexOf('/');\n            this._basename = index !== -1 ? name.substring(index + 1) : name;\n        }\n\n        return this._basename;\n    }\n\n    private _name: string | undefined;\n    getName(): string {\n        if (this._name === undefined) {\n            this._name = this.remote ? this.name.substring(this.name.indexOf('/') + 1) : this.name;\n        }\n\n        return this._name;\n    }\n\n    getRemote(): string | undefined {\n        if (this.remote) return GitBranch.getRemote(this.name);\n        if (this.tracking !== undefined) return GitBranch.getRemote(this.tracking);\n\n        return undefined;\n    }\n\n    getTrackingStatus(options?: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.tracking, this.state, options);\n    }\n\n    static getRemote(branch: string): string {\n        return branch.substring(0, branch.indexOf('/'));\n    }\n\n    static formatDetached(sha: string): string {\n        return `(${Git.shortenSha(sha)}...)`;\n    }\n\n    static isDetached(name: string): boolean {\n        // If there is whitespace in the name assume this is not a valid branch name\n        // Deals with detached HEAD states\n        return name.match(/\\s/) !== null || name.match(/\\(detached\\)/) !== null;\n    }\n}\n","'use strict';\nimport { Iterables, Strings } from '../../system';\nimport {\n    GitDiff,\n    GitDiffChunk,\n    GitDiffChunkLine,\n    GitDiffLine,\n    GitDiffShortStat,\n    GitFile,\n    GitFileStatus\n} from './../git';\n\nconst nameStatusDiffRegex = /^(.*?)\\t(.*?)(?:\\t(.*?))?$/gm;\nconst shortStatDiffRegex = /^\\s*(\\d+)\\sfiles? changed(?:,\\s+(\\d+)\\s+insertions?\\(\\+\\))?(?:,\\s+(\\d+)\\s+deletions?\\(-\\))?/;\nconst unifiedDiffRegex = /^@@ -([\\d]+),([\\d]+) [+]([\\d]+),([\\d]+) @@([\\s\\S]*?)(?=^@@)/gm;\n\nexport class GitDiffParser {\n    static parse(data: string, debug: boolean = false): GitDiff | undefined {\n        if (!data) return undefined;\n\n        const chunks: GitDiffChunk[] = [];\n\n        let match: RegExpExecArray | null = null;\n\n        let chunk: string;\n        let currentStart: number;\n        let previousStart: number;\n\n        do {\n            match = unifiedDiffRegex.exec(`${data}\\n@@`);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            chunk = (' ' + match[5]).substr(1);\n            currentStart = parseInt(match[3], 10);\n            previousStart = parseInt(match[1], 10);\n\n            chunks.push(\n                new GitDiffChunk(\n                    chunk,\n                    {\n                        start: currentStart,\n                        end: currentStart + parseInt(match[4], 10)\n                    },\n                    {\n                        start: previousStart,\n                        end: previousStart + parseInt(match[2], 10)\n                    }\n                )\n            );\n        } while (match != null);\n\n        if (!chunks.length) return undefined;\n\n        const diff = {\n            diff: debug ? data : undefined,\n            chunks: chunks\n        } as GitDiff;\n        return diff;\n    }\n\n    static parseChunk(chunk: string): GitDiffChunkLine[] {\n        const lines = Iterables.skip(Strings.lines(chunk), 1);\n\n        const currentLines: (GitDiffLine | undefined)[] = [];\n        const previousLines: (GitDiffLine | undefined)[] = [];\n\n        let removed = 0;\n        for (const l of lines) {\n            switch (l[0]) {\n                case '+':\n                    currentLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'added'\n                    });\n\n                    if (removed > 0) {\n                        removed--;\n                    }\n                    else {\n                        previousLines.push(undefined);\n                    }\n\n                    break;\n\n                case '-':\n                    removed++;\n\n                    previousLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'removed'\n                    });\n\n                    break;\n\n                default:\n                    while (removed > 0) {\n                        removed--;\n                        currentLines.push(undefined);\n                    }\n\n                    currentLines.push({ line: l, state: 'unchanged' });\n                    previousLines.push({ line: l, state: 'unchanged' });\n\n                    break;\n            }\n        }\n\n        const chunkLines: GitDiffChunkLine[] = [];\n\n        let chunkLine: GitDiffChunkLine | undefined = undefined;\n        let current: GitDiffLine | undefined = undefined;\n\n        for (let i = 0; i < currentLines.length; i++) {\n            current = currentLines[i];\n            if (current === undefined) {\n                // Don't think we need to worry about this case because the diff will always have \"padding\" (i.e. unchanged lines) around each chunk\n                if (chunkLine === undefined) continue;\n\n                if (chunkLine.previous === undefined) {\n                    chunkLine.previous = [previousLines[i]];\n                    continue;\n                }\n\n                chunkLine.previous.push(previousLines[i]);\n                continue;\n            }\n\n            chunkLine = {\n                line: current.line,\n                state: current.state,\n                previous: [previousLines[i]]\n            };\n            chunkLines.push(chunkLine);\n        }\n\n        return chunkLines;\n    }\n\n    static parseNameStatus(data: string, repoPath: string): GitFile[] | undefined {\n        if (!data) return undefined;\n\n        const files: GitFile[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = nameStatusDiffRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const status = (' ' + match[1]).substr(1);\n            files.push({\n                repoPath,\n                status: (status[0] !== '.' ? status[0].trim() : '?') as GitFileStatus,\n                indexStatus: undefined,\n                workingTreeStatus: undefined,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                fileName: (' ' + match[2]).substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                originalFileName: match[3] === undefined ? undefined : (' ' + match[3]).substr(1)\n            });\n        } while (match != null);\n\n        if (!files.length) return undefined;\n\n        return files;\n    }\n\n    static parseShortStat(data: string): GitDiffShortStat | undefined {\n        if (!data) return undefined;\n\n        const match = shortStatDiffRegex.exec(data);\n        if (match == null) return undefined;\n\n        const files = match[1];\n        const insertions = match[2];\n        const deletions = match[3];\n        return {\n            files: files == null ? 0 : parseInt(files, 10),\n            insertions: insertions == null ? 0 : parseInt(insertions, 10),\n            deletions: deletions == null ? 0 : parseInt(deletions, 10)\n        } as GitDiffShortStat;\n    }\n}\n","'use strict';\nimport { GitDiffParser } from '../parsers/diffParser';\n\nexport interface GitDiffLine {\n    line: string;\n    state: 'added' | 'removed' | 'unchanged';\n}\n\nexport interface GitDiffChunkLine extends GitDiffLine {\n    previous?: (GitDiffLine | undefined)[];\n}\n\nexport class GitDiffChunk {\n    private _chunk: string | undefined;\n    private _lines: GitDiffChunkLine[] | undefined;\n\n    constructor(\n        chunk: string,\n        public currentPosition: { start: number; end: number },\n        public previousPosition: { start: number; end: number }\n    ) {\n        this._chunk = chunk;\n    }\n\n    get lines(): GitDiffChunkLine[] {\n        if (this._lines === undefined) {\n            this._lines = GitDiffParser.parseChunk(this._chunk!);\n            this._chunk = undefined;\n        }\n\n        return this._lines;\n    }\n}\n\nexport interface GitDiff {\n    readonly chunks: GitDiffChunk[];\n\n    readonly diff?: string;\n}\n\nexport interface GitDiffShortStat {\n    readonly files: number;\n    readonly insertions: number;\n    readonly deletions: number;\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { Strings } from '../../system';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitLogCommit extends GitCommit {\n    nextSha?: string;\n    nextFileName?: string;\n\n    constructor(\n        type: GitCommitType,\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        public readonly committedDate: Date,\n        message: string,\n        fileName: string,\n        public readonly files: GitFile[],\n        public readonly status: GitFileStatus | undefined,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly parentShas?: string[]\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get isMerge() {\n        return this.parentShas && this.parentShas.length > 1;\n    }\n\n    get nextShortSha() {\n        return this.nextSha && Git.shortenSha(this.nextSha);\n    }\n\n    get nextUri(): Uri {\n        return this.nextFileName ? GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return this.isFile && this.previousSha ? this.previousSha : `${this.sha}^`;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    toFileCommit(fileName: string): GitLogCommit | undefined;\n    toFileCommit(file: GitFile): GitLogCommit;\n    toFileCommit(fileNameOrFile: string | GitFile): GitLogCommit | undefined {\n        let file: GitFile | undefined;\n        if (typeof fileNameOrFile === 'string') {\n            const fileName = Strings.normalizePath(paths.relative(this.repoPath, fileNameOrFile));\n            file = this.files.find(f => f.fileName === fileName);\n            if (file === undefined) return undefined;\n        }\n        else {\n            file = fileNameOrFile;\n        }\n\n        let sha;\n        // If this is a stash commit with an untracked file\n        if (this.type === GitCommitType.Stash && file.status === '?') {\n            sha = `${this.sha}^3`;\n        }\n\n        // If this isn't a single-file commit, we can't trust the previousSha\n        const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;\n\n        return this.with({\n            type: this.isStash ? GitCommitType.StashFile : GitCommitType.File,\n            sha: sha,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            previousSha: previousSha,\n            previousFileName: file.originalFileName || file.fileName,\n            status: file.status,\n            files: [file]\n        });\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        author?: string;\n        email?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitLogCommit(\n            changes.type || this.type,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.author || this.author,\n            changes.email || this.email,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            undefined\n        );\n    }\n}\n","'use strict';\nimport { RemoteProvider } from '../remotes/factory';\n\nexport enum GitRemoteType {\n    Fetch = 'fetch',\n    Push = 'push'\n}\n\nexport class GitRemote {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly scheme: string,\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly provider: RemoteProvider | undefined,\n        public readonly types: { type: GitRemoteType; url: string }[]\n    ) {}\n}\n","'use strict';\nimport * as clipboard from 'clipboardy';\nimport { commands, Range, Uri, window } from 'vscode';\nimport { BuiltInCommands } from '../../constants';\nimport { Logger } from '../../logger';\nimport { Messages } from '../../messages';\nimport { GitLogCommit } from '../models/logCommit';\n\nexport enum RemoteResourceType {\n    Branch = 'branch',\n    Branches = 'branches',\n    Commit = 'commit',\n    File = 'file',\n    Repo = 'repo',\n    Revision = 'revision'\n}\n\nexport type RemoteResource =\n    | {\n          type: RemoteResourceType.Branch;\n          branch: string;\n      }\n    | {\n          type: RemoteResourceType.Branches;\n      }\n    | {\n          type: RemoteResourceType.Commit;\n          sha: string;\n      }\n    | {\n          type: RemoteResourceType.File;\n          branch?: string;\n          fileName: string;\n          range?: Range;\n      }\n    | {\n          type: RemoteResourceType.Repo;\n      }\n    | {\n          type: RemoteResourceType.Revision;\n          branch?: string;\n          commit?: GitLogCommit;\n          fileName: string;\n          range?: Range;\n          sha?: string;\n      };\n\nexport function getNameFromRemoteResource(resource: RemoteResource) {\n    switch (resource.type) {\n        case RemoteResourceType.Branch:\n            return 'Branch';\n        case RemoteResourceType.Branches:\n            return 'Branches';\n        case RemoteResourceType.Commit:\n            return 'Commit';\n        case RemoteResourceType.File:\n            return 'File';\n        case RemoteResourceType.Repo:\n            return 'Repository';\n        case RemoteResourceType.Revision:\n            return 'Revision';\n        default:\n            return '';\n    }\n}\n\nexport abstract class RemoteProvider {\n    private _name: string | undefined;\n\n    constructor(\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly protocol: string = 'https',\n        name?: string,\n        public readonly custom: boolean = false\n    ) {\n        this._name = name;\n    }\n\n    get icon(): string {\n        return 'remote';\n    }\n\n    abstract get name(): string;\n\n    protected get baseUrl() {\n        return `${this.protocol}://${this.domain}/${this.path}`;\n    }\n\n    enrichMessage(message: string): string {\n        return message;\n    }\n\n    protected formatName(name: string) {\n        if (this._name !== undefined) return this._name;\n        return `${name}${this.custom ? ` (${this.domain})` : ''}`;\n    }\n\n    protected splitPath(): [string, string] {\n        const index = this.path.indexOf('/');\n        return [this.path.substring(0, index), this.path.substring(index + 1)];\n    }\n\n    protected getUrlForRepository(): string {\n        return this.baseUrl;\n    }\n    protected abstract getUrlForBranches(): string;\n    protected abstract getUrlForBranch(branch: string): string;\n    protected abstract getUrlForCommit(sha: string): string;\n    protected abstract getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string;\n\n    private async openUrl(url?: string): Promise<{} | undefined> {\n        if (url === undefined) return undefined;\n\n        return commands.executeCommand(BuiltInCommands.Open, Uri.parse(url));\n    }\n\n    async copy(resource: RemoteResource): Promise<{} | undefined> {\n        const url = this.url(resource);\n        if (url === undefined) return undefined;\n\n        try {\n            void (await clipboard.write(url));\n\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy remote url, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyRemoteUrlToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy remote url');\n        }\n    }\n\n    open(resource: RemoteResource): Promise<{} | undefined> {\n        return this.openUrl(this.url(resource));\n    }\n\n    url(resource: RemoteResource): string | undefined {\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                return this.getUrlForBranch(resource.branch);\n            case RemoteResourceType.Branches:\n                return this.getUrlForBranches();\n            case RemoteResourceType.Commit:\n                return this.getUrlForCommit(resource.sha);\n            case RemoteResourceType.File:\n                return this.getUrlForFile(resource.fileName, resource.branch, undefined, resource.range);\n            case RemoteResourceType.Repo:\n                return this.getUrlForRepository();\n            case RemoteResourceType.Revision:\n                return this.getUrlForFile(resource.fileName, resource.branch, resource.sha, resource.range);\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\nconst stripGitRegex = /\\/_git\\/?/i;\n\nconst sshDomainRegex = /^ssh\\./i;\nconst sshPathRegex = /^\\/?v\\d\\//i;\n\nexport class AzureDevOpsRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string) {\n        domain = domain.replace(sshDomainRegex, '');\n        path = path.replace(sshPathRegex, '');\n\n        super(domain, path, protocol, name);\n    }\n\n    get icon() {\n        return 'vsts';\n    }\n\n    get name() {\n        return 'Azure DevOps';\n    }\n\n    enrichMessage(message: string): string {\n        // Strip off any `_git` part from the repo url\n        const baseUrl = this.baseUrl.replace(stripGitRegex, '/');\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${baseUrl}/_workitems/edit/$3 \"Open Work Item $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/?version=GB${branch}&_a=history`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `&line=${range.start.line}`;\n            }\n            else {\n                line = `&line=${range.start.line}&lineEnd=${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/commit/${sha}/?_a=contents&path=%2F${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/?path=%2F${fileName}&version=GB${branch}&_a=contents${line}`;\n        return `${this.baseUrl}?path=%2F${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/branch/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${fileName}-${range.start.line}`;\n            }\n            else {\n                line = `#${fileName}-${range.start.line}:${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/src/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/src/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketServerRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    protected get baseUrl() {\n        const [project, repo] = this.splitPath();\n        return `https://${this.domain}/projects/${project}/repos/${repo}`;\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket Server');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits?until=${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${range.start.line}`;\n            }\n            else {\n                line = `#${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/browse/${fileName}?at=${sha}${line}`;\n        if (branch) return `${this.baseUrl}/browse/${fileName}?at=${branch}${line}`;\n        return `${this.baseUrl}/browse/${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemotesUrlsConfig } from '../../configuration';\nimport { Strings } from '../../system';\nimport { RemoteProvider } from './provider';\n\nexport class CustomRemote extends RemoteProvider {\n    private readonly urls: RemotesUrlsConfig;\n\n    constructor(domain: string, path: string, urls: RemotesUrlsConfig, protocol?: string, name?: string) {\n        super(domain, path, protocol, name, true);\n        this.urls = urls;\n    }\n\n    get name() {\n        return this.formatName('Custom');\n    }\n\n    protected getUrlForRepository(): string {\n        return Strings.interpolate(this.urls.repository, this.getContext());\n    }\n\n    protected getUrlForBranches(): string {\n        return Strings.interpolate(this.urls.branches, this.getContext());\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return Strings.interpolate(this.urls.branch, this.getContext({ branch: branch }));\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return Strings.interpolate(this.urls.commit, this.getContext({ id: sha }));\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = Strings.interpolate(this.urls.fileLine, { line: range.start.line });\n            }\n            else {\n                line = Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });\n            }\n        }\n\n        if (sha) {\n            return Strings.interpolate(\n                this.urls.fileInCommit,\n                this.getContext({ id: sha, file: fileName, line: line })\n            );\n        }\n        if (branch) {\n            return Strings.interpolate(\n                this.urls.fileInBranch,\n                this.getContext({ branch: branch, file: fileName, line: line })\n            );\n        }\n        return Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line: line }));\n    }\n\n    private getContext(context?: {}) {\n        const [repoBase, repoPath] = this.splitPath();\n        return {\n            repo: this.path,\n            repoBase: repoBase,\n            repoPath: repoPath,\n            ...(context || {})\n        };\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)((?:#|gh-)([0-9]+))\\b/gi;\nconst issueEnricher3rdParyRegex = /\\b((\\w+-?\\w+(?!-)\\/\\w+-?\\w+(?!-))#([0-9]+))\\b/g;\n\nexport class GitHubRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'github';\n    }\n\n    get name() {\n        return this.formatName('GitHub');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches #123 or gh-123 or GH-123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches eamodio/vscode-gitlens#123\n                .replace(\n                    issueEnricher3rdParyRegex,\n                    `[$1](${this.protocol}://${this.domain}/$2/issues/$3 \"Open Issue #$3 from $2\")`\n                )\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-L${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nexport class GitLabRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'gitlab';\n    }\n\n    get name() {\n        return this.formatName('GitLab');\n    }\n\n    enrichMessage(message: string): string {\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { CustomRemoteType, RemotesConfig } from '../../configuration';\nimport { Logger } from '../../logger';\nimport { AzureDevOpsRemote } from './azure-devops';\nimport { BitbucketRemote } from './bitbucket';\nimport { BitbucketServerRemote } from './bitbucket-server';\nimport { CustomRemote } from './custom';\nimport { GitHubRemote } from './github';\nimport { GitLabRemote } from './gitlab';\nimport { RemoteProvider } from './provider';\n\nexport { RemoteProvider };\nexport type RemoteProviders = [string | RegExp, ((domain: string, path: string) => RemoteProvider)][];\n\nconst defaultProviders: RemoteProviders = [\n    ['bitbucket.org', (domain: string, path: string) => new BitbucketRemote(domain, path)],\n    ['github.com', (domain: string, path: string) => new GitHubRemote(domain, path)],\n    ['gitlab.com', (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bdev\\.azure\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)],\n    [/\\bbitbucket\\b/i, (domain: string, path: string) => new BitbucketServerRemote(domain, path)],\n    [/\\bgitlab\\b/i, (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bvisualstudio\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)]\n];\n\nexport class RemoteProviderFactory {\n    static factory(providers: RemoteProviders): (domain: string, path: string) => RemoteProvider | undefined {\n        return (domain: string, path: string) => this.create(providers, domain, path);\n    }\n\n    static create(providers: RemoteProviders, domain: string, path: string): RemoteProvider | undefined {\n        try {\n            const key = domain.toLowerCase();\n            for (const [matcher, creator] of providers) {\n                if (\n                    (typeof matcher === 'string' && matcher === key) ||\n                    (typeof matcher !== 'string' && matcher.test(key))\n                ) {\n                    return creator(domain, path);\n                }\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'RemoteProviderFactory');\n            return undefined;\n        }\n    }\n\n    static loadProviders(cfg: RemotesConfig[] | null | undefined): RemoteProviders {\n        const providers: RemoteProviders = [];\n\n        if (cfg != null && cfg.length > 0) {\n            for (const rc of cfg) {\n                const provider = this.getCustomProvider(rc);\n                if (provider === undefined) continue;\n\n                providers.push([rc.domain.toLowerCase(), provider]);\n            }\n        }\n\n        providers.push(...defaultProviders);\n        return providers;\n    }\n\n    private static getCustomProvider(cfg: RemotesConfig) {\n        switch (cfg.type) {\n            case CustomRemoteType.Bitbucket:\n                return (domain: string, path: string) =>\n                    new BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.BitbucketServer:\n                return (domain: string, path: string) =>\n                    new BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.Custom:\n                return (domain: string, path: string) =>\n                    new CustomRemote(domain, path, cfg.urls!, cfg.protocol, cfg.name);\n            case CustomRemoteType.GitHub:\n                return (domain: string, path: string) => new GitHubRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.GitLab:\n                return (domain: string, path: string) => new GitLabRemote(domain, path, cfg.protocol, cfg.name, true);\n        }\n        return undefined;\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    ProgressLocation,\n    RelativePattern,\n    Uri,\n    window,\n    workspace,\n    WorkspaceFolder\n} from 'vscode';\nimport { configuration, RemotesConfig } from '../../configuration';\nimport { Container } from '../../container';\nimport { Functions, gate, log } from '../../system';\nimport { GitBranch, GitDiffShortStat, GitRemote, GitStash, GitStatus, GitTag } from '../git';\nimport { GitUri } from '../gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from '../remotes/factory';\n\nexport enum RepositoryChange {\n    Config = 'config',\n    Closed = 'closed',\n    // FileSystem = 'file-system',\n    Remotes = 'remotes',\n    Repository = 'repository',\n    Stashes = 'stashes',\n    Tags = 'tags'\n}\n\nexport class RepositoryChangeEvent {\n    readonly changes: RepositoryChange[] = [];\n\n    constructor(\n        public readonly repository?: Repository\n    ) {}\n\n    changed(change: RepositoryChange, solely: boolean = false) {\n        if (solely) return this.changes.length === 1 && this.changes[0] === change;\n\n        return this.changes.includes(change);\n\n        // const changed = this.changes.includes(change);\n        // if (changed) return true;\n\n        // if (change === RepositoryChange.Repository) {\n        //     return this.changes.includes(RepositoryChange.Stashes);\n        // }\n\n        // return false;\n    }\n}\n\nexport interface RepositoryFileSystemChangeEvent {\n    readonly repository?: Repository;\n    readonly uris: Uri[];\n}\n\nexport class Repository implements Disposable {\n    private _onDidChange = new EventEmitter<RepositoryChangeEvent>();\n    get onDidChange(): Event<RepositoryChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onDidChangeFileSystem = new EventEmitter<RepositoryFileSystemChangeEvent>();\n    get onDidChangeFileSystem(): Event<RepositoryFileSystemChangeEvent> {\n        return this._onDidChangeFileSystem.event;\n    }\n\n    readonly formattedName: string;\n    readonly index: number;\n    readonly name: string;\n    readonly normalizedPath: string;\n\n    private _branch: Promise<GitBranch | undefined> | undefined;\n    private readonly _disposable: Disposable;\n    private _fireChangeDebounced: ((e: RepositoryChangeEvent) => void) | undefined = undefined;\n    private _fireFileSystemChangeDebounced: ((e: RepositoryFileSystemChangeEvent) => void) | undefined = undefined;\n    private _fsWatchCounter = 0;\n    private _fsWatcherDisposable: Disposable | undefined;\n    private _pendingChanges: { repo?: RepositoryChangeEvent; fs?: RepositoryFileSystemChangeEvent } = {};\n    private _providers: RemoteProviders | undefined;\n    private _remotes: Promise<GitRemote[]> | undefined;\n    private _suspended: boolean;\n\n    constructor(\n        public readonly folder: WorkspaceFolder,\n        public readonly path: string,\n        public readonly root: boolean,\n        private readonly onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void,\n        suspended: boolean,\n        closed: boolean = false\n    ) {\n        if (root) {\n            this.formattedName = folder.name;\n        }\n        else {\n            const relativePath = paths.relative(folder.uri.fsPath, path);\n            this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;\n        }\n        this.index = folder.index;\n        this.name = folder.name;\n\n        this.normalizedPath = (this.path.endsWith('/') ? this.path : `${this.path}/`).toLowerCase();\n\n        this._suspended = suspended;\n        this._closed = closed;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        const watcher = workspace.createFileSystemWatcher(\n            new RelativePattern(\n                folder,\n                '{\\\n**/.git/config,\\\n**/.git/index,\\\n**/.git/HEAD,\\\n**/.git/refs/stash,\\\n**/.git/refs/heads/**,\\\n**/.git/refs/remotes/**,\\\n**/.git/refs/tags/**,\\\n**/.gitignore\\\n}'\n            )\n        );\n        this._disposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onRepositoryChanged, this),\n            watcher.onDidCreate(this.onRepositoryChanged, this),\n            watcher.onDidDelete(this.onRepositoryChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.stopWatchingFileSystem();\n\n        // // Clean up any disposables in storage\n        // for (const item of this.storage.values()) {\n        //     if (item != null && typeof item.dispose === 'function') {\n        //         item.dispose();\n        //     }\n        // }\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('remotes').value;\n        if (configuration.changed(e, section, this.folder.uri)) {\n            this._providers = RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(section, this.folder.uri)\n            );\n\n            if (!configuration.initializing(e)) {\n                this._remotes = undefined;\n                this.fireChange(RepositoryChange.Remotes);\n            }\n        }\n    }\n\n    private onFileSystemChanged(uri: Uri) {\n        // Ignore .git changes\n        if (/\\.git(?:\\/|\\\\|$)/.test(uri.fsPath)) return;\n\n        this.fireFileSystemChange(uri);\n    }\n\n    private onRepositoryChanged(uri: Uri) {\n        if (uri !== undefined && uri.path.endsWith('refs/stash')) {\n            this.fireChange(RepositoryChange.Stashes);\n\n            return;\n        }\n\n        this._branch = undefined;\n\n        if (uri !== undefined && uri.path.endsWith('refs/remotes')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Remotes);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('refs/tags')) {\n            this.fireChange(RepositoryChange.Tags);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('config')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);\n\n            return;\n        }\n\n        this.onAnyRepositoryChanged(this, RepositoryChange.Repository);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    private _closed: boolean = false;\n    get closed(): boolean {\n        return this._closed;\n    }\n    set closed(value: boolean) {\n        const changed = this._closed !== value;\n        this._closed = value;\n        if (changed) {\n            this.onAnyRepositoryChanged(this, RepositoryChange.Closed);\n            this.fireChange(RepositoryChange.Closed);\n        }\n    }\n\n    containsUri(uri: Uri) {\n        if (uri instanceof GitUri) {\n            uri = uri.repoPath !== undefined ? GitUri.file(uri.repoPath) : uri.documentUri();\n        }\n\n        return this.folder === workspace.getWorkspaceFolder(uri);\n    }\n\n    @gate()\n    @log()\n    async fetch(options: { progress?: boolean; remote?: string } = {}) {\n        const { progress, ...opts } = { progress: true, ...options };\n        if (!progress) return this.fetchCore(opts);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching ${opts.remote ? `${opts.remote} of ` : ''}${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.fetchCore(opts)\n        );\n    }\n\n    private async fetchCore(options: { remote?: string } = {}) {\n        await Container.git.fetch(this.path, options.remote);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    getBranch(): Promise<GitBranch | undefined> {\n        if (this._branch === undefined) {\n            this._branch = Container.git.getBranch(this.path);\n        }\n        return this._branch;\n    }\n\n    getBranches(): Promise<GitBranch[]> {\n        return Container.git.getBranches(this.path);\n    }\n\n    getChangedFilesCount(sha?: string): Promise<GitDiffShortStat | undefined> {\n        return Container.git.getChangedFilesCount(this.path, sha);\n    }\n\n    async getLastFetched(): Promise<number> {\n        const hasRemotes = await this.hasRemotes();\n        if (!hasRemotes || Container.vsls.isMaybeGuest) return 0;\n\n        return new Promise<number>((resolve, reject) =>\n            fs.stat(paths.join(this.path, '.git/FETCH_HEAD'), (err, stat) => resolve(err ? 0 : stat.mtime.getTime()))\n        );\n    }\n\n    getRemotes(): Promise<GitRemote[]> {\n        if (this._remotes === undefined) {\n            if (this._providers === undefined) {\n                const remotesCfg = configuration.get<RemotesConfig[] | null | undefined>(\n                    configuration.name('remotes').value,\n                    this.folder.uri\n                );\n                this._providers = RemoteProviderFactory.loadProviders(remotesCfg);\n            }\n\n            this._remotes = Container.git.getRemotesCore(this.path, this._providers);\n        }\n\n        return this._remotes;\n    }\n\n    getStashList(): Promise<GitStash | undefined> {\n        return Container.git.getStashList(this.path);\n    }\n\n    getStatus(): Promise<GitStatus | undefined> {\n        return Container.git.getStatusForRepo(this.path);\n    }\n\n    getTags(options?: { includeRefs?: boolean }): Promise<GitTag[]> {\n        return Container.git.getTags(this.path, options);\n    }\n\n    async hasRemotes(): Promise<boolean> {\n        const remotes = await this.getRemotes();\n        return remotes !== undefined && remotes.length > 0;\n    }\n\n    async hasTrackingBranch(): Promise<boolean> {\n        const branch = await this.getBranch();\n        return branch !== undefined && branch.tracking !== undefined;\n    }\n\n    @gate()\n    @log()\n    async pull(options: { progress?: boolean } = {}) {\n        const { progress } = { progress: true, ...options };\n        if (!progress) return this.pullCore();\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pullCore()\n        );\n    }\n\n    private async pullCore() {\n        await commands.executeCommand('git.pull', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    @gate()\n    @log()\n    async push(options: { force?: boolean; progress?: boolean } = {}) {\n        const { force, progress } = { progress: true, ...options };\n        if (!progress) return this.pushCore(force);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pushCore(force)\n        );\n    }\n\n    private async pushCore(force: boolean = false) {\n        await commands.executeCommand(force ? 'git.pushForce' : 'git.push', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    resume() {\n        if (!this._suspended) return;\n\n        this._suspended = false;\n\n        // If we've come back into focus and we are dirty, fire the change events\n\n        if (this._pendingChanges.repo !== undefined) {\n            this._fireChangeDebounced!(this._pendingChanges.repo);\n        }\n\n        if (this._pendingChanges.fs !== undefined) {\n            this._fireFileSystemChangeDebounced!(this._pendingChanges.fs);\n        }\n    }\n\n    startWatchingFileSystem() {\n        this._fsWatchCounter++;\n        if (this._fsWatcherDisposable !== undefined) return;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        const watcher = workspace.createFileSystemWatcher(new RelativePattern(this.folder, `**`));\n        this._fsWatcherDisposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onFileSystemChanged, this),\n            watcher.onDidCreate(this.onFileSystemChanged, this),\n            watcher.onDidDelete(this.onFileSystemChanged, this)\n        );\n    }\n\n    stopWatchingFileSystem() {\n        if (this._fsWatcherDisposable === undefined) return;\n        if (--this._fsWatchCounter > 0) return;\n\n        this._fsWatcherDisposable.dispose();\n        this._fsWatcherDisposable = undefined;\n    }\n\n    suspend() {\n        this._suspended = true;\n    }\n\n    private fireChange(...reasons: RepositoryChange[]) {\n        if (this._fireChangeDebounced === undefined) {\n            this._fireChangeDebounced = Functions.debounce(this.fireChangeCore, 250);\n        }\n\n        if (this._pendingChanges.repo === undefined) {\n            this._pendingChanges.repo = new RepositoryChangeEvent(this);\n        }\n\n        const e = this._pendingChanges.repo;\n\n        for (const reason of reasons) {\n            if (!e.changes.includes(reason)) {\n                e.changes.push(reason);\n            }\n        }\n\n        if (this._suspended) return;\n\n        this._fireChangeDebounced(e);\n    }\n\n    private fireChangeCore(e: RepositoryChangeEvent) {\n        this._pendingChanges.repo = undefined;\n\n        this._onDidChange.fire(e);\n    }\n\n    private fireFileSystemChange(uri: Uri) {\n        if (this._fireFileSystemChangeDebounced === undefined) {\n            this._fireFileSystemChangeDebounced = Functions.debounce(this.fireFileSystemChangeCore, 2500);\n        }\n\n        if (this._pendingChanges.fs === undefined) {\n            this._pendingChanges.fs = { repository: this, uris: [] };\n        }\n\n        const e = this._pendingChanges.fs;\n        e.uris.push(uri);\n\n        if (this._suspended) return;\n\n        this._fireFileSystemChangeDebounced(e);\n    }\n\n    private fireFileSystemChangeCore(e: RepositoryFileSystemChangeEvent) {\n        this._pendingChanges.fs = undefined;\n\n        this._onDidChangeFileSystem.fire(e);\n    }\n}\n","'use strict';\nimport { GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\nimport { GitLogCommit } from './logCommit';\n\nexport class GitStashCommit extends GitLogCommit {\n    constructor(\n        type: GitCommitType,\n        public readonly stashName: string,\n        repoPath: string,\n        sha: string,\n        date: Date,\n        committedDate: Date,\n        message: string,\n        fileName: string,\n        files: GitFile[],\n        status?: GitFileStatus | undefined,\n        originalFileName?: string | undefined,\n        previousSha?: string | undefined,\n        previousFileName?: string | undefined\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            'You',\n            undefined,\n            date,\n            committedDate,\n            message,\n            fileName,\n            files,\n            status,\n            originalFileName,\n            previousSha === undefined ? `${sha}^` : previousSha,\n            previousFileName\n        );\n    }\n\n    get shortSha() {\n        return this.stashName;\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitStashCommit(\n            changes.type || this.type,\n            this.stashName,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName)\n        );\n    }\n}\n","'use strict';\n\nexport class GitTag {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly sha?: string,\n        public readonly annotation?: string\n    ) {}\n\n    get ref() {\n        return this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const index = this.name.lastIndexOf('/');\n            this._basename = index !== -1 ? this.name.substring(index + 1) : this.name;\n        }\n\n        return this._basename;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Strings } from '../../system';\nimport { Git, GitAuthor, GitBlame, GitBlameCommit, GitCommitLine } from './../git';\n\ninterface BlameEntry {\n    sha: string;\n\n    line: number;\n    originalLine: number;\n    lineCount: number;\n\n    author: string;\n    authorDate?: string;\n    authorTimeZone?: string;\n    authorEmail?: string;\n\n    previousSha?: string;\n    previousFileName?: string;\n\n    fileName?: string;\n\n    summary?: string;\n}\n\nexport class GitBlameParser {\n    static parse(\n        data: string,\n        repoPath: string | undefined,\n        fileName: string,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitBlame | undefined {\n        if (!data) return undefined;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        const lines: GitCommitLine[] = [];\n\n        let relativeFileName = repoPath && fileName;\n\n        let entry: BlameEntry | undefined = undefined;\n        let line: string;\n        let lineParts: string[];\n\n        let first = true;\n\n        for (line of Strings.lines(data)) {\n            lineParts = line.split(' ');\n            if (lineParts.length < 2) continue;\n\n            if (entry === undefined) {\n                entry = {\n                    sha: lineParts[0],\n                    originalLine: parseInt(lineParts[1], 10) - 1,\n                    line: parseInt(lineParts[2], 10) - 1,\n                    lineCount: parseInt(lineParts[3], 10)\n                } as BlameEntry;\n\n                continue;\n            }\n\n            switch (lineParts[0]) {\n                case 'author':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = lineParts\n                            .slice(1)\n                            .join(' ')\n                            .trim();\n                    }\n                    break;\n\n                case 'author-mail':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.authorEmail = currentUser !== undefined ? currentUser.email : undefined;\n                        continue;\n                    }\n\n                    entry.authorEmail = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    const start = entry.authorEmail.indexOf('<');\n                    if (start >= 0) {\n                        const end = entry.authorEmail.indexOf('>', start);\n                        if (end > start) {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1, end);\n                        }\n                        else {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1);\n                        }\n                    }\n\n                    break;\n\n                case 'author-time':\n                    entry.authorDate = lineParts[1];\n                    break;\n\n                case 'author-tz':\n                    entry.authorTimeZone = lineParts[1];\n                    break;\n\n                case 'summary':\n                    entry.summary = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    break;\n\n                case 'previous':\n                    entry.previousSha = lineParts[1];\n                    entry.previousFileName = lineParts.slice(2).join(' ');\n                    break;\n\n                case 'filename':\n                    entry.fileName = lineParts.slice(1).join(' ');\n\n                    if (first && repoPath === undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);\n\n                    entry = undefined;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        for (const [, c] of commits) {\n            if (c.author === undefined) return;\n\n            const author = authors.get(c.author);\n            if (author === undefined) return;\n\n            author.lineCount += c.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            repoPath: repoPath,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines\n        } as GitBlame;\n    }\n\n    private static parseEntry(\n        entry: BlameEntry,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitBlameCommit>,\n        authors: Map<string, GitAuthor>,\n        lines: GitCommitLine[],\n        currentUser: { name?: string; email?: string } | undefined\n    ) {\n        let commit = commits.get(entry.sha);\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.authorEmail)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            commit = new GitBlameCommit(\n                repoPath!,\n                entry.sha,\n                entry.author,\n                entry.authorEmail,\n                new Date((entry.authorDate as any) * 1000),\n                entry.summary!,\n                relativeFileName,\n                relativeFileName !== entry.fileName ? entry.fileName : undefined,\n                entry.previousSha,\n                entry.previousSha && entry.previousFileName,\n                []\n            );\n\n            commits.set(entry.sha, commit);\n        }\n\n        for (let i = 0, len = entry.lineCount; i < len; i++) {\n            const line: GitCommitLine = {\n                sha: entry.sha,\n                line: entry.line + i,\n                originalLine: entry.originalLine + i\n            };\n\n            if (commit.previousSha) {\n                line.previousSha = commit.previousSha;\n            }\n\n            commit.lines.push(line);\n            lines[line.line] = line;\n        }\n    }\n}\n","'use strict';\nimport { GitBranch } from './../git';\n\nconst branchWithTrackingRegex = /^(\\*?)\\s+(.+?)\\s+([0-9,a-f]+)\\s+(?:\\[(.*?\\/.*?)(?:\\:\\s(.*)\\]|\\]))?/gm;\nconst branchWithTrackingStateRegex = /^(?:ahead\\s([0-9]+))?[,\\s]*(?:behind\\s([0-9]+))?/;\n\nexport class GitBranchParser {\n    static parse(data: string, repoPath: string): GitBranch[] | undefined {\n        if (!data) return undefined;\n\n        const branches: GitBranch[] = [];\n\n        let ahead;\n        let behind;\n        let current;\n        let name;\n        let sha;\n        let state;\n        let tracking;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = branchWithTrackingRegex.exec(data);\n            if (match == null) break;\n\n            [, current, name, sha, tracking, state] = match;\n            [ahead, behind] = this.parseState(state);\n            branches.push(\n                new GitBranch(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    current === '*',\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    sha === undefined ? undefined : (' ' + sha).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    tracking === undefined ? undefined : (' ' + tracking).substr(1),\n                    ahead,\n                    behind\n                )\n            );\n        } while (match != null);\n\n        if (!branches.length) return undefined;\n\n        return branches;\n    }\n\n    static parseState(state: string): [number, number] {\n        if (state == null) return [0, 0];\n\n        const match = branchWithTrackingStateRegex.exec(state);\n        if (match == null) return [0, 0];\n\n        const ahead = parseInt(match[1], 10);\n        const behind = parseInt(match[2], 10);\n        return [isNaN(ahead) ? 0 : ahead, isNaN(behind) ? 0 : behind];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Range } from 'vscode';\nimport { Arrays, Strings } from '../../system';\nimport { Git, GitAuthor, GitCommitType, GitFile, GitFileStatus, GitLog, GitLogCommit } from './../git';\n\ninterface LogEntry {\n    ref?: string;\n\n    author?: string;\n    date?: string;\n    committedDate?: string;\n    email?: string;\n\n    parentShas?: string[];\n\n    fileName?: string;\n    originalFileName?: string;\n    files?: GitFile[];\n\n    status?: GitFileStatus;\n\n    summary?: string;\n}\n\nconst diffRegex = /diff --git a\\/(.*) b\\/(.*)/;\nconst emptyEntry: LogEntry = {};\n\nexport class GitLogParser {\n    static parse(\n        data: string,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        fileName: string | undefined,\n        sha: string | undefined,\n        currentUser: { name?: string; email?: string } | undefined,\n        maxCount: number | undefined,\n        reverse: boolean,\n        range: Range | undefined\n    ): GitLog | undefined {\n        if (!data) return undefined;\n\n        let relativeFileName: string;\n        let recentCommit: GitLogCommit | undefined = undefined;\n\n        let entry: LogEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let i = 0;\n        let first = true;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitLogCommit> = new Map();\n        let truncationCount = maxCount;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // Since log --reverse doesn't properly honor a max count -- enforce it here\n            if (reverse && maxCount && i >= maxCount) break;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 97: // 'a': // author\n                    if (Git.isUncommitted(entry.ref)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = line.substring(4);\n                    }\n                    break;\n\n                case 101: // 'e': // author-mail\n                    entry.email = line.substring(4);\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 112: // 'p': // parents\n                    entry.parentShas = line.substring(4).split(' ');\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (next.done || next.value === '</f>') break;\n\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</f>') break;\n\n                        if (line.startsWith('warning:')) continue;\n\n                        if (type === GitCommitType.Branch) {\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            this.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n                        else if (line.startsWith('diff')) {\n                            const matches = diffRegex.exec(line);\n                            if (matches != null) {\n                                entry.fileName = matches[1];\n                                const originalFileName = matches[2];\n                                if (entry.fileName !== originalFileName) {\n                                    entry.originalFileName = originalFileName;\n                                    entry.status = 'R';\n                                }\n                                else {\n                                    entry.status = 'M';\n                                }\n                            }\n\n                            while (true) {\n                                next = lines.next();\n                                if (next.done || next.value === '</f>') break;\n                            }\n                            break;\n                        }\n                        else {\n                            entry.status = line[0] as GitFileStatus;\n                            entry.fileName = line.substring(1);\n                            this.parseFileName(entry);\n                        }\n                    }\n\n                    if (entry.files !== undefined) {\n                        entry.fileName = Arrays.filterMap(entry.files, f => (f.fileName ? f.fileName : undefined)).join(\n                            ', '\n                        );\n                    }\n\n                    if (first && repoPath === undefined && type === GitCommitType.File && fileName !== undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    const commit = commits.get(entry.ref!);\n                    if (commit === undefined) {\n                        i++;\n                    }\n                    else if (truncationCount) {\n                        // Since this matches an existing commit it will be skipped, so reduce our truncationCount to ensure accurate truncation detection\n                        truncationCount--;\n                    }\n\n                    recentCommit = GitLogParser.parseEntry(\n                        entry,\n                        commit,\n                        type,\n                        repoPath,\n                        relativeFileName,\n                        commits,\n                        authors,\n                        recentCommit,\n                        currentUser\n                    );\n\n                    break;\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            authors: authors,\n            commits: commits,\n            sha: sha,\n            count: i,\n            maxCount: maxCount,\n            range: range,\n            truncated: Boolean(truncationCount && i >= truncationCount && truncationCount !== 1)\n        } as GitLog;\n    }\n\n    private static parseEntry(\n        entry: LogEntry,\n        commit: GitLogCommit | undefined,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitLogCommit>,\n        authors: Map<string, GitAuthor>,\n        recentCommit: GitLogCommit | undefined,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitLogCommit | undefined {\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.email)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            const originalFileName = relativeFileName !== entry.fileName ? entry.fileName : undefined;\n            if (type === GitCommitType.File) {\n                entry.files = [\n                    {\n                        status: entry.status!,\n                        fileName: relativeFileName,\n                        originalFileName: originalFileName\n                    }\n                ];\n            }\n\n            commit = new GitLogCommit(\n                type,\n                repoPath!,\n                entry.ref!,\n                entry.author!,\n                entry.email,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                relativeFileName,\n                entry.files || [],\n                entry.status,\n                originalFileName,\n                `${entry.ref!}^`,\n                undefined,\n                entry.parentShas!\n            );\n\n            commits.set(entry.ref!, commit);\n        }\n        // else {\n        //     Logger.log(`merge commit? ${entry.sha}`);\n        // }\n\n        if (recentCommit !== undefined) {\n            // If the commit sha's match (merge commit), just forward it along\n            commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;\n\n            // Only add a filename if this is a file log\n            if (type === GitCommitType.File) {\n                recentCommit.previousFileName = commit.originalFileName || commit.fileName;\n                commit.nextFileName = recentCommit.originalFileName || recentCommit.fileName;\n            }\n        }\n        return commit;\n    }\n\n    static parseFileName(entry: { fileName?: string; originalFileName?: string }) {\n        if (entry.fileName === undefined) return;\n\n        const index = entry.fileName.indexOf('\\t') + 1;\n        if (index > 0) {\n            const next = entry.fileName.indexOf('\\t', index) + 1;\n            if (next > 0) {\n                entry.originalFileName = entry.fileName.substring(index, next - 1);\n                entry.fileName = entry.fileName.substring(next);\n            }\n            else {\n                entry.fileName = entry.fileName.substring(index);\n            }\n        }\n    }\n}\n","'use strict';\nimport { GitRemoteType } from '../models/remote';\nimport { RemoteProvider } from '../remotes/factory';\nimport { GitRemote } from './../git';\n\nconst remoteRegex = /^(.*)\\t(.*)\\s\\((.*)\\)$/gm;\nconst urlRegex = /^(?:(git:\\/\\/)(.*?)\\/|(https?:\\/\\/)(?:.*?@)?(.*?)\\/|git@(.*):|(ssh:\\/\\/)(?:.*@)?(.*?)(?::.*?)?(?:\\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;\n\n// Test git urls\n/*\nhttp://host.xz/user/project.git\nhttp://host.xz/path/to/repo.git\nhttp://host.xz/path/to/repo.git/\nhttp://username@host.xz/user/project.git\nhttp://username:password@host.xz/user/project.git\nhttps://host.xz/user/project.git\nhttps://host.xz/path/to/repo.git\nhttps://host.xz/path/to/repo.git/\nhttps://username@host.xz/user/project.git\nhttps://username:password@host.xz/user/project.git\n\ngit@host.xz:user/project.git\ngit://host.xz/path/to/repo.git/\ngit://host.xz/~user/path/to/repo.git/\n\nssh://host.xz/project.git\nssh://host.xz/path/to/repo.git\nssh://host.xz/path/to/repo.git/\nssh://host.xz:~project.git\nssh://host.xz:port/path/to/repo.git/\nssh://user@host.xz/project.git\nssh://user@host.xz/path/to/repo.git\nssh://user@host.xz/path/to/repo.git/\nssh://user@host.xz:port/path/to/repo.git/\nssh://user:password@host.xz/project.git\nssh://user:password@host.xz/path/to/repo.git\nssh://user:password@host.xz/path/to/repo.git/\n\nuser@host.xz:project.git\nuser@host.xz:path/to/repo.git\nuser@host.xz:/path/to/repo.git/\nuser:password@host.xz:project.git\nuser:password@host.xz:/path/to/repo.git\nuser:password@host.xz:/path/to/repo.git/\n*/\n\nexport class GitRemoteParser {\n    static parse(\n        data: string,\n        repoPath: string,\n        providerFactory: (domain: string, path: string) => RemoteProvider | undefined\n    ): GitRemote[] {\n        if (!data) return [];\n\n        const remotes: GitRemote[] = [];\n        const groups = Object.create(null);\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = remoteRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const url = (' ' + match[2]).substr(1);\n\n            const [scheme, domain, path] = this.parseGitUrl(url);\n\n            const uniqueness = `${domain}/${path}`;\n            let remote: GitRemote | undefined = groups[uniqueness];\n            if (remote === undefined) {\n                remote = new GitRemote(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + match[1]).substr(1),\n                    scheme,\n                    domain,\n                    path,\n                    providerFactory(domain, path),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    [{ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType }]\n                );\n                remotes.push(remote);\n                groups[uniqueness] = remote;\n            }\n            else {\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                remote.types.push({ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType });\n            }\n        } while (match != null);\n\n        if (!remotes.length) return [];\n\n        return remotes;\n    }\n\n    static parseGitUrl(url: string): [string, string, string] {\n        const match = urlRegex.exec(url);\n        if (match == null) return ['', '', ''];\n\n        return [\n            match[1] || match[3] || match[6],\n            match[2] || match[4] || match[5] || match[7] || match[8],\n            match[9].replace(/\\.git\\/?$/, '')\n        ];\n    }\n}\n","'use strict';\nimport { Arrays, Strings } from '../../system';\nimport { GitCommitType, GitFile, GitFileStatus, GitLogParser, GitStash, GitStashCommit } from './../git';\n// import { Logger } from './logger';\n\ninterface StashEntry {\n    ref?: string;\n    date?: string;\n    committedDate?: string;\n    fileNames?: string;\n    files?: GitFile[];\n    summary?: string;\n    stashName?: string;\n}\n\nconst emptyEntry: StashEntry = {};\n\nexport class GitStashParser {\n    static parse(data: string, repoPath: string): GitStash | undefined {\n        if (!data) return undefined;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const commits: Map<string, GitStashCommit> = new Map();\n\n        let entry: StashEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 108: // 'l': // reflog-selector\n                    entry.stashName = line.substring(4);\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (!next.done && next.value !== '</f>') {\n                        while (true) {\n                            next = lines.next();\n                            if (next.done) break;\n\n                            line = next.value;\n                            if (line === '</f>') break;\n\n                            if (line.startsWith('warning:')) continue;\n\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            GitLogParser.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n\n                        if (entry.files !== undefined) {\n                            entry.fileNames = Arrays.filterMap(entry.files, f =>\n                                f.fileName ? f.fileName : undefined\n                            ).join(', ');\n                        }\n                    }\n\n                    GitStashParser.parseEntry(entry, repoPath, commits);\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            commits: commits\n        } as GitStash;\n    }\n\n    private static parseEntry(entry: StashEntry, repoPath: string, commits: Map<string, GitStashCommit>) {\n        let commit = commits.get(entry.ref!);\n        if (commit === undefined) {\n            commit = new GitStashCommit(\n                GitCommitType.Stash,\n                entry.stashName!,\n                repoPath,\n                entry.ref!,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                entry.fileNames!,\n                entry.files || []\n            );\n        }\n\n        commits.set(entry.ref!, commit);\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\nimport { GitFileStatus, GitStatus, GitStatusFile } from './../git';\n\nconst aheadStatusV1Regex = /(?:ahead ([0-9]+))/;\nconst behindStatusV1Regex = /(?:behind ([0-9]+))/;\n\nexport class GitStatusParser {\n    static parse(data: string, repoPath: string, porcelainVersion: number): GitStatus | undefined {\n        if (!data) return undefined;\n\n        const lines = data.split('\\n').filter(Boolean);\n        if (lines.length === 0) return undefined;\n\n        if (porcelainVersion < 2) return this.parseV1(lines, repoPath);\n\n        return this.parseV2(lines, repoPath);\n    }\n\n    private static parseV1(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Header\n            if (line.startsWith('##')) {\n                const lineParts = line.split(' ');\n                [branch, upstream] = lineParts[1].split('...');\n                if (lineParts.length > 2) {\n                    const upstreamStatus = lineParts.slice(2).join(' ');\n\n                    const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);\n                    state.ahead = aheadStatus == null ? 0 : +aheadStatus[1] || 0;\n\n                    const behindStatus = behindStatusV1Regex.exec(upstreamStatus);\n                    state.behind = behindStatus == null ? 0 : +behindStatus[1] || 0;\n                }\n            }\n            else {\n                const rawStatus = line.substring(0, 2);\n                const fileName = line.substring(3);\n                if (rawStatus[0] === 'R') {\n                    const [file1, file2] = fileName.replace(/\\\"/g, '').split('->');\n                    files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));\n                }\n                else {\n                    files.push(this.parseStatusFile(repoPath, rawStatus, fileName));\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', '', files, state, upstream);\n    }\n\n    private static parseV2(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        let sha: string | undefined;\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Headers\n            if (line.startsWith('#')) {\n                const lineParts = line.split(' ');\n                switch (lineParts[1]) {\n                    case 'branch.oid':\n                        sha = lineParts[2];\n                        break;\n                    case 'branch.head':\n                        branch = lineParts[2];\n                        break;\n                    case 'branch.upstream':\n                        upstream = lineParts[2];\n                        break;\n                    case 'branch.ab':\n                        state.ahead = +lineParts[2].substring(1);\n                        state.behind = +lineParts[3].substring(1);\n                        break;\n                }\n            }\n            else {\n                const lineParts = line.split(' ');\n                switch (lineParts[0][0]) {\n                    case '1': // normal\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(' ')));\n                        break;\n                    case '2': // rename\n                        const file = lineParts\n                            .slice(9)\n                            .join(' ')\n                            .split('\\t');\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));\n                        break;\n                    case 'u': // unmerged\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(' ')));\n                        break;\n                    case '?': // untracked\n                        files.push(this.parseStatusFile(repoPath, ' ?', lineParts.slice(1).join(' ')));\n                        break;\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', sha || '', files, state, upstream);\n    }\n\n    static parseStatusFile(\n        repoPath: string,\n        rawStatus: string,\n        fileName: string,\n        originalFileName?: string\n    ): GitStatusFile {\n        let indexStatus = rawStatus[0] !== '.' ? rawStatus[0].trim() : undefined;\n        if (indexStatus == null || indexStatus.length === 0) {\n            indexStatus = undefined;\n        }\n\n        let workTreeStatus = undefined;\n        if (rawStatus.length > 1) {\n            workTreeStatus = rawStatus[1] !== '.' ? rawStatus[1].trim() : undefined;\n            if (workTreeStatus == null || workTreeStatus.length === 0) {\n                workTreeStatus = undefined;\n            }\n        }\n\n        return new GitStatusFile(\n            repoPath,\n            indexStatus as GitFileStatus | undefined,\n            workTreeStatus as GitFileStatus | undefined,\n            fileName,\n            originalFileName\n        );\n    }\n}\n","'use strict';\nimport { GitTag } from './../git';\n\nconst tagWithRefRegex = /([0-9,a-f]+)\\srefs\\/tags\\/(.*)/gm;\nconst tagWithAnnotationRegex = /^(.+?)(?:$|(?:\\s+)(.*)$)/gm;\n\nexport class GitTagParser {\n    static parse(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let annotation;\n        let name;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithAnnotationRegex.exec(data);\n            if (match == null) break;\n\n            [, name, annotation] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    undefined,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    annotation === undefined ? undefined : (' ' + annotation).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n\n    static parseWithRef(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let name;\n        let sha;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithRefRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, name] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + sha).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n}\n","'use strict';\nimport { GitTree } from './../git';\n\nconst treeRegex = /(?:.+?)\\s+(.+?)\\s+(.+?)\\s+(.+?)\\s+(.+)/gm;\n\nexport class GitTreeParser {\n    static parse(data: string | undefined): GitTree[] | undefined {\n        if (!data) return undefined;\n\n        const trees: GitTree[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = treeRegex.exec(data);\n            if (match == null) break;\n\n            const [, type, commitSha, size, filePath] = match;\n            trees.push({\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                commitSha: commitSha === undefined ? '' : (' ' + commitSha).substr(1),\n                path: filePath === undefined ? '' : filePath,\n                size: size === '-' ? 0 : Number(size || 0),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                type: (type === undefined ? '' : (' ' + type).substr(1)) as 'blob' | 'tree'\n            });\n        } while (match != null);\n\n        if (!trees.length) return undefined;\n\n        return trees;\n    }\n}\n","'use strict';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { findGitPath, GitLocation } from './locator';\nimport { run, RunOptions } from './shell';\n\nexport { GitLocation } from './locator';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './remotes/provider';\n\n// This is a root sha of all git repo's if using sha1\nconst rootSha = '4b825dc642cb6eb9a060e54bf8d69288fbee4904';\n\nconst defaultBlameParams = ['blame', '--root', '--incremental'];\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\nconst logFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}a${rb}${sp}%aN`, // author\n    `${lb}e${rb}${sp}%aE`, // email\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}p${rb}${sp}%P`, // parents\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultLogParams = ['log', '--name-status', `--format=${logFormat}`];\n\nconst stashFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}l${rb}${sp}%gd`, // reflog-selector\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultStashParams = ['stash', 'list', '--name-status', '-M', `--format=${stashFormat}`];\n\nconst GitErrors = {\n    badRevision: /bad revision \\'(.*?)\\'/i,\n    notAValidObjectName: /Not a valid object name/i\n};\n\nconst GitWarnings = {\n    notARepository: /Not a git repository/i,\n    outsideRepository: /is outside repository/i,\n    noPath: /no such path/i,\n    noCommits: /does not have any commits/i,\n    notFound: /Path \\'.*?\\' does not exist in/i,\n    foundButNotInRevision: /Path \\'.*?\\' exists on disk, but not in/i,\n    headNotABranch: /HEAD does not point to a branch/i,\n    noUpstream: /no upstream configured for branch \\'(.*?)\\'/i,\n    unknownRevision: /ambiguous argument \\'.*?\\': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,\n    mustRunInWorkTree: /this operation must be run in a work tree/i,\n    patchWithConflicts: /Applied patch to \\'.*?\\' with conflicts/i,\n    noRemoteRepositorySpecified: /No remote repository specified\\./i,\n    remoteConnectionError: /Could not read from remote repository/i,\n    notAGitCommand: /\\'.+\\' is not a git command/i\n};\n\nexport enum GitErrorHandling {\n    Ignore = 'ignore',\n    Throw = 'throw'\n}\n\nexport interface GitCommandOptions extends RunOptions {\n    configs?: string[];\n    readonly correlationKey?: string;\n    errors?: GitErrorHandling;\n    // Specifies that this command should always be executed locally if possible\n    local?: boolean;\n}\n\n// A map of running git commands -- avoids running duplicate overlaping commands\nconst pendingCommands: Map<string, Promise<string | Buffer>> = new Map();\n\nconst emptyArray: any = [];\nconst emptyObj = {};\n\nexport async function git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]): Promise<TOut> {\n    if (Container.vsls.isMaybeGuest) {\n        if (options.local !== true) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.git<TOut>(options, ...args);\n            }\n        }\n        else {\n            // Since we will have a live share path here, just blank it out\n            options.cwd = '';\n        }\n    }\n\n    const start = process.hrtime();\n\n    const { configs, correlationKey, errors: errorHandling, ...opts } = options;\n\n    const encoding = options.encoding || 'utf8';\n    const runOpts = {\n        ...opts,\n        encoding: encoding === 'utf8' ? 'utf8' : encoding === 'buffer' ? 'buffer' : 'binary',\n        // Adds GCM environment variables to avoid any possible credential issues -- from https://github.com/Microsoft/vscode/issues/26573#issuecomment-338686581\n        // Shouldn't *really* be needed but better safe than sorry\n        env: {\n            ...process.env,\n            ...(options.env || emptyObj),\n            GCM_INTERACTIVE: 'NEVER',\n            GCM_PRESERVE_CREDS: 'TRUE',\n            LC_ALL: 'C'\n        }\n    } as RunOptions;\n\n    const gitCommand = `[${runOpts.cwd}] git ${args.join(' ')}`;\n\n    const command = `${correlationKey !== undefined ? `${correlationKey}:` : ''}${gitCommand}`;\n\n    let waiting;\n    let promise = pendingCommands.get(command);\n    if (promise === undefined) {\n        waiting = false;\n\n        // Fixes https://github.com/eamodio/vscode-gitlens/issues/73 & https://github.com/eamodio/vscode-gitlens/issues/161\n        // See https://stackoverflow.com/questions/4144417/how-to-handle-asian-characters-in-file-names-in-git-on-os-x\n        args.splice(\n            0,\n            0,\n            '-c',\n            'core.quotepath=false',\n            '-c',\n            'color.ui=false',\n            ...(configs !== undefined ? configs : emptyArray)\n        );\n\n        promise = run<TOut>(gitInfo.path, args, encoding, runOpts);\n\n        pendingCommands.set(command, promise);\n    }\n    else {\n        waiting = true;\n    }\n\n    let exception: Error | undefined;\n    try {\n        return (await promise) as TOut;\n    }\n    catch (ex) {\n        exception = ex;\n\n        switch (errorHandling) {\n            case GitErrorHandling.Ignore:\n                exception = undefined;\n                return '' as TOut;\n\n            case GitErrorHandling.Throw:\n                throw ex;\n\n            default:\n                const result = defaultExceptionHandler(ex, options, ...args);\n                exception = undefined;\n                return result as TOut;\n        }\n    }\n    finally {\n        pendingCommands.delete(command);\n\n        const duration = `${Strings.getDurationMilliseconds(start)} ms ${waiting ? '(await) ' : ''}`;\n        Logger.log(\n            `${gitCommand} ${GlyphChars.Dot} ${\n                exception !== undefined ? `FAILED(${(exception.message || '').trim().split('\\n', 1)[0]}) ` : ''\n            }${duration}`\n        );\n        Logger.logGitCommand(\n            `${gitCommand} ${GlyphChars.Dot} ${exception !== undefined ? 'FAILED ' : ''}${duration}`,\n            exception\n        );\n    }\n}\n\nfunction defaultExceptionHandler(ex: Error, options: GitCommandOptions, ...args: any[]): string {\n    const msg = ex && ex.toString();\n    if (msg) {\n        for (const warning of Objects.values(GitWarnings)) {\n            if (warning.test(msg)) {\n                Logger.warn('git', ...args, `  cwd='${options.cwd}'\\n\\n  `, msg.replace(/\\r?\\n|\\r/g, ' '));\n                return '';\n            }\n        }\n    }\n\n    Logger.error(ex, 'git', ...args, `  cwd='${options.cwd}'\\n\\n  `);\n    throw ex;\n}\n\nlet gitInfo: GitLocation;\n\nexport class Git {\n    static deletedOrMissingSha = '0000000000000000000000000000000000000000-';\n    static shaLikeRegex = /(^[0-9a-f]{40}([\\^@~:]\\S*)?$)|(^[0]{40}(:|-)$)/;\n    static shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;\n    static stagedUncommittedRegex = /^[0]{40}([\\^@~]\\S*)?:$/;\n    static stagedUncommittedSha = '0000000000000000000000000000000000000000:';\n    static uncommittedRegex = /^[0]{40}(?:[\\^@~:]\\S*)?:?$/;\n    static uncommittedSha = '0000000000000000000000000000000000000000';\n\n    static getEncoding(encoding: string | undefined) {\n        return encoding !== undefined && iconv.encodingExists(encoding) ? encoding : 'utf8';\n    }\n\n    static getGitPath(): string {\n        return gitInfo.path;\n    }\n\n    static getGitVersion(): string {\n        return gitInfo.version;\n    }\n\n    static async setOrFindGitPath(gitPath?: string): Promise<void> {\n        const start = process.hrtime();\n\n        gitInfo = await findGitPath(gitPath);\n\n        Logger.log(\n            `Git found: ${gitInfo.version} @ ${gitInfo.path === 'git' ? 'PATH' : gitInfo.path} ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n    }\n\n    static isSha(ref: string) {\n        return Git.shaRegex.test(ref);\n    }\n\n    static isShaLike(ref: string) {\n        return Git.shaLikeRegex.test(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return ref ? Git.stagedUncommittedRegex.test(ref) : false;\n    }\n\n    static isUncommitted(ref: string | undefined) {\n        return ref ? Git.uncommittedRegex.test(ref) : false;\n    }\n\n    static shortenSha(\n        ref: string,\n        strings: { stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        strings = { stagedUncommitted: 'Index', uncommitted: 'Working Tree', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (Git.isUncommitted(ref)) {\n            if (Git.isStagedUncommitted(ref)) return strings.stagedUncommitted;\n\n            return strings.uncommitted;\n        }\n\n        const index = ref.indexOf('^');\n        if (index > 5) {\n            // Only grab a max of 5 chars for the suffix\n            const suffix = ref.substring(index).substring(0, 5);\n            return `${ref.substring(0, 7 - suffix.length)}${suffix}`;\n        }\n        return ref.substring(0, 7);\n    }\n\n    static splitPath(fileName: string, repoPath: string | undefined, extract: boolean = true): [string, string] {\n        if (repoPath) {\n            fileName = Strings.normalizePath(fileName);\n            repoPath = Strings.normalizePath(repoPath);\n\n            const normalizedRepoPath = (repoPath.endsWith('/') ? repoPath : `${repoPath}/`).toLowerCase();\n            if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {\n                fileName = fileName.substring(normalizedRepoPath.length);\n            }\n        }\n        else {\n            repoPath = Strings.normalizePath(extract ? paths.dirname(fileName) : repoPath!);\n            fileName = Strings.normalizePath(extract ? paths.basename(fileName) : fileName);\n        }\n\n        return [fileName, repoPath];\n    }\n\n    static validateVersion(major: number, minor: number): boolean {\n        const [gitMajor, gitMinor] = gitInfo.version.split('.');\n        return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;\n    }\n\n    // Git commands\n\n    static add(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'add', '-A', '--', fileName);\n    }\n\n    static apply(repoPath: string | undefined, patch: string, options: { allowConflicts?: boolean } = {}) {\n        const params = ['apply'];\n        if (options.allowConflicts) {\n            params.push(`-3`);\n        }\n        return git<string>({ cwd: repoPath, stdin: patch }, ...params);\n    }\n\n    static async blame(\n        repoPath: string | undefined,\n        fileName: string,\n        ref?: string,\n        options: { args?: string[] | null; ignoreWhitespace?: boolean; startLine?: number; endLine?: number } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        let stdin;\n        if (ref) {\n            if (Git.isStagedUncommitted(ref)) {\n                // Pipe the blame contents to stdin\n                params.push('--contents', '-');\n\n                // Get the file contents for the staged version using `:`\n                stdin = await Git.show<string>(repoPath, fileName, ':');\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>({ cwd: root, stdin: stdin }, ...params, '--', file);\n    }\n\n    static async blame_contents(\n        repoPath: string | undefined,\n        fileName: string,\n        contents: string,\n        options: {\n            args?: string[] | null;\n            correlationKey?: string;\n            ignoreWhitespace?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        // Pipe the blame contents to stdin\n        params.push('--contents', '-');\n\n        return git<string>(\n            { cwd: root, stdin: contents, correlationKey: options.correlationKey },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static branch(repoPath: string, options: { all: boolean } = { all: false }) {\n        const params = ['branch', '-vv', '--abbrev=40'];\n        if (options.all) {\n            params.push('-a');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params);\n    }\n\n    static branch_contains(repoPath: string, ref: string, options: { remote: boolean } = { remote: false }) {\n        const params = ['branch', '--contains'];\n        if (options.remote) {\n            params.push('-r');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params, ref);\n    }\n\n    static async cat_validate(repoPath: string, ref: string) {\n        if (Git.isUncommitted(ref)) return true;\n\n        try {\n            await git<string>({ cwd: repoPath, errors: GitErrorHandling.Throw }, 'cat-file', '-t', ref);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n\n    static async cat_file_validate(repoPath: string, fileName: string, ref: string) {\n        if (Git.isUncommitted(ref)) return ref;\n\n        try {\n            await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'cat-file',\n                '-e',\n                `${ref}:./${fileName}`\n            );\n            return ref;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.notAValidObjectName.test(msg)) {\n                return Git.deletedOrMissingSha;\n            }\n\n            return undefined;\n        }\n    }\n\n    static check_mailmap(repoPath: string, author: string) {\n        return git<string>({ cwd: repoPath, local: true }, 'check-mailmap', author);\n    }\n\n    static checkout(repoPath: string, ref: string, fileName?: string) {\n        const params = ['checkout', ref, '--'];\n        if (fileName) {\n            [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n            params.push(fileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static async config_get(key: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get',\n            key\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async config_getRegex(pattern: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get-regex',\n            pattern\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async diff(\n        repoPath: string,\n        fileName: string,\n        ref1?: string,\n        ref2?: string,\n        options: { encoding?: string; filter?: string } = {}\n    ): Promise<string> {\n        const params = ['diff', '-M', '--no-ext-diff', '--minimal'];\n        if (options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n\n        if (ref1) {\n            // <sha>^3 signals an untracked file in a stash and if we are trying to find its parent, use the root sha\n            if (ref1.endsWith('^3^')) {\n                ref1 = rootSha;\n            }\n            params.push(Git.isStagedUncommitted(ref1) ? '--staged' : ref1);\n        }\n        if (ref2) {\n            params.push(Git.isStagedUncommitted(ref2) ? '--staged' : ref2);\n        }\n\n        const encoding: BufferEncoding = options.encoding === 'utf8' ? 'utf8' : 'binary';\n\n        try {\n            return await git<string>(\n                { cwd: repoPath, configs: ['-c', 'color.diff=false'], encoding: encoding },\n                ...params,\n                '--',\n                fileName\n            );\n        }\n        catch (ex) {\n            const match = GitErrors.badRevision.exec(ex.message);\n            if (match !== null) {\n                const [, ref] = match;\n\n                // If the bad ref is trying to find a parent ref, assume we hit to the last commit, so try again using the root sha\n                if (ref === ref1 && ref.endsWith('^')) {\n                    return Git.diff(repoPath, fileName, rootSha, ref2, options);\n                }\n            }\n\n            throw ex;\n        }\n    }\n\n    static diff_nameStatus(repoPath: string, ref1?: string, ref2?: string, options: { filter?: string } = {}) {\n        const params = ['diff', '--name-status', '-M', '--no-ext-diff'];\n        if (options && options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n        if (ref1) {\n            params.push(ref1);\n        }\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static diff_shortstat(repoPath: string, ref?: string) {\n        const params = ['diff', '--shortstat', '--no-ext-diff'];\n        if (ref) {\n            params.push(ref);\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static difftool_dirDiff(repoPath: string, tool: string, ref1: string, ref2?: string) {\n        const params = ['difftool', '--dir-diff', `--tool=${tool}`, ref1];\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static difftool_fileDiff(\n        repoPath: string,\n        fileName: string,\n        tool: string,\n        options: { ref1?: string; ref2?: string; staged?: boolean } = {}\n    ) {\n        const params = ['difftool', '--no-prompt', `--tool=${tool}`];\n        if (options.staged) {\n            params.push('--staged');\n        }\n        if (options.ref1) {\n            params.push(options.ref1);\n        }\n        if (options.ref2) {\n            params.push(options.ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--', fileName);\n    }\n\n    static fetch(repoPath: string, options: { all?: boolean; remote?: string } = {}) {\n        const params = ['fetch'];\n        if (options.remote) {\n            params.push(options.remote);\n        }\n        else if (options.all) {\n            params.push('--all');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static log(repoPath: string, options: { author?: string; maxCount?: number; ref?: string; reverse?: boolean }) {\n        const params = [...defaultLogParams, '--full-history', '-M', '-m'];\n        if (options.author) {\n            params.push(`--author=${options.author}`);\n        }\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'diff.renameLimit=0'] }, ...params, '--');\n    }\n\n    static log_file(\n        repoPath: string,\n        fileName: string,\n        options: {\n            maxCount?: number;\n            ref?: string;\n            renames?: boolean;\n            reverse?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = { renames: true, reverse: false }\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultLogParams, '-m'];\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        if (options.renames) {\n            params.push('--follow');\n        }\n\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}:${file}`);\n        }\n\n        return git<string>({ cwd: root }, ...params, '--', file);\n    }\n\n    static async log_recent(repoPath: string, fileName: string) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            '-M',\n            '-n1',\n            '--format=%H',\n            '--',\n            fileName\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static log_search(repoPath: string, search: string[] = emptyArray, options: { maxCount?: number } = {}) {\n        const params = [...defaultLogParams];\n        if (options.maxCount) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ...search);\n    }\n\n    static log_shortstat(repoPath: string, options: { ref?: string }) {\n        const params = ['log', '--shortstat', '--oneline'];\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            params.push(options.ref);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--');\n    }\n\n    static async ls_files(\n        repoPath: string,\n        fileName: string,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        const params = ['ls-files'];\n        if (options.ref && !Git.isUncommitted(options.ref)) {\n            params.push(`--with-tree=${options.ref}`);\n        }\n\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, '--', fileName);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async ls_tree(repoPath: string, ref: string, options: { fileName?: string } = {}) {\n        const params = ['ls-tree'];\n        if (options.fileName) {\n            params.push('-l', ref, '--', options.fileName);\n        }\n        else {\n            params.push('-lrt', ref, '--');\n        }\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static merge_base(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        const params = ['merge-base'];\n        if (options.forkPoint) {\n            params.push('--fork-point');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ref1, ref2);\n    }\n\n    static remote(repoPath: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', '-v');\n    }\n\n    static remote_url(repoPath: string, remote: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', 'get-url', remote);\n    }\n\n    static reset(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'reset', '-q', '--', fileName);\n    }\n\n    static async revparse(repoPath: string, ref: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'rev-parse', ref);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async revparse_currentBranch(repoPath: string): Promise<[string, string | undefined] | undefined> {\n        const params = ['rev-parse', '--abbrev-ref', '--symbolic-full-name', '@', '@{u}'];\n\n        const opts = {\n            cwd: repoPath,\n            errors: GitErrorHandling.Throw\n        } as GitCommandOptions;\n\n        try {\n            const data = await git<string>(opts, ...params);\n            return [data, undefined];\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitWarnings.headNotABranch.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'log',\n                    '-n1',\n                    '--format=%H',\n                    '--'\n                );\n                if (data.length === 0) return undefined;\n\n                // Matches output of `git branch -vv`\n                const sha = data.trim();\n                return [`(HEAD detached at ${this.shortenSha(sha)})`, sha];\n            }\n\n            const result = GitWarnings.noUpstream.exec(msg);\n            if (result !== null) return [result[1], undefined];\n\n            if (GitWarnings.unknownRevision.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'symbolic-ref',\n                    '-q',\n                    '--short',\n                    'HEAD'\n                );\n                return data.length === 0 ? undefined : [data.trim(), undefined];\n            }\n\n            defaultExceptionHandler(ex, opts, ...params);\n            return undefined;\n        }\n    }\n\n    static async revparse_toplevel(cwd: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: cwd, errors: GitErrorHandling.Ignore }, 'rev-parse', '--show-toplevel');\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async show<TOut extends string | Buffer>(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string,\n        options: { encoding?: string } = {}\n    ): Promise<TOut | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        if (Git.isStagedUncommitted(ref)) {\n            ref = ':';\n        }\n        if (Git.isUncommitted(ref)) throw new Error(`ref=${ref} is uncommitted`);\n\n        const opts = {\n            cwd: root,\n            encoding: options.encoding || 'utf8',\n            errors: GitErrorHandling.Throw\n        } as GitCommandOptions;\n        const args = ref.endsWith(':') ? `${ref}./${file}` : `${ref}:./${file}`;\n\n        try {\n            const data = await git<TOut>(opts, 'show', args, '--');\n            return data;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (ref === ':' && GitErrors.badRevision.test(msg)) {\n                return Git.show<TOut>(repoPath, fileName, 'HEAD:', options);\n            }\n\n            if (\n                GitErrors.badRevision.test(msg) ||\n                GitWarnings.notFound.test(msg) ||\n                GitWarnings.foundButNotInRevision.test(msg)\n            ) {\n                return undefined;\n            }\n\n            return defaultExceptionHandler(ex, opts, args) as TOut;\n        }\n    }\n\n    static show_status(repoPath: string, fileName: string, ref: string) {\n        return git<string>({ cwd: repoPath }, 'show', '--name-status', '--format=', ref, '--', fileName);\n    }\n\n    static showref_tag(repoPath: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'show-ref', '--tags');\n    }\n\n    static stash_apply(repoPath: string, stashName: string, deleteAfter: boolean) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', deleteAfter ? 'pop' : 'apply', stashName);\n    }\n\n    static stash_delete(repoPath: string, stashName: string) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', 'drop', stashName);\n    }\n\n    static stash_list(repoPath: string) {\n        return git<string>({ cwd: repoPath }, ...defaultStashParams);\n    }\n\n    static stash_push(repoPath: string, pathspecs: string[], message?: string) {\n        const params = ['stash', 'push', '-u'];\n        if (message) {\n            params.push('-m', message);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--', ...pathspecs);\n    }\n\n    static stash_save(repoPath: string, message?: string) {\n        const params = ['stash', 'save', '-u'];\n        if (message) {\n            params.push(message);\n        }\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static status(repoPath: string, porcelainVersion: number = 1): Promise<string> {\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--branch',\n            '-u'\n        );\n    }\n\n    static status_file(repoPath: string, fileName: string, porcelainVersion: number = 1): Promise<string> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: root, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--',\n            file\n        );\n    }\n\n    static tag(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'tag', '-l', '-n1');\n    }\n}\n","'use strict';\nimport { GitCommandOptions } from '../git/git';\n\nexport class RequestType<TRequest, TResponse> {\n    constructor(\n        public readonly name: string\n    ) {}\n}\n\nexport interface GitCommandRequest {\n    options: GitCommandOptions;\n    args: any[];\n}\n\nexport interface GitCommandResponse {\n    data: string;\n    isBuffer?: boolean;\n}\n\nexport const GitCommandRequestType = new RequestType<GitCommandRequest, GitCommandResponse>('git');\n\nexport interface RepositoryProxy {\n    folderUri: string;\n    path: string;\n    root: boolean;\n    closed: boolean;\n}\n\nexport interface RepositoriesInFolderRequest {\n    folderUri: string;\n}\n\nexport interface RepositoriesInFolderResponse {\n    repositories: RepositoryProxy[];\n}\n\nexport const RepositoriesInFolderRequestType = new RequestType<\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderResponse\n>('repositories/inFolder');\n\nexport interface WorkspaceFileExistsRequest {\n    fileName: string;\n    repoPath: string;\n    options: { ensureCase: boolean };\n}\n\nexport interface WorkspaceFileExistsResponse {\n    exists: boolean;\n}\n\nexport const WorkspaceFileExistsRequestType = new RequestType<WorkspaceFileExistsRequest, WorkspaceFileExistsResponse>(\n    'workspace/fileExists'\n);\n","'use strict';\nimport { CancellationToken, Disposable, Uri, workspace, WorkspaceFoldersChangeEvent } from 'vscode';\nimport { LiveShare, SharedService } from 'vsls';\nimport { Container } from '../container';\nimport { git } from '../git/git';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { debug, Iterables, log, Strings } from '../system';\nimport {\n    GitCommandRequest,\n    GitCommandRequestType,\n    GitCommandResponse,\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderRequestType,\n    RepositoriesInFolderResponse,\n    RequestType,\n    WorkspaceFileExistsRequest,\n    WorkspaceFileExistsRequestType,\n    WorkspaceFileExistsResponse\n} from './protocol';\nimport { vslsUriRootRegex } from './vsls';\n\nconst defaultWhitelistFn = () => true;\nconst gitWhitelist = new Map<string, ((args: any[]) => boolean)>([\n    ['blame', defaultWhitelistFn],\n    ['branch', args => args[1] === '-vv' || args[1] === '--contains'],\n    ['cat-file', defaultWhitelistFn],\n    ['config', args => args[1] === '--get' || args[1] === '--get-regex'],\n    ['diff', defaultWhitelistFn],\n    ['difftool', defaultWhitelistFn],\n    ['log', defaultWhitelistFn],\n    ['ls-files', defaultWhitelistFn],\n    ['ls-tree', defaultWhitelistFn],\n    ['merge-base', defaultWhitelistFn],\n    ['remote', args => args[1] === '-v' || args[1] === 'get-url'],\n    ['rev-parse', defaultWhitelistFn],\n    ['show', defaultWhitelistFn],\n    ['show-ref', defaultWhitelistFn],\n    ['stash', args => args[1] === 'list'],\n    ['status', defaultWhitelistFn],\n    ['symbolic-ref', defaultWhitelistFn],\n    ['tag', args => args[1] === '-l']\n]);\n\nconst leadingSlashRegex = /^[\\/|\\\\]/;\n\nexport class VslsHostService implements Disposable {\n    static ServiceId = 'proxy';\n\n    @log()\n    static async share(api: LiveShare) {\n        const service = await api.shareService(this.ServiceId);\n        if (service == null) {\n            throw new Error('Failed to share host service');\n        }\n\n        return new VslsHostService(api, service);\n    }\n\n    private readonly _disposable: Disposable;\n    private _localPathsRegex: RegExp | undefined;\n    private _localToSharedPaths = new Map<string, string>();\n    private _sharedPathsRegex: RegExp | undefined;\n    private _sharedToLocalPaths = new Map<string, string>();\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedService\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n\n        this._disposable = Disposable.from(workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));\n\n        this.onRequest(GitCommandRequestType, this.onGitCommandRequest.bind(this));\n        this.onRequest(RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));\n        this.onRequest(WorkspaceFileExistsRequestType, this.onWorkspaceFileExistsRequest.bind(this));\n\n        this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._disposable.dispose();\n        void this._api.unshareService(VslsHostService.ServiceId);\n    }\n\n    private onRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        handler: (request: TRequest, cancellation: CancellationToken) => Promise<TResponse>\n    ) {\n        this._service.onRequest(requestType.name, (args: any[], cancellation: CancellationToken) =>\n            handler(args[0], cancellation)\n        );\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        // TODO\n    }\n\n    @debug()\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        if (workspace.workspaceFolders === undefined || workspace.workspaceFolders.length === 0) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        this._localToSharedPaths.clear();\n        this._sharedToLocalPaths.clear();\n\n        let localPath;\n        let sharedPath;\n        for (const f of workspace.workspaceFolders) {\n            localPath = Strings.normalizePath(f.uri.fsPath);\n            sharedPath = Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);\n\n            Logger.debug(cc, `shared='${sharedPath}' \\u2194 local='${localPath}'`);\n            this._localToSharedPaths.set(localPath, sharedPath);\n            this._sharedToLocalPaths.set(sharedPath, localPath);\n        }\n\n        let localPaths = Iterables.join(this._sharedToLocalPaths.values(), '|');\n        localPaths = localPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._localPathsRegex = new RegExp(`(${localPaths})`, 'gi');\n\n        let sharedPaths = Iterables.join(this._localToSharedPaths.values(), '|');\n        sharedPaths = sharedPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, 'i');\n    }\n\n    @log()\n    private async onGitCommandRequest(\n        request: GitCommandRequest,\n        cancellation: CancellationToken\n    ): Promise<GitCommandResponse> {\n        const { options, args } = request;\n\n        const fn = gitWhitelist.get(request.args[0]);\n        if (fn === undefined || !fn(request.args)) throw new Error(`Git ${request.args[0]} command is not allowed`);\n\n        let isRootWorkspace = false;\n        if (options.cwd !== undefined && options.cwd.length > 0 && this._sharedToLocalPaths !== undefined) {\n            // This is all so ugly, but basically we are converting shared paths to local paths\n            if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(options.cwd)) {\n                options.cwd = Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {\n                    if (!isRootWorkspace) {\n                        isRootWorkspace = shared === '/~0';\n                    }\n\n                    const local = this._sharedToLocalPaths.get(shared);\n                    return local != null ? local : shared;\n                });\n            }\n            else if (leadingSlashRegex.test(options.cwd)) {\n                const localCwd = this._sharedToLocalPaths.get('/~0');\n                if (localCwd !== undefined) {\n                    isRootWorkspace = true;\n                    options.cwd = GitUri.resolve(options.cwd, localCwd);\n                }\n            }\n        }\n\n        let files = false;\n        let i = -1;\n        for (const arg of args) {\n            i++;\n            if (arg === '--') {\n                files = true;\n                continue;\n            }\n\n            if (!files) continue;\n\n            if (typeof arg === 'string') {\n                // If we are the \"root\" workspace, then we need to remove the leading slash off the path (otherwise it will not be treated as a relative path)\n                if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {\n                    args.splice(i, 1, arg.substr(1));\n                }\n\n                if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(arg)) {\n                    args.splice(\n                        i,\n                        1,\n                        Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {\n                            const local = this._sharedToLocalPaths.get(shared);\n                            return local != null ? local : shared;\n                        })\n                    );\n                }\n            }\n        }\n\n        let data = await git(options, ...args);\n        if (typeof data === 'string') {\n            // And then we convert local paths to shared paths\n            if (this._localPathsRegex !== undefined && data.length > 0) {\n                data = data.replace(this._localPathsRegex, (match, local) => {\n                    const shared = this._localToSharedPaths.get(local);\n                    return shared != null ? shared : local;\n                });\n            }\n\n            return { data: data };\n        }\n\n        return { data: data.toString('binary'), isBuffer: true };\n    }\n\n    @log()\n    private async onRepositoriesInFolderRequest(\n        request: RepositoriesInFolderRequest,\n        cancellation: CancellationToken\n    ): Promise<RepositoriesInFolderResponse> {\n        const uri = this.convertSharedUriToLocal(Uri.parse(request.folderUri));\n        const normalized = Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();\n\n        const repos = [\n            ...Iterables.filterMap(await Container.git.getRepositories(), r => {\n                if (!r.normalizedPath.startsWith(normalized)) return undefined;\n\n                const vslsUri = this.convertLocalUriToShared(r.folder.uri);\n                return {\n                    folderUri: vslsUri.toString(true),\n                    path: vslsUri.path,\n                    root: r.root,\n                    closed: r.closed\n                };\n            })\n        ];\n\n        return {\n            repositories: repos\n        };\n    }\n\n    @log()\n    private async onWorkspaceFileExistsRequest(\n        request: WorkspaceFileExistsRequest,\n        cancellation: CancellationToken\n    ): Promise<WorkspaceFileExistsResponse> {\n        let { repoPath } = request;\n        if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(repoPath)) {\n            repoPath = Strings.normalizePath(repoPath).replace(this._sharedPathsRegex, (match, shared) => {\n                const local = this._sharedToLocalPaths!.get(shared);\n                return local != null ? local : shared;\n            });\n        }\n\n        // TODO: Lock this to be only in the contained workspaces\n\n        return { exists: await Container.git.fileExists(repoPath, request.fileName, request.options) };\n    }\n\n    @debug({\n        exit: result => `returned ${result.toString(true)}`\n    })\n    private convertLocalUriToShared(localUri: Uri) {\n        const cc = Logger.getCorrelationContext();\n\n        let sharedUri = this._api.convertLocalUriToShared(localUri);\n        Logger.debug(\n            cc,\n            `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`\n        );\n\n        const localPath = localUri.path;\n        let sharedPath = sharedUri.path;\n        if (sharedUri.authority.length > 0) {\n            sharedPath = `/${sharedUri.authority}${sharedPath}`;\n        }\n\n        if (new RegExp(`${localPath}$`, 'i').test(sharedPath)) {\n            if (sharedPath.length === localPath.length) {\n                const folder = workspace.getWorkspaceFolder(localUri)!;\n                sharedUri = sharedUri.with({ path: `/~${folder.index}` });\n            }\n            else {\n                sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });\n            }\n        }\n        else if (!sharedPath.startsWith('/~')) {\n            const folder = workspace.getWorkspaceFolder(localUri)!;\n            sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });\n        }\n\n        return sharedUri;\n    }\n\n    private convertSharedUriToLocal(sharedUri: Uri) {\n        if (vslsUriRootRegex.test(sharedUri.path)) {\n            sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });\n        }\n\n        const localUri = this._api.convertSharedUriToLocal(sharedUri);\n\n        const localPath = localUri.path;\n        const sharedPath = sharedUri.path;\n        if (localPath.endsWith(sharedPath)) {\n            return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });\n        }\n        return localUri;\n    }\n}\n","'use strict';\nimport { CancellationToken, Disposable, window, WorkspaceFolder } from 'vscode';\nimport { LiveShare, SharedServiceProxy } from 'vsls';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { GitCommandOptions, Repository, RepositoryChange } from '../git/git';\nimport { Logger } from '../logger';\nimport { debug, log } from '../system';\nimport { VslsHostService } from './host';\nimport {\n    GitCommandRequestType,\n    RepositoriesInFolderRequestType,\n    RepositoryProxy,\n    RequestType,\n    WorkspaceFileExistsRequestType\n} from './protocol';\n\nexport class VslsGuestService implements Disposable {\n    @log()\n    static async connect(api: LiveShare) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const service = await api.getSharedService(VslsHostService.ServiceId);\n            if (service == null) {\n                throw new Error('Failed to connect to host service');\n            }\n\n            return new VslsGuestService(api, service);\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedServiceProxy\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n        this.onAvailabilityChanged(_service.isServiceAvailable);\n    }\n\n    dispose() {}\n\n    @log()\n    private async onAvailabilityChanged(available: boolean) {\n        if (available) {\n            setCommandContext(CommandContext.Enabled, true);\n            return;\n        }\n\n        setCommandContext(CommandContext.Enabled, false);\n        void window.showWarningMessage(\n            `GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.`\n        );\n    }\n\n    @log()\n    async git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]) {\n        const response = await this.sendRequest(GitCommandRequestType, { options: options, args: args });\n\n        if (response.isBuffer) {\n            return new Buffer(response.data, 'binary') as TOut;\n        }\n        return response.data as TOut;\n    }\n\n    @log()\n    async getRepositoriesInFolder(\n        folder: WorkspaceFolder,\n        onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void\n    ): Promise<Repository[]> {\n        const response = await this.sendRequest(RepositoriesInFolderRequestType, {\n            folderUri: folder.uri.toString(true)\n        });\n\n        return response.repositories.map(\n            (r: RepositoryProxy) => new Repository(folder, r.path, r.root, onAnyRepositoryChanged, false, r.closed)\n        );\n    }\n\n    @log()\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        const response = await this.sendRequest(WorkspaceFileExistsRequestType, {\n            fileName: fileName,\n            repoPath: repoPath,\n            options: options\n        });\n\n        return response.exists;\n    }\n\n    @debug()\n    private sendRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        request: TRequest,\n        cancellation?: CancellationToken\n    ): Promise<TResponse> {\n        return this._service.request(requestType.name, [request]);\n    }\n}\n","'use strict';\nimport { Disposable, workspace } from 'vscode';\nimport { getApi, LiveShare, Role, SessionChangeEvent } from 'vsls';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from './../logger';\nimport { VslsGuestService } from './guest';\nimport { VslsHostService } from './host';\n\nexport const vslsUriPrefixRegex = /^[\\/|\\\\]~(?:\\d+?|external)(?:[\\/|\\\\]|$)/;\nexport const vslsUriRootRegex = /^[\\/|\\\\]~(?:\\d+?|external)$/;\n\nexport class VslsController implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _guest: VslsGuestService | undefined;\n    private _host: VslsHostService | undefined;\n\n    private _onReady: (() => void) | undefined;\n    private _waitForReady: Promise<void> | undefined;\n\n    constructor() {\n        void this.initialize();\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n    }\n\n    private async initialize() {\n        try {\n            // If we have a vsls: workspace open, we might be a guest, so wait until live share transitions into a mode\n            if (\n                workspace.workspaceFolders !== undefined &&\n                workspace.workspaceFolders.some(f => f.uri.scheme === DocumentSchemes.Vsls)\n            ) {\n                setCommandContext(CommandContext.Readonly, true);\n                this._waitForReady = new Promise(resolve => (this._onReady = resolve));\n            }\n\n            const api = await getApi();\n            if (api == null) {\n                // Tear it down if we can't talk to live share\n                if (this._onReady !== undefined) {\n                    this._onReady();\n                    this._waitForReady = undefined;\n                }\n                return;\n            }\n\n            this._disposable = Disposable.from(\n                api.onDidChangeSession(e => this.onLiveShareSessionChanged(api, e), this)\n            );\n        }\n        catch (ex) {\n            debugger;\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    get isMaybeGuest() {\n        return this._guest !== undefined || this._waitForReady !== undefined;\n    }\n\n    async guest() {\n        if (this._waitForReady !== undefined) {\n            await this._waitForReady;\n            this._waitForReady = undefined;\n        }\n\n        return this._guest;\n    }\n\n    host() {\n        return this._host;\n    }\n\n    private async onLiveShareSessionChanged(api: LiveShare, e: SessionChangeEvent) {\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n\n        switch (e.session.role) {\n            case Role.Host:\n                setCommandContext(CommandContext.Readonly, undefined);\n                if (Container.config.liveshare.allowGuestAccess) {\n                    this._host = await VslsHostService.share(api);\n                }\n                break;\n            case Role.Guest:\n                setCommandContext(CommandContext.Readonly, true);\n                this._guest = await VslsGuestService.connect(api);\n                break;\n\n            default:\n                setCommandContext(CommandContext.Readonly, undefined);\n                break;\n        }\n\n        if (this._onReady !== undefined) {\n            this._onReady();\n            this._onReady = undefined;\n        }\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    extensions,\n    MessageItem,\n    ProgressLocation,\n    Range,\n    TextEditor,\n    Uri,\n    window,\n    WindowState,\n    workspace,\n    WorkspaceFolder,\n    WorkspaceFoldersChangeEvent\n} from 'vscode';\nimport { GitExtension } from '../@types/git';\nimport { configuration, RemotesConfig } from '../configuration';\nimport { CommandContext, DocumentSchemes, GlyphChars, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LogCorrelationContext, Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { gate, Iterables, log, Objects, Strings, TernarySearchTree, Versions } from '../system';\nimport { CachedBlame, CachedDiff, CachedLog, GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { vslsUriPrefixRegex } from '../vsls/vsls';\nimport {\n    CommitFormatting,\n    Git,\n    GitAuthor,\n    GitBlame,\n    GitBlameCommit,\n    GitBlameLine,\n    GitBlameLines,\n    GitBlameParser,\n    GitBranch,\n    GitBranchParser,\n    GitCommit,\n    GitCommitType,\n    GitDiff,\n    GitDiffChunkLine,\n    GitDiffParser,\n    GitDiffShortStat,\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitLogParser,\n    GitRemote,\n    GitRemoteParser,\n    GitStash,\n    GitStashParser,\n    GitStatus,\n    GitStatusFile,\n    GitStatusParser,\n    GitTag,\n    GitTagParser,\n    GitTree,\n    GitTreeParser,\n    Repository,\n    RepositoryChange\n} from './git';\nimport { GitUri } from './gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from './remotes/factory';\n\nexport * from './gitUri';\nexport * from './models/models';\nexport * from './formatters/formatters';\nexport { getNameFromRemoteResource, RemoteProvider, RemoteResource, RemoteResourceType } from './remotes/provider';\nexport { RemoteProviderFactory } from './remotes/factory';\n\nconst RepoSearchWarnings = {\n    doesNotExist: /no such file or directory/i\n};\n\nconst userConfigRegex = /^user\\.(name|email) (.*)$/gm;\nconst mappedAuthorRegex = /(.+)\\s<(.+)>/;\n\nexport enum GitRepoSearchBy {\n    Author = 'author',\n    ChangedLines = 'changed-lines',\n    Changes = 'changes',\n    Files = 'files',\n    Message = 'message',\n    Sha = 'sha'\n}\n\nexport class GitService implements Disposable {\n    static emptyPromise: Promise<GitBlame | GitDiff | GitLog | undefined> = Promise.resolve(undefined);\n    static deletedOrMissingSha = Git.deletedOrMissingSha;\n    static stagedUncommittedSha = Git.stagedUncommittedSha;\n    static uncommittedSha = Git.uncommittedSha;\n\n    private _onDidChangeRepositories = new EventEmitter<void>();\n    get onDidChangeRepositories(): Event<void> {\n        return this._onDidChangeRepositories.event;\n    }\n\n    private readonly _disposable: Disposable;\n    private readonly _repositoryTree: TernarySearchTree<Repository>;\n    private _repositoriesLoadingPromise: Promise<void> | undefined;\n    private _suspended: boolean = false;\n\n    private readonly _branchesCache = new Map<string, GitBranch[]>();\n    private readonly _tagsCache = new Map<string, GitTag[]>();\n    private readonly _tagsWithRefsCache = new Map<string, GitTag[]>();\n    private readonly _trackedCache = new Map<string, boolean | Promise<boolean>>();\n    private readonly _userMapCache = new Map<string, { name?: string; email?: string } | null>();\n\n    constructor() {\n        this._repositoryTree = TernarySearchTree.forPaths();\n\n        this._disposable = Disposable.from(\n            window.onDidChangeWindowState(this.onWindowStateChanged, this),\n            workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n\n        this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._repositoryTree.forEach(r => r.dispose());\n        this._branchesCache.clear();\n        this._tagsCache.clear();\n        this._tagsWithRefsCache.clear();\n        this._trackedCache.clear();\n        this._userMapCache.clear();\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    get UseCaching() {\n        return Container.config.advanced.caching.enabled;\n    }\n\n    private onAnyRepositoryChanged(repo: Repository, reason: RepositoryChange) {\n        this._trackedCache.clear();\n\n        this._branchesCache.delete(repo.path);\n        this._tagsCache.delete(repo.path);\n        this._tagsWithRefsCache.clear();\n\n        if (reason === RepositoryChange.Config) {\n            this._userMapCache.delete(repo.path);\n        }\n\n        if (reason === RepositoryChange.Closed) {\n            // Send a notification that the repositories changed\n            setImmediate(async () => {\n                await this.updateContext(this._repositoryTree);\n\n                this.fireRepositoriesChanged();\n            });\n        }\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            CommitFormatting.reset();\n        }\n    }\n\n    private onWindowStateChanged(e: WindowState) {\n        if (e.focused) {\n            this._repositoryTree.forEach(r => r.resume());\n        }\n        else {\n            this._repositoryTree.forEach(r => r.suspend());\n        }\n\n        this._suspended = !e.focused;\n    }\n\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        let initializing = false;\n        if (e === undefined) {\n            initializing = true;\n            e = {\n                added: workspace.workspaceFolders || [],\n                removed: []\n            } as WorkspaceFoldersChangeEvent;\n\n            Logger.log(`Starting repository search in ${e.added.length} folders`);\n        }\n\n        for (const f of e.added) {\n            const { scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            if (scheme === DocumentSchemes.Vsls) {\n                if (Container.vsls.isMaybeGuest) {\n                    const guest = await Container.vsls.guest();\n                    if (guest !== undefined) {\n                        const repositories = await guest.getRepositoriesInFolder(\n                            f,\n                            this.onAnyRepositoryChanged.bind(this)\n                        );\n                        for (const r of repositories) {\n                            this._repositoryTree.set(r.path, r);\n                        }\n                    }\n                }\n            }\n            else {\n                // Search for and add all repositories (nested and/or submodules)\n                const repositories = await this.repositorySearch(f);\n                for (const r of repositories) {\n                    this._repositoryTree.set(r.path, r);\n                }\n            }\n        }\n\n        for (const f of e.removed) {\n            const { fsPath, scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            const repos = this._repositoryTree.findSuperstr(fsPath);\n            const reposToDelete =\n                repos !== undefined\n                    ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n                      [...Iterables.map<Repository, [Repository, string]>(repos, r => [r, r.path])]\n                    : [];\n\n            // const filteredTree = this._repositoryTree.findSuperstr(fsPath);\n            // const reposToDelete =\n            //     filteredTree !== undefined\n            //         ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n            //           [\n            //               ...Iterables.map<[Repository, string], [Repository, string]>(\n            //                   filteredTree.entries(),\n            //                   ([r, k]) => [r, path.join(fsPath, k)]\n            //               )\n            //           ]\n            //         : [];\n\n            const repo = this._repositoryTree.get(fsPath);\n            if (repo !== undefined) {\n                reposToDelete.push([repo, fsPath]);\n            }\n\n            for (const [r, k] of reposToDelete) {\n                this._repositoryTree.delete(k);\n                r.dispose();\n            }\n        }\n\n        await this.updateContext(this._repositoryTree);\n\n        if (!initializing) {\n            // Defer the event trigger enough to let everything unwind\n            setImmediate(() => this.fireRepositoriesChanged());\n        }\n    }\n\n    private async repositorySearch(folder: WorkspaceFolder): Promise<Repository[]> {\n        const { uri } = folder;\n        const depth = configuration.get<number>(configuration.name('advanced')('repositorySearchDepth').value, uri);\n\n        Logger.log(`Searching for repositories (depth=${depth}) in '${uri.fsPath}' ...`);\n\n        const start = process.hrtime();\n\n        const repositories: Repository[] = [];\n        const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);\n\n        const rootPath = await this.getRepoPathCore(uri.fsPath, true);\n        if (rootPath !== undefined) {\n            Logger.log(`Repository found in '${rootPath}'`);\n            repositories.push(new Repository(folder, rootPath, true, anyRepoChangedFn, this._suspended));\n        }\n\n        if (depth <= 0) {\n            Logger.log(\n                `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                    GlyphChars.Dot\n                } ${Strings.getDurationMilliseconds(start)} ms`\n            );\n\n            return repositories;\n        }\n\n        // Get any specified excludes -- this is a total hack, but works for some simple cases and something is better than nothing :)\n        let excludes = {\n            ...workspace.getConfiguration('files', uri).get<{ [key: string]: boolean }>('exclude', {}),\n            ...workspace.getConfiguration('search', uri).get<{ [key: string]: boolean }>('exclude', {})\n        };\n\n        const excludedPaths = [\n            ...Iterables.filterMap(Objects.entries(excludes), ([key, value]) => {\n                if (!value) return undefined;\n                if (key.startsWith('**/')) return key.substring(3);\n                return key;\n            })\n        ];\n\n        excludes = excludedPaths.reduce(\n            (accumulator, current) => {\n                accumulator[current] = true;\n                return accumulator;\n            },\n            Object.create(null) as any\n        );\n\n        let repoPaths;\n        try {\n            repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);\n        }\n        catch (ex) {\n            if (RepoSearchWarnings.doesNotExist.test(ex.message || '')) {\n                Logger.log(\n                    `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED${ex.message ? `(${ex.message})` : ''}`\n                );\n            }\n            else {\n                Logger.error(ex, `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED`);\n            }\n\n            return repositories;\n        }\n\n        for (let p of repoPaths) {\n            p = paths.dirname(p);\n            // If we are the same as the root, skip it\n            if (Strings.normalizePath(p) === rootPath) continue;\n\n            const rp = await this.getRepoPathCore(p, true);\n            if (rp === undefined) continue;\n\n            Logger.log(`Repository found in '${rp}'`);\n            repositories.push(new Repository(folder, rp, false, anyRepoChangedFn, this._suspended));\n        }\n\n        Logger.log(\n            `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n\n        return repositories;\n    }\n\n    private async repositorySearchCore(\n        root: string,\n        depth: number,\n        excludes: { [key: string]: boolean },\n        repositories: string[] = []\n    ): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fs.readdir(root, async (err, files) => {\n                if (err != null) {\n                    reject(err);\n                    return;\n                }\n\n                if (files.length === 0) {\n                    resolve(repositories);\n                    return;\n                }\n\n                const folders: string[] = [];\n\n                const promises = files.map(file => {\n                    const path = paths.resolve(root, file);\n\n                    return new Promise<void>((res, rej) => {\n                        fs.stat(path, (err, stat) => {\n                            if (file === '.git') {\n                                repositories.push(path);\n                            }\n                            else if (err == null && excludes[file] !== true && stat != null && stat.isDirectory()) {\n                                folders.push(path);\n                            }\n\n                            res();\n                        });\n                    });\n                });\n\n                await Promise.all(promises);\n\n                if (depth-- > 0) {\n                    for (const folder of folders) {\n                        await this.repositorySearchCore(folder, depth, excludes, repositories);\n                    }\n                }\n\n                resolve(repositories);\n            });\n        });\n    }\n\n    private async updateContext(repositoryTree: TernarySearchTree<Repository>) {\n        const hasRepository = repositoryTree.any();\n        await setCommandContext(CommandContext.Enabled, hasRepository);\n\n        let hasRemotes = false;\n        if (hasRepository) {\n            for (const repo of repositoryTree.values()) {\n                hasRemotes = await repo.hasRemotes();\n                if (hasRemotes) break;\n            }\n        }\n\n        await setCommandContext(CommandContext.HasRemotes, hasRemotes);\n\n        // If we have no repositories setup a watcher in case one is initialized\n        if (!hasRepository) {\n            const watcher = workspace.createFileSystemWatcher('**/.git', false, true, true);\n            const disposable = Disposable.from(\n                watcher,\n                watcher.onDidCreate(async uri => {\n                    const f = workspace.getWorkspaceFolder(uri);\n                    if (f === undefined) return;\n\n                    // Search for and add all repositories (nested and/or submodules)\n                    const repositories = await this.repositorySearch(f);\n                    if (repositories.length === 0) return;\n\n                    disposable.dispose();\n\n                    for (const r of repositories) {\n                        this._repositoryTree.set(r.path, r);\n                    }\n\n                    await this.updateContext(this._repositoryTree);\n\n                    // Defer the event trigger enough to let everything unwind\n                    setImmediate(() => this.fireRepositoriesChanged());\n                }, this)\n            );\n        }\n    }\n\n    private fireRepositoriesChanged() {\n        this._onDidChangeRepositories.fire();\n    }\n\n    @log()\n    async applyChangesToWorkingFile(uri: GitUri, ref?: string) {\n        ref = ref || uri.sha;\n        if (ref === undefined || uri.repoPath === undefined) return;\n\n        let patch;\n        try {\n            patch = await Git.diff(uri.repoPath, uri.fsPath, `${ref}^`, ref);\n            void (await Git.apply(uri.repoPath!, patch));\n        }\n        catch (ex) {\n            if (patch && /patch does not apply/i.test(ex.message)) {\n                const result = await window.showWarningMessage(\n                    `Unable to apply changes cleanly. Retry and allow conflicts?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n\n                if (result === undefined || result.title !== 'Yes') return;\n\n                if (result.title === 'Yes') {\n                    try {\n                        void (await Git.apply(uri.repoPath!, patch, { allowConflicts: true }));\n                        return;\n                    }\n                    catch (e) {\n                        ex = e;\n                    }\n                }\n            }\n\n            Logger.error(ex);\n            void Messages.showGenericErrorMessage(`Unable to apply changes`);\n        }\n    }\n\n    @log()\n    checkout(repoPath: string, ref: string, fileName?: string) {\n        return Git.checkout(repoPath, ref, fileName);\n    }\n\n    @gate()\n    @log()\n    async fetch(repoPath: string, remote?: string) {\n        return Git.fetch(repoPath, { remote: remote });\n    }\n\n    @gate()\n    @log()\n    async fetchAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await this.fetch(repo.path);\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pullAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.pull({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pushAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.push({ progress: false });\n                }\n            }\n        );\n    }\n\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        if (Container.vsls.isMaybeGuest) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.fileExists(repoPath, fileName, options);\n            }\n        }\n\n        const path = paths.resolve(repoPath, fileName);\n        const exists = await new Promise<boolean>((resolve, reject) => fs.exists(path, resolve));\n        if (!options.ensureCase || !exists) return exists;\n\n        // Deal with renames in case only on case-insensative file systems\n        const normalizedRepoPath = paths.normalize(repoPath);\n        return this.fileExistsWithCase(path, normalizedRepoPath, normalizedRepoPath.length);\n    }\n\n    private async fileExistsWithCase(path: string, repoPath: string, repoPathLength: number): Promise<boolean> {\n        const dir = paths.dirname(path);\n        if (dir.length < repoPathLength) return false;\n        if (dir === repoPath) return true;\n\n        const filenames = await new Promise<string[]>((resolve, reject) =>\n            fs.readdir(dir, (err: NodeJS.ErrnoException, files: string[]) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(files);\n                }\n            })\n        );\n        if (filenames.indexOf(paths.basename(path)) === -1) {\n            return false;\n        }\n        return this.fileExistsWithCase(dir, repoPath, repoPathLength);\n    }\n\n    @log()\n    async findNextCommit(repoPath: string, fileName: string, ref?: string): Promise<GitLogCommit | undefined> {\n        let log = await this.getLogForFile(repoPath, fileName, { maxCount: 1, ref: ref, renames: true, reverse: true });\n        let commit = log && Iterables.first(log.commits.values());\n        if (commit) return commit;\n\n        const nextFileName = await this.findNextFileName(repoPath, fileName, ref);\n        if (nextFileName) {\n            log = await this.getLogForFile(repoPath, nextFileName, {\n                maxCount: 1,\n                ref: ref,\n                renames: true,\n                reverse: true\n            });\n            commit = log && Iterables.first(log.commits.values());\n        }\n\n        return commit;\n    }\n\n    @log()\n    async findNextFileName(repoPath: string | undefined, fileName: string, ref?: string): Promise<string | undefined> {\n        [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n        return (await this.fileExists(repoPath, fileName, { ensureCase: true }))\n            ? fileName\n            : await this.findNextFileNameCore(repoPath, fileName, ref);\n    }\n\n    private async findNextFileNameCore(repoPath: string, fileName: string, ref?: string): Promise<string | undefined> {\n        if (ref === undefined) {\n            // Get the most recent commit for this file name\n            ref = await this.getRecentShaForFile(repoPath, fileName);\n            if (ref === undefined) return undefined;\n        }\n\n        // Get the full commit (so we can see if there are any matching renames in the files)\n        const log = await this.getLog(repoPath, { maxCount: 1, ref: ref });\n        if (log === undefined) return undefined;\n\n        const c = Iterables.first(log.commits.values());\n        const file = c.files.find(f => f.originalFileName === fileName);\n        if (file === undefined) return undefined;\n\n        return file.fileName;\n    }\n\n    async findWorkingFileName(commit: GitCommit): Promise<[string | undefined, string | undefined]>;\n    async findWorkingFileName(\n        fileName: string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]>;\n    @log()\n    async findWorkingFileName(\n        commitOrFileName: GitCommit | string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]> {\n        let fileName;\n        if (typeof commitOrFileName === 'string') {\n            fileName = commitOrFileName;\n            if (repoPath === undefined) {\n                repoPath = await this.getRepoPath(fileName, { ref: ref });\n                [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n            }\n            else {\n                fileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n            }\n        }\n        else {\n            const c = commitOrFileName;\n            repoPath = c.repoPath;\n            if (c.workingFileName && (await this.fileExists(repoPath, c.workingFileName, { ensureCase: true }))) {\n                return [c.workingFileName, repoPath];\n            }\n            fileName = c.fileName;\n        }\n\n        // Keep walking up to the most recent commit for a given filename, until it exists on disk\n        while (true) {\n            if (await this.fileExists(repoPath, fileName, { ensureCase: true })) return [fileName, repoPath];\n\n            fileName = await this.findNextFileNameCore(repoPath, fileName);\n            if (fileName === undefined) return [undefined, undefined];\n        }\n    }\n\n    @log({\n        args: {\n            0: (editor: TextEditor) =>\n                editor !== undefined ? `TextEditor(${Logger.toLoggable(editor.document.uri)})` : 'undefined'\n        }\n    })\n    async getActiveRepoPath(editor?: TextEditor): Promise<string | undefined> {\n        editor = editor || window.activeTextEditor;\n\n        let repoPath;\n        if (editor != null) {\n            const doc = await Container.tracker.getOrAdd(editor.document.uri);\n            if (doc !== undefined) {\n                repoPath = doc.uri.repoPath;\n            }\n        }\n\n        if (repoPath != null) return repoPath;\n\n        return this.getHighlanderRepoPath();\n    }\n\n    @log()\n    getHighlanderRepoPath(): string | undefined {\n        const entry = this._repositoryTree.highlander();\n        if (entry === undefined) return undefined;\n\n        const [repo] = entry;\n        return repo.path;\n    }\n\n    @log()\n    async getBlameForFile(uri: GitUri): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'blame';\n        if (uri.sha !== undefined) {\n            key += `:${uri.sha}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileCore(uri, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    private async getBlameForFileCore(\n        uri: GitUri,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame(root, file, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            1: contents => '<contents>'\n        }\n    })\n    async getBlameForFileContents(uri: GitUri, contents: string): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        const key = `blame:${Strings.sha1(contents)}`;\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: ${key}`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: ${key}`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    async getBlameForFileContentsCore(\n        uri: GitUri,\n        contents: string,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame_contents(root, file, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                correlationKey: `:${key}`,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForLine(\n        uri: GitUri,\n        line: number,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFile(uri);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame(uri.repoPath, fileName, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath!));\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            2: contents => '<contents>'\n        }\n    })\n    async getBlameForLineContents(\n        uri: GitUri,\n        line: number,\n        contents: string,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFileContents(uri, contents);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame_contents(uri.repoPath, fileName, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const currentUser = await this.getCurrentUser(uri.repoPath!);\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, currentUser);\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForRange(uri: GitUri, range: Range): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFile(uri);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log({\n        args: { 0: blame => '<blame>' }\n    })\n    getBlameForRangeSync(blame: GitBlame, uri: GitUri, range: Range): GitBlameLines | undefined {\n        if (blame.lines.length === 0) return { allLines: blame.lines, ...blame };\n\n        if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {\n            return { allLines: blame.lines, ...blame };\n        }\n\n        const lines = blame.lines.slice(range.start.line, range.end.line + 1);\n        const shas = new Set(lines.map(l => l.sha));\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        for (const c of blame.commits.values()) {\n            if (!shas.has(c.sha)) continue;\n\n            const commit = c.with({\n                lines: c.lines.filter(l => l.line >= range.start.line && l.line <= range.end.line)\n            });\n            commits.set(c.sha, commit);\n\n            let author = authors.get(commit.author);\n            if (author === undefined) {\n                author = {\n                    name: commit.author,\n                    lineCount: 0\n                };\n                authors.set(author.name, author);\n            }\n\n            author.lineCount += commit.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines,\n            allLines: blame.lines\n        } as GitBlameLines;\n    }\n\n    @log()\n    async getBranch(repoPath: string | undefined): Promise<GitBranch | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.revparse_currentBranch(repoPath);\n        if (data === undefined) return undefined;\n\n        const branch = data[0].split('\\n');\n        return new GitBranch(repoPath, branch[0], true, data[1], branch[1]);\n    }\n\n    @log()\n    async getBranches(repoPath: string | undefined): Promise<GitBranch[]> {\n        if (repoPath === undefined) return [];\n\n        let branches = this._branchesCache.get(repoPath);\n        if (branches !== undefined) return branches;\n\n        const data = await Git.branch(repoPath, { all: true });\n        // If we don't get any data, assume the repo doesn't have any commits yet so check if we have a current branch\n        if (data == null || data.length === 0) {\n            const current = await this.getBranch(repoPath);\n            branches = current !== undefined ? [current] : [];\n        }\n        else {\n            branches = GitBranchParser.parse(data, repoPath) || [];\n        }\n\n        this._branchesCache.set(repoPath, branches);\n        return branches;\n    }\n\n    @log()\n    async getChangedFilesCount(repoPath: string, ref?: string): Promise<GitDiffShortStat | undefined> {\n        const data = await Git.diff_shortstat(repoPath, ref);\n        return GitDiffParser.parseShortStat(data);\n    }\n\n    @log()\n    async getConfig(key: string, repoPath?: string): Promise<string | undefined> {\n        return await Git.config_get(key, repoPath);\n    }\n\n    @log()\n    async getCurrentUser(repoPath: string) {\n        let user = this._userMapCache.get(repoPath);\n        if (user != null) return user;\n        // If we found the repo, but no user data was found just return\n        if (user === null) return undefined;\n\n        const data = await Git.config_getRegex('user.(name|email)', repoPath, { local: true });\n        if (!data) {\n            // If we found no user data, mark it so we won't bother trying again\n            this._userMapCache.set(repoPath, null);\n            return undefined;\n        }\n\n        user = { name: undefined, email: undefined };\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = userConfigRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            user[match[1] as 'name' | 'email'] = (' ' + match[2]).substr(1);\n        } while (match != null);\n\n        const author = `${user.name} <${user.email}>`;\n        // Check if there is a mailmap for the current user\n        const mappedAuthor = await Git.check_mailmap(repoPath, author);\n        if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {\n            match = mappedAuthorRegex.exec(mappedAuthor);\n            if (match != null) {\n                [, user.name, user.email] = match;\n            }\n        }\n\n        this._userMapCache.set(repoPath, user);\n        return user;\n    }\n\n    @log()\n    async getDiffForFile(uri: GitUri, ref1?: string, ref2?: string): Promise<GitDiff | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        if (ref1 !== undefined && ref2 === undefined && uri.sha !== undefined) {\n            ref2 = uri.sha;\n        }\n\n        let key = 'diff';\n        if (ref1 !== undefined) {\n            key += `:${ref1}`;\n        }\n        if (ref2 !== undefined) {\n            key += `:${ref2}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedDiff = doc.state.get<CachedDiff>(key);\n                if (cachedDiff !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedDiff.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getDiffForFileCore(\n            uri.repoPath,\n            uri.fsPath,\n            ref1,\n            ref2,\n            { encoding: GitService.getEncoding(uri) },\n            doc,\n            key,\n            cc\n        );\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedDiff>(key, {\n                item: promise\n            } as CachedDiff);\n        }\n\n        return promise;\n    }\n\n    private async getDiffForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        ref1: string | undefined,\n        ref2: string | undefined,\n        options: { encoding?: string },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitDiff | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            const data = await Git.diff(root, file, ref1, ref2, { ...options, filter: 'M' });\n            const diff = GitDiffParser.parse(data);\n            return diff;\n        }\n        catch (ex) {\n            // Trap and cache expected diff errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedDiff>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedDiff);\n\n                return GitService.emptyPromise as Promise<GitDiff>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffForLine(\n        uri: GitUri,\n        line: number,\n        ref1?: string,\n        ref2?: string\n    ): Promise<GitDiffChunkLine | undefined> {\n        try {\n            const diff = await this.getDiffForFile(uri, ref1, ref2);\n            if (diff === undefined) return undefined;\n\n            const chunk = diff.chunks.find(c => c.currentPosition.start <= line && c.currentPosition.end >= line);\n            if (chunk === undefined) return undefined;\n\n            return chunk.lines[line - chunk.currentPosition.start + 1];\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffStatus(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        options: { filter?: string } = {}\n    ): Promise<GitFile[] | undefined> {\n        try {\n            const data = await Git.diff_nameStatus(repoPath, ref1, ref2, options);\n            const diff = GitDiffParser.parseNameStatus(data, repoPath);\n            return diff;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getFileStatusForCommit(repoPath: string, fileName: string, ref: string): Promise<GitFile | undefined> {\n        if (ref === GitService.deletedOrMissingSha || GitService.isUncommitted(ref)) return undefined;\n\n        const data = await Git.show_status(repoPath, fileName, ref);\n        if (!data) return undefined;\n\n        const files = GitDiffParser.parseNameStatus(data, repoPath);\n        if (files === undefined || files.length === 0) return undefined;\n\n        return files[0];\n    }\n\n    @log()\n    async getRecentLogCommitForFile(repoPath: string | undefined, fileName: string): Promise<GitLogCommit | undefined> {\n        return this.getLogCommitForFile(repoPath, fileName, undefined);\n    }\n\n    @log()\n    async getRecentShaForFile(repoPath: string, fileName: string) {\n        return await Git.log_recent(repoPath, fileName);\n    }\n\n    @log()\n    async getLogCommit(repoPath: string, ref: string): Promise<GitLogCommit | undefined> {\n        const log = await this.getLog(repoPath, { maxCount: 2, ref: ref });\n        if (log === undefined) return undefined;\n\n        return log.commits.get(ref);\n    }\n\n    @log()\n    async getLogCommitForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { ref?: string; firstIfNotFound?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLogCommit | undefined> {\n        const log = await this.getLogForFile(repoPath, fileName, {\n            maxCount: 2,\n            ref: options.ref,\n            reverse: options.reverse\n        });\n        if (log === undefined) return undefined;\n\n        const commit = options.ref && log.commits.get(options.ref);\n        if (commit === undefined && !options.firstIfNotFound && options.ref) {\n            // If the ref isn't a valid sha we will never find it, so let it fall through so we return the first\n            if (!Git.isSha(options.ref) || Git.isUncommitted(options.ref)) return undefined;\n        }\n\n        return commit || Iterables.first(log.commits.values());\n    }\n\n    @log()\n    async getLog(\n        repoPath: string,\n        options: { author?: string; maxCount?: number; ref?: string; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        try {\n            const data = await Git.log(repoPath, {\n                author: options.author,\n                maxCount: maxCount,\n                ref: options.ref,\n                reverse: options.reverse\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                options.ref,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                options.reverse!,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) => this.getLog(repoPath, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForSearch(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: { maxCount?: number } = {}\n    ): Promise<GitLog | undefined> {\n        let maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        let searchArgs: string[] | undefined = undefined;\n        switch (searchBy) {\n            case GitRepoSearchBy.Author:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i', `--author=${search}`];\n                break;\n            case GitRepoSearchBy.ChangedLines:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `-G${search}`];\n                break;\n            case GitRepoSearchBy.Changes:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', '--pickaxe-regex', `-S${search}`];\n                break;\n            case GitRepoSearchBy.Files:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `--`, `${search}`];\n                break;\n            case GitRepoSearchBy.Message:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i'];\n                if (search) {\n                    searchArgs.push(`--grep=${search}`);\n                }\n                break;\n            case GitRepoSearchBy.Sha:\n                searchArgs = [`-m`, '-M', search];\n                maxCount = 1;\n                break;\n        }\n\n        try {\n            const data = await Git.log_search(repoPath, searchArgs, { maxCount: maxCount });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                undefined,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                false,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForSearch(repoPath, search, searchBy, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        if (repoPath !== undefined && repoPath === Strings.normalizePath(fileName)) {\n            throw new Error(`File name cannot match the repository path; fileName=${fileName}`);\n        }\n\n        const cc = Logger.getCorrelationContext();\n\n        options = { reverse: false, ...options };\n\n        if (options.renames === undefined) {\n            options.renames = Container.config.advanced.fileHistoryFollowsRenames;\n        }\n\n        let key = 'log';\n        if (options.ref !== undefined) {\n            key += `:${options.ref}`;\n        }\n        if (options.maxCount !== undefined) {\n            key += `:n${options.maxCount}`;\n        }\n        if (options.renames) {\n            key += `:follow`;\n        }\n        if (options.reverse) {\n            key += `:reverse`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(GitUri.fromFile(fileName, repoPath!, options.ref));\n        if (this.UseCaching && options.range === undefined) {\n            if (doc.state !== undefined) {\n                const cachedLog = doc.state.get<CachedLog>(key);\n                if (cachedLog !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedLog.item;\n                }\n\n                if (options.ref !== undefined || options.maxCount !== undefined) {\n                    // Since we are looking for partial log, see if we have the log of the whole file\n                    const cachedLog = doc.state.get<CachedLog>(\n                        `log${options.renames ? ':follow' : ''}${options.reverse ? ':reverse' : ''}`\n                    );\n                    if (cachedLog !== undefined) {\n                        if (options.ref === undefined) {\n                            Logger.debug(cc, `Cache hit: ~'${key}'`);\n                            return cachedLog.item;\n                        }\n\n                        Logger.debug(cc, `Cache ?: '${key}'`);\n                        let log = await cachedLog.item;\n                        if (log !== undefined && !log.truncated && log.commits.has(options.ref)) {\n                            Logger.debug(cc, `Cache hit: '${key}'`);\n\n                            // Create a copy of the log starting at the requested commit\n                            let skip = true;\n                            let i = 0;\n                            const authors = new Map<string, GitAuthor>();\n                            const commits = new Map(\n                                Iterables.filterMap<[string, GitLogCommit], [string, GitLogCommit]>(\n                                    log.commits.entries(),\n                                    ([ref, c]) => {\n                                        if (skip) {\n                                            if (ref !== options.ref) return undefined;\n                                            skip = false;\n                                        }\n\n                                        i++;\n                                        if (options.maxCount !== undefined && i > options.maxCount) {\n                                            return undefined;\n                                        }\n\n                                        authors.set(c.author, log.authors.get(c.author)!);\n                                        return [ref, c];\n                                    }\n                                )\n                            );\n\n                            const opts = { ...options };\n                            log = {\n                                ...log,\n                                maxCount: options.maxCount,\n                                count: commits.size,\n                                commits: commits,\n                                authors: authors,\n                                query: (maxCount: number | undefined) =>\n                                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount })\n                            };\n\n                            return log;\n                        }\n                    }\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);\n\n        if (doc.state !== undefined && options.range === undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedLog>(key, {\n                item: promise\n            } as CachedLog);\n        }\n\n        return promise;\n    }\n\n    private async getLogForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitLog | undefined> {\n        if (!(await this.isTracked(fileName, repoPath, { ref: options.ref }))) {\n            Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitLog>;\n        }\n\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            // tslint:disable-next-line:prefer-const\n            let { range, ...opts } = options;\n            if (range !== undefined && range.start.line > range.end.line) {\n                range = new Range(range.end, range.start);\n            }\n\n            const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n            const data = await Git.log_file(root, file, {\n                ...opts,\n                maxCount: maxCount,\n                startLine: range === undefined ? undefined : range.start.line + 1,\n                endLine: range === undefined ? undefined : range.end.line + 1\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.File,\n                root,\n                file,\n                opts.ref,\n                await this.getCurrentUser(root),\n                maxCount,\n                opts.reverse!,\n                range\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            // Trap and cache expected log errors\n            if (document.state !== undefined && options.range === undefined && !options.reverse) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedLog>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedLog);\n\n                return GitService.emptyPromise as Promise<GitLog>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async hasRemotes(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasRemotes();\n    }\n\n    @log()\n    async hasTrackingBranch(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasTrackingBranch();\n    }\n\n    @log()\n    async getMergeBase(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        try {\n            const data = await Git.merge_base(repoPath, ref1, ref2, options);\n            if (data === undefined) return undefined;\n\n            return data.split('\\n')[0];\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRemotes(repoPath: string | undefined, options: { includeAll?: boolean } = {}): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        const repository = await this.getRepository(repoPath);\n        const remotes = repository !== undefined ? repository.getRemotes() : this.getRemotesCore(repoPath);\n\n        if (options.includeAll) return remotes;\n\n        return (await remotes).filter(r => r.provider !== undefined);\n    }\n\n    async getRemotesCore(repoPath: string | undefined, providers?: RemoteProviders): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        providers =\n            providers ||\n            RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(configuration.name('remotes').value, null)\n            );\n\n        try {\n            const data = await Git.remote(repoPath);\n            return GitRemoteParser.parse(data, repoPath, RemoteProviderFactory.factory(providers));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return [];\n        }\n    }\n\n    async getRepoPath(filePath: string, options?: { ref?: string }): Promise<string | undefined>;\n    async getRepoPath(uri: Uri | undefined, options?: { ref?: string }): Promise<string | undefined>;\n    @log()\n    async getRepoPath(\n        filePathOrUri: string | Uri | undefined,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        if (filePathOrUri == null) return this.getHighlanderRepoPath();\n        if (filePathOrUri instanceof GitUri) return filePathOrUri.repoPath;\n\n        const cc = Logger.getCorrelationContext();\n\n        // Don't save the tracking info to the cache, because we could be looking in the wrong place (e.g. looking in the root when the file is in a submodule)\n        let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });\n        if (repo !== undefined) return repo.path;\n\n        const rp = await this.getRepoPathCore(\n            typeof filePathOrUri === 'string' ? filePathOrUri : filePathOrUri.fsPath,\n            false\n        );\n        if (rp === undefined) return undefined;\n\n        // Recheck this._repositoryTree.get(rp) to make sure we haven't already tried adding this due to awaits\n        if (this._repositoryTree.get(rp) !== undefined) return rp;\n\n        const isVslsScheme =\n            typeof filePathOrUri === 'string' ? undefined : filePathOrUri.scheme === DocumentSchemes.Vsls;\n\n        // If this new repo is inside one of our known roots and we we don't already know about, add it\n        const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);\n\n        let folder;\n        if (root !== undefined) {\n            // Not sure why I added this for vsls (I can't see a reason for it anymore), but if it is added it will break submodules\n            // rp = root.path;\n            folder = root.folder;\n        }\n        else {\n            folder = workspace.getWorkspaceFolder(GitUri.file(rp, isVslsScheme));\n            if (folder === undefined) {\n                const parts = rp.split('/');\n                folder = {\n                    uri: GitUri.file(rp, isVslsScheme),\n                    name: parts[parts.length - 1],\n                    index: this._repositoryTree.count()\n                };\n            }\n        }\n\n        Logger.log(cc, `Repository found in '${rp}'`);\n        repo = new Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), this._suspended);\n        this._repositoryTree.set(rp, repo);\n\n        // Send a notification that the repositories changed\n        setImmediate(async () => {\n            await this.updateContext(this._repositoryTree);\n\n            this.fireRepositoriesChanged();\n        });\n\n        return rp;\n    }\n\n    private async getRepoPathCore(filePath: string, isDirectory: boolean): Promise<string | undefined> {\n        try {\n            return await Git.revparse_toplevel(isDirectory ? filePath : paths.dirname(filePath));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRepoPathOrActive(uri: Uri | undefined, editor: TextEditor | undefined) {\n        const repoPath = await this.getRepoPath(uri);\n        if (repoPath) return repoPath;\n\n        return this.getActiveRepoPath(editor);\n    }\n\n    @log()\n    async getRepositories(predicate?: (repo: Repository) => boolean): Promise<Iterable<Repository>> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        const values = repositoryTree.values();\n        return predicate !== undefined ? Iterables.filter(values, predicate) : values;\n    }\n\n    @log()\n    async getOrderedRepositories(): Promise<Repository[]> {\n        const repositories = [...(await this.getRepositories())];\n        if (repositories.length === 0) return repositories;\n\n        return repositories.sort((a, b) => a.index - b.index);\n    }\n\n    private async getRepositoryTree(): Promise<TernarySearchTree<Repository>> {\n        if (this._repositoriesLoadingPromise !== undefined) {\n            await this._repositoriesLoadingPromise;\n            this._repositoriesLoadingPromise = undefined;\n        }\n\n        return this._repositoryTree;\n    }\n\n    async getRepository(\n        repoPath: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        uri: Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    @log()\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<Repository | undefined> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        let isVslsScheme;\n\n        let path: string;\n        if (typeof repoPathOrUri === 'string') {\n            const repo = repositoryTree.get(repoPathOrUri);\n            if (repo !== undefined) return repo;\n\n            path = repoPathOrUri;\n            isVslsScheme = undefined;\n        }\n        else {\n            if (repoPathOrUri instanceof GitUri) {\n                if (repoPathOrUri.repoPath) {\n                    const repo = repositoryTree.get(repoPathOrUri.repoPath);\n                    if (repo !== undefined) return repo;\n                }\n\n                path = repoPathOrUri.fsPath;\n            }\n            else {\n                path = repoPathOrUri.fsPath;\n            }\n\n            isVslsScheme = repoPathOrUri.scheme === DocumentSchemes.Vsls;\n        }\n\n        const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);\n        if (repo === undefined) return undefined;\n\n        // Make sure the file is tracked in this repo before returning -- it could be from a submodule\n        if (!(await this.isTracked(path, repo.path, options))) return undefined;\n        return repo;\n    }\n\n    private findRepositoryForPath(\n        repositoryTree: TernarySearchTree<Repository>,\n        path: string,\n        isVslsScheme: boolean | undefined\n    ): Repository | undefined {\n        let repo = repositoryTree.findSubstr(path);\n        // If we can't find the repo and we are a guest, check if we are a \"root\" workspace\n        if (repo === undefined && isVslsScheme !== false && Container.vsls.isMaybeGuest) {\n            if (!vslsUriPrefixRegex.test(path)) {\n                path = Strings.normalizePath(path);\n                const vslsPath = `/~0${path[0] === '/' ? path : `/${path}`}`;\n                repo = repositoryTree.findSubstr(vslsPath);\n            }\n        }\n        return repo;\n    }\n\n    async getRepositoryCount(): Promise<number> {\n        const repositoryTree = await this.getRepositoryTree();\n        return repositoryTree.count();\n    }\n\n    @log()\n    async getStashList(repoPath: string | undefined): Promise<GitStash | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.stash_list(repoPath);\n        const stash = GitStashParser.parse(data, repoPath);\n        return stash;\n    }\n\n    @log()\n    async getStatusForFile(repoPath: string, fileName: string): Promise<GitStatusFile | undefined> {\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status_file(repoPath, fileName, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        if (status === undefined || !status.files.length) return undefined;\n\n        return status.files[0];\n    }\n\n    @log()\n    async getStatusForRepo(repoPath: string | undefined): Promise<GitStatus | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status(repoPath, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        return status;\n    }\n\n    @log()\n    async getTags(repoPath: string | undefined, options: { includeRefs?: boolean } = {}): Promise<GitTag[]> {\n        if (repoPath === undefined) return [];\n\n        let tags;\n        if (options.includeRefs) {\n            tags = this._tagsWithRefsCache.get(repoPath);\n            if (tags !== undefined) return tags;\n\n            const data = await Git.showref_tag(repoPath);\n            tags = GitTagParser.parseWithRef(data, repoPath) || [];\n            this._tagsWithRefsCache.set(repoPath, tags);\n            return tags;\n        }\n\n        tags = this._tagsCache.get(repoPath);\n        if (tags !== undefined) return tags;\n\n        const data = await Git.tag(repoPath);\n        tags = GitTagParser.parse(data, repoPath) || [];\n        this._tagsCache.set(repoPath, tags);\n        return tags;\n    }\n\n    @log()\n    async getTreeFileForRevision(repoPath: string, fileName: string, ref: string): Promise<GitTree | undefined> {\n        if (repoPath === undefined || fileName == null || fileName.length === 0) return undefined;\n\n        const data = await Git.ls_tree(repoPath, ref, { fileName: fileName });\n        const trees = GitTreeParser.parse(data);\n        return trees === undefined || trees.length === 0 ? undefined : trees[0];\n    }\n\n    @log()\n    async getTreeForRevision(repoPath: string, ref: string): Promise<GitTree[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.ls_tree(repoPath, ref);\n        return GitTreeParser.parse(data) || [];\n    }\n\n    @log()\n    getVersionedFileBuffer(repoPath: string, fileName: string, ref: string) {\n        return Git.show<Buffer>(repoPath, fileName, ref, { encoding: 'buffer' });\n    }\n\n    @log()\n    async getVersionedUri(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string | undefined\n    ): Promise<Uri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        if (!ref || (Git.isUncommitted(ref) && !Git.isStagedUncommitted(ref))) {\n            if (await this.fileExists(repoPath!, fileName)) return GitUri.file(fileName);\n\n            return undefined;\n        }\n\n        if (Git.isStagedUncommitted(ref)) {\n            return GitUri.git(fileName, repoPath);\n        }\n\n        return GitUri.toRevisionUri(ref, fileName, repoPath!);\n    }\n\n    isTrackable(scheme: string): boolean;\n    isTrackable(uri: Uri): boolean;\n    isTrackable(schemeOruri: string | Uri): boolean {\n        const scheme = typeof schemeOruri === 'string' ? schemeOruri : schemeOruri.scheme;\n        return (\n            scheme === DocumentSchemes.File ||\n            scheme === DocumentSchemes.Vsls ||\n            scheme === DocumentSchemes.Git ||\n            scheme === DocumentSchemes.GitLens\n        );\n    }\n\n    async isTracked(\n        fileName: string,\n        repoPath?: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<boolean>;\n    async isTracked(uri: GitUri): Promise<boolean>;\n    @log({\n        exit: tracked => tracked.toString(),\n        singleLine: true\n    })\n    async isTracked(\n        fileNameOrUri: string | GitUri,\n        repoPath?: string,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<boolean> {\n        if (options.ref === GitService.deletedOrMissingSha) return false;\n\n        let ref = options.ref;\n        let cacheKey: string;\n        let fileName: string;\n        if (typeof fileNameOrUri === 'string') {\n            [fileName, repoPath] = Git.splitPath(fileNameOrUri, repoPath);\n            cacheKey = GitUri.toKey(fileNameOrUri);\n        }\n        else {\n            if (!this.isTrackable(fileNameOrUri)) return false;\n\n            fileName = fileNameOrUri.fsPath;\n            repoPath = fileNameOrUri.repoPath;\n            ref = fileNameOrUri.sha;\n            cacheKey = GitUri.toKey(fileName);\n        }\n\n        if (ref !== undefined) {\n            cacheKey += `:${ref}`;\n        }\n\n        let tracked = this._trackedCache.get(cacheKey);\n        if (tracked !== undefined) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        tracked = this.isTrackedCore(fileName, repoPath === undefined ? '' : repoPath, ref);\n        if (options.skipCacheUpdate) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        this._trackedCache.set(cacheKey, tracked);\n        tracked = await tracked;\n        this._trackedCache.set(cacheKey, tracked);\n\n        return tracked;\n    }\n\n    private async isTrackedCore(fileName: string, repoPath: string, ref?: string) {\n        if (ref === GitService.deletedOrMissingSha) return false;\n\n        try {\n            // Even if we have a ref, check first to see if the file exists (that way the cache will be better reused)\n            let tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName));\n            if (!tracked && ref !== undefined) {\n                tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, { ref: ref }));\n                // If we still haven't found this file, make sure it wasn't deleted in that ref (i.e. check the previous)\n                if (!tracked) {\n                    tracked = Boolean(\n                        await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, {\n                            ref: `${ref}^`\n                        })\n                    );\n                }\n            }\n            return tracked;\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return false;\n        }\n    }\n\n    @log()\n    async getDiffTool(repoPath?: string) {\n        return (\n            (await Git.config_get('diff.guitool', repoPath, { local: true })) ||\n            (await Git.config_get('diff.tool', repoPath, { local: true }))\n        );\n    }\n\n    @log()\n    async openDiffTool(\n        repoPath: string,\n        uri: Uri,\n        options: { ref1?: string; ref2?: string; staged?: boolean; tool?: string } = {}\n    ) {\n        if (!options.tool) {\n            const cc = Logger.getCorrelationContext();\n\n            options.tool = await this.getDiffTool(repoPath);\n            if (options.tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${options.tool}`);\n        }\n\n        const { tool, ...opts } = options;\n        return Git.difftool_fileDiff(repoPath, uri.fsPath, tool, opts);\n    }\n\n    @log()\n    async openDirectoryDiff(repoPath: string, ref1: string, ref2?: string, tool?: string) {\n        if (!tool) {\n            const cc = Logger.getCorrelationContext();\n\n            tool = await this.getDiffTool(repoPath);\n            if (tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${tool}`);\n        }\n\n        return Git.difftool_dirDiff(repoPath, tool, ref1, ref2);\n    }\n\n    @log()\n    async resolveReference(repoPath: string, ref: string, uri?: Uri) {\n        const resolved = Git.isSha(ref) || !Git.isShaLike(ref) || ref.endsWith('^3');\n        if (uri == null) return resolved ? ref : (await Git.revparse(repoPath, ref)) || ref;\n\n        const ensuredRef = await Git.cat_file_validate(\n            repoPath,\n            Strings.normalizePath(paths.relative(repoPath, uri.fsPath)),\n            ref\n        );\n        if (ensuredRef === undefined) return ref;\n\n        return ensuredRef;\n    }\n\n    @log()\n    async validateReference(repoPath: string, ref: string) {\n        return await Git.cat_validate(repoPath, ref);\n    }\n\n    stageFile(repoPath: string, fileName: string): Promise<string>;\n    stageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageFile(repoPath: string, fileName: string): Promise<string>;\n    unStageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    @log()\n    stashApply(repoPath: string, stashName: string, deleteAfter: boolean = false) {\n        return Git.stash_apply(repoPath, stashName, deleteAfter);\n    }\n\n    @log()\n    stashDelete(repoPath: string, stashName: string) {\n        return Git.stash_delete(repoPath, stashName);\n    }\n\n    @log()\n    stashSave(repoPath: string, message?: string, uris?: Uri[]) {\n        if (uris === undefined) return Git.stash_save(repoPath, message);\n\n        GitService.ensureGitVersion('2.13.2', 'Stashing individual files');\n\n        const pathspecs = uris.map(u => Git.splitPath(u.fsPath, repoPath)[0]);\n        return Git.stash_push(repoPath, pathspecs, message);\n    }\n\n    static getEncoding(repoPath: string, fileName: string): string;\n    static getEncoding(uri: Uri): string;\n    static getEncoding(repoPathOrUri: string | Uri, fileName?: string): string {\n        const uri = typeof repoPathOrUri === 'string' ? GitUri.resolveToUri(fileName!, repoPathOrUri) : repoPathOrUri;\n        return Git.getEncoding(workspace.getConfiguration('files', uri).get<string>('encoding'));\n    }\n\n    @log()\n    static async initialize(): Promise<void> {\n        // Try to use the same git as the built-in vscode git extension\n        let gitPath;\n        try {\n            const gitExtension = extensions.getExtension('vscode.git');\n            if (gitExtension !== undefined) {\n                const gitApi = ((gitExtension.isActive\n                    ? gitExtension.exports\n                    : await gitExtension.activate()) as GitExtension).getAPI(1);\n                gitPath = gitApi.git.path;\n            }\n        }\n        catch {}\n\n        await Git.setOrFindGitPath(gitPath || workspace.getConfiguration('git').get<string>('path'));\n    }\n\n    static getGitPath(): string {\n        return Git.getGitPath();\n    }\n\n    static getGitVersion(): string {\n        return Git.getGitVersion();\n    }\n\n    static isShaLike(ref: string): boolean {\n        return Git.isShaLike(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return Git.isStagedUncommitted(ref);\n    }\n\n    static isUncommitted(ref: string | undefined): boolean {\n        return Git.isUncommitted(ref);\n    }\n\n    static shortenSha(\n        ref: string | undefined,\n        strings: { deletedOrMissing?: string; stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        if (ref === undefined) return undefined;\n\n        strings = { deletedOrMissing: '(deleted)', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (ref === GitService.deletedOrMissingSha) return strings.deletedOrMissing;\n\n        return Git.isShaLike(ref) || Git.isStagedUncommitted(ref) ? Git.shortenSha(ref, strings) : ref;\n    }\n\n    static compareGitVersion(version: string, throwIfLessThan?: Error) {\n        return Versions.compare(Versions.fromString(this.getGitVersion()), Versions.fromString(version));\n    }\n\n    static ensureGitVersion(version: string, feature: string): void {\n        const gitVersion = this.getGitVersion();\n        if (Versions.compare(Versions.fromString(gitVersion), Versions.fromString(version)) === -1) {\n            throw new Error(\n                `${feature} requires a newer version of Git (>= ${version}) than is currently installed (${gitVersion}). Please install a more recent version of Git to use this GitLens feature.`\n            );\n        }\n    }\n}\n","const cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\\((-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]*(-?[\\d\\.]+%?)?\\))$/i;\n\nfunction adjustLight(color: number, amount: number) {\n    const cc = color + amount;\n    const c = amount < 0 ? (cc < 0 ? 0 : cc) : cc > 255 ? 255 : cc;\n\n    return Math.round(c);\n}\n\nexport function darken(color: string, percentage: number) {\n    return lighten(color, -percentage);\n}\n\nexport function lighten(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    percentage = (255 * percentage) / 100;\n    return `rgba(${adjustLight(r, percentage)}, ${adjustLight(g, percentage)}, ${adjustLight(b, percentage)}, ${a})`;\n}\n\nexport function opacity(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;\n}\n\nexport function toRgba(color: string) {\n    color = color.trim();\n\n    const result = cssColorRegex.exec(color);\n    if (result == null) return null;\n\n    if (result[1] === '#') {\n        const hex = result[2];\n        switch (hex.length) {\n            case 3:\n                return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];\n            case 6:\n                return [\n                    parseInt(hex.substring(0, 2), 16),\n                    parseInt(hex.substring(2, 4), 16),\n                    parseInt(hex.substring(4, 6), 16),\n                    1\n                ];\n        }\n\n        return null;\n    }\n\n    switch (result[3]) {\n        case 'rgb':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];\n        case 'rgba':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];\n        default:\n            return null;\n    }\n}\n","import {\n    DecorationInstanceRenderOptions,\n    DecorationOptions,\n    MarkdownString,\n    ThemableDecorationRenderOptions,\n    ThemeColor,\n    workspace\n} from 'vscode';\nimport {\n    DiffWithCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../commands';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    CommitFormatter,\n    GitCommit,\n    GitDiffChunkLine,\n    GitRemote,\n    GitService,\n    GitUri,\n    ICommitFormatOptions\n} from '../git/gitService';\nimport { Objects, Strings } from '../system';\nimport { toRgba } from '../ui/shared/colors';\n\nexport interface ComputedHeatmap {\n    cold: boolean;\n    colors: { hot: string; cold: string };\n    median: number;\n    newest: number;\n    oldest: number;\n    computeAge(date: Date): number;\n}\n\ninterface IHeatmapConfig {\n    enabled: boolean;\n    location?: 'left' | 'right';\n}\n\ninterface IRenderOptions extends DecorationInstanceRenderOptions, ThemableDecorationRenderOptions {\n    height?: string;\n    uncommittedColor?: string | ThemeColor;\n}\n\nconst defaultHeatmapHotColor = '#f66a0a';\nconst defaultHeatmapColdColor = '#0a60f6';\nconst escapeMarkdownRegex = /[`\\>\\#\\*\\_\\-\\+\\.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nlet computedHeatmapColor: {\n    color: string;\n    rgb: string;\n};\n\nexport class Annotations {\n    static applyHeatmap(decoration: DecorationOptions, date: Date, heatmap: ComputedHeatmap) {\n        const color = this.getHeatmapColor(date, heatmap);\n        (decoration.renderOptions!.before! as any).borderColor = color;\n    }\n\n    private static getHeatmapColor(date: Date, heatmap: ComputedHeatmap) {\n        const baseColor = heatmap.cold ? heatmap.colors.cold : heatmap.colors.hot;\n\n        const age = heatmap.computeAge(date);\n        if (age === 0) return baseColor;\n\n        if (computedHeatmapColor === undefined || computedHeatmapColor.color !== baseColor) {\n            let rgba = toRgba(baseColor);\n            if (rgba == null) {\n                rgba = toRgba(heatmap.cold ? defaultHeatmapColdColor : defaultHeatmapHotColor)!;\n            }\n\n            const [r, g, b] = rgba;\n            computedHeatmapColor = {\n                color: baseColor,\n                rgb: `${r}, ${g}, ${b}`\n            };\n        }\n\n        return `rgba(${computedHeatmapColor.rgb}, ${(1 - age / 10).toFixed(2)})`;\n    }\n\n    private static getHoverCommandBar(\n        commit: GitCommit,\n        hasRemote: boolean,\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ) {\n        let commandBar = `[\\`${GlyphChars.MuchGreaterThan}\\`](${DiffWithCommand.getMarkdownCommandArgs(\n            commit\n        )} \"Open Changes\") `;\n\n        if (commit.previousSha !== undefined) {\n            if (annotationType === FileAnnotationType.RecentChanges) {\n                annotationType = FileAnnotationType.Blame;\n            }\n\n            const uri = GitUri.toRevisionUri(commit.previousSha, commit.previousUri.fsPath, commit.repoPath);\n            commandBar += `[\\`${GlyphChars.SquareWithTopShadow}\\`](${OpenFileRevisionCommand.getMarkdownCommandArgs(\n                uri,\n                annotationType || FileAnnotationType.Blame,\n                line\n            )} \"Blame Previous Revision\") `;\n        }\n\n        if (hasRemote) {\n            commandBar += `[\\`${GlyphChars.ArrowUpRight}\\`](${OpenCommitInRemoteCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Open in Remote\") `;\n        }\n\n        commandBar += `[\\`${GlyphChars.MiddleEllipsis}\\`](${ShowQuickCommitFileDetailsCommand.getMarkdownCommandArgs(\n            commit.sha\n        )} \"Show More Actions\")`;\n\n        return commandBar;\n    }\n\n    static getHoverMessage(\n        commit: GitCommit,\n        dateFormat: string | null,\n        remotes: GitRemote[],\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ): MarkdownString {\n        if (dateFormat === null) {\n            dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        let message = '';\n        let commandBar = '';\n        let showCommitDetailsCommand = '';\n        let avatar = '';\n        if (!commit.isUncommitted) {\n            commandBar = `\\n\\n${this.getHoverCommandBar(commit, remotes.length !== 0, annotationType, line)}`;\n            showCommitDetailsCommand = `[\\`${commit.shortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")`;\n\n            message = CommitFormatter.fromTemplate('${message}', commit);\n            for (const r of remotes) {\n                if (r.provider === undefined) continue;\n\n                message = r.provider.enrichMessage(message);\n                break;\n            }\n\n            message = `\\n\\n> ${message\n                // Escape markdown\n                .replace(escapeMarkdownRegex, '\\\\$&')\n                // Escape markdown header (since the above regex won't match it)\n                .replace(/^===/gm, markdownHeaderReplacement)\n                // Keep under the same block-quote but with line breaks\n                .replace(/\\n/g, '\\t\\n>  ')}`;\n        }\n        else {\n            showCommitDetailsCommand = `\\`${commit.shortSha === 'Working Tree' ? '00000000' : commit.shortSha}\\``;\n        }\n\n        if (Container.config.hovers.avatars) {\n            avatar = ` &nbsp; ![](${commit.getGravatarUri(Container.config.defaultGravatarsStyle).toString(true)})`;\n        }\n\n        const markdown = new MarkdownString(\n            `${showCommitDetailsCommand}${avatar} &nbsp;__${\n                commit.author\n            }__, ${commit.fromNow()} &nbsp; _(${commit.formatDate(dateFormat)})_ ${message}${commandBar}`\n        );\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static getHoverDiffMessage(\n        commit: GitCommit,\n        uri: GitUri,\n        chunkLine: GitDiffChunkLine | undefined\n    ): MarkdownString | undefined {\n        if (chunkLine === undefined || commit.previousSha === undefined) return undefined;\n\n        const codeDiff = this.getCodeDiff(chunkLine);\n\n        let message: string;\n        if (commit.isUncommitted) {\n            if (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha)) {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                    commit.previousSha!\n                )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} _${uri.shortSha}_\\n${codeDiff}`;\n            }\n            else {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; _uncommitted changes_\\n${codeDiff}`;\n            }\n        }\n        else {\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                GlyphChars.Dash\n            } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.previousSha!\n            )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} [\\`${\n                commit.shortSha\n            }\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")\\n${codeDiff}`;\n        }\n\n        const markdown = new MarkdownString(message);\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    private static getCodeDiff(chunkLine: GitDiffChunkLine): string {\n        const previous = chunkLine.previous === undefined ? undefined : chunkLine.previous[0];\n        return `\\`\\`\\`\n-  ${previous === undefined || previous.line === undefined ? '' : previous.line.trim()}\n+  ${chunkLine.line === undefined ? '' : chunkLine.line.trim()}\n\\`\\`\\``;\n    }\n\n    static async changesHover(commit: GitCommit, line: number, uri: GitUri): Promise<DecorationOptions> {\n        const sha =\n            !commit.isUncommitted || (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha))\n                ? commit.previousSha\n                : undefined;\n        const chunkLine = await Container.git.getDiffForLine(uri, line, sha);\n        const message = this.getHoverDiffMessage(commit, uri, chunkLine);\n\n        return {\n            hoverMessage: message\n        } as DecorationOptions;\n    }\n\n    // static detailsHover(commit: GitCommit, dateFormat: string | null, hasRemote: boolean, annotationType?: FileAnnotationType, line: number = 0): DecorationOptions {\n    //     const message = this.getHoverMessage(commit, dateFormat, hasRemote, annotationType);\n    //     return {\n    //         hoverMessage: message\n    //     } as DecorationOptions;\n    // }\n\n    static gutter(\n        commit: GitCommit,\n        format: string,\n        dateFormatOrFormatOptions: string | null | ICommitFormatOptions,\n        renderOptions: IRenderOptions\n    ): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        if (commit.isUncommitted) {\n            decoration.renderOptions!.before!.color = renderOptions.uncommittedColor;\n        }\n\n        const message = CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);\n        decoration.renderOptions!.before!.contentText = Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1);\n\n        return decoration;\n    }\n\n    static gutterRenderOptions(\n        separateLines: boolean,\n        heatmap: IHeatmapConfig,\n        format: string,\n        options: ICommitFormatOptions\n    ): IRenderOptions {\n        // Get the character count of all the tokens, assuming there there is a cap (bail if not)\n        let chars = 0;\n        for (const token of Objects.values(options.tokenOptions!)) {\n            if (token === undefined) continue;\n\n            // If any token is uncapped, kick out and set no max\n            if (token.truncateTo == null) {\n                chars = -1;\n                break;\n            }\n\n            chars += token.truncateTo;\n        }\n\n        if (chars >= 0) {\n            // Add the chars of the template string (without tokens)\n            chars += Strings.getWidth(Strings.interpolate(format, undefined));\n            // If we have chars, add a bit of padding\n            if (chars > 0) {\n                chars += 3;\n            }\n        }\n\n        let borderStyle = undefined;\n        let borderWidth = undefined;\n        if (heatmap.enabled) {\n            borderStyle = 'solid';\n            borderWidth = heatmap.location === 'left' ? '0 0 0 2px' : '0 2px 0 0';\n        }\n\n        let width;\n        if (chars >= 0) {\n            const spacing = workspace.getConfiguration('editor').get<number>('letterSpacing');\n            if (spacing != null && spacing !== 0) {\n                width = `calc(${chars}ch + ${Math.round(chars * spacing)}px)`;\n            }\n            else {\n                width = `${chars}ch`;\n            }\n        }\n\n        return {\n            backgroundColor: new ThemeColor('gitlens.gutterBackgroundColor'),\n            borderStyle: borderStyle,\n            borderWidth: borderWidth,\n            color: new ThemeColor('gitlens.gutterForegroundColor'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            height: '100%',\n            margin: `0 26px -1px 0`,\n            textDecoration: separateLines ? 'overline solid rgba(0, 0, 0, .2)' : 'none',\n            width: width,\n            uncommittedColor: new ThemeColor('gitlens.gutterUncommittedForegroundColor')\n        } as IRenderOptions;\n    }\n\n    static heatmap(commit: GitCommit, heatmap: ComputedHeatmap, renderOptions: IRenderOptions): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        Annotations.applyHeatmap(decoration, commit.date, heatmap);\n\n        return decoration;\n    }\n\n    static heatmapRenderOptions(): IRenderOptions {\n        return {\n            borderStyle: 'solid',\n            borderWidth: '0 0 0 2px',\n            contentText: GlyphChars.ZeroWidthSpace,\n            height: '100%',\n            margin: '0 26px -1px 0'\n        } as IRenderOptions;\n    }\n\n    // static hover(commit: GitCommit, renderOptions: IRenderOptions, now: number): DecorationOptions {\n    //     const decoration = {\n    //         renderOptions: { before: { ...renderOptions } }\n    //     } as DecorationOptions;\n\n    //     this.applyHeatmap(decoration, commit.date, now);\n\n    //     return decoration;\n    // }\n\n    // static hoverRenderOptions(heatmap: IHeatmapConfig): IRenderOptions {\n    //     if (!heatmap.enabled) return { before: undefined };\n\n    //     return {\n    //         borderStyle: 'solid',\n    //         borderWidth: '0 0 0 2px',\n    //         contentText: GlyphChars.ZeroWidthSpace,\n    //         height: '100%',\n    //         margin: '0 26px 0 0',\n    //         textDecoration: 'none'\n    //     } as IRenderOptions;\n    // }\n\n    static trailing(\n        commit: GitCommit,\n        format: string,\n        dateFormat: string | null,\n        scrollable: boolean = true\n    ): DecorationOptions {\n        const message = CommitFormatter.fromTemplate(format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: dateFormat\n        } as ICommitFormatOptions);\n\n        return {\n            renderOptions: {\n                after: {\n                    backgroundColor: new ThemeColor('gitlens.trailingLineBackgroundColor'),\n                    color: new ThemeColor('gitlens.trailingLineForegroundColor'),\n                    contentText: Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1),\n                    fontWeight: 'normal',\n                    fontStyle: 'normal',\n                    // Pull the decoration out of the document flow if we want to be scrollable\n                    textDecoration: `none;${scrollable ? '' : ' position: absolute;'}`\n                }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n    }\n\n    // static withRange(decoration: DecorationOptions, start?: number, end?: number): DecorationOptions {\n    //     let range = decoration.range;\n    //     if (start !== undefined) {\n    //         range = range.with({\n    //             start: range.start.with({ character: start })\n    //         });\n    //     }\n\n    //     if (end !== undefined) {\n    //         range = range.with({\n    //             end: range.end.with({ character: end })\n    //         });\n    //     }\n\n    //     return { ...decoration, range: range };\n    // }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType\n} from 'vscode';\nimport { Container } from '../container';\nimport { GitBlame, GitCommit, GitUri } from '../git/gitService';\nimport { Arrays, Iterables } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations, ComputedHeatmap } from './annotations';\n\nexport abstract class BlameAnnotationProviderBase extends AnnotationProviderBase {\n    protected _blame: Promise<GitBlame | undefined>;\n    protected _hoverProviderDisposable: Disposable | undefined;\n    protected readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n        this._blame = editor.document.isDirty\n            ? Container.git.getBlameForFileContents(this._uri, editor.document.getText())\n            : Container.git.getBlameForFile(this._uri);\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n    }\n\n    clear() {\n        this._hoverProviderDisposable && this._hoverProviderDisposable.dispose();\n        super.clear();\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this.editor !== undefined) {\n            this._blame = this.editor.document.isDirty\n                ? Container.git.getBlameForFileContents(this._uri, this.editor.document.getText())\n                : Container.git.getBlameForFile(this._uri);\n        }\n\n        return super.onReset(changes);\n    }\n\n    async selection(shaOrLine?: string | number, blame?: GitBlame) {\n        if (!this.highlightDecoration) return;\n\n        if (blame === undefined) {\n            blame = await this._blame;\n            if (!blame || !blame.lines.length) return;\n        }\n\n        let sha: string | undefined = undefined;\n        if (typeof shaOrLine === 'string') {\n            sha = shaOrLine;\n        }\n        else if (typeof shaOrLine === 'number') {\n            if (shaOrLine >= 0) {\n                const commitLine = blame.lines[shaOrLine];\n                sha = commitLine && commitLine.sha;\n            }\n        }\n        else {\n            sha = Iterables.first(blame.commits.values()).sha;\n        }\n\n        if (!sha) {\n            this.editor.setDecorations(this.highlightDecoration, []);\n            return;\n        }\n\n        const highlightDecorationRanges = Arrays.filterMap(\n            blame.lines,\n            l =>\n                l.sha === sha\n                    ? this.editor.document.validateRange(new Range(l.line, 0, l.line, Number.MAX_SAFE_INTEGER))\n                    : undefined\n        );\n\n        this.editor.setDecorations(this.highlightDecoration, highlightDecorationRanges);\n    }\n\n    async validate(): Promise<boolean> {\n        const blame = await this._blame;\n        return blame !== undefined && blame.lines.length !== 0;\n    }\n\n    protected async getBlame(): Promise<GitBlame | undefined> {\n        const blame = await this._blame;\n        if (blame === undefined || blame.lines.length === 0) return undefined;\n\n        return blame;\n    }\n\n    protected getComputedHeatmap(blame: GitBlame): ComputedHeatmap {\n        const dates = [];\n\n        let commit;\n        let previousSha;\n        for (const l of blame.lines) {\n            if (previousSha === l.sha) continue;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            dates.push(commit.date);\n        }\n\n        dates.sort((a, b) => a.getTime() - b.getTime());\n\n        const half = Math.floor(dates.length / 2);\n        const median =\n            dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2.0;\n\n        const lookup: number[] = [];\n\n        const newest = dates[dates.length - 1].getTime();\n        let step = (newest - median) / 5;\n        for (let i = 5; i > 0; i--) {\n            lookup.push(median + step * i);\n        }\n\n        lookup.push(median);\n\n        const oldest = dates[0].getTime();\n        step = (median - oldest) / 4;\n        for (let i = 1; i <= 4; i++) {\n            lookup.push(median - step * i);\n        }\n\n        const d = new Date();\n        d.setDate(d.getDate() - (Container.config.heatmap.ageThreshold || 90));\n\n        return {\n            cold: newest < d.getTime(),\n            colors: {\n                cold: Container.config.heatmap.coldColor,\n                hot: Container.config.heatmap.hotColor\n            },\n            median: median,\n            newest: newest,\n            oldest: oldest,\n            computeAge: (date: Date) => {\n                const time = date.getTime();\n                let index = 0;\n                for (let i = 0; i < lookup.length; i++) {\n                    index = i;\n                    if (time >= lookup[i]) break;\n                }\n\n                return index;\n            }\n        };\n    }\n\n    registerHoverProviders(providers: { details: boolean; changes: boolean }) {\n        if (\n            !Container.config.hovers.enabled ||\n            !Container.config.hovers.annotations.enabled ||\n            (!providers.details && !providers.changes)\n        ) {\n            return;\n        }\n\n        const subscriptions: Disposable[] = [];\n        if (providers.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (providers.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit: GitCommit | undefined = undefined;\n        if (!commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousFileName = commit.previousFileName;\n                logCommit.previousSha = commit.previousSha;\n            }\n        }\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            this.annotationType,\n            this.editor.selection.active.line\n        );\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, await GitUri.fromUri(document.uri));\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(\n            hover.hoverMessage,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    private async getCommitForHover(position: Position): Promise<GitCommit | undefined> {\n        if (Container.config.hovers.annotations.over !== 'line' && position.character !== 0) return undefined;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return undefined;\n\n        const line = blame.lines[position.line];\n\n        return blame.commits.get(line.sha);\n    }\n}\n","'use strict';\nimport { DecorationOptions, DecorationRenderOptions, Range, TextEditorDecorationType, window } from 'vscode';\nimport { FileAnnotationType, GravatarDefaultStyle } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBlameCommit, ICommitFormatOptions } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Blame;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config.blame;\n\n        // Precalculate the formatting options so we don't need to do it on each iteration\n        const tokenOptions = Strings.getTokensFromTemplate(cfg.format).reduce(\n            (map, token) => {\n                map[token.key] = token.options as ICommitFormatOptions;\n                return map;\n            },\n            {} as { [token: string]: ICommitFormatOptions }\n        );\n\n        const options: ICommitFormatOptions = {\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n            tokenOptions: tokenOptions\n        };\n\n        const avatars = cfg.avatars;\n        const gravatarDefault = Container.config.defaultGravatarsStyle;\n        const separateLines = cfg.separateLines;\n        const renderOptions = Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.format, options);\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n        const avatarDecorationsMap:\n            | { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n            | undefined = avatars ? Object.create(null) : undefined;\n\n        let commit: GitBlameCommit | undefined;\n        let compacted = false;\n        let gutter: DecorationOptions | undefined;\n        let previousSha: string | undefined;\n\n        let computedHeatmap;\n        if (cfg.heatmap.enabled) {\n            computedHeatmap = this.getComputedHeatmap(blame);\n        }\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            if (previousSha === l.sha) {\n                // Use a shallow copy of the previous decoration options\n                gutter = { ...gutter } as DecorationOptions;\n\n                if (cfg.compact && !compacted) {\n                    // Since we are wiping out the contextText make sure to copy the objects\n                    gutter.renderOptions = {\n                        before: {\n                            ...gutter.renderOptions!.before,\n                            contentText: GlyphChars.Space.repeat(\n                                Strings.getWidth(gutter.renderOptions!.before!.contentText!)\n                            )\n                        }\n                    };\n\n                    if (separateLines) {\n                        gutter.renderOptions!.before!.textDecoration = 'none';\n                    }\n\n                    compacted = true;\n                }\n\n                gutter.range = new Range(line, 0, line, 0);\n\n                this.decorations.push(gutter);\n\n                if (avatars && !cfg.compact && commit !== undefined && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            compacted = false;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            gutter = decorationsMap[l.sha];\n            if (gutter !== undefined) {\n                gutter = {\n                    ...gutter,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(gutter);\n\n                if (avatars && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            gutter = Annotations.gutter(commit, cfg.format, options, renderOptions);\n\n            if (computedHeatmap !== undefined) {\n                Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);\n            }\n\n            gutter.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(gutter);\n\n            if (avatars && commit.email !== undefined) {\n                this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n            }\n\n            decorationsMap[l.sha] = gutter;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            if (avatars) {\n                this.additionalDecorations = [];\n                for (const d of Objects.values(avatarDecorationsMap!)) {\n                    this.additionalDecorations.push(d);\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n\n    addOrUpdateGravatarDecoration(\n        commit: GitBlameCommit,\n        range: Range,\n        gravatarDefault: GravatarDefaultStyle,\n        map: { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n    ) {\n        const avatarDecoration = map[commit.email!];\n        if (avatarDecoration !== undefined) {\n            avatarDecoration.ranges.push(range);\n\n            return;\n        }\n\n        map[commit.email!] = {\n            decoration: window.createTextEditorDecorationType({\n                gutterIconPath: commit.getGravatarUri(gravatarDefault),\n                gutterIconSize: '16px 16px'\n            } as DecorationRenderOptions),\n            ranges: [range]\n        };\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class HeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Heatmap;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const renderOptions = Annotations.heatmapRenderOptions();\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n\n        let commit: GitBlameCommit | undefined;\n        let heatmap: DecorationOptions | undefined;\n\n        const computedHeatmap = this.getComputedHeatmap(blame);\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            heatmap = decorationsMap[l.sha];\n            if (heatmap !== undefined) {\n                heatmap = {\n                    ...heatmap,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(heatmap);\n\n                continue;\n            }\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            heatmap = Annotations.heatmap(commit, computedHeatmap, renderOptions);\n            heatmap.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(heatmap);\n            decorationsMap[l.sha] = heatmap;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n}\n","'use strict';\nimport { DecorationOptions, MarkdownString, Position, Range, TextEditor, TextEditorDecorationType } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations } from './annotations';\n\nexport class RecentChangesAnnotationProvider extends AnnotationProviderBase {\n    private readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n    }\n\n    async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.annotationType = FileAnnotationType.RecentChanges;\n\n        const commit = await Container.git.getRecentLogCommitForFile(this._uri.repoPath, this._uri.fsPath);\n        if (commit === undefined) return false;\n\n        const diff = await Container.git.getDiffForFile(this._uri, commit.previousSha);\n        if (diff === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config;\n        const dateFormat = cfg.defaultDateFormat;\n\n        this.decorations = [];\n\n        for (const chunk of diff.chunks) {\n            let count = chunk.currentPosition.start - 2;\n            for (const line of chunk.lines) {\n                if (line.line === undefined) continue;\n\n                count++;\n\n                if (line.state === 'unchanged') continue;\n\n                const range = this.editor.document.validateRange(\n                    new Range(new Position(count, 0), new Position(count, Number.MAX_SAFE_INTEGER))\n                );\n\n                let message: MarkdownString | undefined = undefined;\n\n                if (cfg.hovers.enabled && cfg.hovers.annotations.enabled) {\n                    if (cfg.hovers.annotations.details) {\n                        this.decorations.push({\n                            hoverMessage: Annotations.getHoverMessage(\n                                commit,\n                                dateFormat,\n                                await Container.git.getRemotes(commit.repoPath),\n                                this.annotationType,\n                                this.editor.selection.active.line\n                            ),\n                            range: range\n                        } as DecorationOptions);\n                    }\n\n                    if (cfg.hovers.annotations.changes) {\n                        message = Annotations.getHoverDiffMessage(commit, this._uri, line);\n                        if (message === undefined) continue;\n                    }\n                }\n\n                this.decorations.push({\n                    hoverMessage: message,\n                    range: range\n                } as DecorationOptions);\n            }\n        }\n\n        this.editor.setDecorations(this.decoration, this.decorations);\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);\n\n        return true;\n    }\n\n    async selection(shaOrLine?: string | number): Promise<void> {}\n\n    async validate(): Promise<boolean> {\n        return true;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Event,\n    EventEmitter,\n    OverviewRulerLane,\n    Progress,\n    ProgressLocation,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorViewColumnChangeEvent,\n    ThemeColor,\n    window,\n    workspace\n} from 'vscode';\nimport { AnnotationsToggleMode, configuration, FileAnnotationType, HighlightLocations } from '../configuration';\nimport { CommandContext, isTextEditor, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { KeyboardScope, KeyCommand, Keys } from '../keyboard';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase, AnnotationStatus, TextEditorCorrelationKey } from './annotationProvider';\nimport { GutterBlameAnnotationProvider } from './gutterBlameAnnotationProvider';\nimport { HeatmapBlameAnnotationProvider } from './heatmapBlameAnnotationProvider';\nimport { RecentChangesAnnotationProvider } from './recentChangesAnnotationProvider';\n\nexport enum AnnotationClearReason {\n    User = 'User',\n    BlameabilityChanged = 'BlameabilityChanged',\n    ColumnChanged = 'ColumnChanged',\n    Disposing = 'Disposing',\n    DocumentChanged = 'DocumentChanged',\n    DocumentClosed = 'DocumentClosed'\n}\n\nexport const Decorations = {\n    blameAnnotation: window.createTextEditorDecorationType({\n        rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n        textDecoration: 'none'\n    } as DecorationRenderOptions),\n    blameHighlight: undefined as TextEditorDecorationType | undefined,\n    heatmapAnnotation: window.createTextEditorDecorationType({} as DecorationRenderOptions),\n    heatmapHighlight: undefined as TextEditorDecorationType | undefined,\n    recentChangesAnnotation: undefined as TextEditorDecorationType | undefined,\n    recentChangesHighlight: undefined as TextEditorDecorationType | undefined\n};\n\nexport class FileAnnotationController implements Disposable {\n    private _onDidToggleAnnotations = new EventEmitter<void>();\n    get onDidToggleAnnotations(): Event<void> {\n        return this._onDidToggleAnnotations.event;\n    }\n\n    private _annotationsDisposable: Disposable | undefined;\n    private _annotationProviders: Map<TextEditorCorrelationKey, AnnotationProviderBase> = new Map();\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _keyboardScope: KeyboardScope | undefined = undefined;\n    private readonly _toggleModes: Map<FileAnnotationType, AnnotationsToggleMode>;\n    private _annotationType: FileAnnotationType | undefined = undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n\n        this._toggleModes = new Map();\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        void this.clearAll();\n\n        Decorations.blameAnnotation && Decorations.blameAnnotation.dispose();\n        Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n        this._annotationsDisposable && this._annotationsDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const cfg = Container.config;\n\n        if (configuration.changed(e, configuration.name('blame')('highlight').value)) {\n            Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n            const cfgHighlight = cfg.blame.highlight;\n\n            if (cfgHighlight.enabled) {\n                Decorations.blameHighlight = window.createTextEditorDecorationType({\n                    gutterIconSize: 'contain',\n                    isWholeLine: true,\n                    overviewRulerLane: OverviewRulerLane.Right,\n                    backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                        ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                        : undefined,\n                    overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                        ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                        : undefined,\n                    dark: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                            : undefined\n                    },\n                    light: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                            : undefined\n                    }\n                });\n            }\n            else {\n                Decorations.blameHighlight = undefined;\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('highlight').value)) {\n            Decorations.recentChangesAnnotation && Decorations.recentChangesAnnotation.dispose();\n\n            const cfgHighlight = cfg.recentChanges.highlight;\n\n            Decorations.recentChangesAnnotation = window.createTextEditorDecorationType({\n                gutterIconSize: 'contain',\n                isWholeLine: true,\n                overviewRulerLane: OverviewRulerLane.Right,\n                backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                    ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                    : undefined,\n                overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                    ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                    : undefined,\n                dark: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                        : undefined\n                },\n                light: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                        : undefined\n                }\n            });\n        }\n\n        const initializing = configuration.initializing(e);\n\n        if (configuration.changed(e, configuration.name('blame')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Blame, cfg.blame.toggleMode);\n            if (!initializing && cfg.blame.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('heatmap')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);\n            if (!initializing && cfg.heatmap.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.RecentChanges, cfg.recentChanges.toggleMode);\n            if (!initializing && cfg.recentChanges.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (initializing) return;\n\n        if (\n            configuration.changed(e, configuration.name('blame').value) ||\n            configuration.changed(e, configuration.name('recentChanges').value) ||\n            configuration.changed(e, configuration.name('heatmap').value) ||\n            configuration.changed(e, configuration.name('hovers').value)\n        ) {\n            // Since the configuration has changed -- reset any visible annotations\n            for (const provider of this._annotationProviders.values()) {\n                if (provider === undefined) continue;\n\n                if (provider.annotationType === FileAnnotationType.RecentChanges) {\n                    provider.reset({\n                        decoration: Decorations.recentChangesAnnotation!,\n                        highlightDecoration: Decorations.recentChangesHighlight\n                    });\n                }\n                else if (provider.annotationType === FileAnnotationType.Blame) {\n                    provider.reset({\n                        decoration: Decorations.blameAnnotation,\n                        highlightDecoration: Decorations.blameHighlight\n                    });\n                }\n                else {\n                    void this.show(provider.editor, FileAnnotationType.Heatmap);\n                }\n            }\n        }\n    }\n\n    private async onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this._editor = editor;\n        // Logger.log('AnnotationController.onActiveTextEditorChanged', editor && editor.document.uri.fsPath);\n\n        if (this.isInWindowToggle()) {\n            await this.show(editor, this._annotationType!);\n\n            return;\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) {\n            setCommandContext(CommandContext.AnnotationStatus, undefined);\n            void this.detachKeyboardHook();\n        }\n        else {\n            setCommandContext(CommandContext.AnnotationStatus, provider.status);\n            void this.attachKeyboardHook();\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only care if we are becoming un-blameable\n        if (e.blameable) return;\n\n        const editor = window.activeTextEditor;\n        if (editor === undefined) return;\n\n        void this.clear(editor, AnnotationClearReason.BlameabilityChanged);\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        for (const [key, p] of this._annotationProviders) {\n            if (!e.document.is(p.document)) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentChanged);\n        }\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        if (!Container.git.isTrackable(document.uri)) return;\n\n        for (const [key, p] of this._annotationProviders) {\n            if (p.document !== document) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentClosed);\n        }\n    }\n\n    private onTextEditorViewColumnChanged(e: TextEditorViewColumnChangeEvent) {\n        // FYI https://github.com/Microsoft/vscode/issues/35602\n        const provider = this.getProvider(e.textEditor);\n        if (provider === undefined) {\n            // If we don't find an exact match, do a fuzzy match (since we can't properly track editors)\n            const fuzzyProvider = Iterables.find(\n                this._annotationProviders.values(),\n                p => p.editor.document === e.textEditor.document\n            );\n            if (fuzzyProvider == null) return;\n\n            void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);\n\n            return;\n        }\n\n        void provider.restore(e.textEditor);\n    }\n\n    private onVisibleTextEditorsChanged(editors: TextEditor[]) {\n        let provider: AnnotationProviderBase | undefined;\n        for (const e of editors) {\n            provider = this.getProvider(e);\n            if (provider === undefined) continue;\n\n            void provider.restore(e);\n        }\n    }\n\n    isInWindowToggle(): boolean {\n        return this.getToggleMode(this._annotationType) === AnnotationsToggleMode.Window;\n    }\n\n    private getToggleMode(annotationType: FileAnnotationType | undefined): AnnotationsToggleMode {\n        if (annotationType === undefined) return AnnotationsToggleMode.File;\n\n        return this._toggleModes.get(annotationType) || AnnotationsToggleMode.File;\n    }\n\n    clear(editor: TextEditor, reason: AnnotationClearReason = AnnotationClearReason.User) {\n        if (this.isInWindowToggle()) {\n            return this.clearAll();\n        }\n\n        return this.clearCore(AnnotationProviderBase.getCorrelationKey(editor), reason);\n    }\n\n    async clearAll() {\n        this._annotationType = undefined;\n        for (const [key] of this._annotationProviders) {\n            await this.clearCore(key, AnnotationClearReason.Disposing);\n        }\n    }\n\n    async getAnnotationType(editor: TextEditor | undefined): Promise<FileAnnotationType | undefined> {\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return undefined;\n\n        const trackedDocument = await Container.tracker.get(editor!.document);\n        if (trackedDocument === undefined || !trackedDocument.isBlameable) return undefined;\n\n        return provider.annotationType;\n    }\n\n    getProvider(editor: TextEditor | undefined): AnnotationProviderBase | undefined {\n        if (editor === undefined || editor.document === undefined) return undefined;\n        return this._annotationProviders.get(AnnotationProviderBase.getCorrelationKey(editor));\n    }\n\n    async show(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (this.getToggleMode(type) === AnnotationsToggleMode.Window) {\n            let first = this._annotationType === undefined;\n            const reset = !first && this._annotationType !== type;\n\n            this._annotationType = type;\n\n            if (reset) {\n                await this.clearAll();\n                first = true;\n            }\n\n            if (first) {\n                for (const e of window.visibleTextEditors) {\n                    if (e === editor) continue;\n\n                    void this.show(e, type);\n                }\n            }\n        }\n\n        if (editor === undefined) return false; // || editor.viewColumn === undefined) return false;\n        this._editor = editor;\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable) return false;\n\n        const currentProvider = this.getProvider(editor);\n        if (currentProvider !== undefined && currentProvider.annotationType === type) {\n            await currentProvider.selection(shaOrLine);\n            return true;\n        }\n\n        const provider = await window.withProgress(\n            { location: ProgressLocation.Window },\n            async (progress: Progress<{ message: string }>) => {\n                await setCommandContext(CommandContext.AnnotationStatus, AnnotationStatus.Computing);\n\n                const computingAnnotations = this.showAnnotationsCore(\n                    currentProvider,\n                    editor,\n                    type,\n                    shaOrLine,\n                    progress\n                );\n                const provider = await computingAnnotations;\n\n                if (editor === this._editor) {\n                    await setCommandContext(CommandContext.AnnotationStatus, provider && provider.status);\n                }\n\n                return computingAnnotations;\n            }\n        );\n\n        return provider !== undefined;\n    }\n\n    async toggle(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (editor !== undefined) {\n            const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n            if (\n                (type === FileAnnotationType.RecentChanges && !trackedDocument.isTracked) ||\n                !trackedDocument.isBlameable\n            ) {\n                return false;\n            }\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return this.show(editor!, type, shaOrLine);\n\n        const reopen = provider.annotationType !== type;\n\n        if (this.isInWindowToggle()) {\n            await this.clearAll();\n        }\n        else {\n            await this.clearCore(provider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!reopen) return false;\n\n        return this.show(editor, type, shaOrLine);\n    }\n\n    private async attachKeyboardHook() {\n        // Allows pressing escape to exit the annotations\n        if (this._keyboardScope === undefined) {\n            this._keyboardScope = await Container.keyboard.beginScope({\n                escape: {\n                    onDidPressKey: async (key: Keys) => {\n                        const e = this._editor;\n                        if (e === undefined) return undefined;\n\n                        await this.clear(e, AnnotationClearReason.User);\n                        return undefined;\n                    }\n                } as KeyCommand\n            });\n        }\n    }\n\n    private async clearCore(key: TextEditorCorrelationKey, reason: AnnotationClearReason) {\n        const provider = this._annotationProviders.get(key);\n        if (provider === undefined) return;\n\n        Logger.log(`${reason}:`, `Clear annotations for ${key}`);\n\n        this._annotationProviders.delete(key);\n        provider.dispose();\n\n        if (this._annotationProviders.size === 0 || key === AnnotationProviderBase.getCorrelationKey(this._editor)) {\n            await setCommandContext(CommandContext.AnnotationStatus, undefined);\n            await this.detachKeyboardHook();\n        }\n\n        if (this._annotationProviders.size === 0) {\n            Logger.log(`Remove all listener registrations for annotations`);\n\n            this._annotationsDisposable && this._annotationsDisposable.dispose();\n            this._annotationsDisposable = undefined;\n        }\n\n        this._onDidToggleAnnotations.fire();\n    }\n\n    private async detachKeyboardHook() {\n        if (this._keyboardScope === undefined) return;\n\n        await this._keyboardScope.dispose();\n        this._keyboardScope = undefined;\n    }\n\n    private async showAnnotationsCore(\n        currentProvider: AnnotationProviderBase | undefined,\n        editor: TextEditor,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        progress?: Progress<{ message: string }>\n    ): Promise<AnnotationProviderBase | undefined> {\n        if (progress !== undefined) {\n            let annotationsLabel = 'annotations';\n            switch (type) {\n                case FileAnnotationType.Blame:\n                    annotationsLabel = 'blame annotations';\n                    break;\n\n                case FileAnnotationType.Heatmap:\n                    annotationsLabel = 'heatmap annotations';\n                    break;\n\n                case FileAnnotationType.RecentChanges:\n                    annotationsLabel = 'recent changes annotations';\n                    break;\n            }\n\n            progress!.report({\n                message: `Computing ${annotationsLabel} for ${paths.basename(editor.document.fileName)}`\n            });\n        }\n\n        // Allows pressing escape to exit the annotations\n        await this.attachKeyboardHook();\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n\n        let provider: AnnotationProviderBase | undefined = undefined;\n        switch (type) {\n            case FileAnnotationType.Blame:\n                provider = new GutterBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.blameAnnotation,\n                    Decorations.blameHighlight\n                );\n                break;\n\n            case FileAnnotationType.Heatmap:\n                provider = new HeatmapBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.heatmapAnnotation,\n                    Decorations.heatmapHighlight\n                );\n                break;\n\n            case FileAnnotationType.RecentChanges:\n                provider = new RecentChangesAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.recentChangesAnnotation!,\n                    Decorations.recentChangesHighlight\n                );\n                break;\n        }\n        if (provider === undefined || !(await provider.validate())) return undefined;\n\n        if (currentProvider !== undefined) {\n            await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!this._annotationsDisposable && this._annotationProviders.size === 0) {\n            Logger.log(`Add listener registrations for annotations`);\n\n            this._annotationsDisposable = Disposable.from(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 50), this),\n                window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this),\n                window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleTextEditorsChanged, 50), this),\n                workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this)\n            );\n        }\n\n        this._annotationProviders.set(provider.correlationKey, provider);\n        if (await provider.provideAnnotation(shaOrLine)) {\n            this._onDidToggleAnnotations.fire();\n            return provider;\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    debug,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Range,\n    TextEditor,\n    TextEditorDecorationType,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\nimport { Annotations } from './annotations';\n\nconst annotationDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n    after: {\n        margin: '0 0 0 3em',\n        textDecoration: 'none'\n    },\n    rangeBehavior: DecorationRangeBehavior.ClosedOpen\n} as DecorationRenderOptions);\n\nexport class LineAnnotationController implements Disposable {\n    private _disposable: Disposable;\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n    private _enabled: boolean = false;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearAnnotations(this._editor);\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!configuration.changed(e, configuration.name('currentLine').value)) return;\n\n        if (configuration.changed(e, configuration.name('currentLine')('enabled').value)) {\n            if (Container.config.currentLine.enabled) {\n                this._enabled = true;\n                this.resume();\n            }\n            else {\n                this._enabled = false;\n                this.setLineTracker(false);\n            }\n        }\n\n        void this.refresh(window.activeTextEditor);\n    }\n\n    private _suspended?: 'debugging' | 'user';\n    get suspended() {\n        return !this._enabled || this._suspended !== undefined;\n    }\n\n    resume(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(true);\n\n        switch (reason) {\n            case 'debugging':\n                if (this._suspended !== 'user') {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n\n            case 'user':\n                if (this._suspended !== undefined) {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n        }\n\n        return false;\n    }\n\n    suspend(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(false);\n\n        if (this._suspended !== 'user') {\n            this._suspended = reason;\n            return true;\n        }\n\n        return false;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (!e.pending && e.lines !== undefined) {\n            void this.refresh(e.editor);\n\n            return;\n        }\n\n        this.clear(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n\n        if (this.suspend('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n\n        if (this.resume('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onFileAnnotationsToggled() {\n        void this.refresh(window.activeTextEditor);\n    }\n\n    clear(editor: TextEditor | undefined) {\n        if (this._editor !== editor && this._editor !== undefined) {\n            this.clearAnnotations(this._editor);\n        }\n        this.clearAnnotations(editor);\n    }\n\n    async toggle(editor: TextEditor | undefined) {\n        this._enabled = !(this._enabled && !this.suspended);\n\n        if (this._enabled) {\n            if (this.resume('user')) {\n                await this.refresh(editor);\n            }\n        }\n        else {\n            if (this.suspend('user')) {\n                await this.refresh(editor);\n            }\n        }\n    }\n\n    private clearAnnotations(editor: TextEditor | undefined) {\n        if (editor === undefined || (editor as any)._disposed === true) return;\n\n        editor.setDecorations(annotationDecoration, []);\n    }\n\n    private async refresh(editor: TextEditor | undefined) {\n        if (editor === undefined && this._editor === undefined) return;\n\n        const lines = Container.lineTracker.lines;\n        if (editor === undefined || lines === undefined || !isTextEditor(editor)) return this.clear(this._editor);\n\n        if (this._editor !== editor) {\n            // Clear any annotations on the previously active editor\n            this.clear(this._editor);\n\n            this._editor = editor;\n        }\n\n        const cfg = Container.config.currentLine;\n        if (this.suspended) return this.clear(editor);\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable && this.suspended) return this.clear(editor);\n\n        // Make sure the editor hasn't died since the await above and that we are still on the same line(s)\n        if (editor.document === undefined || !Container.lineTracker.includesAll(lines)) return;\n\n        const scrollable = Container.config.currentLine.scrollable;\n\n        const decorations = [];\n        for (const l of lines) {\n            const state = Container.lineTracker.getState(l);\n            if (state === undefined || state.commit === undefined) continue;\n\n            const decoration = Annotations.trailing(\n                state.commit,\n                cfg.format,\n                cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n                scrollable\n            );\n            decoration.range = editor.document.validateRange(\n                new Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER)\n            );\n            decorations.push(decoration);\n        }\n\n        editor.setDecorations(annotationDecoration, decorations);\n    }\n\n    private setLineTracker(enabled: boolean) {\n        if (enabled) {\n            if (!Container.lineTracker.isSubscribed(this)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n\n            return;\n        }\n\n        Container.lineTracker.stop(this);\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    CodeLens,\n    CodeLensProvider,\n    Command,\n    commands,\n    DocumentSelector,\n    DocumentSymbol,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Location,\n    Position,\n    Range,\n    SymbolInformation,\n    SymbolKind,\n    TextDocument,\n    Uri\n} from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport {\n    CodeLensCommand,\n    CodeLensConfig,\n    CodeLensLanguageScope,\n    CodeLensScopes,\n    configuration\n} from '../configuration';\nimport { BuiltInCommands, DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitBlameLines, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport { DocumentTracker, GitDocumentState } from '../trackers/gitDocumentTracker';\n\nexport class GitRecentChangeCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: (() => GitBlameLines | undefined) | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand,\n        command?: Command | undefined\n    ) {\n        super(range, command);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame && this.blame();\n    }\n}\n\nexport class GitAuthorsCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: () => GitBlameLines | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand\n    ) {\n        super(range);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame();\n    }\n}\n\nexport class GitCodeLensProvider implements CodeLensProvider {\n    private _onDidChangeCodeLenses = new EventEmitter<void>();\n    public get onDidChangeCodeLenses(): Event<void> {\n        return this._onDidChangeCodeLenses.event;\n    }\n\n    static selector: DocumentSelector = [\n        { scheme: DocumentSchemes.File },\n        { scheme: DocumentSchemes.Vsls },\n        { scheme: DocumentSchemes.Git },\n        { scheme: DocumentSchemes.GitLens }\n    ];\n\n    constructor(\n        context: ExtensionContext,\n        private readonly _git: GitService,\n        private readonly _tracker: DocumentTracker<GitDocumentState>\n    ) {}\n\n    reset(reason?: 'idle' | 'saved') {\n        this._onDidChangeCodeLenses.fire();\n    }\n\n    async provideCodeLenses(document: TextDocument, token: CancellationToken): Promise<CodeLens[]> {\n        const trackedDocument = await this._tracker.getOrAdd(document);\n        if (!trackedDocument.isBlameable) return [];\n\n        let dirty = false;\n        if (document.isDirty) {\n            // Only allow dirty blames if we are idle\n            if (trackedDocument.isDirtyIdle) {\n                const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n                if (maxLines > 0 && document.lineCount > maxLines) {\n                    dirty = true;\n                }\n            }\n            else {\n                dirty = true;\n            }\n        }\n\n        const cfg = configuration.get<CodeLensConfig>(configuration.name('codeLens').value, document.uri);\n\n        let languageScope =\n            cfg.scopesByLanguage &&\n            cfg.scopesByLanguage.find(\n                ll => ll.language !== undefined && ll.language.toLowerCase() === document.languageId\n            );\n        if (languageScope == null) {\n            languageScope = {\n                language: undefined\n            } as CodeLensLanguageScope;\n        }\n        if (languageScope.scopes == null) {\n            languageScope.scopes = cfg.scopes;\n        }\n        if (languageScope.symbolScopes == null) {\n            languageScope.symbolScopes = cfg.symbolScopes;\n        }\n\n        languageScope.symbolScopes =\n            languageScope.symbolScopes != null\n                ? (languageScope.symbolScopes = languageScope.symbolScopes.map(s => s.toLowerCase()))\n                : [];\n\n        const lenses: CodeLens[] = [];\n\n        const gitUri = trackedDocument.uri;\n        let blame: GitBlame | undefined;\n        let symbols;\n\n        if (!dirty) {\n            if (token.isCancellationRequested) return lenses;\n\n            if (languageScope.scopes.length === 1 && languageScope.scopes.includes(CodeLensScopes.Document)) {\n                blame = document.isDirty\n                    ? await this._git.getBlameForFileContents(gitUri, document.getText())\n                    : await this._git.getBlameForFile(gitUri);\n            }\n            else {\n                [blame, symbols] = await Promise.all([\n                    document.isDirty\n                        ? this._git.getBlameForFileContents(gitUri, document.getText())\n                        : this._git.getBlameForFile(gitUri),\n                    commands.executeCommand(BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri) as Promise<\n                        SymbolInformation[]\n                    >\n                ]);\n            }\n\n            if (blame === undefined || blame.lines.length === 0) return lenses;\n        }\n        else {\n            if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(CodeLensScopes.Document)) {\n                symbols = (await commands.executeCommand(\n                    BuiltInCommands.ExecuteDocumentSymbolProvider,\n                    document.uri\n                )) as SymbolInformation[];\n            }\n        }\n\n        if (token.isCancellationRequested) return lenses;\n\n        const documentRangeFn = Functions.once(() => document.validateRange(new Range(0, 1000000, 1000000, 1000000)));\n\n        // Since blame information isn't valid when there are unsaved changes -- update the lenses appropriately\n        const dirtyCommand = dirty ? ({ title: this.getDirtyTitle(cfg) } as Command) : undefined;\n\n        if (symbols !== undefined) {\n            Logger.log('GitCodeLensProvider.provideCodeLenses:', `${symbols.length} symbol(s) found`);\n            for (const sym of symbols) {\n                this.provideCodeLens(\n                    lenses,\n                    document,\n                    sym,\n                    languageScope as Required<CodeLensLanguageScope>,\n                    documentRangeFn,\n                    blame,\n                    gitUri,\n                    cfg,\n                    dirty,\n                    dirtyCommand\n                );\n            }\n        }\n\n        if (\n            (languageScope.scopes.includes(CodeLensScopes.Document) || languageScope.symbolScopes.includes('file')) &&\n            !languageScope.symbolScopes.includes('!file')\n        ) {\n            // Check if we have a lens for the whole document -- if not add one\n            if (!lenses.find(l => l.range.start.line === 0 && l.range.end.line === 0)) {\n                const blameRange = documentRangeFn();\n\n                let blameForRangeFn: (() => GitBlameLines | undefined) | undefined = undefined;\n                if (dirty || cfg.recentChange.enabled) {\n                    if (!dirty) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 0, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitRecentChangeCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.recentChange.command,\n                            dirtyCommand\n                        )\n                    );\n                }\n                if (!dirty && cfg.authors.enabled) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 1, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n\n        return lenses;\n    }\n\n    private getValidateSymbolRange(\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        includeSingleLineSymbols: boolean\n    ): Range | undefined {\n        let valid = false;\n        let range: Range | undefined;\n\n        const symbolName = SymbolKind[symbol.kind].toLowerCase();\n        switch (symbol.kind) {\n            case SymbolKind.File:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = documentRangeFn();\n                }\n                break;\n\n            case SymbolKind.Package:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = getRangeFromSymbol(symbol);\n                    if (range.start.line === 0 && range.end.line === 0) {\n                        range = documentRangeFn();\n                    }\n                }\n                break;\n\n            case SymbolKind.Class:\n            case SymbolKind.Interface:\n            case SymbolKind.Module:\n            case SymbolKind.Namespace:\n            case SymbolKind.Struct:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            case SymbolKind.Constructor:\n            case SymbolKind.Enum:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Blocks) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            default:\n                if (languageScope.symbolScopes!.includes(symbolName)) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n        }\n\n        return valid ? range || getRangeFromSymbol(symbol) : undefined;\n    }\n\n    private provideCodeLens(\n        lenses: CodeLens[],\n        document: TextDocument,\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        blame: GitBlame | undefined,\n        gitUri: GitUri | undefined,\n        cfg: CodeLensConfig,\n        dirty: boolean,\n        dirtyCommand: Command | undefined\n    ): void {\n        try {\n            const blameRange = this.getValidateSymbolRange(\n                symbol,\n                languageScope,\n                documentRangeFn,\n                cfg.includeSingleLineSymbols\n            );\n            if (blameRange === undefined) return;\n\n            const line = document.lineAt(getRangeFromSymbol(symbol).start);\n            // Make sure there is only 1 lens per line\n            if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber) return;\n\n            // Anchor the code lens to the start of the line -- so that the range won't change with edits (otherwise the code lens will be removed and re-added)\n            let startChar = 0;\n\n            let blameForRangeFn: (() => GitBlameLines | undefined) | undefined;\n            if (dirty || cfg.recentChange.enabled) {\n                if (!dirty) {\n                    blameForRangeFn = Functions.once(() => this._git.getBlameForRangeSync(blame!, gitUri!, blameRange));\n                }\n                lenses.push(\n                    new GitRecentChangeCodeLens(\n                        document.languageId,\n                        symbol,\n                        gitUri,\n                        blameForRangeFn,\n                        blameRange,\n                        false,\n                        line.range.with(new Position(line.range.start.line, startChar)),\n                        cfg.recentChange.command,\n                        dirtyCommand\n                    )\n                );\n                startChar++;\n            }\n\n            if (cfg.authors.enabled) {\n                let multiline = !blameRange.isSingleLine;\n                // HACK for Omnisharp, since it doesn't return full ranges\n                if (!multiline && document.languageId === 'csharp') {\n                    switch (symbol.kind) {\n                        case SymbolKind.File:\n                            break;\n                        case SymbolKind.Package:\n                        case SymbolKind.Module:\n                        case SymbolKind.Namespace:\n                        case SymbolKind.Class:\n                        case SymbolKind.Interface:\n                        case SymbolKind.Constructor:\n                        case SymbolKind.Method:\n                        case SymbolKind.Function:\n                        case SymbolKind.Enum:\n                            multiline = true;\n                            break;\n                    }\n                }\n\n                if (multiline && !dirty) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            symbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            false,\n                            line.range.with(new Position(line.range.start.line, startChar)),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n        finally {\n            if (isDocumentSymbol(symbol)) {\n                for (const child of symbol.children) {\n                    this.provideCodeLens(\n                        lenses,\n                        document,\n                        child,\n                        languageScope,\n                        documentRangeFn,\n                        blame,\n                        gitUri,\n                        cfg,\n                        dirty,\n                        dirtyCommand\n                    );\n                }\n            }\n        }\n    }\n\n    resolveCodeLens(lens: CodeLens, token: CancellationToken): CodeLens | Thenable<CodeLens> {\n        if (lens instanceof GitRecentChangeCodeLens) return this.resolveGitRecentChangeCodeLens(lens, token);\n        if (lens instanceof GitAuthorsCodeLens) return this.resolveGitAuthorsCodeLens(lens, token);\n        return Promise.reject<CodeLens>(undefined);\n    }\n\n    private resolveGitRecentChangeCodeLens(lens: GitRecentChangeCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const recentCommit = Iterables.first(blame.commits.values());\n        let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${\n                recentCommit.shortSha\n            })]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitRecentChangeCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private resolveGitAuthorsCodeLens(lens: GitAuthorsCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const count = blame.authors.size;\n        let title = `${count} ${count > 1 ? 'authors' : 'author'} (${Iterables.first(blame.authors.values()).name}${\n            count > 1 ? ' and others' : ''\n        })`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${Iterables.join(\n                Iterables.map(blame.authors.values(), a => a.name),\n                ', '\n            )})]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitAuthorsCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private applyDiffWithPreviousCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        if (commit === undefined) {\n            const blameLine = blame.allLines[lens.range.start.line];\n            commit = blame.commits.get(blameLine.sha);\n        }\n\n        lens.command = {\n            title: title,\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit: commit\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitFileDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitFileDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitFileDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCurrentBranchHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickCurrentBranchHistory,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private applyShowQuickFileHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickFileHistory,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    range: lens.isFullRange ? undefined : lens.blameRange\n                } as ShowQuickFileHistoryCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyToggleFileBlameCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines\n    ): T {\n        lens.command = {\n            title: title,\n            command: Commands.ToggleFileBlame,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private getDirtyTitle(cfg: CodeLensConfig) {\n        if (cfg.recentChange.enabled && cfg.authors.enabled) {\n            return Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;\n        }\n        if (cfg.recentChange.enabled) return Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;\n        return Container.config.strings.codeLens.unsavedChanges.authorsOnly;\n    }\n}\n\nfunction getRangeFromSymbol(symbol: DocumentSymbol | SymbolInformation) {\n    return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;\n}\n\nfunction isDocumentSymbol(symbol: DocumentSymbol | SymbolInformation): symbol is DocumentSymbol {\n    return (symbol as DocumentSymbol).children !== undefined;\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, languages } from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { GitCodeLensProvider } from './codeLensProvider';\n\nexport class GitCodeLensController implements Disposable {\n    private _canToggle: boolean = false;\n    private _disposable: Disposable | undefined;\n    private _provider: GitCodeLensProvider | undefined;\n    private _providerDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._providerDisposable && this._providerDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('codeLens').value;\n        if (\n            configuration.changed(e, section, null) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            if (!configuration.initializing(e)) {\n                Logger.log('CodeLens config changed; resetting CodeLens provider');\n            }\n\n            const cfg = Container.config.codeLens;\n            if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {\n                if (this._provider !== undefined) {\n                    this._provider.reset();\n                }\n                else {\n                    this.createProvider();\n                }\n            }\n            else {\n                if (this._providerDisposable !== undefined) {\n                    this._providerDisposable.dispose();\n                    this._providerDisposable = undefined;\n                }\n                this._provider = undefined;\n            }\n\n            this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;\n            setCommandContext(CommandContext.CanToggleCodeLens, this._canToggle);\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only reset if we have saved, since the code lens won't naturally be re-rendered\n        if (this._provider === undefined || !e.blameable) return;\n\n        Logger.log('Blame state changed; resetting CodeLens provider');\n        this._provider.reset('saved');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        if (this._provider === undefined || !e.document.isBlameable) return;\n\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        Logger.log('Dirty idle triggered; resetting CodeLens provider');\n        this._provider.reset('idle');\n    }\n\n    toggleCodeLens() {\n        if (!this._canToggle) return;\n\n        Logger.log(`toggleCodeLens()`);\n        if (this._provider !== undefined) {\n            if (this._providerDisposable !== undefined) {\n                this._providerDisposable.dispose();\n                this._providerDisposable = undefined;\n            }\n\n            this._provider = undefined;\n\n            return;\n        }\n\n        this.createProvider();\n    }\n\n    private createProvider() {\n        this._provider = new GitCodeLensProvider(Container.context, Container.git, Container.tracker);\n        this._providerDisposable = Disposable.from(\n            languages.registerCodeLensProvider(GitCodeLensProvider.selector, this._provider),\n            Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n            Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n        );\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    Disposable,\n    Event,\n    EventEmitter,\n    FileChangeEvent,\n    FileStat,\n    FileSystemError,\n    FileSystemProvider,\n    FileType,\n    Uri,\n    workspace\n} from 'vscode';\nimport { DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitTree, GitUri } from '../git/gitService';\nimport { Iterables, Strings, TernarySearchTree } from '../system';\n\nexport function fromGitLensFSUri(uri: Uri): { path: string; ref: string; repoPath: string } {\n    const gitUri = uri instanceof GitUri ? uri : GitUri.fromRevisionUri(uri);\n    return { path: gitUri.getRelativePath(), ref: gitUri.sha!, repoPath: gitUri.repoPath! };\n}\n\nexport function toGitLensFSUri(ref: string, repoPath: string): Uri {\n    return GitUri.toRevisionUri(ref, repoPath, repoPath);\n}\n\nconst emptyArray = new Uint8Array(0);\n\nexport class GitFileSystemProvider implements FileSystemProvider, Disposable {\n    private readonly _disposable: Disposable;\n    private readonly _searchTreeMap = new Map<string, Promise<TernarySearchTree<GitTree>>>();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            workspace.registerFileSystemProvider(DocumentSchemes.GitLens, this, {\n                isCaseSensitive: true,\n                isReadonly: true\n            })\n        );\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\n    get onDidChangeFile(): Event<FileChangeEvent[]> {\n        return this._onDidChangeFile.event;\n    }\n\n    copy?(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    createDirectory(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    delete(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async readDirectory(uri: Uri): Promise<[string, FileType][]> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        const tree = await this.getTree(path, ref, repoPath);\n        if (tree === undefined) {\n            debugger;\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        const items = [\n            ...Iterables.map<GitTree, [string, FileType]>(tree, t => [\n                path != null && path.length !== 0 ? Strings.normalizePath(paths.relative(path, t.path)) : t.path,\n                typeToFileType(t.type)\n            ])\n        ];\n        return items;\n    }\n\n    async readFile(uri: Uri): Promise<Uint8Array> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) return emptyArray;\n\n        const buffer = await Container.git.getVersionedFileBuffer(repoPath, path, ref);\n        if (buffer === undefined) return emptyArray;\n\n        return buffer;\n    }\n\n    rename(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async stat(uri: Uri): Promise<FileStat> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) {\n            return {\n                type: FileType.File,\n                size: 0,\n                ctime: 0,\n                mtime: 0\n            };\n        }\n\n        let treeItem;\n\n        const searchTree = this._searchTreeMap.get(ref);\n        if (searchTree !== undefined) {\n            // Add the fake root folder to the path\n            treeItem = (await searchTree).get(`/~/${path}`);\n        }\n        else {\n            if (path == null || path.length === 0) {\n                const tree = await this.getTree(path, ref, repoPath);\n                if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n                return {\n                    type: FileType.Directory,\n                    size: 0,\n                    ctime: 0,\n                    mtime: 0\n                };\n            }\n\n            treeItem = await Container.git.getTreeFileForRevision(repoPath, path, ref);\n        }\n\n        if (treeItem === undefined) {\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        return {\n            type: typeToFileType(treeItem.type),\n            size: treeItem.size,\n            ctime: 0,\n            mtime: 0\n        };\n    }\n\n    watch(): Disposable {\n        return { dispose: () => {} };\n    }\n\n    writeFile(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    private async createSearchTree(ref: string, repoPath: string) {\n        const searchTree = TernarySearchTree.forPaths() as TernarySearchTree<GitTree>;\n        const trees = await Container.git.getTreeForRevision(repoPath, ref);\n\n        // Add a fake root folder so that searches will work\n        searchTree.set(`~`, { commitSha: '', path: '~', size: 0, type: 'tree' });\n        for (const item of trees) {\n            searchTree.set(`~/${item.path}`, item);\n        }\n\n        return searchTree;\n    }\n\n    private async getOrCreateSearchTree(ref: string, repoPath: string) {\n        let searchTree = this._searchTreeMap.get(ref);\n        if (searchTree === undefined) {\n            searchTree = this.createSearchTree(ref, repoPath);\n            this._searchTreeMap.set(ref, searchTree);\n        }\n\n        return searchTree;\n    }\n\n    private async getTree(path: string, ref: string, repoPath: string) {\n        const searchTree = await this.getOrCreateSearchTree(ref, repoPath);\n        // Add the fake root folder to the path\n        return searchTree!.findSuperstr(`/~/${path}`, true);\n    }\n}\n\nfunction typeToFileType(type: 'blob' | 'tree' | undefined | null) {\n    switch (type) {\n        case 'blob':\n            return FileType.File;\n        case 'tree':\n            return FileType.Directory;\n        default:\n            return FileType.Unknown;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    ConfigurationChangeEvent,\n    debug,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    window\n} from 'vscode';\nimport { Annotations } from '../annotations/annotations';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class LineHoverController implements Disposable {\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _disposable: Disposable;\n    private _hoverProviderDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.unregister();\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('hovers')('enabled').value) &&\n            !configuration.changed(e, configuration.name('hovers')('currentLine')('enabled').value)\n        ) {\n            return;\n        }\n\n        if (Container.config.hovers.enabled && Container.config.hovers.currentLine.enabled) {\n            Container.lineTracker.start(\n                this,\n                Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n            );\n\n            this.register(window.activeTextEditor);\n        }\n        else {\n            Container.lineTracker.stop(this);\n            this.unregister();\n        }\n    }\n\n    private get debugging() {\n        return this._debugSessionEndDisposable !== undefined;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (e.pending || e.reason !== 'editor') return;\n\n        if (e.editor === undefined || e.lines === undefined) {\n            this.unregister();\n\n            return;\n        }\n\n        this.register(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n        if (fileAnnotations !== undefined && Container.config.hovers.annotations.details) return undefined;\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit = lineState !== undefined ? lineState.logCommit : undefined;\n        if (logCommit === undefined && !commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousSha = commit.previousSha;\n                logCommit.previousFileName = commit.previousFileName;\n\n                if (lineState !== undefined) {\n                    lineState.logCommit = logCommit;\n                }\n            }\n        }\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            fileAnnotations,\n            position.line\n        );\n        return new Hover(message, range);\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        if (Container.config.hovers.annotations.changes) {\n            const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n            if (fileAnnotations !== undefined) return undefined;\n        }\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, trackedDocument.uri);\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(hover.hoverMessage, range);\n    }\n\n    private register(editor: TextEditor | undefined) {\n        this.unregister();\n\n        if (editor === undefined /* || this.suspended */) return;\n\n        const cfg = Container.config.hovers;\n        if (!cfg.enabled || !cfg.currentLine.enabled || (!cfg.currentLine.details && !cfg.currentLine.changes)) return;\n\n        const subscriptions = [];\n        if (cfg.currentLine.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (cfg.currentLine.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    private unregister() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n    }\n}\n","'use strict';\nimport { commands, Disposable } from 'vscode';\nimport { CommandContext, extensionId, setCommandContext } from './constants';\nimport { Logger } from './logger';\n\nexport declare interface KeyCommand {\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nconst keyNoopCommand = Object.create(null) as KeyCommand;\nexport { keyNoopCommand as KeyNoopCommand };\n\nexport declare type Keys = 'left' | 'right' | ',' | '.' | 'escape';\nexport const keys: Keys[] = ['left', 'right', ',', '.', 'escape'];\n\nexport declare interface KeyMapping {\n    [id: string]: KeyCommand | (() => Promise<KeyCommand>) | undefined;\n}\n\nconst mappings: KeyMapping[] = [];\n\nexport class KeyboardScope implements Disposable {\n    constructor(\n        private readonly mapping: KeyMapping\n    ) {\n        for (const key in mapping) {\n            mapping[key] = mapping[key] || keyNoopCommand;\n        }\n    }\n\n    async dispose() {\n        const index = mappings.indexOf(this.mapping);\n        Logger.log('KeyboardScope.dispose', mappings.length, index);\n        if (index === mappings.length - 1) {\n            mappings.pop();\n            await this.updateKeyCommandsContext(mappings[mappings.length - 1]);\n        }\n        else {\n            mappings.splice(index, 1);\n        }\n    }\n\n    async begin() {\n        mappings.push(this.mapping);\n        await this.updateKeyCommandsContext(this.mapping);\n        return this;\n    }\n\n    async clearKeyCommand(key: Keys) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping || !mapping[key]) return;\n\n        Logger.log('KeyboardScope.clearKeyCommand', mappings.length, key);\n        mapping[key] = undefined;\n        await setCommandContext(`${CommandContext.Key}:${key}`, false);\n    }\n\n    async setKeyCommand(key: Keys, command: KeyCommand | (() => Promise<KeyCommand>)) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping) return;\n\n        Logger.log('KeyboardScope.setKeyCommand', mappings.length, key, Boolean(mapping[key]));\n\n        if (!mapping[key]) {\n            mapping[key] = command;\n            await setCommandContext(`${CommandContext.Key}:${key}`, true);\n        }\n        else {\n            mapping[key] = command;\n        }\n    }\n\n    private async updateKeyCommandsContext(mapping: KeyMapping) {\n        const promises = [];\n        for (const key of keys) {\n            promises.push(setCommandContext(`${CommandContext.Key}:${key}`, Boolean(mapping && mapping[key])));\n        }\n        await Promise.all(promises);\n    }\n}\n\nexport class Keyboard implements Disposable {\n    private _disposable: Disposable;\n\n    constructor() {\n        const subscriptions = keys.map(key =>\n            commands.registerCommand(`${extensionId}.key.${key}`, () => this.execute(key), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    async beginScope(mapping?: KeyMapping): Promise<KeyboardScope> {\n        Logger.log('Keyboard.beginScope', mappings.length);\n        return await new KeyboardScope(\n            mapping ? Object.assign(Object.create(null), mapping) : Object.create(null)\n        ).begin();\n    }\n\n    async execute(key: Keys): Promise<{} | undefined> {\n        if (!mappings.length) return undefined;\n\n        try {\n            const mapping = mappings[mappings.length - 1];\n\n            let command = mapping[key] as KeyCommand | (() => Promise<KeyCommand>);\n            if (typeof command === 'function') {\n                command = await command();\n            }\n            if (!command || typeof command.onDidPressKey !== 'function') return undefined;\n\n            Logger.log('Keyboard.execute', key);\n\n            return await command.onDidPressKey(key);\n        }\n        catch (ex) {\n            Logger.error(ex, 'Keyboard.execute');\n            return undefined;\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, StatusBarAlignment, StatusBarItem, TextEditor, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration, StatusBarCommand } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatter, GitCommit, ICommitFormatOptions } from '../git/gitService';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class StatusBarController implements Disposable {\n    private _blameStatusBarItem: StatusBarItem | undefined;\n    private _disposable: Disposable;\n    private _modeStatusBarItem: StatusBarItem | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearBlame();\n\n        this._blameStatusBarItem && this._blameStatusBarItem.dispose();\n        this._modeStatusBarItem && this._modeStatusBarItem.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (configuration.changed(e, configuration.name('mode').value)) {\n            const mode =\n                Container.config.mode.active && Container.config.mode.statusBar.enabled\n                    ? Container.config.modes[Container.config.mode.active]\n                    : undefined;\n            if (mode && mode.statusBarItemName) {\n                const alignment =\n                    Container.config.mode.statusBar.alignment !== 'left'\n                        ? StatusBarAlignment.Right\n                        : StatusBarAlignment.Left;\n\n                if (configuration.changed(e, configuration.name('mode')('statusBar')('alignment').value)) {\n                    if (this._modeStatusBarItem !== undefined && this._modeStatusBarItem.alignment !== alignment) {\n                        this._modeStatusBarItem.dispose();\n                        this._modeStatusBarItem = undefined;\n                    }\n                }\n\n                this._modeStatusBarItem =\n                    this._modeStatusBarItem ||\n                    window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 999 : 1);\n                this._modeStatusBarItem.command = Commands.SwitchMode;\n                this._modeStatusBarItem.text = mode.statusBarItemName;\n                this._modeStatusBarItem.tooltip = `Switch GitLens Mode`;\n                this._modeStatusBarItem.show();\n            }\n            else {\n                if (this._modeStatusBarItem !== undefined) {\n                    this._modeStatusBarItem.dispose();\n                    this._modeStatusBarItem = undefined;\n                }\n            }\n        }\n\n        if (!configuration.changed(e, configuration.name('statusBar').value)) return;\n\n        if (Container.config.statusBar.enabled) {\n            const alignment =\n                Container.config.statusBar.alignment !== 'left' ? StatusBarAlignment.Right : StatusBarAlignment.Left;\n\n            if (configuration.changed(e, configuration.name('statusBar')('alignment').value)) {\n                if (this._blameStatusBarItem !== undefined && this._blameStatusBarItem.alignment !== alignment) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n\n            this._blameStatusBarItem =\n                this._blameStatusBarItem ||\n                window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 1000 : 0);\n            this._blameStatusBarItem.command = Container.config.statusBar.command;\n\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n        }\n        else {\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.stop(this);\n\n                if (this._blameStatusBarItem !== undefined) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        // If we need to reduceFlicker, don't clear if only the selected lines changed\n        let clear = !(\n            Container.config.statusBar.reduceFlicker &&\n            e.reason === 'selection' &&\n            (e.pending || e.lines !== undefined)\n        );\n        if (!e.pending && e.lines !== undefined) {\n            const state = Container.lineTracker.getState(e.lines[0]);\n            if (state !== undefined && state.commit !== undefined) {\n                this.updateBlame(state.commit, e.editor!);\n\n                return;\n            }\n\n            clear = true;\n        }\n\n        if (clear) {\n            this.clearBlame();\n        }\n    }\n\n    clearBlame() {\n        if (this._blameStatusBarItem !== undefined) {\n            this._blameStatusBarItem.hide();\n        }\n    }\n\n    private updateBlame(commit: GitCommit, editor: TextEditor) {\n        const cfg = Container.config.statusBar;\n        if (!cfg.enabled || this._blameStatusBarItem === undefined || !isTextEditor(editor)) return;\n\n        this._blameStatusBarItem.text = `$(git-commit) ${CommitFormatter.fromTemplate(cfg.format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat\n        } as ICommitFormatOptions)}`;\n\n        switch (cfg.command) {\n            case StatusBarCommand.ToggleFileBlame:\n                this._blameStatusBarItem.tooltip = 'Toggle Blame Annotations';\n                break;\n            case StatusBarCommand.DiffWithPrevious:\n                this._blameStatusBarItem.command = Commands.DiffLineWithPrevious;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Previous';\n                break;\n            case StatusBarCommand.DiffWithWorking:\n                this._blameStatusBarItem.command = Commands.DiffLineWithWorking;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Working';\n                break;\n            case StatusBarCommand.ToggleCodeLens:\n                this._blameStatusBarItem.tooltip = 'Toggle Git CodeLens';\n                break;\n            case StatusBarCommand.ShowQuickCommitDetails:\n                this._blameStatusBarItem.tooltip = 'Show Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickCommitFileDetails:\n                this._blameStatusBarItem.tooltip = 'Show Line Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickFileHistory:\n                this._blameStatusBarItem.tooltip = 'Show File History';\n                break;\n            case StatusBarCommand.ShowQuickCurrentBranchHistory:\n                this._blameStatusBarItem.tooltip = 'Show Branch History';\n                break;\n        }\n\n        this._blameStatusBarItem.show();\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextEditor, TextEditorSelectionChangeEvent, window } from 'vscode';\nimport { isTextEditor } from '../constants';\nimport { Functions, IDeferrable } from '../system';\n\nexport interface LinesChangeEvent {\n    readonly editor: TextEditor | undefined;\n    readonly lines: number[] | undefined;\n\n    readonly reason: 'editor' | 'selection';\n    readonly pending?: boolean;\n}\n\nexport class LineTracker<T> implements Disposable {\n    private _onDidChangeActiveLines = new EventEmitter<LinesChangeEvent>();\n    get onDidChangeActiveLines(): Event<LinesChangeEvent> {\n        return this._onDidChangeActiveLines.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n\n    private readonly _state: Map<number, T | undefined> = new Map();\n\n    dispose() {\n        this.stop();\n    }\n\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (this._editor === editor) return;\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this.reset();\n        this._editor = editor;\n        this._lines = editor !== undefined ? editor.selections.map(s => s.active.line) : undefined;\n\n        this.trigger('editor');\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        // If this isn't for our cached editor and its not a real editor -- kick out\n        if (this._editor !== e.textEditor && !isTextEditor(e.textEditor)) return;\n\n        const reason = this._editor === e.textEditor ? 'selection' : 'editor';\n\n        const lines = e.selections.map(s => s.active.line);\n        if (this._editor === e.textEditor && this.includesAll(lines)) return;\n\n        this.reset();\n        this._editor = e.textEditor;\n        this._lines = lines;\n        this.trigger(reason);\n    }\n\n    getState(line: number): T | undefined {\n        return this._state.get(line);\n    }\n\n    setState(line: number, state: T | undefined) {\n        this._state.set(line, state);\n    }\n\n    private _lines: number[] | undefined;\n    get lines(): number[] | undefined {\n        return this._lines;\n    }\n\n    includes(line: number): boolean {\n        return this._lines !== undefined && this._lines.includes(line);\n    }\n\n    includesAll(lines: number[] | undefined): boolean {\n        return LineTracker.includesAll(lines, this._lines);\n    }\n\n    refresh() {\n        this.trigger('editor');\n    }\n\n    reset() {\n        this._state.clear();\n    }\n\n    start(subscriber?: any, subscription?: Disposable): void {\n        if (this._disposable !== undefined) return;\n\n        this._disposable = Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 0), this),\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n\n        setImmediate(() => this.onActiveTextEditorChanged(window.activeTextEditor));\n    }\n\n    stop(subscriber?: any) {\n        if (this._disposable === undefined) return;\n\n        if (this._linesChangedDebounced !== undefined) {\n            this._linesChangedDebounced.cancel();\n        }\n\n        this._disposable.dispose();\n        this._disposable = undefined;\n    }\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this._onDidChangeActiveLines.fire(e);\n    }\n\n    protected trigger(reason: 'editor' | 'selection') {\n        this.onLinesChanged({ editor: this._editor, lines: this._lines, reason: reason });\n    }\n\n    private _linesChangedDebounced: (((e: LinesChangeEvent) => void) & IDeferrable) | undefined;\n\n    private onLinesChanged(e: LinesChangeEvent) {\n        if (e.lines === undefined) {\n            setImmediate(() => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                if (this._linesChangedDebounced !== undefined) {\n                    this._linesChangedDebounced.cancel();\n                }\n\n                void this.fireLinesChanged(e);\n            });\n\n            return;\n        }\n\n        if (this._linesChangedDebounced === undefined) {\n            this._linesChangedDebounced = Functions.debounce(\n                (e: LinesChangeEvent) => {\n                    if (window.activeTextEditor !== e.editor) return;\n                    // Make sure we are still on the same lines\n                    if (!LineTracker.includesAll(e.lines, e.editor && e.editor.selections.map(s => s.active.line))) {\n                        return;\n                    }\n\n                    void this.fireLinesChanged(e);\n                },\n                250,\n                { track: true }\n            );\n        }\n\n        // If we have no pending moves, then fire an immediate pending event, and defer the real event\n        if (!this._linesChangedDebounced.pending!()) {\n            void this.fireLinesChanged({ ...e, pending: true });\n        }\n\n        this._linesChangedDebounced(e);\n    }\n\n    static includesAll(lines1: number[] | undefined, lines2: number[] | undefined): boolean {\n        if (lines1 === undefined && lines2 === undefined) return true;\n        if (lines1 === undefined || lines2 === undefined) return false;\n\n        return lines2.length === lines1.length && lines2.every((v, i) => v === lines1[i]);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor } from 'vscode';\nimport { Container } from '../container';\nimport { GitBlameCommit, GitLogCommit } from '../git/gitService';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from './gitDocumentTracker';\nimport { LinesChangeEvent, LineTracker } from './lineTracker';\n\nexport * from './lineTracker';\n\nexport class GitLineState {\n    constructor(\n        public readonly commit: GitBlameCommit | undefined,\n        public logCommit?: GitLogCommit\n    ) {}\n}\n\nexport class GitLineTracker extends LineTracker<GitLineState> {\n    private _count = 0;\n    private _subscriptions: Map<any, Disposable> = new Map();\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this.reset();\n\n        let updated = false;\n        if (!this._suspended && !e.pending && e.lines !== undefined && e.editor !== undefined) {\n            updated = await this.updateState(e.lines, e.editor);\n        }\n\n        return super.fireLinesChanged(updated ? e : { ...e, lines: undefined });\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        this.trigger('editor');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        this.resume();\n    }\n\n    private async onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        if (e.dirty) {\n            this.suspend();\n        }\n        else {\n            this.resume({ force: true });\n        }\n    }\n\n    private _suspended = false;\n\n    private resume(options: { force?: boolean } = {}) {\n        if (!options.force && !this._suspended) return;\n\n        this._suspended = false;\n        this.trigger('editor');\n    }\n\n    private suspend(options: { force?: boolean } = {}) {\n        if (!options.force && this._suspended) return;\n\n        this._suspended = true;\n        this.trigger('editor');\n    }\n\n    isSubscribed(subscriber: any) {\n        return this._subscriptions.has(subscriber);\n    }\n\n    start(subscriber: any, subscription: Disposable): Disposable {\n        const disposable = {\n            dispose: () => this.stop(subscriber)\n        };\n\n        if (this.isSubscribed(subscriber)) return disposable;\n\n        this._subscriptions.set(subscriber, subscription);\n\n        this._count++;\n        if (this._count === 1) {\n            super.start();\n\n            this._disposable = Disposable.from(\n                this._disposable!,\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this),\n                Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n            );\n        }\n\n        return disposable;\n    }\n\n    stop(subscriber: any) {\n        const subscription = this._subscriptions.get(subscriber);\n        if (subscription === undefined) return;\n\n        this._subscriptions.delete(subscriber);\n        subscription.dispose();\n\n        if (this._disposable === undefined) {\n            this._count = 0;\n            return;\n        }\n\n        this._count--;\n        if (this._count === 0) {\n            super.stop();\n        }\n    }\n\n    private async updateState(lines: number[], editor: TextEditor): Promise<boolean> {\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (lines.length === 1) {\n            const blameLine = editor.document.isDirty\n                ? await Container.git.getBlameForLineContents(trackedDocument.uri, lines[0], editor.document.getText())\n                : await Container.git.getBlameForLine(trackedDocument.uri, lines[0]);\n            if (blameLine === undefined) return false;\n\n            this.setState(blameLine.line.line, new GitLineState(blameLine.commit));\n        }\n        else {\n            const blame = editor.document.isDirty\n                ? await Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText())\n                : await Container.git.getBlameForFile(trackedDocument.uri);\n            if (blame === undefined) return false;\n\n            for (const line of lines) {\n                const commitLine = blame.lines[line];\n                this.setState(line, new GitLineState(blame.commits.get(commitLine.sha)!));\n            }\n        }\n\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n\n        return true;\n    }\n}\n","'use strict';\nimport { Command, Disposable, Event, TreeItem, TreeItemCollapsibleState, TreeViewVisibilityChangeEvent } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, gate, logName } from '../../system';\nimport { RefreshReason, TreeViewNodeStateChangeEvent, View } from '../viewBase';\n\nexport enum ResourceType {\n    ActiveFileHistory = 'gitlens:history:active:file',\n    ActiveLineHistory = 'gitlens:history:active:line',\n    Branch = 'gitlens:branch',\n    Branches = 'gitlens:branches',\n    BranchesWithRemotes = 'gitlens:branches:remotes',\n    BranchStatusAheadOfUpstream = 'gitlens:branch-status:upstream:ahead',\n    BranchStatusBehindUpstream = 'gitlens:branch-status:upstream:behind',\n    BranchWithTracking = 'gitlens:branch:tracking',\n    CurrentBranch = 'gitlens:branch:current',\n    CurrentBranchWithTracking = 'gitlens:branch:current:tracking',\n    RemoteBranch = 'gitlens:branch:remote',\n    Commit = 'gitlens:commit',\n    CommitOnCurrentBranch = 'gitlens:commit:current',\n    CommitFile = 'gitlens:file:commit',\n    Commits = 'gitlens:commits',\n    Compare = 'gitlens:compare',\n    ComparePicker = 'gitlens:compare:picker',\n    ComparePickerWithRef = 'gitlens:compare:picker:ref',\n    CompareResults = 'gitlens:compare:results',\n    FileHistory = 'gitlens:history:file',\n    FileStaged = 'gitlens:file:staged',\n    FileStagedAndUnstaged = 'gitlens:file:staged:unstaged',\n    FileUnstaged = 'gitlens:file:unstaged',\n    Folder = 'gitlens:folder',\n    LineHistory = 'gitlens:history:line',\n    Message = 'gitlens:message',\n    Pager = 'gitlens:pager',\n    Remote = 'gitlens:remote',\n    Remotes = 'gitlens:remotes',\n    Repositories = 'gitlens:repositories',\n    Repository = 'gitlens:repository',\n    ResultsCommits = 'gitlens:results:commits',\n    ResultsFile = 'gitlens:file:results',\n    ResultsFiles = 'gitlens:results:files',\n    Search = 'gitlens:search',\n    SearchResults = 'gitlens:search:results',\n    Stash = 'gitlens:stash',\n    StashFile = 'gitlens:file:stash',\n    Stashes = 'gitlens:stashes',\n    StatusFileCommits = 'gitlens:status:file:commits',\n    StatusFiles = 'gitlens:status:files',\n    StatusAheadOfUpstream = 'gitlens:status:upstream:ahead',\n    StatusBehindUpstream = 'gitlens:status:upstream:behind',\n    Tag = 'gitlens:tag',\n    Tags = 'gitlens:tags'\n}\n\nexport interface NamedRef {\n    label?: string;\n    ref: string;\n}\n\nexport const unknownGitUri = new GitUri();\n\nexport interface ViewNode {\n    readonly id?: string;\n}\n\n@logName<ViewNode>((c, name) => `${name}${c.id ? `(${c.id})` : ''}`)\nexport abstract class ViewNode<TView extends View = View> {\n    constructor(\n        uri: GitUri,\n        public readonly view: TView,\n        protected readonly parent?: ViewNode\n    ) {\n        this._uri = uri;\n    }\n\n    toString() {\n        return `${Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ''}`;\n    }\n\n    protected _uri: GitUri;\n    get uri() {\n        return this._uri;\n    }\n\n    abstract getChildren(): ViewNode[] | Promise<ViewNode[]>;\n\n    getParent(): ViewNode | undefined {\n        return this.parent;\n    }\n\n    abstract getTreeItem(): TreeItem | Promise<TreeItem>;\n\n    getCommand(): Command | undefined {\n        return undefined;\n    }\n\n    @gate()\n    @debug()\n    refresh(reason?: RefreshReason): void | boolean | Promise<void> | Promise<boolean> {}\n\n    @gate()\n    @debug()\n    triggerChange(): Promise<void> {\n        return this.view.refreshNode(this);\n    }\n}\n\nexport abstract class ViewRefNode<TView extends View = View> extends ViewNode<TView> {\n    abstract get ref(): string;\n\n    get repoPath(): string {\n        return this.uri.repoPath!;\n    }\n}\n\nexport interface PageableViewNode {\n    readonly supportsPaging: boolean;\n    maxCount: number | undefined;\n}\n\nexport function isPageable(\n    node: ViewNode\n): node is ViewNode & { supportsPaging: boolean; maxCount: number | undefined } {\n    return Boolean((node as any).supportsPaging);\n}\n\nexport function supportsAutoRefresh(\n    view: View\n): view is View & { autoRefresh: boolean; onDidChangeAutoRefresh: Event<void> } {\n    return (view as any).onDidChangeAutoRefresh !== undefined;\n}\n\nexport abstract class SubscribeableViewNode<TView extends View = View> extends ViewNode<TView> {\n    protected _disposable: Disposable;\n    protected _subscription: Promise<Disposable | undefined> | undefined;\n\n    constructor(uri: GitUri, view: TView, parent?: ViewNode) {\n        super(uri, view, parent);\n\n        const disposables = [\n            this.view.onDidChangeVisibility(this.onVisibilityChanged, this),\n            this.view.onDidChangeNodeState(this.onNodeStateChanged, this)\n        ];\n\n        if (supportsAutoRefresh(this.view)) {\n            disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));\n        }\n\n        this._disposable = Disposable.from(...disposables);\n    }\n\n    @debug()\n    dispose() {\n        void this.unsubscribe();\n\n        if (this._disposable !== undefined) {\n            this._disposable.dispose();\n        }\n    }\n\n    private _canSubscribe: boolean = true;\n    protected get canSubscribe(): boolean {\n        return this._canSubscribe;\n    }\n    protected set canSubscribe(value: boolean) {\n        if (this._canSubscribe === value) return;\n\n        this._canSubscribe = value;\n\n        void this.ensureSubscription();\n        if (value) {\n            void this.triggerChange();\n        }\n    }\n\n    protected abstract async subscribe(): Promise<Disposable | undefined>;\n\n    @debug()\n    protected async unsubscribe(): Promise<void> {\n        if (this._subscription !== undefined) {\n            const subscriptionPromise = this._subscription;\n            this._subscription = undefined;\n\n            const subscription = await subscriptionPromise;\n            if (subscription !== undefined) {\n                subscription.dispose();\n            }\n        }\n    }\n\n    @debug()\n    protected onAutoRefreshChanged() {\n        this.onVisibilityChanged({ visible: this.view.visible });\n    }\n\n    protected onParentStateChanged(state: TreeItemCollapsibleState) {}\n    protected onStateChanged(state: TreeItemCollapsibleState) {}\n\n    protected _state: TreeItemCollapsibleState | undefined;\n    protected onNodeStateChanged(e: TreeViewNodeStateChangeEvent<ViewNode>) {\n        if (e.element === this) {\n            this._state = e.state;\n            this.onStateChanged(e.state);\n        }\n        else if (e.element === this.parent) {\n            this.onParentStateChanged(e.state);\n        }\n    }\n\n    @debug()\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        void this.ensureSubscription();\n\n        if (e.visible) {\n            void this.triggerChange();\n        }\n    }\n\n    @debug()\n    async ensureSubscription() {\n        // We only need to subscribe if we are visible and if auto-refresh enabled (when supported)\n        if (!this.canSubscribe || !this.view.visible || (supportsAutoRefresh(this.view) && !this.view.autoRefresh)) {\n            await this.unsubscribe();\n\n            return;\n        }\n\n        // If we already have a subscription, just kick out\n        if (this._subscription !== undefined) return;\n\n        this._subscription = this.subscribe();\n        await this._subscription;\n    }\n}\n\nexport function canDismissNode(view: View): view is View & { dismissNode(node: ViewNode): void } {\n    return typeof (view as any).dismissNode === 'function';\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    CommitFormatter,\n    GitFile,\n    GitLogCommit,\n    GitUri,\n    ICommitFormatOptions,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport enum CommitFileNodeDisplayAs {\n    CommitLabel = 1 << 0,\n    FileLabel = 1 << 1,\n\n    CommitIcon = 1 << 2,\n    StatusIcon = 1 << 3,\n    Gravatar = 1 << 4,\n\n    File = FileLabel | StatusIcon\n}\n\nexport class CommitFileNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly file: GitFile,\n        public commit: GitLogCommit,\n        private readonly _displayAs: CommitFileNodeDisplayAs,\n        private readonly _selection?: Selection\n    ) {\n        super(GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        if (!this.commit.isFile) {\n            // See if we can get the commit directly from the multi-file commit\n            const commit = this.commit.toFileCommit(this.file);\n            if (commit === undefined) {\n                const log = await Container.git.getLogForFile(this.repoPath, this.file.fileName, {\n                    maxCount: 2,\n                    ref: this.commit.sha\n                });\n                if (log !== undefined) {\n                    this.commit = log.commits.get(this.commit.sha) || this.commit;\n                }\n            }\n            else {\n                this.commit = commit;\n            }\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = this.resourceType;\n        item.tooltip = this.tooltip;\n\n        if ((this._displayAs & CommitFileNodeDisplayAs.CommitIcon) === CommitFileNodeDisplayAs.CommitIcon) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', 'icon-commit.svg')),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', 'icon-commit.svg'))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.StatusIcon) === CommitFileNodeDisplayAs.StatusIcon) {\n            const icon = GitFile.getStatusIcon(this.file.status);\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.Gravatar) === CommitFileNodeDisplayAs.Gravatar) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        item.command = this.getCommand();\n\n        // Only cache the label/tooltip for a single refresh\n        this._label = undefined;\n        this._tooltip = undefined;\n\n        return item;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._tooltip = undefined;\n    }\n\n    protected get resourceType(): ResourceType {\n        if (!this.commit.isUncommitted) return ResourceType.CommitFile;\n\n        return this.commit.isStagedUncommitted ? ResourceType.FileStaged : ResourceType.FileUnstaged;\n    }\n\n    private _tooltip: string | undefined;\n    get tooltip() {\n        if (this._tooltip === undefined) {\n            if (this._displayAs & CommitFileNodeDisplayAs.CommitLabel) {\n                const status = StatusFileFormatter.fromTemplate('${status}', this.file);\n                this._tooltip = CommitFormatter.fromTemplate(\n                    this.commit.isUncommitted\n                        ? `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})`\n                        : `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n                    this.commit,\n                    {\n                        dateFormat: Container.config.defaultDateFormat\n                    } as ICommitFormatOptions\n                );\n            }\n            else {\n                this._tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n            }\n        }\n        return this._tooltip;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.commitFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.commitFileFormat;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.commit.repoPath),\n                {\n                    commit: this.commit,\n                    line: this._selection !== undefined ? this._selection.active.line : 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout, ViewsFilesConfig } from '../../configuration';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FileNode extends ViewNode {\n    folderName: string;\n    label?: string;\n    priority: number;\n    relativePath?: string;\n    root?: Arrays.IHierarchicalItem<FileNode>;\n}\n\nexport class FolderNode extends ViewNode {\n    readonly priority: number = 1;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly root: Arrays.IHierarchicalItem<FileNode>,\n        public readonly relativePath?: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<(FolderNode | FileNode)[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        let children: (FolderNode | FileNode)[];\n\n        const nesting = FolderNode.getFileNesting(\n            this.view.config.files,\n            this.root.descendants,\n            this.relativePath === undefined\n        );\n        if (nesting !== ViewFilesLayout.List) {\n            children = [];\n            for (const folder of Objects.values(this.root.children)) {\n                if (folder.value === undefined) {\n                    children.push(\n                        new FolderNode(this.view, this, this.repoPath, folder.name, folder, folder.relativePath)\n                    );\n                    continue;\n                }\n\n                folder.value.relativePath = this.root.relativePath;\n                children.push(folder.value);\n            }\n        }\n        else {\n            this.root.descendants.forEach(n => (n.relativePath = this.root.relativePath));\n            children = this.root.descendants;\n        }\n\n        children.sort((a, b) => {\n            return (\n                (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) ||\n                a.priority - b.priority ||\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        });\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        // TODO: Change this to expanded once https://github.com/Microsoft/vscode/issues/30918 is fixed\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n\n    static getFileNesting<T extends FileNode>(\n        config: ViewsFilesConfig,\n        children: T[],\n        isRoot: boolean\n    ): ViewFilesLayout {\n        const nesting = config.layout || ViewFilesLayout.Auto;\n        if (nesting === ViewFilesLayout.Auto) {\n            if (isRoot || config.compact) {\n                const nestingThreshold = config.threshold || 5;\n                if (children.length <= nestingThreshold) return ViewFilesLayout.List;\n            }\n            return ViewFilesLayout.Tree;\n        }\n        return nesting;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { ViewFilesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitBranch, GitLogCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class CommitNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitLogCommit,\n        public readonly branch?: GitBranch,\n        private readonly getBranchAndTagTips?: (sha: string) => string | undefined\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const commit = this.commit;\n        let children: FileNode[] = [\n            ...Iterables.map(\n                commit.files,\n                s => new CommitFileNode(this.view, this, s, commit.toFileCommit(s), CommitFileNodeDisplayAs.File)\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort((a, b) =>\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        let label = CommitFormatter.fromTemplate(this.view.config.commitFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        const branchAndTagTips = this.getBranchAndTagTips && this.getBranchAndTagTips(this.commit.sha);\n        if (branchAndTagTips !== undefined) {\n            label = `${GlyphChars.AngleBracketLeftHeavy}${GlyphChars.SpaceThin}${branchAndTagTips}${\n                GlyphChars.SpaceThin\n            }${GlyphChars.AngleBracketRightHeavy}${GlyphChars.ArrowHeadRight}${GlyphChars.Space} ${label}`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n\n        item.contextValue =\n            this.branch === undefined || this.branch.current ? ResourceType.CommitOnCurrentBranch : ResourceType.Commit;\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-commit.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-commit.svg')\n            };\n        }\n\n        item.tooltip = CommitFormatter.fromTemplate(\n            this.commit.isUncommitted\n                ? `\\${author} ${GlyphChars.Dash} \\${id}\\n\\${ago} (\\${date})`\n                : `\\${author} ${GlyphChars.Dash} \\${id}${\n                      branchAndTagTips !== undefined ? ` (${branchAndTagTips})` : ''\n                  }\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n            this.commit,\n            {\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions\n        );\n\n        if (!this.commit.isUncommitted) {\n            item.tooltip += this.commit.getFormattedDiffStatus({\n                expand: true,\n                prefix: '\\n\\n',\n                separator: '\\n'\n            });\n        }\n\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                this.uri,\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","import { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState, Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { View } from '../viewBase';\nimport { RefreshNodeCommandArgs } from '../viewCommands';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class MessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _message: string,\n        private readonly _tooltip?: string,\n        private readonly _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n}\n\nexport class CommandMessageNode extends MessageNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _command: Command,\n        message: string,\n        tooltip?: string,\n        iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(view, parent, message, tooltip, iconPath);\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = super.getTreeItem();\n        if (item instanceof TreeItem) {\n            item.command = this._command;\n            return item;\n        }\n\n        return item.then(i => {\n            i.command = this._command;\n            return i;\n        });\n    }\n}\n\nexport class UpdateableMessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly id: string,\n        private _message: string,\n        private _tooltip?: string,\n        private _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.id = this.id;\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n\n    update(\n        changes: {\n            message?: string;\n            tooltip?: string | null;\n            iconPath?:\n                | string\n                | null\n                | Uri\n                | {\n                      light: string | Uri;\n                      dark: string | Uri;\n                  }\n                | ThemeIcon;\n        },\n        view: View\n    ) {\n        if (changes.message !== undefined) {\n            this._message = changes.message;\n        }\n\n        if (changes.tooltip !== undefined) {\n            this._tooltip = changes.tooltip === null ? undefined : changes.tooltip;\n        }\n\n        if (changes.iconPath !== undefined) {\n            this._iconPath = changes.iconPath === null ? undefined : changes.iconPath;\n        }\n\n        view.triggerNodeChange(this);\n    }\n}\n\nexport abstract class PagerNode extends ViewNode {\n    protected _args: RefreshNodeCommandArgs = {};\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        protected readonly message: string\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this.message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Pager;\n        item.command = this.getCommand();\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-unfold.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-unfold.svg')\n        };\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Refresh',\n            command: 'gitlens.views.refreshNode',\n            arguments: [this.parent, this._args]\n        } as Command;\n    }\n}\n\nexport class ShowMoreNode extends PagerNode {\n    constructor(view: View, parent: ViewNode, type: string, maxCount: number = Container.config.advanced.maxListItems) {\n        super(\n            view,\n            parent,\n            maxCount === 0\n                ? `Show All ${type} ${GlyphChars.Space}${GlyphChars.Dash}${GlyphChars.Space} this may take a while`\n                : `Show More ${type}`\n        );\n        this._args.maxCount = maxCount;\n    }\n}\n","'use strict';\nimport { Container } from '../../container';\nimport { GitLogCommit } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { MessageNode } from './common';\nimport { ViewNode } from './viewNode';\n\nexport async function getBranchesAndTagTipsFn(repoPath: string | undefined, currentName?: string) {\n    const [branches, tags] = await Promise.all([\n        Container.git.getBranches(repoPath),\n        Container.git.getTags(repoPath, { includeRefs: true })\n    ]);\n\n    const branchesAndTagsBySha = Arrays.groupByFilterMap(\n        (branches as { name: string; sha: string }[]).concat(tags as { name: string; sha: string }[]),\n        bt => bt.sha!,\n        bt => (bt.name === currentName ? undefined : bt.name)\n    );\n\n    return (sha: string) => {\n        const branchesAndTags = branchesAndTagsBySha.get(sha);\n        if (branchesAndTags === undefined || branchesAndTags.length === 0) return undefined;\n        return branchesAndTags.join(', ');\n    };\n}\n\nconst markers: [number, string][] = [\n    [0, 'Less than a week ago'],\n    [7, 'Over a week ago'],\n    [30, 'Over a month ago'],\n    [90, 'Over 3 months ago']\n];\n\nexport function* insertDateMarkers<T extends ViewNode & { commit: GitLogCommit }>(\n    iterable: Iterable<T>,\n    parent: ViewNode,\n    skip?: number\n): Iterable<ViewNode> {\n    let index = skip || 0;\n    let time = undefined;\n    const now = Date.now();\n\n    let first = true;\n\n    for (const node of iterable) {\n        if (index < markers.length) {\n            let [daysAgo, marker] = markers[index];\n            if (time === undefined) {\n                const date = new Date(now);\n                time = date.setDate(date.getDate() - daysAgo);\n            }\n\n            const date = new Date(node.commit.committedDate.setUTCHours(0, 0, 0, 0)).getTime();\n            if (date <= time) {\n                while (index < markers.length - 1) {\n                    [daysAgo] = markers[index + 1];\n                    const nextDate = new Date(now);\n                    const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);\n\n                    if (date > nextTime) break;\n\n                    index++;\n                    time = undefined;\n                    [, marker] = markers[index];\n                }\n\n                // Don't show the last marker as the first entry -- since it could be wildly far off\n                if (!first || index < markers.length - 1) {\n                    yield new MessageNode(parent.view, parent, marker);\n                }\n\n                index++;\n                time = undefined;\n            }\n        }\n\n        first = false;\n        yield node;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitTrackingState, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface BranchTrackingStatus {\n    ref: string;\n    repoPath: string;\n    state: GitTrackingState;\n    upstream?: string;\n}\n\nexport class BranchTrackingStatusNode extends ViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly status: BranchTrackingStatus,\n        public readonly direction: 'ahead' | 'behind',\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.status.repoPath}):${this._root ? 'root:' : ''}branch(${\n            this.status.ref\n        }):status:upstream:(${this.status.upstream}):${this.direction}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const ahead = this.direction === 'ahead';\n        const range = ahead\n            ? `${this.status.upstream}..${this.status.ref}`\n            : `${this.status.ref}..${this.status.upstream}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [];\n\n        let children;\n        if (ahead) {\n            // Since the last commit when we are looking 'ahead' can have no previous (because of the range given) -- look it up\n            const commits = [...log.commits.values()];\n            const commit = commits[commits.length - 1];\n            if (commit.previousSha === undefined) {\n                const previousLog = await Container.git.getLog(this.uri.repoPath!, { maxCount: 2, ref: commit.sha });\n                if (previousLog !== undefined) {\n                    commits[commits.length - 1] = Iterables.first(previousLog.commits.values());\n                }\n            }\n\n            children = [...insertDateMarkers(Iterables.map(commits, c => new CommitNode(this.view, this, c)), this, 1)];\n        }\n        else {\n            children = [\n                ...insertDateMarkers(\n                    Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c)),\n                    this,\n                    1\n                )\n            ];\n        }\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const ahead = this.direction === 'ahead';\n        const label = ahead\n            ? `${Strings.pluralize('commit', this.status.state.ahead)} ahead`\n            : `${Strings.pluralize('commit', this.status.state.behind)} behind`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        if (this._root) {\n            item.contextValue = ahead ? ResourceType.StatusAheadOfUpstream : ResourceType.StatusBehindUpstream;\n        }\n        else {\n            item.contextValue = ahead\n                ? ResourceType.BranchStatusAheadOfUpstream\n                : ResourceType.BranchStatusBehindUpstream;\n        }\n        item.tooltip = `${label}${ahead ? ' of ' : ''}${this.status.upstream}`;\n\n        const iconSuffix = ahead ? 'upload' : 'download';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitBranch, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class BranchNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly branch: GitBranch,\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.branch.repoPath}):${this._root ? 'root:' : ''}branch(${this.branch.name})${\n            this.branch.remote ? ':remote' : ''\n        }`;\n    }\n\n    get current(): boolean {\n        return this.branch.current;\n    }\n\n    get label(): string {\n        const branchName = this.branch.getName();\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchName;\n\n        return this.current || GitBranch.isDetached(branchName) ? branchName : this.branch.getBasename();\n    }\n\n    get ref(): string {\n        return this.branch.ref;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n            if (!this._root && this.branch.tracking) {\n                const status = {\n                    ref: this.branch.ref,\n                    repoPath: this.branch.repoPath,\n                    state: this.branch.state,\n                    upstream: this.branch.tracking\n                };\n\n                if (this.branch.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind'));\n                }\n\n                if (this.branch.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead'));\n                }\n            }\n\n            const log = await Container.git.getLog(this.uri.repoPath!, {\n                maxCount: this.maxCount || this.view.config.defaultItemLimit,\n                ref: this.ref\n            });\n            if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n            const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.branch.name);\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitNode(this.view, this, c, this.branch, getBranchAndTagTips)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits'));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let name = this.label;\n        let tooltip = `${this.branch.getName()}${this.current ? ' (current)' : ''}`;\n        let iconSuffix = '';\n\n        if (!this.branch.remote && this.branch.tracking !== undefined) {\n            if (this.view.config.showTrackingBranch) {\n                name += `${this.branch.getTrackingStatus({ prefix: `${GlyphChars.Space} ` })}${GlyphChars.Space} ${\n                    GlyphChars.ArrowLeftRightLong\n                }${GlyphChars.Space} ${this.branch.tracking}`;\n            }\n            tooltip += ` is tracking ${this.branch.tracking}\\n${this.branch.getTrackingStatus({\n                empty: 'up-to-date',\n                expand: true,\n                separator: '\\n'\n            })}`;\n\n            if (this.branch.state.ahead || this.branch.state.behind) {\n                if (this.branch.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (this.branch.state.ahead) {\n                    iconSuffix = this.branch.state.behind ? '-yellow' : '-green';\n                }\n            }\n        }\n\n        const item = new TreeItem(\n            // Hide the current branch checkmark when the node is displayed as a root under the repository node\n            `${!this._root && this.current ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        if (this.branch.remote) {\n            item.contextValue = ResourceType.RemoteBranch;\n        }\n        else if (this.current) {\n            item.contextValue = this.branch.tracking\n                ? ResourceType.CurrentBranchWithTracking\n                : ResourceType.CurrentBranch;\n        }\n        else {\n            item.contextValue = this.branch.tracking ? ResourceType.BranchWithTracking : ResourceType.Branch;\n        }\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { BranchNode } from './branchNode';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nconst set = new Set();\n\nexport class BranchOrTagFolderNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly type: 'branch' | 'remote-branch' | 'tag',\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly relativePath: string | undefined,\n        public readonly root: Arrays.IHierarchicalItem<BranchNode | TagNode>,\n        private readonly _expanded: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repoPath}):${this.type}-folder(${this.relativePath})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        const children: (BranchOrTagFolderNode | BranchNode | TagNode)[] = [];\n\n        for (const folder of Objects.values(this.root.children)) {\n            if (folder.value === undefined) {\n                // If the folder contains the current branch, expand it by default\n                const expanded =\n                    folder.descendants !== undefined &&\n                    folder.descendants.some(n => n instanceof BranchNode && n.current);\n                children.push(\n                    new BranchOrTagFolderNode(\n                        this.view,\n                        this,\n                        this.type,\n                        this.repoPath,\n                        folder.name,\n                        folder.relativePath,\n                        folder,\n                        expanded\n                    )\n                );\n                continue;\n            }\n\n            children.push(folder.value);\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(\n            this.label,\n            this._expanded ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchesNode extends ViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):branches`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const branches = await this.repo.getBranches();\n            if (branches === undefined) return [];\n\n            branches.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n\n            // filter local branches\n            const branchNodes = [\n                ...Iterables.filterMap(branches, b =>\n                    b.remote ? undefined : new BranchNode(this.uri, this.view, this, b)\n                )\n            ];\n            if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n            const hierarchy = Arrays.makeHierarchical(\n                branchNodes,\n                n => (n.branch.detached ? [n.branch.name] : n.branch.getName().split('/')),\n                (...paths: string[]) => paths.join('/'),\n                this.view.config.files.compact\n            );\n\n            const root = new BranchOrTagFolderNode(this.view, this, 'branch', this.repo.path, '', undefined, hierarchy);\n            this._children = await root.getChildren();\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const remotes = await this.repo.getRemotes();\n\n        const item = new TreeItem(`Branches`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue =\n            remotes !== undefined && remotes.length > 0 ? ResourceType.BranchesWithRemotes : ResourceType.Branches;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-branch.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-branch.svg')\n        };\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport {\n    GitCommitType,\n    GitLogCommit,\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class FileHistoryNode extends SubscribeableViewNode {\n    constructor(uri: GitUri, view: View, parent: ViewNode) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        if (this.uri.sha === undefined) {\n            const status = await Container.git.getStatusForFile(this.uri.repoPath!, this.uri.fsPath);\n            if (status !== undefined && (status.indexStatus !== undefined || status.workingTreeStatus !== undefined)) {\n                let sha;\n                let previousSha;\n                if (status.workingTreeStatus !== undefined) {\n                    sha = GitService.uncommittedSha;\n                    if (status.indexStatus !== undefined) {\n                        previousSha = GitService.stagedUncommittedSha;\n                    }\n                    else if (status.workingTreeStatus !== '?') {\n                        previousSha = 'HEAD';\n                    }\n                }\n                else {\n                    sha = GitService.stagedUncommittedSha;\n                    previousSha = 'HEAD';\n                }\n\n                const user = await Container.git.getCurrentUser(this.uri.repoPath!);\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    sha,\n                    'You',\n                    user !== undefined ? user.email : undefined,\n                    new Date(),\n                    new Date(),\n                    '',\n                    status.fileName,\n                    [status],\n                    status.status,\n                    status.originalFileName,\n                    previousSha,\n                    status.originalFileName || status.fileName\n                );\n                children.push(new CommitFileNode(this.view, this, status, commit, displayAs));\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs)\n                    ),\n                    this\n                )\n            );\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No file history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.uri.getFormattedPath({\n                suffix: `${\n                    this.uri.sha\n                        ? ` ${\n                              this.uri.sha === GitService.deletedOrMissingSha\n                                  ? this.uri.shortSha\n                                  : `(${this.uri.shortSha})`\n                          }`\n                        : ''\n                }`\n            })}`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.FileHistory;\n        item.tooltip = `History of ${this.uri.getFilename()}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`FileHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(\n            `FileHistoryNode${this.id}.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`\n        );\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport {\n    CancellationTokenSource,\n    commands,\n    QuickPickItem,\n    QuickPickOptions,\n    TextDocumentShowOptions,\n    TextEditor,\n    Uri,\n    window\n} from 'vscode';\nimport { Commands, openEditor } from '../commands';\nimport { configuration } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitRepoSearchBy, GitStashCommit, GitUri } from '../git/gitService';\nimport { KeyMapping, Keys } from '../keyboard';\nimport { Functions, Strings } from '../system';\nimport {\n    BranchesAndTagsQuickPick,\n    BranchQuickPickItem,\n    RefQuickPickItem,\n    TagQuickPickItem\n} from './branchesAndTagsQuickPick';\n\nexport function getQuickPickIgnoreFocusOut() {\n    return !configuration.get<boolean>(configuration.name('advanced')('quickPick')('closeOnFocusOut').value);\n}\n\nexport function showQuickPickProgress(message: string, mapping?: KeyMapping): CancellationTokenSource {\n    const cancellation = new CancellationTokenSource();\n    void _showQuickPickProgress(message, cancellation, mapping);\n    return cancellation;\n}\n\nasync function _showQuickPickProgress(message: string, cancellation: CancellationTokenSource, mapping?: KeyMapping) {\n    const scope = mapping && (await Container.keyboard.beginScope(mapping));\n\n    try {\n        await window.showQuickPick(\n            _getInfiniteCancellablePromise(cancellation),\n            {\n                placeHolder: message,\n                ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            } as QuickPickOptions,\n            cancellation.token\n        );\n    }\n    catch (ex) {\n        // Not sure why this throws\n    }\n    finally {\n        cancellation.cancel();\n        scope && scope.dispose();\n    }\n}\n\nfunction _getInfiniteCancellablePromise(cancellation: CancellationTokenSource) {\n    return new Promise<QuickPickItem[]>((resolve, reject) => {\n        const disposable = cancellation.token.onCancellationRequested(() => {\n            disposable.dispose();\n            resolve([]);\n        });\n    });\n}\n\nexport interface QuickPickItem extends QuickPickItem {\n    onDidSelect?(): void;\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nexport class CommandQuickPickItem implements QuickPickItem {\n    label!: string;\n    description!: string;\n    detail?: string | undefined;\n    protected command: Commands | undefined;\n    protected args: any[] | undefined;\n\n    constructor(item: QuickPickItem, args?: [Commands, any[]]);\n    constructor(item: QuickPickItem, command?: Commands, args?: any[]);\n    constructor(item: QuickPickItem, commandOrArgs?: Commands | [Commands, any[]], args?: any[]) {\n        if (commandOrArgs === undefined) {\n            this.command = undefined;\n            this.args = args;\n        }\n        else if (typeof commandOrArgs === 'string') {\n            this.command = commandOrArgs;\n            this.args = args;\n        }\n        else {\n            this.command = commandOrArgs[0];\n            this.args = commandOrArgs.slice(1);\n        }\n        Object.assign(this, item);\n    }\n\n    execute(): Promise<{} | undefined> {\n        if (this.command === undefined) return Promise.resolve(undefined);\n\n        return commands.executeCommand(this.command, ...(this.args || [])) as Promise<{} | undefined>;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute();\n    }\n}\n\nexport class CommitQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string;\n\n    constructor(\n        public readonly commit: GitLogCommit\n    ) {\n        const message = commit.getShortMessage();\n        if (commit.isStash) {\n            this.label = message;\n            this.description = '';\n            this.detail = `${GlyphChars.Space} ${(commit as GitStashCommit).stashName || commit.shortSha} ${Strings.pad(\n                GlyphChars.Dot,\n                1,\n                1\n            )} ${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({\n                compact: true\n            })}`;\n        }\n        else {\n            this.label = message;\n            this.description = `${Strings.pad('$(git-commit)', 1, 1)} ${commit.shortSha}`;\n            this.detail = `${GlyphChars.Space} ${commit.author}, ${commit.formattedDate}${\n                commit.isFile\n                    ? ''\n                    : ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({ compact: true })}`\n            }`;\n        }\n    }\n}\n\nexport class ChooseFromBranchesAndTagsQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly repoPath: string,\n        private readonly placeHolder: string,\n        private readonly _goBack?: CommandQuickPickItem,\n        item: QuickPickItem = {\n            label: 'Choose from Branch or Tag History...',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} shows list of branches and tags`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    execute(): Promise<CommandQuickPickItem | BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem | undefined> {\n        return new BranchesAndTagsQuickPick(this.repoPath).show(this.placeHolder, {\n            allowCommitId: true,\n            goBack: this._goBack\n        });\n    }\n}\n\nexport class KeyCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(command: Commands, args?: any[]) {\n        super({ label: '', description: '' } as QuickPickItem, command, args);\n    }\n}\n\nexport class MessageQuickPickItem extends CommandQuickPickItem {\n    constructor(message: string) {\n        super({ label: message, description: '' } as QuickPickItem);\n    }\n}\n\nexport class OpenFileCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: Uri,\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(options?: TextDocumentShowOptions): Promise<TextEditor | undefined> {\n        return openEditor(this.uri, options);\n    }\n\n    // onDidSelect(): Promise<{} | undefined> {\n    //     return this.execute({\n    //         preserveFocus: true,\n    //         preview: true\n    //     });\n    // }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uris: Uri[],\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        for (const uri of this.uris) {\n            await openEditor(uri, options);\n        }\n        return undefined;\n    }\n\n    async onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class ShowCommitInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly commit: GitLogCommit,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} displays the commit in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.search(this.commit.repoPath, this.commit.sha, GitRepoSearchBy.Sha, {\n            label: { label: `commits with an id matching '${this.commit.shortSha}'` }\n        });\n        return undefined;\n    }\n}\n\nexport class ShowCommitSearchResultsInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly results: GitLog,\n        public readonly resultsLabel: string | { label: string; resultsType?: { singular: string; plural: string } },\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the search results in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.showSearchResults(this.results.repoPath, this.results, { label: this.resultsLabel });\n        return undefined;\n    }\n}\n\nexport class ShowFileHistoryInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: GitUri,\n        public readonly baseRef: string | undefined,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the file history in the GitLens File History view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.fileHistoryView.showHistoryForUri(this.uri, this.baseRef);\n        return undefined;\n    }\n}\n","'use strict';\nimport { CancellationToken, CancellationTokenSource, QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitService, GitTag } from '../git/gitService';\nimport { Functions } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RefQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly ref: string,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${GitService.shortenSha(\n            ref\n        )}`;\n        this.description = '';\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return undefined;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport class BranchQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly branch: GitBranch,\n        checked?: boolean\n    ) {\n        checked = checked || (checked === undefined && branch.current);\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${branch.name}`;\n        this.description = branch.remote\n            ? `${GlyphChars.Space.repeat(2)} remote branch`\n            : branch.current\n            ? 'current branch'\n            : '';\n    }\n\n    get current() {\n        return this.branch.current;\n    }\n\n    get item() {\n        return this.branch;\n    }\n\n    get ref() {\n        return this.branch.name;\n    }\n\n    get remote() {\n        return this.branch.remote;\n    }\n}\n\nexport class TagQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly tag: GitBranch | GitTag,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${tag.name}`;\n        this.description = `${GlyphChars.Space.repeat(2)} tag`;\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return this.tag;\n    }\n\n    get ref() {\n        return this.tag.name;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport type BranchAndTagQuickPickResult = BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem;\n\nexport interface BranchesAndTagsQuickPickOptions {\n    allowCommitId?: boolean;\n    autoPick?: boolean;\n    checked?: string;\n    filters?: {\n        branches?(branch: GitBranch): boolean;\n        tags?(tag: GitTag): boolean;\n    };\n    goBack?: CommandQuickPickItem;\n    include?: 'branches' | 'tags' | 'all';\n}\n\nexport class BranchesAndTagsQuickPick {\n    constructor(\n        public readonly repoPath: string\n    ) {}\n\n    async show(\n        placeHolder: string,\n        options: BranchesAndTagsQuickPickOptions = {}\n    ): Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined> {\n        const cancellation = new CancellationTokenSource();\n\n        let scope;\n        if (options.goBack) {\n            scope = await Container.keyboard.beginScope({ left: options.goBack });\n        }\n\n        let autoPick;\n        try {\n            let items = this.getItems(options, cancellation.token);\n            if (options.autoPick) {\n                items = items.then(itms => {\n                    if (itms.length <= 1) {\n                        autoPick = itms[0];\n                        cancellation.cancel();\n                    }\n                    return itms;\n                });\n            }\n\n            let pick;\n            if (options.allowCommitId) {\n                placeHolder += `${GlyphChars.Space.repeat(3)}(use # to enter a commit id)`;\n\n                const quickpick = window.createQuickPick<BranchAndTagQuickPickResult | CommandQuickPickItem>();\n                quickpick.busy = true;\n                quickpick.enabled = false;\n                quickpick.placeholder = placeHolder;\n                quickpick.ignoreFocusOut = getQuickPickIgnoreFocusOut();\n                quickpick.show();\n\n                quickpick.items = await items;\n                quickpick.busy = false;\n                quickpick.enabled = true;\n\n                pick = await new Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined>(resolve => {\n                    cancellation.token.onCancellationRequested(() => quickpick.hide());\n\n                    quickpick.onDidHide(() => resolve(undefined));\n                    quickpick.onDidChangeValue(value => {\n                        quickpick.title =\n                            value && value.startsWith('#')\n                                ? `Please enter a commit id (Press 'Enter' to confirm or 'Escape' to cancel)`\n                                : undefined;\n                    });\n                    quickpick.onDidAccept(async () => {\n                        if (quickpick.selectedItems.length === 0) {\n                            let ref = quickpick.value;\n                            if (!ref || !ref.startsWith('#')) return;\n\n                            ref = ref.substr(1);\n\n                            quickpick.busy = true;\n                            quickpick.enabled = false;\n\n                            if (await Container.git.validateReference(this.repoPath, ref)) {\n                                resolve(new RefQuickPickItem(ref));\n                            }\n                            else {\n                                quickpick.title = 'You must enter a valid commit id';\n                                quickpick.busy = false;\n                                quickpick.enabled = true;\n                                return;\n                            }\n                        }\n                        else {\n                            resolve(quickpick.selectedItems[0]);\n                        }\n\n                        quickpick.hide();\n                    });\n                });\n\n                quickpick.dispose();\n            }\n            else {\n                pick = await window.showQuickPick(\n                    items,\n                    {\n                        placeHolder: placeHolder,\n                        ignoreFocusOut: getQuickPickIgnoreFocusOut()\n                    } as QuickPickOptions,\n                    cancellation.token\n                );\n            }\n\n            if (pick === undefined && autoPick !== undefined) {\n                pick = autoPick;\n            }\n\n            if (pick === undefined) {\n                cancellation.cancel();\n            }\n\n            return pick;\n        }\n        finally {\n            if (scope !== undefined) {\n                await scope.dispose();\n            }\n\n            cancellation.dispose();\n        }\n    }\n\n    private async getItems(options: BranchesAndTagsQuickPickOptions, token: CancellationToken) {\n        const { checked, filters, goBack, include } = { include: 'all', ...options };\n\n        let branches;\n        let tags;\n        switch (include) {\n            case 'branches': {\n                const result = await Functions.cancellable(Container.git.getBranches(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                branches = result;\n                break;\n            }\n            case 'tags': {\n                const result = await Functions.cancellable(Container.git.getTags(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                tags = result;\n                break;\n            }\n            default: {\n                const result = await Functions.cancellable(\n                    Promise.all([Container.git.getBranches(this.repoPath), Container.git.getTags(this.repoPath)]),\n                    token\n                );\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                [branches, tags] = result;\n                break;\n            }\n        }\n\n        const items: (BranchQuickPickItem | TagQuickPickItem | CommandQuickPickItem)[] = [];\n\n        if (branches !== undefined) {\n            const filter =\n                filters !== undefined && typeof filters.branches === 'function' ? filters.branches : undefined;\n\n            branches.sort(\n                (a, b) =>\n                    (b.remote ? -1 : 1) - (a.remote ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n            for (const b of branches) {\n                if (filter !== undefined && !filter(b)) continue;\n\n                items.push(new BranchQuickPickItem(b, checked !== undefined ? b.name === checked : undefined));\n            }\n        }\n\n        if (tags !== undefined) {\n            const filter = filters !== undefined && typeof filters.tags === 'function' ? filters.tags : undefined;\n\n            tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n            for (const t of tags) {\n                if (filter !== undefined && !filter(t)) continue;\n\n                items.push(new TagQuickPickItem(t, checked !== undefined ? t.name === checked : undefined));\n            }\n        }\n\n        if (goBack !== undefined) {\n            items.splice(0, 0, goBack);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickOptions, window } from 'vscode';\nimport { Commands, OpenInRemoteCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport {\n    getNameFromRemoteResource,\n    GitLogCommit,\n    GitRemote,\n    GitService,\n    RemoteResource,\n    RemoteResourceType\n} from '../git/gitService';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class OpenRemoteCommandQuickPickItem extends CommandQuickPickItem {\n    private remote: GitRemote;\n    private resource: RemoteResource;\n\n    constructor(\n        remote: GitRemote,\n        resource: RemoteResource,\n        public readonly clipboard?: boolean\n    ) {\n        super(\n            {\n                label: clipboard\n                    ? `$(link-external) Copy ${getNameFromRemoteResource(resource)} Url to Clipboard from ${\n                          remote.provider!.name\n                      }`\n                    : `$(link-external) Open ${getNameFromRemoteResource(resource)} on ${remote.provider!.name}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path}`\n            },\n            undefined,\n            undefined\n        );\n\n        this.remote = remote;\n        this.resource = resource;\n    }\n\n    async execute(): Promise<{} | undefined> {\n        if (this.clipboard) return this.remote.provider!.copy(this.resource);\n\n        return this.remote.provider!.open(this.resource);\n    }\n}\n\nexport class OpenRemotesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(remotes: GitRemote[], resource: RemoteResource, goBackCommand?: CommandQuickPickItem) {\n        const name = getNameFromRemoteResource(resource);\n\n        let description = '';\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                description = `$(git-branch) ${resource.branch}`;\n                break;\n\n            case RemoteResourceType.Branches:\n                description = `$(git-branch) Branches`;\n                break;\n\n            case RemoteResourceType.Commit:\n                const shortSha = GitService.shortenSha(resource.sha);\n                description = `$(git-commit) ${shortSha}`;\n                break;\n\n            case RemoteResourceType.File:\n                description = `$(file-text) ${paths.basename(resource.fileName)}`;\n                break;\n\n            case RemoteResourceType.Repo:\n                description = `$(repo) Repository`;\n                break;\n\n            case RemoteResourceType.Revision:\n                if (resource.commit !== undefined && resource.commit instanceof GitLogCommit) {\n                    if (resource.commit.status === 'D') {\n                        resource.sha = resource.commit.previousSha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.previousShortSha} (deleted in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha})`;\n                    }\n                    else {\n                        resource.sha = resource.commit.sha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha}`;\n                    }\n                }\n                else {\n                    const shortFileSha = resource.sha === undefined ? '' : GitService.shortenSha(resource.sha);\n                    description = `$(file-text) ${paths.basename(resource.fileName)}${\n                        shortFileSha ? ` in ${GlyphChars.Space}$(git-commit) ${shortFileSha}` : ''\n                    }`;\n                }\n                break;\n        }\n\n        const remote = remotes[0];\n        if (remotes.length === 1) {\n            super(\n                {\n                    label: `$(link-external) Open ${name} on ${remote.provider!.name}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path} ${Strings.pad(\n                        GlyphChars.Dot,\n                        1,\n                        1\n                    )} ${description}`\n                },\n                Commands.OpenInRemote,\n                [\n                    undefined,\n                    {\n                        remotes,\n                        resource,\n                        goBackCommand\n                    } as OpenInRemoteCommandArgs\n                ]\n            );\n\n            return;\n        }\n\n        const provider = remotes.every(r => r.provider !== undefined && r.provider.name === remote.provider!.name)\n            ? remote.provider!.name\n            : 'Remote';\n\n        super(\n            {\n                label: `$(link-external) Open ${name} on ${provider}${GlyphChars.Ellipsis}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${description}`\n            },\n            Commands.OpenInRemote,\n            [\n                undefined,\n                {\n                    remotes,\n                    resource,\n                    goBackCommand\n                } as OpenInRemoteCommandArgs\n            ]\n        );\n    }\n}\n\nexport class RemotesQuickPick {\n    static async show(\n        remotes: GitRemote[],\n        placeHolder: string,\n        resource: RemoteResource,\n        clipboard?: boolean,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<OpenRemoteCommandQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = remotes.map(r => new OpenRemoteCommandQuickPickItem(r, resource, clipboard)) as (\n            | OpenRemoteCommandQuickPickItem\n            | CommandQuickPickItem)[];\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n        if (pick === undefined) return undefined;\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, ShowQuickBranchHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class BranchHistoryQuickPick {\n    static showProgress(branch: string) {\n        return showQuickPickProgress(\n            `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            {\n                left: KeyNoopCommand,\n                ',': KeyNoopCommand,\n                '.': KeyNoopCommand\n            }\n        );\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri | undefined,\n        branch: string,\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        nextPageCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${\n                    GlyphChars.Space\n                }$(git-branch) ${branch} history`\n            },\n            Commands.ShowQuickBranchHistory,\n            [\n                uri,\n                {\n                    branch,\n                    log,\n                    maxCount: log.maxCount,\n                    goBackCommand\n                } as ShowQuickBranchHistoryCommandArgs\n            ]\n        );\n\n        const remotes = await Container.git.getRemotes((uri && uri.repoPath) || log.repoPath);\n        if (remotes.length) {\n            items.splice(\n                0,\n                0,\n                new OpenRemotesCommandQuickPickItem(\n                    remotes,\n                    {\n                        type: 'branch',\n                        branch\n                    } as RemoteResource,\n                    currentCommand\n                )\n            );\n        }\n\n        let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n        if (log.truncated || log.sha) {\n            if (log.truncated) {\n                items.splice(\n                    0,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `$(sync) Show All Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            GitUri.fromRepoPath(log.repoPath),\n                            {\n                                branch,\n                                maxCount: 0,\n                                goBackCommand\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    )\n                );\n            }\n\n            if (nextPageCommand) {\n                items.splice(0, 0, nextPageCommand);\n            }\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        uri,\n                        {\n                            branch,\n                            maxCount: log.maxCount,\n                            nextPageCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            new GitUri(uri ? uri : last.uri, last),\n                            {\n                                branch,\n                                maxCount: log.maxCount,\n                                goBackCommand,\n                                nextPageCommand: npc\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    );\n\n                    items.splice(0, 0, previousPageCommand);\n                }\n            }\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousPageCommand,\n            '.': nextPageCommand\n        });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickItem, QuickPickOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class ApplyCommitFileChangesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly commit: GitLogCommit,\n        item?: QuickPickItem\n    ) {\n        super(\n            item || {\n                label: `$(git-pull-request) Apply Changes`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(file-text) ${paths.basename(\n                    commit.fileName\n                )} in ${GlyphChars.Space}$(git-commit) ${commit.shortSha}`\n            },\n            undefined,\n            undefined\n        );\n    }\n\n    async execute(): Promise<{} | undefined> {\n        const uri = this.commit.toGitUri();\n        void (await openEditor(uri, { preserveFocus: true, preview: false }));\n\n        void (await Container.git.applyChangesToWorkingFile(uri));\n\n        return undefined;\n    }\n}\n\nexport class OpenCommitFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uri = GitUri.resolveToUri(commit.fileName, commit.repoPath);\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open File`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)}`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        let description: string;\n        let uri: Uri;\n        if (commit.status === 'D') {\n            uri = GitUri.toRevisionUri(commit.previousFileSha, commit.previousUri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.previousShortSha} (deleted in ${GlyphChars.Space}$(git-commit) ${commit.shortSha})`;\n        }\n        else {\n            uri = GitUri.toRevisionUri(commit.sha, commit.uri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.shortSha}`;\n        }\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open Revision`,\n                description: description\n            }\n        );\n    }\n}\n\nexport class CommitFileQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        fileLog?: GitLog\n    ): Promise<CommandQuickPickItem | undefined> {\n        const items: CommandQuickPickItem[] = [];\n\n        const stash = commit.isStash;\n\n        const workingName =\n            (commit.workingFileName && paths.basename(commit.workingFileName)) || paths.basename(commit.fileName);\n\n        const isUncommitted = commit.isUncommitted;\n        if (isUncommitted) {\n            // Since we can't trust the previous sha on an uncommitted commit, find the last commit for this file\n            const c = await Container.git.getRecentLogCommitForFile(undefined, commit.uri.fsPath);\n            if (c === undefined) return undefined;\n\n            commit = c;\n        }\n\n        await commit.resolvePreviousFileSha();\n\n        if (stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n        }\n\n        if (commit.previousFileShortSha) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${\n                            commit.previousFileShortSha\n                        } ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.DiffWithPrevious,\n                    [\n                        commit.uri,\n                        {\n                            commit\n                        } as DiffWithPreviousCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes with Working File`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                            GlyphChars.Space\n                        } $(git-compare) ${GlyphChars.Space} $(file-text) ${workingName}`\n                    },\n                    Commands.DiffWithWorking,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            commit\n                        } as DiffWithWorkingCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName && commit.status !== 'D') {\n            items.push(new OpenCommitFileCommandQuickPickItem(commit));\n        }\n        items.push(new OpenCommitFileRevisionCommandQuickPickItem(commit));\n\n        const remotes = await Container.git.getRemotes(commit.repoPath);\n        if (remotes.length) {\n            if (commit.workingFileName && commit.status !== 'D') {\n                const branch = await Container.git.getBranch(commit.repoPath);\n                if (branch !== undefined) {\n                    items.push(\n                        new OpenRemotesCommandQuickPickItem(\n                            remotes,\n                            {\n                                type: 'file',\n                                fileName: commit.workingFileName,\n                                branch: branch.name\n                            } as RemoteResource,\n                            currentCommand\n                        )\n                    );\n                }\n            }\n\n            if (!stash) {\n                items.push(\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: 'revision',\n                            fileName: commit.fileName,\n                            commit\n                        } as RemoteResource,\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        if (!stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit Message to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.CopyMessageToClipboard,\n                    [\n                        uri,\n                        {\n                            message: commit.message,\n                            sha: commit.sha\n                        } as CopyMessageToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(commit.fileName)}`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            fileLog,\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (!stash) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show ${commit.workingFileName ? 'Previous ' : ''}File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                            commit.fileName\n                        )} ${Strings.pad(GlyphChars.Dot, 1, 1)} from ${GlyphChars.Space}$(git-commit) ${\n                            commit.shortSha\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        commit.toGitUri(),\n                        {\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-commit) Show Commit Details`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        commit.toGitUri(),\n                        {\n                            commit,\n                            sha: commit.sha,\n                            goBackCommand: currentCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.previousUri,\n                              {\n                                  fileLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.nextUri,\n                              {\n                                  fileLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLogForFile(commit.repoPath, uri.fsPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha,\n                            renames: true\n                        });\n                        if (log === undefined) return KeyNoopCommand;\n\n                        c = log && log.commits.get(commit.sha);\n                        // Since we exclude merge commits in file log, just grab the first returned commit\n                        if (c === undefined && commit.isMerge) {\n                            c = Iterables.first(log.commits.values());\n                        }\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                            c.nextFileName = commit.nextFileName;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.previousUri,\n                        {\n                            fileLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const next = await Container.git.findNextCommit(commit.repoPath, uri.fsPath, commit.sha);\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                            c.nextFileName = next.originalFileName || next.fileName;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.nextUri,\n                        {\n                            fileLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `${commit.getFormattedPath()} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                isUncommitted ? `Uncommitted ${GlyphChars.ArrowRightHollow} ` : ''\n            }${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.author}, ${\n                commit.formattedDate\n            } ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item as KeyCommand);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffDirectoryCommandArgs,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    StashApplyCommandArgs,\n    StashDeleteCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitFile,\n    GitFileStatus,\n    GitLog,\n    GitLogCommit,\n    GitStashCommit,\n    GitUri,\n    RemoteResource\n} from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand, Keys } from '../keyboard';\nimport { Arrays, Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem,\n    OpenFilesCommandQuickPickItem,\n    QuickPickItem,\n    ShowCommitInViewQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class CommitWithFileStatusQuickPickItem extends OpenFileCommandQuickPickItem {\n    readonly status: GitFileStatus;\n\n    readonly commit: GitLogCommit;\n\n    constructor(commit: GitLogCommit, file: GitFile) {\n        const octicon = GitFile.getStatusOcticon(file.status);\n        const description = GitFile.getFormattedDirectory(file, true);\n\n        super(GitUri.toRevisionUri(commit.sha, file, commit.repoPath), {\n            label: `${Strings.pad(octicon, 4, 2)} ${paths.basename(file.fileName)}`,\n            description: description\n        });\n\n        this.commit = commit.toFileCommit(file);\n        this.status = file.status;\n    }\n\n    get sha(): string {\n        return this.commit.sha;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        if (this.commit.previousSha === undefined) return super.onDidPressKey(key);\n\n        return commands.executeCommand(Commands.DiffWithPrevious, this.commit.toGitUri(), {\n            commit: this.commit,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenCommitFilesCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, versioned: boolean = false, item?: QuickPickItem) {\n        const repoPath = commit.repoPath;\n        const uris = Arrays.filterMap(commit.files, f => GitUri.fromFile(f, repoPath));\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Files`,\n                description: ''\n                // detail: `Opens all of the changed file in the working tree`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionsCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uris = Arrays.filterMap(commit.files, f =>\n            GitUri.toRevisionUri(f.status === 'D' ? commit.previousFileSha : commit.sha, f, commit.repoPath)\n        );\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Revisions`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} in ${GlyphChars.Space}$(git-commit) ${\n                    commit.shortSha\n                }`\n                // detail: `Opens all of the changed files in $(git-commit) ${commit.shortSha}`\n            }\n        );\n    }\n}\n\nexport class CommitQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        repoLog?: GitLog\n    ): Promise<CommitWithFileStatusQuickPickItem | CommandQuickPickItem | undefined> {\n        await commit.resolvePreviousFileSha();\n\n        const items: (CommitWithFileStatusQuickPickItem | CommandQuickPickItem)[] = commit.files.map(\n            fs => new CommitWithFileStatusQuickPickItem(commit, fs)\n        );\n\n        const stash = commit.isStash;\n\n        let index = 0;\n\n        if (stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-pull-request) Apply Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashApply,\n                    [\n                        {\n                            confirm: true,\n                            deleteAfter: false,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashApplyCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(x) Delete Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashDelete,\n                    [\n                        {\n                            confirm: true,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashDeleteCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n        }\n        else {\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n\n            const remotes = await Container.git.getRemotes(commit.repoPath);\n            if (remotes.length) {\n                items.splice(\n                    index++,\n                    0,\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: 'commit',\n                            sha: commit.sha\n                        } as RemoteResource,\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        items.splice(index++, 0, new OpenCommitFilesCommandQuickPickItem(commit));\n        items.splice(index++, 0, new OpenCommitFileRevisionsCommandQuickPickItem(commit));\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Previous Revision`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.previousFileShortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                },\n                Commands.DiffDirectory,\n                [\n                    commit.uri,\n                    {\n                        ref1: commit.previousFileSha,\n                        ref2: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Working Tree`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(file-directory) Working Tree`\n                },\n                Commands.DiffDirectory,\n                [\n                    uri,\n                    {\n                        ref1: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        if (!stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(clippy) Copy Commit Message to Clipboard`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                },\n                Commands.CopyMessageToClipboard,\n                [\n                    uri,\n                    {\n                        message: commit.message,\n                        sha: commit.sha\n                    } as CopyMessageToClipboardCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `Changed Files`,\n                    description: commit.getFormattedDiffStatus()\n                },\n                Commands.ShowQuickCommitDetails,\n                [\n                    uri,\n                    {\n                        commit,\n                        repoLog,\n                        sha: commit.sha,\n                        goBackCommand\n                    } as ShowQuickCommitDetailsCommandArgs\n                ]\n            )\n        );\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (repoLog !== undefined && !repoLog.truncated && repoLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.previousUri,\n                              {\n                                  repoLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.nextUri,\n                              {\n                                  repoLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLog(commit.repoPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha\n                        });\n                        c = log && log.commits.get(commit.sha);\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.previousUri,\n                        {\n                            repoLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const nextLog = await Container.git.getLog(commit.repoPath, {\n                            maxCount: 1,\n                            reverse: true,\n                            ref: commit.sha\n                        });\n                        const next = nextLog && Iterables.first(nextLog.commits.values());\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.nextUri,\n                        {\n                            repoLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                commit.author ? `${commit.author}, ` : ''\n            }${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n                if (typeof item.onDidSelect === 'function') {\n                    item.onDidSelect();\n                }\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitLog } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    MessageQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class CommitsQuickPick {\n    static showProgress(message: string) {\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog | undefined,\n        placeHolder: string,\n        progressCancellation: CancellationTokenSource,\n        options: {\n            goBackCommand?: CommandQuickPickItem;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        }\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((log && [...Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))]) || [\n            new MessageQuickPickItem('No results found')\n        ]) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (options.showInViewCommand !== undefined) {\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (options.showAllCommand !== undefined) {\n            items.splice(0, 0, options.showAllCommand);\n        }\n\n        if (options.goBackCommand !== undefined) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: options.goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { CancellationTokenSource, QuickPickOptions, Uri, window } from 'vscode';\nimport { Commands, ShowQuickCurrentBranchHistoryCommandArgs, ShowQuickFileHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class FileHistoryQuickPick {\n    static showProgress(placeHolder: string) {\n        return showQuickPickProgress(placeHolder, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri,\n        placeHolder: string,\n        options: {\n            currentCommand?: CommandQuickPickItem;\n            goBackCommand?: CommandQuickPickItem;\n            nextPageCommand?: CommandQuickPickItem;\n            previousPageCommand?: CommandQuickPickItem;\n            pickerOnly?: boolean;\n            progressCancellation?: CancellationTokenSource;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        } = {}\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        options = { pickerOnly: false, ...options };\n\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        let index = 0;\n\n        index++;\n        items.splice(\n            0,\n            0,\n            new ChooseFromBranchesAndTagsQuickPickItem(log.repoPath, placeHolder, options.currentCommand)\n        );\n\n        if (options.showInViewCommand !== undefined) {\n            index++;\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (log.truncated || log.sha) {\n            if (options.showAllCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.showAllCommand);\n            }\n            else if (!options.pickerOnly) {\n                const [workingFileName] = await Container.git.findWorkingFileName(\n                    paths.relative(log.repoPath, uri.fsPath),\n                    log.repoPath\n                );\n                if (workingFileName) {\n                    index++;\n                    items.splice(\n                        0,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show File History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                                    workingFileName\n                                )}`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [\n                                GitUri.resolveToUri(workingFileName, log.repoPath),\n                                {\n                                    goBackCommand: new CommandQuickPickItem(\n                                        {\n                                            label: `go back ${GlyphChars.ArrowBack}`,\n                                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                                                GlyphChars.Space\n                                            }$(file-text) ${paths.basename(uri.fsPath)}${\n                                                uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                                            }`\n                                        },\n                                        Commands.ShowQuickFileHistory,\n                                        [\n                                            uri,\n                                            {\n                                                log: log,\n                                                maxCount: log.maxCount,\n                                                range: log.range,\n                                                goBackCommand: options.goBackCommand\n                                            } as ShowQuickFileHistoryCommandArgs\n                                        ]\n                                    )\n                                } as ShowQuickFileHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n            }\n\n            if (options.nextPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.nextPageCommand);\n            }\n\n            if (options.previousPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.previousPageCommand);\n            }\n        }\n\n        if (!options.pickerOnly) {\n            const branch = await Container.git.getBranch(uri.repoPath!);\n\n            if (branch !== undefined) {\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${paths.basename(uri.fsPath)}${\n                            uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        uri,\n                        {\n                            log,\n                            maxCount: log.maxCount,\n                            range: log.range\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                );\n\n                // Only show the full repo option if we are the root\n                if (options.goBackCommand === undefined) {\n                    items.splice(\n                        index++,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show Branch History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows  ${\n                                    GlyphChars.Space\n                                }$(git-branch) ${branch.name} history`\n                            },\n                            Commands.ShowQuickCurrentBranchHistory,\n                            [\n                                undefined,\n                                {\n                                    goBackCommand: currentCommand\n                                } as ShowQuickCurrentBranchHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n\n                const remotes = await Container.git.getRemotes(uri.repoPath!);\n                if (remotes.length) {\n                    const resource =\n                        uri.sha !== undefined\n                            ? ({\n                                  type: 'revision',\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath(),\n                                  sha: uri.sha\n                              } as RemoteResource)\n                            : ({\n                                  type: 'file',\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath()\n                              } as RemoteResource);\n                    items.splice(index++, 0, new OpenRemotesCommandQuickPickItem(remotes, resource, currentCommand));\n                }\n            }\n\n            if (options.goBackCommand) {\n                items.splice(0, 0, options.goBackCommand);\n            }\n        }\n\n        if (options.progressCancellation !== undefined && options.progressCancellation.token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': options.previousPageCommand,\n            '.': options.nextPageCommand\n        });\n\n        options.progressCancellation && options.progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { Repository } from '../git/gitService';\nimport { Iterables } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RepositoryQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly repository: Repository\n    ) {\n        this.label = repository.name;\n        this.description = repository.path;\n    }\n\n    get repoPath(): string {\n        return this.repository.path;\n    }\n}\n\nexport class RepositoriesQuickPick {\n    static async show(\n        placeHolder: string,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<RepositoryQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = [\n            ...Iterables.map(await Container.git.getRepositories(), r => new RepositoryQuickPickItem(r))\n        ] as (RepositoryQuickPickItem | CommandQuickPickItem)[];\n\n        if (goBackCommand !== undefined) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    OpenChangedFilesCommandArgs,\n    ShowQuickBranchHistoryCommandArgs,\n    ShowQuickRepoStatusCommandArgs,\n    ShowQuickStashListCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitCommitType,\n    GitFileStatus,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitStatusFile,\n    GitUri\n} from '../git/gitService';\nimport { Keys } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    OpenFileCommandQuickPickItem,\n    QuickPickItem\n} from './commonQuickPicks';\n\nexport class OpenStatusFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    public readonly status: GitStatusFile;\n    private readonly commit: GitLogCommit;\n\n    constructor(status: GitStatusFile, realIndexStatus?: GitFileStatus, item?: QuickPickItem) {\n        const octicon = status.getOcticon();\n        const description = status.getFormattedDirectory(true);\n\n        super(\n            status.uri,\n            item || {\n                label: `${status.staged ? '$(check)' : GlyphChars.Space.repeat(3)}${Strings.pad(\n                    octicon,\n                    2,\n                    2\n                )} ${paths.basename(status.fileName)}`,\n                description: description\n            }\n        );\n\n        this.status = status;\n        if (status.indexStatus !== undefined) {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.stagedUncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                'HEAD',\n                status.fileName\n            );\n        }\n        else {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.uncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                realIndexStatus !== undefined ? GitService.stagedUncommittedSha : 'HEAD',\n                status.fileName\n            );\n        }\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return commands.executeCommand(Commands.DiffWithPrevious, GitUri.fromFile(this.status, this.status.repoPath), {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenStatusFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(files: GitStatusFile[], item?: QuickPickItem) {\n        const uris = files.map(f => f.uri);\n\n        super(\n            item || {\n                label: `$(file-symlink-file) Open Changed Files`,\n                description: ''\n                // detail: `Opens all of the changed files in the repository`\n            },\n            Commands.OpenChangedFiles,\n            [\n                undefined,\n                {\n                    uris\n                } as OpenChangedFilesCommandArgs\n            ]\n        );\n    }\n}\n\ninterface ComputedStatus {\n    staged: number;\n    stagedAddsAndChanges: GitStatusFile[];\n    stagedStatus: string;\n\n    unstaged: number;\n    unstagedAddsAndChanges: GitStatusFile[];\n    unstagedStatus: string;\n}\n\nexport class RepoStatusQuickPick {\n    private static computeStatus(files: GitStatusFile[]): ComputedStatus {\n        let stagedAdds = 0;\n        let unstagedAdds = 0;\n        let stagedChanges = 0;\n        let unstagedChanges = 0;\n        let stagedDeletes = 0;\n        let unstagedDeletes = 0;\n\n        const stagedAddsAndChanges: GitStatusFile[] = [];\n        const unstagedAddsAndChanges: GitStatusFile[] = [];\n\n        for (const f of files) {\n            switch (f.indexStatus) {\n                case 'A':\n                case '?':\n                    stagedAdds++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    stagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    stagedChanges++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n            }\n\n            switch (f.workingTreeStatus) {\n                case 'A':\n                case '?':\n                    unstagedAdds++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    unstagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    unstagedChanges++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n            }\n        }\n\n        const staged = stagedAdds + stagedChanges + stagedDeletes;\n        const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;\n\n        return {\n            staged: staged,\n            stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : '',\n            stagedAddsAndChanges: stagedAddsAndChanges,\n            unstaged: unstaged,\n            unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : '',\n            unstagedAddsAndChanges: unstagedAddsAndChanges\n        };\n    }\n\n    static async show(\n        status: GitStatus,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<\n        OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem | undefined\n    > {\n        const items = [\n            ...Iterables.flatMap(status.files, s => {\n                if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                    return [\n                        new OpenStatusFileCommandQuickPickItem(s.with({ indexStatus: null }), s.indexStatus),\n                        new OpenStatusFileCommandQuickPickItem(s.with({ workTreeStatus: null }))\n                    ];\n                }\n                else {\n                    return [new OpenStatusFileCommandQuickPickItem(s)];\n                }\n            })\n        ] as (OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem)[];\n\n        // Sort the status by staged and then filename\n        items.sort(\n            (a, b) =>\n                ((a as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) -\n                    ((b as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) ||\n                (a as OpenStatusFileCommandQuickPickItem).status.fileName.localeCompare(\n                    (b as OpenStatusFileCommandQuickPickItem).status.fileName,\n                    undefined,\n                    { numeric: true, sensitivity: 'base' }\n                )\n        );\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                    status.branch\n                } status`\n            },\n            Commands.ShowQuickRepoStatus,\n            [\n                undefined,\n                {\n                    goBackCommand\n                } as ShowQuickRepoStatusCommandArgs\n            ]\n        );\n\n        const computed = this.computeStatus(status.files);\n        if (computed.staged > 0) {\n            let index = 0;\n            const unstagedIndex = computed.unstaged > 0 ? status.files.findIndex(f => !f.staged) : -1;\n            if (unstagedIndex > -1) {\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `Unstaged Files`,\n                            description: computed.unstagedStatus\n                        },\n                        Commands.ShowQuickRepoStatus,\n                        [\n                            undefined,\n                            {\n                                goBackCommand\n                            } as ShowQuickRepoStatusCommandArgs\n                        ]\n                    )\n                );\n\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new OpenStatusFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Staged Files`,\n                        description: ''\n                    })\n                );\n\n                items.push(\n                    new OpenStatusFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Unstaged Files`,\n                        description: ''\n                    })\n                );\n            }\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Staged Files`,\n                        description: computed.stagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n        else if (status.files.some(f => !f.staged)) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Unstaged Files`,\n                        description: computed.unstagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.files.length) {\n            items.push(\n                new OpenStatusFilesCommandQuickPickItem(\n                    computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)\n                )\n            );\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Close Unchanged Files',\n                        description: ''\n                    },\n                    Commands.CloseUnchangedFiles\n                )\n            );\n        }\n        else {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `No changes in the working tree`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            0,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(inbox) Show Stashed Changes`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows stashed changes in the repository`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    GitUri.fromRepoPath(status.repoPath),\n                    {\n                        goBackCommand: currentCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            )\n        );\n\n        if (status.upstream && status.state.ahead) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-upload)${GlyphChars.Space} ${status.state.ahead} Commit${\n                            status.state.ahead > 1 ? 's' : ''\n                        } ahead of ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.branch} but not ${GlyphChars.Space}$(git-branch) ${status.upstream}`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.upstream}..${status.ref}`),\n                        {\n                            branch: status.ref,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-download)${GlyphChars.Space} ${status.state.behind} Commit${\n                            status.state.behind > 1 ? 's' : ''\n                        } behind ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.upstream} but not ${GlyphChars.Space}$(git-branch) ${status.branch}${\n                            status.sha\n                                ? ` (since ${GlyphChars.Space}$(git-commit) ${GitService.shortenSha(status.sha)})`\n                                : ''\n                        }`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.ref}..${status.upstream}`),\n                        {\n                            branch: status.upstream,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && !status.state.ahead && !status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-branch) ${status.branch} is up-to-date with ${GlyphChars.Space}$(git-branch) ${\n                            status.upstream\n                        }`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `status of ${status.branch}${\n                status.upstream ? ` ${Strings.pad(GlyphChars.ArrowLeftRightLong, 1, 1)} ${status.upstream}` : ''\n            }`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, StashSaveCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStash } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class StashListQuickPick {\n    static showProgress(mode: 'list' | 'apply') {\n        const message =\n            mode === 'apply'\n                ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`;\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        stash: GitStash,\n        mode: 'list' | 'apply',\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((stash && Array.from(Iterables.map(stash.commits.values(), c => new CommitQuickPickItem(c)))) ||\n            []) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (mode === 'list') {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(plus) Stash Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} stashes all changes`\n                    },\n                    Commands.StashSave,\n                    [\n                        {\n                            goBackCommand: currentCommand\n                        } as StashSaveCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder:\n                mode === 'apply'\n                    ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                    : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, Uri, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { FileHistoryView } from '../fileHistoryView';\nimport { MessageNode } from './common';\nimport { FileHistoryNode } from './fileHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class FileHistoryTrackerNode extends SubscribeableViewNode<FileHistoryView> {\n    private _baseRef: string | undefined;\n    private _fileUri: GitUri | undefined;\n    private _child: FileHistoryNode | undefined;\n\n    constructor(view: FileHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    resetChild() {\n        if (this._child !== undefined) {\n            this._child.dispose();\n            this._child = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this._fileUri === undefined && this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide file history information.'\n                    )\n                ];\n            }\n\n            const uri = this._fileUri || this.uri;\n            const fileUri = new GitUri(uri, { ...uri, sha: this._baseRef || uri.sha } as GitCommitish);\n            this._child = new FileHistoryNode(fileUri, this.view, this);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('File History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveFileHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the file history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._baseRef\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._baseRef = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (UriComparer.equals(editor!.document.uri, this.uri)) {\n            return true;\n        }\n\n        let gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        let uri;\n        if (gitUri.sha !== undefined) {\n            // If we have a sha, normalize the history to the working file (so we get a full history all the time)\n            const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                gitUri.fsPath,\n                gitUri.repoPath,\n                gitUri.sha\n            );\n\n            if (fileName !== undefined) {\n                uri = GitUri.resolveToUri(fileName, repoPath);\n            }\n        }\n\n        if (this.uri !== unknownGitUri && UriComparer.equals(uri || gitUri, this.uri)) {\n            return true;\n        }\n\n        if (uri !== undefined) {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        this._uri = gitUri;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        if (enabled && this._fileUri !== undefined) {\n            this._fileUri = undefined;\n            this._baseRef = undefined;\n\n            this._uri = unknownGitUri;\n            // Don't need to call triggerChange here, since canSubscribe will do it\n        }\n\n        this.canSubscribe = enabled;\n    }\n\n    @gate()\n    @log()\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        this._fileUri = uri;\n        this._baseRef = baseRef;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        return Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitCommitType, GitFile, GitLogCommit } from '../../git/git';\nimport {\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class LineHistoryNode extends SubscribeableViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly selection: Selection\n    ) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha,\n            range: this.selection\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.filterMap(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs, this.selection)\n                    ),\n                    this\n                )\n            );\n        }\n\n        const blame = await Container.git.getBlameForLine(this.uri, this.selection.active.line);\n        if (blame !== undefined) {\n            let first = children[0] as CommitFileNode | undefined;\n            if (first !== undefined && !(first instanceof CommitFileNode)) {\n                first = children[1] as CommitFileNode | undefined;\n            }\n\n            if (first === undefined || first.commit.sha !== blame.commit.sha) {\n                const file: GitFile = {\n                    fileName: blame.commit.fileName,\n                    indexStatus: '?',\n                    originalFileName: blame.commit.originalFileName,\n                    repoPath: this.uri.repoPath!,\n                    status: 'M',\n                    workingTreeStatus: '?'\n                };\n\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    blame.commit.sha,\n                    'You',\n                    blame.commit.email,\n                    blame.commit.date,\n                    // TODO: Add committed date to blame?\n                    blame.commit.date,\n                    blame.commit.message,\n                    blame.commit.fileName,\n                    [file],\n                    'M',\n                    blame.commit.originalFileName,\n                    blame.commit.previousSha,\n                    blame.commit.originalFileName || blame.commit.fileName\n                );\n\n                children.splice(0, 0, new CommitFileNode(this.view, this, file, commit, displayAs, this.selection));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No line history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const lines = this.selection.isSingleLine\n            ? ` #${this.selection.start.line + 1}`\n            : ` #${this.selection.start.line + 1}-${this.selection.end.line + 1}`;\n        const item = new TreeItem(\n            `${this.uri.getFormattedPath({\n                suffix: `${lines}${\n                    this.uri.sha\n                        ? ` ${\n                              this.uri.sha === GitService.deletedOrMissingSha\n                                  ? this.uri.shortSha\n                                  : `(${this.uri.shortSha})`\n                          }`\n                        : ''\n                }`\n            })}`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.LineHistory;\n        item.tooltip = `History of ${this.uri.getFilename()}${lines}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`LineHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(`LineHistoryNode.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { LinesChangeEvent } from '../../trackers/gitLineTracker';\nimport { LineHistoryView } from '../lineHistoryView';\nimport { MessageNode } from './common';\nimport { LineHistoryNode } from './lineHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class LineHistoryTrackerNode extends SubscribeableViewNode<LineHistoryView> {\n    private _base: string | undefined;\n    private _child: LineHistoryNode | undefined;\n    private _selection: Selection | undefined;\n\n    constructor(view: LineHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    resetChild() {\n        if (this._child !== undefined) {\n            this._child.dispose();\n            this._child = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide line history information.'\n                    )\n                ];\n            }\n\n            const fileUri = new GitUri(this.uri, { ...this.uri, sha: this.uri.sha || this._base } as GitCommitish);\n            this._child = new LineHistoryNode(fileUri, this.view, this, this._selection!);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Line History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveLineHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the line history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._base\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._base = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (\n            UriComparer.equals(editor!.document.uri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        const gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        if (\n            this.uri !== unknownGitUri &&\n            UriComparer.equals(gitUri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        this._uri = gitUri;\n        this._selection = editor.selection;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        this.canSubscribe = enabled;\n    }\n\n    @debug()\n    protected async subscribe() {\n        if (Container.lineTracker.isSubscribed(this)) return undefined;\n\n        const onActiveLinesChanged = Functions.debounce(this.onActiveLinesChanged.bind(this), 250);\n\n        return Container.lineTracker.start(\n            this,\n            Disposable.from(\n                Container.lineTracker.onDidChangeActiveLines((e: LinesChangeEvent) => {\n                    if (e.pending) return;\n\n                    onActiveLinesChanged(e);\n                })\n            )\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitRemote, GitRemoteType, GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemoteNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly remote: GitRemote,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.remote.repoPath}):remote(${this.remote.name})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const branches = await this.repo.getBranches();\n        if (branches === undefined) return [];\n\n        branches.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n\n        // filter remote branches\n        const branchNodes = [\n            ...Iterables.filterMap(branches, b =>\n                !b.remote || !b.name.startsWith(this.remote.name)\n                    ? undefined\n                    : new BranchNode(this.uri, this.view, this, b)\n            )\n        ];\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            branchNodes,\n            n => (n.branch.detached ? [n.branch.name] : n.branch.getName().split('/')),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'remote-branch',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | BranchNode)[];\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const fetch = this.remote.types.find(rt => rt.type === GitRemoteType.Fetch);\n        const push = this.remote.types.find(rt => rt.type === GitRemoteType.Push);\n\n        let separator;\n        if (fetch && push) {\n            separator = GlyphChars.ArrowLeftRightLong;\n        }\n        else if (fetch) {\n            separator = GlyphChars.ArrowLeft;\n        }\n        else if (push) {\n            separator = GlyphChars.ArrowRight;\n        }\n        else {\n            separator = GlyphChars.Dash;\n        }\n\n        const label = `${this.remote.name} ${GlyphChars.Space}${separator}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        } ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} ${this.remote.path}`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remote;\n        item.tooltip = `${this.remote.name}\n${this.remote.path} (${this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain})`;\n\n        if (this.remote.provider !== undefined) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-${this.remote.provider.icon}.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-${this.remote.provider.icon}.svg`)\n            };\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n            };\n        }\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean } = {}) {\n        return this.repo.fetch({ ...options, remote: this.remote.name });\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RemoteNode } from './remoteNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemotesNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):remotes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const remotes = await this.repo.getRemotes();\n        if (remotes === undefined || remotes.length === 0) {\n            return [new MessageNode(this.view, this, 'No remotes could be found')];\n        }\n\n        remotes.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        return [...Iterables.map(remotes, r => new RemoteNode(this.uri, this.view, this, r, this.repo))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Remotes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remotes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    TreeDataProvider,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeView,\n    TreeViewExpansionEvent,\n    TreeViewVisibilityChangeEvent,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { debug, Functions, log } from '../system';\nimport { CompareView } from './compareView';\nimport { FileHistoryView } from './fileHistoryView';\nimport { LineHistoryView } from './lineHistoryView';\nimport { ViewNode } from './nodes';\nimport { isPageable } from './nodes/viewNode';\nimport { RepositoriesView } from './repositoriesView';\nimport { SearchView } from './searchView';\nimport { RefreshNodeCommandArgs } from './viewCommands';\n\nexport enum RefreshReason {\n    ConfigurationChanged = 'ConfigurationChanged',\n    VisibilityChanged = 'VisibilityChanged'\n}\n\nexport type View = RepositoriesView | FileHistoryView | LineHistoryView | CompareView | SearchView;\n\nexport interface TreeViewNodeStateChangeEvent<T> extends TreeViewExpansionEvent<T> {\n    state: TreeItemCollapsibleState;\n}\n\nexport abstract class ViewBase<TRoot extends ViewNode<View>> implements TreeDataProvider<ViewNode>, Disposable {\n    protected _onDidChangeTreeData = new EventEmitter<ViewNode>();\n    public get onDidChangeTreeData(): Event<ViewNode> {\n        return this._onDidChangeTreeData.event;\n    }\n\n    private _onDidChangeVisibility = new EventEmitter<TreeViewVisibilityChangeEvent>();\n    public get onDidChangeVisibility(): Event<TreeViewVisibilityChangeEvent> {\n        return this._onDidChangeVisibility.event;\n    }\n\n    private _onDidChangeNodeState = new EventEmitter<TreeViewNodeStateChangeEvent<ViewNode>>();\n    public get onDidChangeNodeState(): Event<TreeViewNodeStateChangeEvent<ViewNode>> {\n        return this._onDidChangeNodeState.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    protected _root: TRoot | undefined;\n    protected _tree: TreeView<ViewNode> | undefined;\n\n    constructor(\n        public readonly id: string\n    ) {\n        this.registerCommands();\n\n        Container.context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        setImmediate(() => this.onConfigurationChanged(configuration.initializingChangeEvent));\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    getQualifiedCommand(command: string) {\n        return `${this.id}.${command}`;\n    }\n\n    protected abstract get location(): string;\n\n    protected abstract getRoot(): TRoot;\n    protected abstract registerCommands(): void;\n    protected abstract onConfigurationChanged(e: ConfigurationChangeEvent): void;\n\n    protected initialize(container?: string, options: { showCollapseAll?: boolean } = {}) {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._onDidChangeTreeData = new EventEmitter<ViewNode>();\n        }\n\n        this._tree = window.createTreeView(`${this.id}${container ? `:${container}` : ''}`, {\n            ...options,\n            treeDataProvider: this\n        });\n        this._disposable = Disposable.from(\n            this._tree,\n            this._tree.onDidChangeVisibility(Functions.debounce(this.onVisibilityChanged, 250), this),\n            this._tree.onDidCollapseElement(this.onElementCollapsed, this),\n            this._tree.onDidExpandElement(this.onElementExpanded, this)\n        );\n    }\n\n    protected ensureRoot() {\n        if (this._root === undefined) {\n            this._root = this.getRoot();\n        }\n\n        return this._root;\n    }\n\n    getChildren(node?: ViewNode): ViewNode[] | Promise<ViewNode[]> {\n        if (node !== undefined) return node.getChildren();\n\n        const root = this.ensureRoot();\n        return root.getChildren();\n    }\n\n    getParent(node: ViewNode): ViewNode | undefined {\n        return node.getParent();\n    }\n\n    getTreeItem(node: ViewNode): TreeItem | Promise<TreeItem> {\n        return node.getTreeItem();\n    }\n\n    protected onElementCollapsed(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Collapsed });\n    }\n\n    protected onElementExpanded(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Expanded });\n    }\n\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        this._onDidChangeVisibility.fire(e);\n    }\n\n    get selection(): ViewNode[] {\n        if (this._tree === undefined || this._root === undefined) return [];\n\n        return this._tree.selection;\n    }\n\n    get visible(): boolean {\n        return this._tree !== undefined ? this._tree.visible : false;\n    }\n\n    @debug()\n    async refresh(reason?: RefreshReason) {\n        if (this._root !== undefined) {\n            await this._root.refresh(reason);\n        }\n\n        this.triggerNodeChange();\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async refreshNode(node: ViewNode, args?: RefreshNodeCommandArgs) {\n        if (args !== undefined) {\n            if (isPageable(node)) {\n                if (args.maxCount === undefined || args.maxCount === 0) {\n                    node.maxCount = args.maxCount;\n                }\n                else {\n                    node.maxCount = (node.maxCount || args.maxCount) + args.maxCount;\n                }\n            }\n        }\n\n        const cancel = await node.refresh();\n        if (cancel === true) return;\n\n        this.triggerNodeChange(node);\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async reveal(\n        node: ViewNode,\n        options?: {\n            select?: boolean;\n            focus?: boolean;\n            expand?: boolean | number;\n        }\n    ) {\n        if (this._tree === undefined) return;\n\n        try {\n            await this._tree.reveal(node, options);\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @log()\n    async show() {\n        try {\n            const location = this.location;\n            return await commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => (n != null ? n.toString() : '') }\n    })\n    triggerNodeChange(node?: ViewNode) {\n        // Since the root node won't actually refresh, force everything\n        this._onDidChangeTreeData.fire(node !== undefined && node !== this._root ? node : undefined);\n    }\n}\n","'use strict';\nimport { GitFile, GitLogCommit } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashFileNode extends CommitFileNode {\n    constructor(view: View, parent: ViewNode, file: GitFile, commit: GitLogCommit) {\n        super(view, parent, file, commit, CommitFileNodeDisplayAs.File);\n    }\n\n    protected get resourceType(): ResourceType {\n        return ResourceType.StashFile;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.stashFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.stashFileFormat;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitStashCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { StashFileNode } from './stashFileNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class StashNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitStashCommit\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.commit.repoPath}):stash(${this.commit.sha})`;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const files = (this.commit as GitStashCommit).files;\n\n        // Check for any untracked files -- since git doesn't return them via `git stash list` :(\n        // See https://stackoverflow.com/questions/12681529/\n        const log = await Container.git.getLog(this.commit.repoPath, {\n            maxCount: 1,\n            ref: `${(this.commit as GitStashCommit).stashName}^3`\n        });\n        if (log !== undefined) {\n            const commit = Iterables.first(log.commits.values());\n            if (commit !== undefined && commit.files.length !== 0) {\n                // Since these files are untracked -- make them look that way\n                commit.files.forEach(s => (s.status = '?'));\n                files.splice(files.length, 0, ...commit.files);\n            }\n        }\n\n        const children = files.map(s => new StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));\n        children.sort((a, b) => a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' }));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            CommitFormatter.fromTemplate(this.view.config.stashFormat, this.commit, {\n                truncateMessageAtNewLine: true,\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions),\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Stash;\n        item.tooltip = CommitFormatter.fromTemplate('${ago} (${date})\\n\\n${message}', this.commit, {\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { MessageNode } from './common';\nimport { StashNode } from './stashNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashesNode extends ViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):stashes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const stash = await this.repo.getStashList();\n        if (stash === undefined) return [new MessageNode(this.view, this, 'No stashed changes.')];\n\n        return [...Iterables.map(stash.commits.values(), c => new StashNode(this.view, this, c))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Stashes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Stashes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-stash.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-stash.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport {\n    GitFile,\n    GitFileWithCommit,\n    GitLogCommit,\n    GitUri,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFileNode extends ViewNode {\n    private readonly _hasStagedChanges: boolean = false;\n    private readonly _hasUnstagedChanges: boolean = false;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly commits: GitLogCommit[]\n    ) {\n        super(GitUri.fromFile(file, repoPath, 'HEAD'), view, parent);\n\n        for (const c of this.commits) {\n            if (c.isStagedUncommitted) {\n                this._hasStagedChanges = true;\n            }\n            else if (c.isUncommitted) {\n                this._hasUnstagedChanges = true;\n            }\n\n            if (this._hasStagedChanges && this._hasUnstagedChanges) break;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return this.commits.map(\n            c =>\n                new CommitFileNode(\n                    this.view,\n                    this,\n                    this.file,\n                    c,\n                    CommitFileNodeDisplayAs.CommitLabel |\n                        (this.view.config.avatars\n                            ? CommitFileNodeDisplayAs.Gravatar\n                            : CommitFileNodeDisplayAs.CommitIcon)\n                )\n        );\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n\n        if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {\n            if (this._hasStagedChanges) {\n                item.contextValue = ResourceType.FileStaged;\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Index (staged)',\n                    this.file\n                );\n            }\n            else {\n                item.contextValue = ResourceType.FileUnstaged;\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Working Tree',\n                    this.file\n                );\n            }\n\n            // Use the file icon and decorations\n            item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n            item.iconPath = ThemeIcon.File;\n\n            item.command = this.getCommand();\n        }\n        else {\n            item.collapsibleState = TreeItemCollapsibleState.Collapsed;\n            if (this._hasStagedChanges || this._hasUnstagedChanges) {\n                if (this._hasStagedChanges && this._hasUnstagedChanges) {\n                    item.contextValue = ResourceType.FileStagedAndUnstaged;\n                }\n                else if (this._hasStagedChanges) {\n                    item.contextValue = ResourceType.FileStaged;\n                }\n                else {\n                    item.contextValue = ResourceType.FileUnstaged;\n                }\n\n                // Use the file icon and decorations\n                item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n                item.iconPath = ThemeIcon.File;\n            }\n            else {\n                item.contextValue = ResourceType.StatusFileCommits;\n\n                const icon = GitFile.getStatusIcon(this.file.status);\n                item.iconPath = {\n                    dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                    light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n                };\n            }\n            item.tooltip = StatusFileFormatter.fromTemplate(\n                `\\${file}\\n\\${directory}/\\n\\n\\${status} in ${this.getChangedIn()}`,\n                this.file\n            );\n        }\n\n        // Only cache the label for a single refresh\n        this._label = undefined;\n\n        return item;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._label;\n    }\n\n    get commit() {\n        return this.commits[0];\n    }\n\n    get priority(): number {\n        if (this._hasStagedChanges && !this._hasUnstagedChanges) return -3;\n        if (this._hasStagedChanges) return -2;\n        if (this._hasUnstagedChanges) return -1;\n        return 0;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n    }\n\n    private getChangedIn(): string {\n        const changedIn = [];\n\n        let commits = 0;\n\n        if (this._hasUnstagedChanges) {\n            commits++;\n            changedIn.push('Working Tree');\n        }\n\n        if (this._hasStagedChanges) {\n            commits++;\n            changedIn.push('Index (staged)');\n        }\n\n        if (this.commits.length > commits) {\n            commits = this.commits.length - commits;\n        }\n\n        if (commits > 0) {\n            changedIn.push(Strings.pluralize('commit', commits));\n        }\n\n        if (changedIn.length > 2) {\n            changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;\n        }\n        return changedIn.join(changedIn.length > 2 ? ', ' : ' and ');\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.repoPath),\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitStatusFile } from '../../git/git';\nimport {\n    GitCommitType,\n    GitFileWithCommit,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitUri\n} from '../../git/gitService';\nimport { Arrays, Iterables, Objects, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { FileNode, FolderNode } from './folderNode';\nimport { StatusFileNode } from './statusFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFilesNode extends ViewNode<RepositoriesView> {\n    readonly repoPath: string;\n\n    constructor(\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly status: GitStatus,\n        public readonly range: string | undefined\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n        this.repoPath = status.repoPath;\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.status.repoPath}):status:files`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        let files: GitFileWithCommit[] = [];\n\n        const repoPath = this.repoPath;\n\n        let log: GitLog | undefined;\n        if (this.range !== undefined) {\n            log = await Container.git.getLog(repoPath, { maxCount: 0, ref: this.range });\n            if (log !== undefined) {\n                files = [\n                    ...Iterables.flatMap(log.commits.values(), c =>\n                        c.files.map(s => ({ ...s, commit: c } as GitFileWithCommit))\n                    )\n                ];\n            }\n        }\n\n        if (this.status.files.length !== 0 && this.includeWorkingTree) {\n            files.splice(\n                0,\n                0,\n                ...Iterables.flatMap(this.status.files, s => {\n                    if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                        // Decrements the date to guarantee this entry will be sorted after the previous entry (most recent first)\n                        const older = new Date();\n                        older.setMilliseconds(older.getMilliseconds() - 1);\n\n                        return [\n                            this.toStatusFile(s, GitService.uncommittedSha, GitService.stagedUncommittedSha),\n                            this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD', older)\n                        ];\n                    }\n                    else if (s.indexStatus !== undefined) {\n                        return [this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD')];\n                    }\n                    else {\n                        return [this.toStatusFile(s, GitService.uncommittedSha, 'HEAD')];\n                    }\n                })\n            );\n        }\n\n        files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());\n\n        const groups = Arrays.groupBy(files, s => s.fileName);\n\n        let children: FileNode[] = [\n            ...Iterables.map(\n                Objects.values(groups),\n                files =>\n                    new StatusFileNode(this.view, this, repoPath, files[files.length - 1], files.map(s => s.commit))\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let files = this.status.files !== undefined && this.includeWorkingTree ? this.status.files.length : 0;\n\n        if (this.status.upstream !== undefined && this.status.state.ahead > 0) {\n            if (files > 0) {\n                const aheadFiles = await Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);\n                if (aheadFiles !== undefined) {\n                    const uniques = new Set();\n                    for (const f of this.status.files) {\n                        uniques.add(f.fileName);\n                    }\n                    for (const f of aheadFiles) {\n                        uniques.add(f.fileName);\n                    }\n\n                    files = uniques.size;\n                }\n            }\n            else {\n                const stats = await Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);\n                if (stats !== undefined) {\n                    files += stats.files;\n                }\n            }\n        }\n\n        const label = `${Strings.pluralize('file', files)} changed`;\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.StatusFiles;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-diff.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-diff.svg`)\n        };\n\n        return item;\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    private toStatusFile(file: GitStatusFile, ref: string, previousRef: string, date?: Date): GitFileWithCommit {\n        return {\n            status: file.status,\n            repoPath: file.repoPath,\n            indexStatus: file.indexStatus,\n            workingTreeStatus: file.workingTreeStatus,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            commit: new GitLogCommit(\n                GitCommitType.File,\n                file.repoPath,\n                ref,\n                'You',\n                undefined,\n                date || new Date(),\n                date || new Date(),\n                '',\n                file.fileName,\n                [file],\n                file.status,\n                file.originalFileName,\n                previousRef,\n                file.fileName\n            )\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitTag, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class TagNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly tag: GitTag\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.tag.repoPath}):tag(${this.tag.name})`;\n    }\n\n    get label(): string {\n        return this.view.config.branches.layout === ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;\n    }\n\n    get ref(): string {\n        return this.tag.name;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: this.tag.name\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.tag.name);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tag;\n        item.tooltip = `${this.tag.name}${this.tag.annotation === undefined ? '' : `\\n${this.tag.annotation}`}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { MessageNode } from './common';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class TagsNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):tags`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const tags = await this.repo.getTags();\n        if (tags.length === 0) return [new MessageNode(this.view, this, 'No tags could be found.')];\n\n        tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        const tagNodes = tags.map(t => new TagNode(this.uri, this.view, this, t));\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return tagNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            tagNodes,\n            n => n.tag.name.split('/'),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(this.view, this, 'tag', this.repo.path, '', undefined, hierarchy);\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | TagNode)[];\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(`Tags`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tags;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-tag.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-tag.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    GitBranch,\n    GitStatus,\n    GitUri,\n    Repository,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Dates, debug, Functions, gate, log, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchesNode } from './branchesNode';\nimport { BranchNode } from './branchNode';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { MessageNode } from './common';\nimport { RemotesNode } from './remotesNode';\nimport { StashesNode } from './stashesNode';\nimport { StatusFilesNode } from './statusFilesNode';\nimport { TagsNode } from './tagsNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class RepositoryNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n    private _lastFetched: number = 0;\n    private _status: Promise<GitStatus | undefined>;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n\n        this._status = this.repo.getStatus();\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const status = await this._status;\n            if (status !== undefined) {\n                const branch = new GitBranch(\n                    status.repoPath,\n                    status.branch,\n                    true,\n                    status.sha,\n                    status.upstream,\n                    status.state.ahead,\n                    status.state.behind,\n                    status.detached\n                );\n                children.push(new BranchNode(this.uri, this.view, this, branch, true));\n\n                if (status.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind', true));\n                }\n\n                if (status.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead', true));\n                }\n\n                if (status.state.ahead || (status.files.length !== 0 && this.includeWorkingTree)) {\n                    const range = status.upstream ? `${status.upstream}..${branch.ref}` : undefined;\n                    children.push(new StatusFilesNode(this.view, this, status, range));\n                }\n\n                children.push(new MessageNode(this.view, this, GlyphChars.Dash.repeat(2), ''));\n            }\n\n            children.push(\n                new BranchesNode(this.uri, this.view, this, this.repo),\n                new RemotesNode(this.uri, this.view, this, this.repo),\n                new StashesNode(this.uri, this.view, this, this.repo),\n                new TagsNode(this.uri, this.view, this, this.repo)\n            );\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let label = this.repo.formattedName || this.uri.repoPath || '';\n\n        this._lastFetched = await this.repo.getLastFetched();\n\n        const lastFetchedTooltip = this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dash, 2, 2)}Last fetched on `,\n            format: 'dddd MMMM Do, YYYY h:mm a'\n        });\n\n        let tooltip = this.repo.formattedName\n            ? `${this.repo.formattedName}${lastFetchedTooltip}\\n${this.uri.repoPath}`\n            : `${this.uri.repoPath}${lastFetchedTooltip}`;\n        let iconSuffix = '';\n        let workingStatus = '';\n\n        const status = await this._status;\n        if (status !== undefined) {\n            tooltip += `\\n\\n${status.branch}`;\n\n            if (status.files.length !== 0 && this.includeWorkingTree) {\n                workingStatus = status.getFormattedDiffStatus({\n                    compact: true,\n                    prefix: Strings.pad(GlyphChars.Dot, 2, 2)\n                });\n            }\n\n            const upstreamStatus = status.getUpstreamStatus({\n                prefix: `${GlyphChars.Space} `\n            });\n\n            label += `${Strings.pad(GlyphChars.Dash, 3, 3)}${status.branch}${upstreamStatus}${workingStatus}`;\n\n            iconSuffix = workingStatus ? '-blue' : '';\n            if (status.upstream !== undefined) {\n                tooltip += ` is tracking ${status.upstream}\\n${status.getUpstreamStatus({\n                    empty: 'up-to-date',\n                    expand: true,\n                    separator: '\\n',\n                    suffix: '\\n'\n                })}`;\n\n                if (status.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (status.state.ahead) {\n                    iconSuffix = status.state.behind ? '-yellow' : '-green';\n                }\n            }\n\n            if (workingStatus) {\n                tooltip += `\\nWorking tree has uncommitted changes${status.getFormattedDiffStatus({\n                    expand: true,\n                    prefix: `\\n`,\n                    separator: '\\n'\n                })}`;\n            }\n        }\n\n        const item = new TreeItem(\n            `${label}${this.formatLastFetched({\n                prefix: `${Strings.pad(GlyphChars.Dash, 4, 4)}Last fetched `\n            })}`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Repository;\n        item.tooltip = tooltip;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean; remote?: string } = {}) {\n        return this.repo.fetch(options);\n    }\n\n    @log()\n    pull(options: { progress?: boolean } = {}) {\n        return this.repo.pull(options);\n    }\n\n    @log()\n    push(options: { force?: boolean; progress?: boolean } = {}) {\n        return this.repo.push(options);\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        this._status = this.repo.getStatus();\n\n        this._children = undefined;\n        await this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const disposables = [this.repo.onDidChange(this.onRepoChanged, this)];\n\n        if (this.includeWorkingTree) {\n            disposables.push(\n                this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this),\n                {\n                    dispose: () => this.repo.stopWatchingFileSystem()\n                },\n                Functions.interval(() => void this.updateLastFetched(), 60000)\n            );\n\n            this.repo.startWatchingFileSystem();\n        }\n\n        return Disposable.from(...disposables);\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryFileSystemChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, uris: [${e.uris\n                    .map(u => u.fsPath)\n                    .join(', ')}] }`\n        }\n    })\n    private onFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        void this.triggerChange();\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, changes: ${e.changes.join()} }`\n        }\n    })\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (e.changed(RepositoryChange.Closed)) {\n            this.dispose();\n\n            return;\n        }\n\n        if (\n            this._children === undefined ||\n            e.changed(RepositoryChange.Repository) ||\n            e.changed(RepositoryChange.Config)\n        ) {\n            void this.triggerChange();\n\n            return;\n        }\n\n        if (e.changed(RepositoryChange.Stashes)) {\n            const node = this._children.find(c => c instanceof StashesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Remotes)) {\n            const node = this._children.find(c => c instanceof RemotesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Tags)) {\n            const node = this._children.find(c => c instanceof TagsNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n    }\n\n    private formatLastFetched(options: { prefix?: string; format?: string } = {}) {\n        if (this._lastFetched === 0) return '';\n\n        if (options.format === undefined && Date.now() - this._lastFetched < Dates.MillisecondsPerDay) {\n            return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).fromNow()}`;\n        }\n\n        return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).format(\n            options.format || 'MMM DD, YYYY'\n        )}`;\n    }\n\n    @debug()\n    private async updateLastFetched() {\n        const prevLastFetched = this._lastFetched;\n        this._lastFetched = await this.repo.getLastFetched();\n\n        // If the fetched date hasn't changed and it was over a day ago, kick out\n        if (this._lastFetched === prevLastFetched && Date.now() - this._lastFetched >= Dates.MillisecondsPerDay) return;\n\n        this.view.triggerNodeChange(this);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { RefreshReason } from '../viewBase';\nimport { MessageNode } from './common';\nimport { RepositoryNode } from './repositoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class RepositoriesNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: (RepositoryNode | MessageNode)[] | undefined;\n\n    constructor(view: RepositoriesView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        if (this._children !== undefined) {\n            for (const child of this._children) {\n                if (child instanceof RepositoryNode) {\n                    child.dispose();\n                }\n            }\n            this._children = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const repositories = await Container.git.getOrderedRepositories();\n            if (repositories.length === 0) return [new MessageNode(this.view, this, 'No repositories could be found.')];\n\n            const children = [];\n            for (const repo of repositories) {\n                if (repo.closed) continue;\n\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n\n            this._children = children;\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Repositories`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repositories;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    async refresh(reason?: RefreshReason) {\n        if (this._children === undefined) return;\n\n        const repositories = await Container.git.getOrderedRepositories();\n        if (repositories.length === 0 && (this._children === undefined || this._children.length === 0)) return;\n\n        if (repositories.length === 0) {\n            this._children = [new MessageNode(this.view, this, 'No repositories could be found.')];\n            return;\n        }\n\n        const children = [];\n        for (const repo of repositories) {\n            if (repo.closed) continue;\n\n            const normalizedPath = repo.normalizedPath;\n            const child = (this._children as RepositoryNode[]).find(c => c.repo.normalizedPath === normalizedPath);\n            if (child !== undefined) {\n                children.push(child);\n                void child.refresh();\n            }\n            else {\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n        }\n\n        for (const child of this._children as RepositoryNode[]) {\n            if (children.includes(child)) continue;\n\n            child.dispose();\n        }\n\n        this._children = children;\n\n        // Reset our subscription if the configuration changed\n        if (reason === RefreshReason.ConfigurationChanged) {\n            await this.unsubscribe();\n        }\n\n        void this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const subscriptions = [Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];\n\n        if (this.view.config.autoReveal) {\n            subscriptions.push(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n            );\n        }\n\n        return Disposable.from(...subscriptions);\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        if (editor == null || this._children === undefined || this._children.length === 1) {\n            return;\n        }\n\n        try {\n            const uri = editor.document.uri;\n            const node = this._children.find(n => n instanceof RepositoryNode && n.repo.containsUri(uri)) as\n                | RepositoryNode\n                | undefined;\n            if (node === undefined) return;\n\n            // Check to see if this repo has a descendent that is already selected\n            let parent = this.view.selection.length === 0 ? undefined : this.view.selection[0];\n            while (parent !== undefined) {\n                if (parent === node) return;\n\n                parent = parent.getParent();\n            }\n\n            void this.view.reveal(node, { expand: true });\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @debug()\n    private onRepositoriesChanged() {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitLog, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface CommitsQueryResults {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class ResultsCommitsNode extends ViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>,\n        private readonly _contextValue: ResourceType = ResourceType.ResultsCommits\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { log } = await this.getCommitsQueryResults();\n        if (log === undefined) return [];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Results'));\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { label, log } = await this.getCommitsQueryResults();\n\n        const item = new TreeItem(\n            label,\n            log && log.count > 0 ? TreeItemCollapsibleState.Collapsed : TreeItemCollapsibleState.None\n        );\n        item.contextValue = this._contextValue;\n\n        return item;\n    }\n\n    refresh() {\n        this._commitsQueryResults = this._commitsQuery(this.maxCount);\n    }\n\n    private _commitsQueryResults: Promise<CommitsQueryResults> | undefined;\n\n    private getCommitsQueryResults() {\n        if (this._commitsQueryResults === undefined) {\n            this._commitsQueryResults = this._commitsQuery(this.maxCount);\n        }\n\n        return this._commitsQueryResults;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitUri, IStatusFormatOptions, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class ResultsFileNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly ref1: string,\n        public readonly ref2: string\n    ) {\n        super(GitUri.fromFile(file, repoPath, ref1 ? ref1 : ref2 ? ref2 : undefined), view, parent);\n    }\n\n    get ref() {\n        return this.ref1 ? this.ref1 : this.ref2 ? this.ref2 : undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.ResultsFile;\n        item.tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n\n        const statusIcon = GitFile.getStatusIcon(this.file.status);\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(paths.join('images', 'dark', statusIcon)),\n            light: Container.context.asAbsolutePath(paths.join('images', 'light', statusIcon))\n        };\n\n        item.command = this.getCommand();\n        return item;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate('${filePath}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Open Changes',\n            command: Commands.DiffWith,\n            arguments: [\n                this.uri,\n                {\n                    lhs: {\n                        sha: this.ref1,\n                        uri: this.uri\n                    },\n                    rhs: {\n                        sha: this.ref2,\n                        uri:\n                            this.file.status === 'R'\n                                ? GitUri.fromFile(this.file, this.uri.repoPath!, this.ref2, true)\n                                : this.uri\n                    },\n                    repoPath: this.uri.repoPath!,\n\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitFile, GitUri } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResultsFileNode } from './resultsFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FilesQueryResults {\n    label: string;\n    diff: GitFile[] | undefined;\n}\n\nexport class ResultsFilesNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _ref1: string,\n        private readonly _ref2: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { diff } = await this.getFilesQueryResults();\n        if (diff === undefined) return [];\n\n        let children: FileNode[] = [\n            ...Iterables.map(diff, s => new ResultsFileNode(this.view, this, this.repoPath, s, this._ref1, this._ref2))\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { diff, label } = await this.getFilesQueryResults();\n\n        const item = new TreeItem(\n            label,\n            diff && diff.length > 0 ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.None\n        );\n        item.contextValue = ResourceType.ResultsFiles;\n        return item;\n    }\n\n    refresh() {\n        this._filesQueryResults = this.getFilesQueryResultsCore();\n    }\n\n    private _filesQueryResults: Promise<FilesQueryResults> | undefined;\n\n    private getFilesQueryResults() {\n        if (this._filesQueryResults === undefined) {\n            this._filesQueryResults = this.getFilesQueryResultsCore();\n        }\n\n        return this._filesQueryResults;\n    }\n\n    private async getFilesQueryResultsCore(): Promise<FilesQueryResults> {\n        const diff = await Container.git.getDiffStatus(this.uri.repoPath!, this._ref1, this._ref2);\n        return {\n            label: `${Strings.pluralize('file', diff !== undefined ? diff.length : 0, { zero: 'No' })} changed`,\n            diff: diff\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitService, GitUri } from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResultsFilesNode } from './resultsFilesNode';\nimport { NamedRef, ResourceType, ViewNode } from './viewNode';\n\nexport class CompareResultsNode extends ViewNode {\n    constructor(\n        view: View,\n        public readonly repoPath: string,\n        ref1: NamedRef,\n        ref2: NamedRef\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view);\n\n        this._ref1 = ref1;\n        this._ref2 = ref2;\n    }\n\n    private _ref1: NamedRef;\n    get ref1(): NamedRef {\n        return this._ref1;\n    }\n\n    private _ref2: NamedRef;\n    get ref2(): NamedRef {\n        return this._ref2;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [\n            new ResultsCommitsNode(this.view, this, this.uri.repoPath!, this.getCommitsQuery.bind(this)),\n            new ResultsFilesNode(this.view, this, this.uri.repoPath!, this._ref1.ref, this._ref2.ref)\n        ];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let repository = '';\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.uri.repoPath!);\n            repository = ` ${Strings.pad(GlyphChars.Dash, 1, 1)} ${(repo && repo.formattedName) || this.uri.repoPath}`;\n        }\n\n        const item = new TreeItem(\n            `Comparing ${this._ref1.label ||\n                GitService.shortenSha(this._ref1.ref, { working: 'Working Tree' })} to ${this._ref2.label ||\n                GitService.shortenSha(this._ref2.ref, { working: 'Working Tree' })}${repository}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.contextValue = ResourceType.CompareResults;\n\n        return item;\n    }\n\n    swap() {\n        const ref1 = this._ref1;\n        this._ref1 = this._ref2;\n        this._ref2 = ref1;\n\n        this.view.triggerNodeChange(this);\n    }\n\n    private async getCommitsQuery(maxCount: number | undefined): Promise<CommitsQueryResults> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: maxCount,\n            ref: `${this._ref1.ref}...${this._ref2.ref || 'HEAD'}`\n        });\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const label = Strings.pluralize('commit', count, { number: truncated ? `${count}+` : undefined, zero: 'No' });\n\n        return {\n            label: label,\n            log: log\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { Strings } from '../../system';\nimport { CompareView } from '../compareView';\nimport { CompareNode } from './compareNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class ComparePickerNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        protected readonly parent: CompareNode\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const selectedRef = this.parent.selectedRef;\n        const repoPath = selectedRef !== undefined ? selectedRef.repoPath : undefined;\n\n        let repository = '';\n        if (repoPath !== undefined) {\n            if ((await Container.git.getRepositoryCount()) > 1) {\n                const repo = await Container.git.getRepository(repoPath);\n                repository = ` ${Strings.pad(GlyphChars.Dash, 1, 1)} ${(repo && repo.formattedName) || repoPath}`;\n            }\n        }\n\n        let item;\n        if (selectedRef === undefined) {\n            item = new TreeItem(\n                `Compare &lt;branch, tag, or ref&gt; with &lt;branch, tag, or ref&gt;${repository}`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePicker;\n            item.tooltip = `Click to select branch or tag for compare${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('selectForCompare')\n            };\n        }\n        else {\n            item = new TreeItem(\n                `Compare ${selectedRef.label} with &lt;branch, tag, or ref&gt;${repository}`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePickerWithRef;\n            item.tooltip = `Click to compare ${selectedRef.label} with${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare ${selectedRef.label} with${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('compareWithSelected')\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { getRepoPathOrPrompt } from '../../commands';\nimport { CommandContext, GlyphChars, setCommandContext } from '../../constants';\nimport { GitService } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { CompareView } from '../compareView';\nimport { MessageNode } from './common';\nimport { ComparePickerNode } from './comparePickerNode';\nimport { NamedRef, ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\ninterface RepoRef {\n    label: string;\n    repoPath: string;\n    ref: string | NamedRef;\n}\n\nexport class CompareNode extends ViewNode<CompareView> {\n    private _children: (ViewNode | MessageNode)[] = [];\n    private _comparePickerNode: ComparePickerNode | undefined;\n\n    constructor(view: CompareView) {\n        super(unknownGitUri, view);\n    }\n\n    private _selectedRef: RepoRef | undefined;\n    get selectedRef(): RepoRef | undefined {\n        return this._selectedRef;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children = [this._comparePickerNode];\n        }\n        else if (\n            this._selectedRef !== undefined &&\n            (this._comparePickerNode === undefined || !this._children.includes(this._comparePickerNode))\n        ) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children.splice(0, 0, this._comparePickerNode);\n\n            const node = this._comparePickerNode;\n            setImmediate(() => this.view.reveal(node, { focus: false, select: true }));\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Compare`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Compare;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            if (this._comparePickerNode !== undefined) {\n                const index = this._children.indexOf(this._comparePickerNode);\n                if (index !== -1) {\n                    this._children.splice(index, 1);\n                }\n            }\n\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        if (this._children.length !== 0) {\n            const index = this._children.indexOf(node);\n            if (index === -1) return;\n\n            this._children.splice(index, 1);\n        }\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n\n    async compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        if (this._selectedRef === undefined) return;\n\n        if (repoPath === undefined) {\n            repoPath = this._selectedRef.repoPath;\n        }\n        else if (repoPath !== this._selectedRef.repoPath) {\n            // If we don't have a matching repoPath, then start over\n            void this.selectForCompare(repoPath, ref);\n            return;\n        }\n\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Compare ${this.getRefName(this._selectedRef.ref)} with${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n        }\n\n        const ref1 = this._selectedRef;\n\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        void (await this.view.compare(repoPath, ref1.ref, ref));\n    }\n\n    async selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        if (repoPath === undefined) {\n            repoPath = await getRepoPathOrPrompt(\n                undefined,\n                `Select branch or tag for compare in which repository${GlyphChars.Ellipsis}`\n            );\n        }\n        if (repoPath === undefined) return;\n\n        let autoCompare = false;\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n\n            autoCompare = true;\n        }\n\n        this._selectedRef = { label: this.getRefName(ref), repoPath: repoPath, ref: ref };\n        setCommandContext(CommandContext.ViewsCanCompare, true);\n\n        await this.view.show();\n\n        void (await this.triggerChange());\n\n        if (autoCompare) {\n            void (await this.compareWithSelected());\n        }\n    }\n\n    private getRefName(ref: string | NamedRef) {\n        return typeof ref === 'string' ? GitService.shortenSha(ref)! : ref.label || GitService.shortenSha(ref.ref)!;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { debug, Functions, gate, log } from '../../system';\nimport { View } from '../viewBase';\nimport { CommandMessageNode, MessageNode } from './common';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class SearchNode extends ViewNode {\n    private _children: (ViewNode | MessageNode)[] = [];\n\n    constructor(view: View) {\n        super(unknownGitUri, view);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            const command = {\n                title: ' ',\n                command: 'gitlens.showCommitSearch'\n            };\n\n            return [\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Message } as SearchCommitsCommandArgs]\n                    },\n                    `Search commits by message (use &lt;message-pattern&gt;)`,\n                    'Click to search commits by message'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Author } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by author (use @&lt;author-pattern&gt;)`,\n                    'Click to search commits by author'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Sha } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by commit id (use #&lt;sha&gt;)`,\n                    'Click to search commits by commit id'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Files } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by files (use :&lt;file-path/glob&gt;)`,\n                    'Click to search commits by files'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Changes } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changes (use =&lt;pattern&gt;)`,\n                    'Click to search commits by changes'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.ChangedLines } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changed lines (use ~&lt;pattern&gt;)`,\n                    'Click to search commits by changed lines'\n                )\n            ];\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Search`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Search;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        if (this._children.length === 0) return;\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        if (this._children.length === 0) return;\n\n        const index = this._children.findIndex(n => n === node);\n        if (index === -1) return;\n\n        this._children.splice(index, 1);\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { CompareViewConfig, configuration, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { CompareNode, CompareResultsNode, NamedRef, ViewNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class CompareView extends ViewBase<CompareNode> {\n    constructor() {\n        super('gitlens.views.compare');\n\n        setCommandContext(CommandContext.ViewsCompareKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new CompareNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('swapComparision'), this.swapComparision, this);\n\n        commands.registerCommand(this.getQualifiedCommand('selectForCompare'), this.selectForCompare, this);\n        commands.registerCommand(this.getQualifiedCommand('compareWithSelected'), this.compareWithSelected, this);\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('compare').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('compare')('location').value)) {\n            this.initialize(this.config.location /*, { showCollapseAll: true } */);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & CompareViewConfig {\n        return { ...Container.config.views, ...Container.config.views.compare };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsCompareKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n\n        this._root.dismiss(node);\n    }\n\n    compare(repoPath: string, ref1: string | NamedRef, ref2: string | NamedRef) {\n        return this.addResults(\n            new CompareResultsNode(\n                this,\n                repoPath,\n                typeof ref1 === 'string' ? { ref: ref1 } : ref1,\n                typeof ref2 === 'string' ? { ref: ref2 } : ref2\n            )\n        );\n    }\n\n    compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.compareWithSelected(repoPath, ref);\n    }\n\n    selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.selectForCompare(repoPath, ref);\n    }\n\n    private async addResults(results: ViewNode) {\n        if (!this.visible) {\n            void (await this.show());\n        }\n\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('compare')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsCompareKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsCompareKeepResults, enabled);\n    }\n\n    private swapComparision(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        node.swap();\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, FileHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { FileHistoryTrackerNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class FileHistoryView extends ViewBase<FileHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.fileHistory');\n    }\n\n    getRoot() {\n        return new FileHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('fileHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & FileHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.fileHistory };\n    }\n\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        const root = this.ensureRoot();\n\n        this.setEditorFollowing(false);\n        await root.showHistoryForUri(uri, baseRef);\n        return this.show();\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, LineHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LineHistoryTrackerNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class LineHistoryView extends ViewBase<LineHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.lineHistory');\n    }\n\n    getRoot() {\n        return new LineHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('lineHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & LineHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.lineHistory };\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Event, EventEmitter } from 'vscode';\nimport { configuration, RepositoriesViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { RepositoriesNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class RepositoriesView extends ViewBase<RepositoriesNode> {\n    constructor() {\n        super('gitlens.views.repositories');\n    }\n\n    private _onDidChangeAutoRefresh = new EventEmitter<void>();\n    public get onDidChangeAutoRefresh(): Event<void> {\n        return this._onDidChangeAutoRefresh.event;\n    }\n\n    getRoot() {\n        return new RepositoriesNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOn'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOff'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('repositories').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('autoRefresh').value)) {\n            void this.setAutoRefresh(Container.config.views.repositories.autoRefresh);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get autoRefresh() {\n        return (\n            this.config.autoRefresh &&\n            Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsRepositoriesAutoRefresh, true)\n        );\n    }\n\n    get config(): ViewsConfig & RepositoriesViewConfig {\n        return { ...Container.config.views, ...Container.config.views.repositories };\n    }\n\n    private async setAutoRefresh(enabled: boolean, workspaceEnabled?: boolean) {\n        if (enabled) {\n            if (workspaceEnabled === undefined) {\n                workspaceEnabled = Container.context.workspaceState.get<boolean>(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    true\n                );\n            }\n            else {\n                await Container.context.workspaceState.update(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    workspaceEnabled\n                );\n            }\n        }\n\n        setCommandContext(CommandContext.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);\n\n        this._onDidChangeAutoRefresh.fire();\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(\n            configuration.name('views')('repositories')('files')('layout').value,\n            layout\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, SearchViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, GlyphChars, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitRepoSearchBy } from '../git/gitService';\nimport { Functions, Strings } from '../system';\nimport { ResourceType, ResultsCommitsNode, SearchNode, ViewNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\ninterface SearchQueryResult {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class SearchView extends ViewBase<SearchNode> {\n    constructor() {\n        super('gitlens.views.search');\n\n        setCommandContext(CommandContext.ViewsSearchKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new SearchNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('search').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('search')('location').value)) {\n            this.initialize(this.config.location /*, { showCollapseAll: true } */);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & SearchViewConfig {\n        return { ...Container.config.views, ...Container.config.views.search };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsSearchKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n\n        this._root.dismiss(node);\n    }\n\n    async search(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: {\n            maxCount?: number;\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        await this.show();\n\n        const searchQueryFn = this.getSearchQueryFn(\n            repoPath,\n            Container.git.getLogForSearch(repoPath, search, searchBy, {\n                maxCount: options.maxCount\n            }),\n            options\n        );\n\n        return this.addResults(\n            new ResultsCommitsNode(this, this._root!, repoPath, searchQueryFn, ResourceType.SearchResults)\n        );\n    }\n\n    async showSearchResults(\n        repoPath: string,\n        results: GitLog,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        const label = await this.getSearchLabel(repoPath, options.label, results);\n        const searchQueryFn = Functions.cachedOnce(this.getSearchQueryFn(repoPath, results, options), {\n            label: label,\n            log: results\n        });\n\n        return this.addResults(\n            new ResultsCommitsNode(this, this._root!, repoPath, searchQueryFn, ResourceType.SearchResults)\n        );\n    }\n\n    private async addResults(results: ViewNode) {\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private async getSearchLabel(\n        repoPath: string,\n        label:\n            | string\n            | {\n                  label: string;\n                  resultsType?: { singular: string; plural: string };\n              },\n        log: GitLog | undefined\n    ) {\n        if (typeof label === 'string') return label;\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const resultsType =\n            label.resultsType === undefined ? { singular: 'result', plural: 'results' } : label.resultsType;\n\n        let repository = '';\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(repoPath);\n            repository = ` ${Strings.pad(GlyphChars.Dash, 1, 1)} ${(repo && repo.formattedName) || repoPath}`;\n        }\n\n        return `${Strings.pluralize(resultsType.singular, count, {\n            number: truncated ? `${count}+` : undefined,\n            plural: resultsType.plural,\n            zero: 'No'\n        })} for ${label.label}${repository}`;\n    }\n\n    private getSearchQueryFn(\n        repoPath: string,\n        results: Promise<GitLog | undefined> | GitLog | undefined,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ): (maxCount: number | undefined) => Promise<SearchQueryResult> {\n        return async (maxCount: number | undefined) => {\n            if (Functions.isPromise(results)) {\n                results = await results;\n            }\n\n            let log;\n            if (results !== undefined) {\n                log = await (results.query === undefined\n                    ? (maxCount: number | undefined) => Promise.resolve(results)\n                    : results.query)(maxCount);\n            }\n\n            const label = await this.getSearchLabel(repoPath, options.label, log);\n            return {\n                label: label,\n                log: log\n            };\n        };\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('search')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsSearchKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsSearchKeepResults, enabled);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Disposable, InputBoxOptions, Terminal, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithCommandArgs,\n    DiffWithCommandArgsRevision,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenFileInRemoteCommandArgs,\n    OpenFileRevisionCommandArgs,\n    openWorkspace\n} from '../commands';\nimport { BuiltInCommands, CommandContext, extensionTerminalName, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { toGitLensFSUri } from '../git/fsProvider';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Arrays } from '../system';\nimport {\n    BranchNode,\n    BranchTrackingStatusNode,\n    canDismissNode,\n    CommitFileNode,\n    CommitNode,\n    RemoteNode,\n    RepositoryNode,\n    ResultsFileNode,\n    StashFileNode,\n    StashNode,\n    StatusFileNode,\n    TagNode,\n    ViewNode,\n    ViewRefNode\n} from './nodes';\n\nexport interface RefreshNodeCommandArgs {\n    maxCount?: number;\n}\n\ninterface ICompareSelected {\n    ref: string;\n    repoPath: string | undefined;\n    uri?: Uri;\n}\n\nexport class ViewCommands implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _terminal: Terminal | undefined;\n    private _terminalCwd: string | undefined;\n\n    constructor() {\n        commands.registerCommand(\n            'gitlens.views.refreshNode',\n            (node: ViewNode, args?: RefreshNodeCommandArgs) => node.view.refreshNode(node, args),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.expandNode',\n            (node: ViewNode) => node.view.reveal(node, { select: false, focus: false, expand: 3 }),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.dismissNode',\n            (node: ViewNode) => canDismissNode(node.view) && node.view.dismissNode(node),\n            this\n        );\n\n        commands.registerCommand('gitlens.views.fetch', this.fetch, this);\n        commands.registerCommand('gitlens.views.pull', this.pull, this);\n        commands.registerCommand('gitlens.views.push', this.push, this);\n        commands.registerCommand('gitlens.views.pushWithForce', n => this.push(n, true), this);\n        commands.registerCommand('gitlens.views.closeRepository', this.closeRepository, this);\n\n        commands.registerCommand('gitlens.views.exploreRepoRevision', this.exploreRepoRevision, this);\n\n        commands.registerCommand('gitlens.views.openChanges', this.openChanges, this);\n        commands.registerCommand('gitlens.views.openChangesWithWorking', this.openChangesWithWorking, this);\n        commands.registerCommand('gitlens.views.openFile', this.openFile, this);\n        commands.registerCommand('gitlens.views.openFileRevision', this.openFileRevision, this);\n        commands.registerCommand('gitlens.views.openFileRevisionInRemote', this.openFileRevisionInRemote, this);\n        commands.registerCommand('gitlens.views.openChangedFiles', this.openChangedFiles, this);\n        commands.registerCommand('gitlens.views.openChangedFileChanges', this.openChangedFileChanges, this);\n        commands.registerCommand(\n            'gitlens.views.openChangedFileChangesWithWorking',\n            this.openChangedFileChangesWithWorking,\n            this\n        );\n        commands.registerCommand('gitlens.views.openChangedFileRevisions', this.openChangedFileRevisions, this);\n        commands.registerCommand('gitlens.views.applyChanges', this.applyChanges, this);\n        commands.registerCommand('gitlens.views.checkout', this.checkout, this);\n\n        commands.registerCommand('gitlens.views.stageFile', this.stageFile, this);\n        commands.registerCommand('gitlens.views.unstageFile', this.unstageFile, this);\n\n        commands.registerCommand('gitlens.views.compareAncestryWithWorking', this.compareAncestryWithWorking, this);\n        commands.registerCommand('gitlens.views.compareWithHead', this.compareWithHead, this);\n        commands.registerCommand('gitlens.views.compareWithRemote', this.compareWithRemote, this);\n        commands.registerCommand('gitlens.views.compareWithSelected', this.compareWithSelected, this);\n        commands.registerCommand('gitlens.views.selectForCompare', this.selectForCompare, this);\n        commands.registerCommand('gitlens.views.compareFileWithSelected', this.compareFileWithSelected, this);\n        commands.registerCommand('gitlens.views.selectFileForCompare', this.selectFileForCompare, this);\n        commands.registerCommand('gitlens.views.compareWithWorking', this.compareWithWorking, this);\n\n        commands.registerCommand('gitlens.views.terminalCheckoutBranch', this.terminalCheckoutBranch, this);\n        commands.registerCommand('gitlens.views.terminalCreateBranch', this.terminalCreateBranch, this);\n        commands.registerCommand('gitlens.views.terminalDeleteBranch', this.terminalDeleteBranch, this);\n        commands.registerCommand('gitlens.views.terminalMergeBranch', this.terminalMergeBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranch', this.terminalRebaseBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranchToRemote', this.terminalRebaseBranchToRemote, this);\n        commands.registerCommand(\n            'gitlens.views.terminalSquashBranchIntoCommit',\n            this.terminalSquashBranchIntoCommit,\n            this\n        );\n        commands.registerCommand('gitlens.views.terminalCheckoutCommit', this.terminalCheckoutCommit, this);\n        commands.registerCommand('gitlens.views.terminalCherryPickCommit', this.terminalCherryPickCommit, this);\n        commands.registerCommand('gitlens.views.terminalPushCommit', this.terminalPushCommit, this);\n        commands.registerCommand('gitlens.views.terminalRebaseCommit', this.terminalRebaseCommit, this);\n        commands.registerCommand('gitlens.views.terminalResetCommit', this.terminalResetCommit, this);\n        commands.registerCommand('gitlens.views.terminalRevertCommit', this.terminalRevertCommit, this);\n        commands.registerCommand('gitlens.views.terminalRemoveRemote', this.terminalRemoveRemote, this);\n        commands.registerCommand('gitlens.views.terminalCreateTag', this.terminalCreateTag, this);\n        commands.registerCommand('gitlens.views.terminalDeleteTag', this.terminalDeleteTag, this);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private fetch(node: RemoteNode | RepositoryNode) {\n        if (node instanceof RemoteNode) return node.fetch();\n        if (node instanceof RepositoryNode) return node.fetch();\n        return;\n    }\n\n    private pull(node: RepositoryNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.pull();\n    }\n\n    private push(node: RepositoryNode | BranchTrackingStatusNode, force?: boolean) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.push({ force: force });\n    }\n\n    private async applyChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            !(node instanceof CommitFileNode) &&\n            !(node instanceof StashFileNode) &&\n            !(node instanceof ResultsFileNode)\n        ) {\n            return;\n        }\n\n        void (await this.openFile(node));\n\n        if (node.uri.sha !== undefined && node.uri.sha !== 'HEAD') {\n            void (await Container.git.applyChangesToWorkingFile(node.uri));\n        }\n    }\n\n    private async checkout(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.git.checkout(node.repoPath, node.ref);\n    }\n\n    private closeRepository(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        node.repo.closed = true;\n    }\n\n    private compareWithHead(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, 'HEAD');\n    }\n\n    private compareWithRemote(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n        if (!node.branch.tracking) return;\n\n        return Container.compareView.compare(node.repoPath, node.branch.tracking, node.ref);\n    }\n\n    private compareWithWorking(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, '');\n    }\n\n    private async compareAncestryWithWorking(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        const branch = await Container.git.getBranch(node.repoPath);\n        if (branch === undefined) return;\n\n        const commonAncestor = await Container.git.getMergeBase(node.repoPath, branch.ref, node.ref);\n        if (commonAncestor === undefined) return;\n\n        return Container.compareView.compare(\n            node.repoPath,\n            { ref: commonAncestor, label: `ancestry with ${node.ref} (${GitService.shortenSha(commonAncestor)})` },\n            ''\n        );\n    }\n\n    private compareWithSelected(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.compareWithSelected(node.repoPath, node.ref);\n    }\n\n    private selectForCompare(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.selectForCompare(node.repoPath, node.ref);\n    }\n\n    private compareFileWithSelected(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            this._selectedFile === undefined ||\n            (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) ||\n            node.ref === undefined\n        ) {\n            return;\n        }\n        if (this._selectedFile.repoPath !== node.repoPath) {\n            this.selectFileForCompare(node);\n            return;\n        }\n\n        const selected = this._selectedFile;\n\n        this._selectedFile = undefined;\n        setCommandContext(CommandContext.ViewsCanCompareFile, false);\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: selected.repoPath,\n            lhs: {\n                sha: selected.ref,\n                uri: selected.uri!\n            },\n            rhs: {\n                sha: node.ref,\n                uri: node.uri\n            }\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private _selectedFile: ICompareSelected | undefined;\n\n    private selectFileForCompare(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if ((!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) || node.ref === undefined) return;\n\n        this._selectedFile = {\n            ref: node.ref,\n            repoPath: node.repoPath,\n            uri: node.uri\n        };\n        setCommandContext(CommandContext.ViewsCanCompareFile, true);\n    }\n\n    private exploreRepoRevision(node: ViewRefNode, options: { openInNewWindow?: boolean } = {}) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const uri = toGitLensFSUri(node.ref, node.repoPath);\n        const gitUri = GitUri.fromRevisionUri(uri);\n\n        openWorkspace(uri, `${paths.basename(gitUri.repoPath!)} @ ${gitUri.shortSha}`, options);\n\n        void commands.executeCommand(BuiltInCommands.FocusFilesExplorer);\n    }\n\n    private openChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const command = node.getCommand();\n        if (command === undefined || command.arguments === undefined) return;\n\n        const [uri, args] = command.arguments as [Uri, DiffWithPreviousCommandArgs];\n        args.showOptions!.preview = false;\n        return commands.executeCommand(command.command, uri, args);\n    }\n\n    private async openChangesWithWorking(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const args: DiffWithWorkingCommandArgs = {\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n\n        if (node instanceof ResultsFileNode) {\n            args.commit = await Container.git.getLogCommitForFile(node.repoPath, node.uri.fsPath, {\n                ref: node.uri.sha,\n                firstIfNotFound: true,\n                reverse: true\n            });\n        }\n\n        return commands.executeCommand(Commands.DiffWithWorking, node.uri, args);\n    }\n\n    private openFile(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        return openEditor(node.uri, { preserveFocus: true, preview: false });\n    }\n\n    private openFileRevision(\n        node: CommitFileNode | StashFileNode | ResultsFileNode,\n        options: OpenFileRevisionCommandArgs = { showOptions: { preserveFocus: true, preview: false } }\n    ) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        let uri = options.uri;\n        if (uri == null) {\n            if (node instanceof ResultsFileNode) {\n                uri = GitUri.toRevisionUri(node.uri);\n            }\n            else {\n                uri =\n                    node.commit.status === 'D'\n                        ? GitUri.toRevisionUri(\n                              node.commit.previousSha!,\n                              node.commit.previousUri.fsPath,\n                              node.commit.repoPath\n                          )\n                        : GitUri.toRevisionUri(node.uri);\n            }\n        }\n\n        return openEditor(uri, options.showOptions || { preserveFocus: true, preview: false });\n    }\n\n    private async openChangedFileChanges(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = node.commit.files.map(s => GitUri.fromFile(s, repoPath));\n\n        for (const uri of uris) {\n            await this.openDiffWith(\n                repoPath,\n                {\n                    uri: uri,\n                    sha:\n                        node.commit.previousSha !== undefined ? node.commit.previousSha : GitService.deletedOrMissingSha\n                },\n                { uri: uri, sha: node.commit.sha },\n                options\n            );\n        }\n    }\n\n    private async openChangedFileChangesWithWorking(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            f.status !== 'D' ? GitUri.fromFile(f, repoPath) : undefined\n        );\n\n        for (const uri of uris) {\n            await this.openDiffWith(repoPath, { uri: uri, sha: node.commit.sha }, { uri: uri, sha: '' }, options);\n        }\n    }\n\n    private async openChangedFiles(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f => GitUri.fromFile(f, repoPath));\n\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openChangedFileRevisions(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? node.commit.previousFileSha : node.commit.sha,\n                f,\n                node.commit.repoPath\n            )\n        );\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openDiffWith(\n        repoPath: string,\n        lhs: DiffWithCommandArgsRevision,\n        rhs: DiffWithCommandArgsRevision,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: repoPath,\n            lhs: lhs,\n            rhs: rhs,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private async openFileRevisionInRemote(node: CommitFileNode | StashFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        return commands.executeCommand(Commands.OpenFileInRemote, node.commit.toGitUri(node.commit.status === 'D'), {\n            range: false\n        } as OpenFileInRemoteCommandArgs);\n    }\n\n    private async stageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.stageFile(node.repoPath, node.file.fileName));\n    }\n\n    private async unstageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.unStageFile(node.repoPath, node.file.fileName));\n    }\n\n    async terminalCheckoutBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    async terminalCreateBranch(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        let remoteBranch = false;\n        let value = undefined;\n        if (node instanceof BranchNode && node.branch.remote) {\n            remoteBranch = true;\n            value = node.branch.getName();\n        }\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a branch name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Branch name`,\n            value: value\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        this.sendTerminalCommand('branch', `${remoteBranch ? '-t ' : ''}${name} ${node.ref}`, node.repoPath);\n    }\n\n    terminalDeleteBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        if (node.branch.remote) {\n            this.sendTerminalCommand('push', `${node.branch.getRemote()} :${node.branch.getName()}`, node.repoPath);\n        }\n        else {\n            this.sendTerminalCommand('branch', `-d ${node.ref}`, node.repoPath);\n        }\n    }\n\n    terminalMergeBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranchToRemote(node: BranchNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchNode) {\n            if (!node.branch.current || !node.branch.tracking) return;\n\n            this.sendTerminalCommand('rebase', `-i ${node.branch.tracking}`, node.repoPath);\n        }\n        else if (node instanceof BranchTrackingStatusNode) {\n            this.sendTerminalCommand('rebase', `-i ${node.status.upstream}`, node.status.repoPath);\n        }\n    }\n\n    terminalSquashBranchIntoCommit(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `--squash ${node.ref}`, node.repoPath);\n    }\n\n    terminalCheckoutCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    terminalCherryPickCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('cherry-pick', `-e ${node.ref}`, node.repoPath);\n    }\n\n    async terminalPushCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        const branch = node.branch || (await Container.git.getBranch(node.repoPath));\n        if (branch === undefined) return;\n\n        this.sendTerminalCommand('push', `${branch.getRemote()} ${node.ref}:${branch.getName()}`, node.repoPath);\n    }\n\n    terminalRebaseCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}^`, node.repoPath);\n    }\n\n    terminalResetCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('reset', `--soft ${node.ref}`, node.repoPath);\n    }\n\n    terminalRevertCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('revert', `-e ${node.ref}`, node.repoPath);\n    }\n\n    terminalRemoveRemote(node: RemoteNode) {\n        if (!(node instanceof RemoteNode)) return;\n\n        this.sendTerminalCommand('remote', `remove ${node.remote.name}`, node.remote.repoPath);\n    }\n\n    async terminalCreateTag(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a tag name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag name`\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        const message = await window.showInputBox({\n            prompt: `Please provide an optional message to annotate the tag (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag message`\n        } as InputBoxOptions);\n        if (message === undefined) return;\n\n        const args = `${message.length !== 0 ? `-a -m \"${message}\" ` : ''}${name} ${node.ref}`;\n        this.sendTerminalCommand('tag', args, node.repoPath);\n    }\n\n    terminalDeleteTag(node: TagNode) {\n        if (!(node instanceof TagNode)) return;\n\n        this.sendTerminalCommand('tag', `-d ${node.ref}`, node.repoPath);\n    }\n\n    private ensureTerminal(cwd: string): Terminal {\n        if (this._terminal === undefined) {\n            this._terminal = window.createTerminal(extensionTerminalName);\n            this._disposable = window.onDidCloseTerminal((e: Terminal) => {\n                if (e.name === extensionTerminalName) {\n                    this._terminal = undefined;\n                    this._disposable!.dispose();\n                    this._disposable = undefined;\n                }\n            }, this);\n\n            Container.context.subscriptions.push(this._disposable);\n            this._terminalCwd = undefined;\n        }\n\n        if (this._terminalCwd !== cwd) {\n            this._terminal.sendText(`cd \"${cwd}\"`, true);\n            this._terminalCwd = cwd;\n        }\n\n        return this._terminal;\n    }\n\n    private sendTerminalCommand(command: string, args: string, cwd: string) {\n        // let git = GitService.getGitPath();\n        // if (git.includes(' ')) {\n        //     git = `\"${git}\"`;\n        // }\n\n        const terminal = this.ensureTerminal(cwd);\n        terminal.show(false);\n        terminal.sendText(`git ${command} ${args}`, false);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    commands,\n    Disposable,\n    ExtensionContext,\n    SourceControlResourceGroup,\n    SourceControlResourceState,\n    TextDocumentShowOptions,\n    TextEditor,\n    TextEditorEdit,\n    Uri,\n    ViewColumn,\n    window,\n    workspace\n} from 'vscode';\nimport { BuiltInCommands, DocumentSchemes, ImageMimetypes } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitCommit, GitFile, GitRemote, GitUri, Repository } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, RepositoriesQuickPick } from '../quickpicks';\n// import { Telemetry } from '../telemetry';\nimport { ViewNode, ViewRefNode } from '../views/nodes';\n\nexport enum Commands {\n    ClearFileAnnotations = 'gitlens.clearFileAnnotations',\n    CloseUnchangedFiles = 'gitlens.closeUnchangedFiles',\n    ComputingFileAnnotations = 'gitlens.computingFileAnnotations',\n    CopyMessageToClipboard = 'gitlens.copyMessageToClipboard',\n    CopyRemoteFileUrlToClipboard = 'gitlens.copyRemoteFileUrlToClipboard',\n    CopyShaToClipboard = 'gitlens.copyShaToClipboard',\n    DiffDirectory = 'gitlens.diffDirectory',\n    DiffDirectoryWithHead = 'gitlens.diffDirectoryWithHead',\n    DiffHeadWithBranch = 'gitlens.diffHeadWithBranch',\n    DiffWorkingWithBranch = 'gitlens.diffWorkingWithBranch',\n    ExternalDiffAll = 'gitlens.externalDiffAll',\n    DiffWith = 'gitlens.diffWith',\n    DiffWithBranch = 'gitlens.diffWithBranch',\n    DiffWithNext = 'gitlens.diffWithNext',\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithPreviousInDiff = 'gitlens.diffWithPreviousInDiff',\n    DiffLineWithPrevious = 'gitlens.diffLineWithPrevious',\n    DiffWithRevision = 'gitlens.diffWithRevision',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    DiffLineWithWorking = 'gitlens.diffLineWithWorking',\n    ExternalDiff = 'gitlens.externalDiff',\n    FetchRepositories = 'gitlens.fetchRepositories',\n    OpenChangedFiles = 'gitlens.openChangedFiles',\n    OpenBranchesInRemote = 'gitlens.openBranchesInRemote',\n    OpenBranchInRemote = 'gitlens.openBranchInRemote',\n    OpenCommitInRemote = 'gitlens.openCommitInRemote',\n    OpenFileInRemote = 'gitlens.openFileInRemote',\n    OpenFileRevision = 'gitlens.openFileRevision',\n    OpenInRemote = 'gitlens.openInRemote',\n    OpenRepoInRemote = 'gitlens.openRepoInRemote',\n    OpenWorkingFile = 'gitlens.openWorkingFile',\n    PullRepositories = 'gitlens.pullRepositories',\n    PushRepositories = 'gitlens.pushRepositories',\n    ResetSuppressedWarnings = 'gitlens.resetSuppressedWarnings',\n    ShowCommitInView = 'gitlens.showCommitInView',\n    SearchCommits = 'gitlens.showCommitSearch',\n    SearchCommitsInView = 'gitlens.views.search.searchCommits',\n    ShowCompareView = 'gitlens.showCompareView',\n    ShowFileHistoryView = 'gitlens.showFileHistoryView',\n    ShowFileHistoryInView = 'gitlens.showFileHistoryInView',\n    ShowLineHistoryView = 'gitlens.showLineHistoryView',\n    ShowLastQuickPick = 'gitlens.showLastQuickPick',\n    ShowQuickBranchHistory = 'gitlens.showQuickBranchHistory',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ShowQuickRepoStatus = 'gitlens.showQuickRepoStatus',\n    ShowQuickRevisionDetails = 'gitlens.showQuickRevisionDetails',\n    ShowQuickStashList = 'gitlens.showQuickStashList',\n    ShowRepositoriesView = 'gitlens.showRepositoriesView',\n    ShowSearchView = 'gitlens.showSearchView',\n    ShowSettingsPage = 'gitlens.showSettingsPage',\n    ShowWelcomePage = 'gitlens.showWelcomePage',\n    StashApply = 'gitlens.stashApply',\n    StashDelete = 'gitlens.stashDelete',\n    StashSave = 'gitlens.stashSave',\n    SupportGitLens = 'gitlens.supportGitLens',\n    SwitchMode = 'gitlens.switchMode',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame',\n    ToggleFileHeatmap = 'gitlens.toggleFileHeatmap',\n    ToggleFileRecentChanges = 'gitlens.toggleFileRecentChanges',\n    ToggleLineBlame = 'gitlens.toggleLineBlame',\n    ToggleReviewMode = 'gitlens.toggleReviewMode',\n    ToggleZenMode = 'gitlens.toggleZenMode',\n    ViewsOpenDirectoryDiff = 'gitlens.views.openDirectoryDiff',\n    ViewsOpenDirectoryDiffWithWorking = 'gitlens.views.openDirectoryDiffWithWorking'\n}\n\ninterface CommandConstructor {\n    new (): any;\n}\n\nconst registrableCommands: CommandConstructor[] = [];\n\nexport function command(): ClassDecorator {\n    return (target: any) => {\n        registrableCommands.push(target);\n    };\n}\n\nexport function registerCommands(context: ExtensionContext): void {\n    for (const c of registrableCommands) {\n        context.subscriptions.push(new c());\n    }\n}\n\nexport function getCommandUri(uri?: Uri, editor?: TextEditor): Uri | undefined {\n    if (uri instanceof Uri) return uri;\n    if (editor == null) return undefined;\n\n    const document = editor.document;\n    if (document == null) return undefined;\n\n    return document.uri;\n}\n\nexport async function getRepoPathOrActiveOrPrompt(\n    uri: Uri | undefined,\n    editor: TextEditor | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPathOrActive(uri, editor);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport async function getRepoPathOrPrompt(\n    uri: Uri | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPath(uri);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport interface CommandContextParsingOptions {\n    editor: boolean;\n    uri: boolean;\n}\n\nexport interface CommandBaseContext {\n    command: string;\n    editor?: TextEditor;\n    uri?: Uri;\n}\n\nexport interface CommandScmGroupsContext extends CommandBaseContext {\n    type: 'scm-groups';\n    scmResourceGroups: SourceControlResourceGroup[];\n}\n\nexport interface CommandScmStatesContext extends CommandBaseContext {\n    type: 'scm-states';\n    scmResourceStates: SourceControlResourceState[];\n}\n\nexport interface CommandUnknownContext extends CommandBaseContext {\n    type: 'unknown';\n}\n\nexport interface CommandUriContext extends CommandBaseContext {\n    type: 'uri';\n}\n\n// export interface CommandViewContext extends CommandBaseContext {\n//     type: 'view';\n// }\n\nexport interface CommandViewItemContext extends CommandBaseContext {\n    type: 'viewItem';\n    node: ViewNode;\n}\n\nexport function isCommandViewContextWithBranch(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { branch: GitBranch } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { branch: GitBranch }).branch instanceof GitBranch;\n}\n\nexport function isCommandViewContextWithCommit<T extends GitCommit>(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: T } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { commit: GitCommit }).commit instanceof GitCommit;\n}\n\nexport function isCommandViewContextWithFile(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; repoPath: string };\n    return node.file !== undefined && (node.file.repoPath !== undefined || node.repoPath !== undefined);\n}\n\nexport function isCommandViewContextWithFileCommit(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: GitCommit; file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { commit: GitCommit; file: GitFile; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.commit instanceof GitCommit &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithFileRefs(\n    context: CommandContext\n): context is CommandViewItemContext & {\n    node: ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n} {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.ref1 !== undefined &&\n        node.ref2 !== undefined &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithRef(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { ref: string } } {\n    return context.type === 'viewItem' && context.node instanceof ViewRefNode;\n}\n\nexport function isCommandViewContextWithRemote(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { remote: GitRemote } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { remote: GitRemote }).remote instanceof GitRemote;\n}\n\nexport function isCommandViewContextWithRepo(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repo: Repository } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { repo?: Repository }).repo instanceof Repository;\n}\n\nexport type CommandContext =\n    | CommandScmGroupsContext\n    | CommandScmStatesContext\n    | CommandUnknownContext\n    | CommandUriContext\n    // | CommandViewContext\n    | CommandViewItemContext;\n\nfunction isScmResourceGroup(group: any): group is SourceControlResourceGroup {\n    if (group == null) return false;\n\n    return (\n        (group as SourceControlResourceGroup).id !== undefined &&\n        (group.handle !== undefined ||\n            (group as SourceControlResourceGroup).label !== undefined ||\n            (group as SourceControlResourceGroup).resourceStates !== undefined)\n    );\n}\n\nfunction isScmResourceState(state: any): state is SourceControlResourceState {\n    if (state == null) return false;\n\n    return (state as SourceControlResourceState).resourceUri != null;\n}\n\nfunction isTextEditor(editor: any): editor is TextEditor {\n    if (editor == null) return false;\n\n    return (\n        editor.id !== undefined &&\n        ((editor as TextEditor).edit !== undefined || (editor as TextEditor).document !== undefined)\n    );\n}\n\nexport abstract class Command implements Disposable {\n    static getMarkdownCommandArgsCore<T>(command: Commands, args: T): string {\n        return `command:${command}?${encodeURIComponent(JSON.stringify(args))}`;\n    }\n\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: false, uri: false };\n\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (typeof command === 'string') {\n            this._disposable = commands.registerCommand(\n                command,\n                (...args: any[]) => this._execute(command, ...args),\n                this\n            );\n\n            return;\n        }\n\n        const subscriptions = command.map(cmd =>\n            commands.registerCommand(cmd, (...args: any[]) => this._execute(cmd, ...args), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(...args);\n    }\n\n    abstract execute(...args: any[]): any;\n\n    protected _execute(command: string, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n\n        const [context, rest] = Command.parseContext(command, { ...this.contextParsingOptions }, ...args);\n        return this.preExecute(context, ...rest);\n    }\n\n    private static parseContext(\n        command: string,\n        options: CommandContextParsingOptions,\n        ...args: any[]\n    ): [CommandContext, any[]] {\n        let editor: TextEditor | undefined = undefined;\n\n        let firstArg = args[0];\n        if (options.editor && (firstArg == null || isTextEditor(firstArg))) {\n            editor = firstArg;\n            args = args.slice(1);\n            firstArg = args[0];\n        }\n\n        if (options.uri && (firstArg == null || firstArg instanceof Uri)) {\n            const [uri, ...rest] = args as [Uri, any];\n            if (uri !== undefined) {\n                return [{ command: command, type: 'uri', editor: editor, uri: uri }, rest];\n            }\n            else {\n                args = args.slice(1);\n            }\n        }\n\n        if (firstArg instanceof ViewNode) {\n            const [node, ...rest] = args as [ViewNode, any];\n            return [{ command: command, type: 'viewItem', node: node, uri: node.uri }, rest];\n        }\n\n        if (isScmResourceState(firstArg)) {\n            const states = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceState(arg)) break;\n\n                count++;\n                states.push(arg);\n            }\n\n            return [\n                { command: command, type: 'scm-states', scmResourceStates: states, uri: states[0].resourceUri },\n                args.slice(count)\n            ];\n        }\n\n        if (isScmResourceGroup(firstArg)) {\n            const groups = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceGroup(arg)) break;\n\n                count++;\n                groups.push(arg);\n            }\n\n            return [{ command: command, type: 'scm-groups', scmResourceGroups: groups }, args.slice(count)];\n        }\n\n        return [{ command: command, type: 'unknown', editor: editor }, args];\n    }\n}\n\nexport abstract class ActiveEditorCommand extends Command {\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: true, uri: true };\n\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(context.editor, context.uri, ...args);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        return super._execute(command, window.activeTextEditor, ...args);\n    }\n\n    abstract execute(editor?: TextEditor, ...args: any[]): any;\n}\n\nlet lastCommand: { command: string; args: any[] } | undefined = undefined;\nexport function getLastCommand() {\n    return lastCommand;\n}\n\nexport abstract class ActiveEditorCachedCommand extends ActiveEditorCommand {\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        lastCommand = {\n            command: command,\n            args: args\n        };\n        return super._execute(command, ...args);\n    }\n\n    abstract execute(editor: TextEditor, ...args: any[]): any;\n}\n\nexport abstract class EditorCommand implements Disposable {\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (!Array.isArray(command)) {\n            command = [command];\n        }\n\n        const subscriptions = [];\n        for (const cmd of command) {\n            subscriptions.push(\n                commands.registerTextEditorCommand(\n                    cmd,\n                    (editor: TextEditor, edit: TextEditorEdit, ...args: any[]) =>\n                        this.executeCore(cmd, editor, edit, ...args),\n                    this\n                )\n            );\n        }\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private executeCore(command: string, editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n        return this.execute(editor, edit, ...args);\n    }\n\n    abstract execute(editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any;\n}\n\nexport async function openEditor(\n    uri: Uri,\n    options: TextDocumentShowOptions & { rethrow?: boolean } = {}\n): Promise<TextEditor | undefined> {\n    const { rethrow, ...opts } = options;\n    try {\n        if (uri instanceof GitUri) {\n            uri = uri.documentUri();\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens && ImageMimetypes[paths.extname(uri.fsPath)]) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        const document = await workspace.openTextDocument(uri);\n        return window.showTextDocument(document, {\n            preserveFocus: false,\n            preview: true,\n            viewColumn: ViewColumn.Active,\n            ...opts\n        });\n    }\n    catch (ex) {\n        const msg = ex.toString();\n        if (msg.includes('File seems to be binary and cannot be opened as text')) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        if (rethrow) throw ex;\n\n        Logger.error(ex, 'openEditor');\n        return undefined;\n    }\n}\n\nexport function openWorkspace(uri: Uri, name: string, options: { openInNewWindow?: boolean } = {}) {\n    if (options.openInNewWindow) {\n        commands.executeCommand(BuiltInCommands.OpenFolder, uri, true);\n\n        return true;\n    }\n\n    return workspace.updateWorkspaceFolders(\n        workspace.workspaceFolders !== undefined ? workspace.workspaceFolders.length : 0,\n        null,\n        { uri, name }\n    );\n}\n","'use strict';\nimport * as fs from 'fs';\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Uri,\n    ViewColumn,\n    WebviewPanel,\n    WebviewPanelOnDidChangeViewStateEvent,\n    window,\n    workspace\n} from 'vscode';\nimport { Config, configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Message, SettingsChangedMessage } from '../ui/ipc';\n\nexport abstract class WebviewEditor<TBootstrap> implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _disposablePanel: Disposable | undefined;\n    private _panel: WebviewPanel | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            ...this.registerCommands()\n        );\n    }\n\n    abstract get filename(): string;\n    abstract get id(): string;\n    abstract get title(): string;\n\n    abstract getBootstrap(): TBootstrap;\n    abstract registerCommands(): Disposable[];\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        this._disposablePanel && this._disposablePanel.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        this.postUpdatedConfiguration();\n    }\n\n    private onPanelDisposed() {\n        this._disposablePanel && this._disposablePanel.dispose();\n        this._panel = undefined;\n    }\n\n    private onViewStateChanged(e: WebviewPanelOnDidChangeViewStateEvent) {\n        Logger.log(\n            'WebviewEditor.onViewStateChanged',\n            `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`\n        );\n\n        // Anytime the webview becomes active, make sure it has the most up-to-date config\n        if (e.webviewPanel.active) {\n            this.postUpdatedConfiguration();\n        }\n    }\n\n    protected async onMessageReceived(e: Message) {\n        if (e == null) return;\n\n        Logger.log(`WebviewEditor.onMessageReceived: type=${e.type}, data=${JSON.stringify(e)}`);\n\n        switch (e.type) {\n            case 'saveSettings':\n                const target = e.scope === 'workspace' ? ConfigurationTarget.Workspace : ConfigurationTarget.Global;\n\n                for (const key in e.changes) {\n                    const inspect = await configuration.inspect(key)!;\n\n                    const value = e.changes[key];\n                    await configuration.update(key, value === inspect.defaultValue ? undefined : value, target);\n                }\n\n                for (const key of e.removes) {\n                    await configuration.update(key, undefined, target);\n                }\n                break;\n        }\n    }\n\n    get visible() {\n        return this._panel === undefined ? false : this._panel.visible;\n    }\n\n    hide() {\n        if (this._panel === undefined) return;\n\n        this._panel.dispose();\n    }\n\n    async show(): Promise<void> {\n        const html = await this.getHtml();\n\n        if (this._panel === undefined) {\n            this._panel = window.createWebviewPanel(\n                this.id,\n                this.title,\n                { viewColumn: ViewColumn.Active, preserveFocus: false },\n                {\n                    retainContextWhenHidden: true,\n                    enableFindWidget: true,\n                    enableCommandUris: true,\n                    enableScripts: true\n                }\n            );\n\n            this._panel.iconPath = Uri.file(Container.context.asAbsolutePath('images/gitlens-icon.png'));\n            this._disposablePanel = Disposable.from(\n                this._panel,\n                this._panel.onDidDispose(this.onPanelDisposed, this),\n                this._panel.onDidChangeViewState(this.onViewStateChanged, this),\n                this._panel.webview.onDidReceiveMessage(this.onMessageReceived, this)\n            );\n\n            this._panel.webview.html = html;\n        }\n        else {\n            // Reset the html to get the webview to reload\n            this._panel.webview.html = '';\n            this._panel.webview.html = html;\n            this._panel.reveal(ViewColumn.Active, false);\n        }\n    }\n\n    private _html: string | undefined;\n    private async getHtml(): Promise<string> {\n        let content;\n        // When we are debugging avoid any caching so that we can change the html and have it update without reloading\n        if (Logger.isDebugging) {\n            content = await new Promise<string>((resolve, reject) => {\n                fs.readFile(Container.context.asAbsolutePath(this.filename), 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n        }\n        else {\n            if (this._html !== undefined) return this._html;\n\n            const doc = await workspace.openTextDocument(Container.context.asAbsolutePath(this.filename));\n            content = doc.getText();\n        }\n\n        this._html = content.replace(\n            /{{root}}/g,\n            Uri.file(Container.context.asAbsolutePath('.'))\n                .with({ scheme: 'vscode-resource' })\n                .toString()\n        );\n\n        if (this._html.includes(\"'{{bootstrap}}'\")) {\n            this._html = this._html.replace(\"'{{bootstrap}}'\", JSON.stringify(this.getBootstrap()));\n        }\n\n        return this._html;\n    }\n\n    private postMessage(message: Message) {\n        if (this._panel === undefined) return false;\n\n        return this._panel!.webview.postMessage(message);\n    }\n\n    private postUpdatedConfiguration() {\n        // Make sure to get the raw config, not from the container which has the modes mixed in\n        return this.postMessage({\n            type: 'settingsChanged',\n            config: configuration.get<Config>()\n        } as SettingsChangedMessage);\n    }\n}\n","'use strict';\nimport { commands, workspace } from 'vscode';\nimport { Commands } from '../commands';\nimport { Config, configuration } from '../configuration';\nimport { SettingsBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class SettingsEditor extends WebviewEditor<SettingsBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'settings.html';\n    }\n\n    get id(): string {\n        return 'gitlens.settings';\n    }\n\n    get title(): string {\n        return 'GitLens Settings';\n    }\n\n    getBootstrap() {\n        return {\n            // Make sure to get the raw config, not from the container which has the modes mixed in\n            config: configuration.get<Config>(),\n            scope: 'user',\n            scopes: this.getAvailableScopes()\n        } as SettingsBootstrap;\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowSettingsPage, this.show, this)];\n    }\n\n    private getAvailableScopes(): ['user' | 'workspace', string][] {\n        const scopes: ['user' | 'workspace', string][] = [['user', 'User']];\n        if (workspace.workspaceFolders !== undefined && workspace.workspaceFolders.length) {\n            scopes.push(['workspace', 'Workspace']);\n        }\n        return scopes;\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Commands } from '../commands';\nimport { Container } from '../container';\nimport { WelcomeBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class WelcomeEditor extends WebviewEditor<WelcomeBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'welcome.html';\n    }\n\n    get id(): string {\n        return 'gitlens.welcome';\n    }\n\n    get title(): string {\n        return 'Welcome to GitLens';\n    }\n\n    getBootstrap(): WelcomeBootstrap {\n        return {\n            config: Container.config\n        };\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowWelcomePage, this.show, this)];\n    }\n}\n","'use strict';\nimport { Disposable, ExtensionContext } from 'vscode';\nimport { FileAnnotationController } from './annotations/fileAnnotationController';\nimport { LineAnnotationController } from './annotations/lineAnnotationController';\nimport { GitCodeLensController } from './codelens/codeLensController';\nimport { Config, configuration } from './configuration';\nimport { GitFileSystemProvider } from './git/fsProvider';\nimport { GitService } from './git/gitService';\nimport { LineHoverController } from './hovers/lineHoverController';\nimport { Keyboard } from './keyboard';\nimport { StatusBarController } from './statusbar/statusBarController';\nimport { GitDocumentTracker } from './trackers/gitDocumentTracker';\nimport { GitLineTracker } from './trackers/gitLineTracker';\nimport { CompareView } from './views/compareView';\nimport { FileHistoryView } from './views/fileHistoryView';\nimport { LineHistoryView } from './views/lineHistoryView';\nimport { RepositoriesView } from './views/repositoriesView';\nimport { SearchView } from './views/searchView';\nimport { ViewCommands } from './views/viewCommands';\nimport { VslsController } from './vsls/vsls';\nimport { SettingsEditor } from './webviews/settingsEditor';\nimport { WelcomeEditor } from './webviews/welcomeEditor';\n\nexport class Container {\n    static initialize(context: ExtensionContext, config: Config) {\n        this._context = context;\n        this._config = Container.applyMode(config);\n\n        context.subscriptions.push((this._lineTracker = new GitLineTracker()));\n        context.subscriptions.push((this._tracker = new GitDocumentTracker()));\n        context.subscriptions.push((this._vsls = new VslsController()));\n\n        context.subscriptions.push((this._git = new GitService()));\n\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, initialize the tracker once the GitService is loaded\n        this._tracker.initialize();\n\n        context.subscriptions.push((this._fileAnnotationController = new FileAnnotationController()));\n        context.subscriptions.push((this._lineAnnotationController = new LineAnnotationController()));\n        context.subscriptions.push((this._lineHoverController = new LineHoverController()));\n        context.subscriptions.push((this._statusBarController = new StatusBarController()));\n        context.subscriptions.push((this._codeLensController = new GitCodeLensController()));\n        context.subscriptions.push((this._keyboard = new Keyboard()));\n        context.subscriptions.push((this._settingsEditor = new SettingsEditor()));\n        context.subscriptions.push((this._welcomeEditor = new WelcomeEditor()));\n\n        if (config.views.compare.enabled) {\n            context.subscriptions.push((this._compareView = new CompareView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('compare')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._compareView = new CompareView()));\n                }\n            });\n        }\n\n        if (config.views.fileHistory.enabled) {\n            context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.lineHistory.enabled) {\n            context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.repositories.enabled) {\n            context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('repositories')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n                }\n            });\n        }\n\n        if (config.views.search.enabled) {\n            context.subscriptions.push((this._searchView = new SearchView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('search')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._searchView = new SearchView()));\n                }\n            });\n        }\n\n        context.subscriptions.push(new GitFileSystemProvider());\n    }\n\n    private static _codeLensController: GitCodeLensController;\n    static get codeLens() {\n        return this._codeLensController;\n    }\n\n    private static _compareView: CompareView | undefined;\n    static get compareView() {\n        if (this._compareView === undefined) {\n            this._context.subscriptions.push((this._compareView = new CompareView()));\n        }\n\n        return this._compareView;\n    }\n\n    private static _config: Config | undefined;\n    static get config() {\n        if (this._config === undefined) {\n            this._config = Container.applyMode(configuration.get<Config>());\n        }\n        return this._config;\n    }\n\n    private static _context: ExtensionContext;\n    static get context() {\n        return this._context;\n    }\n\n    private static _fileAnnotationController: FileAnnotationController;\n    static get fileAnnotations() {\n        return this._fileAnnotationController;\n    }\n\n    private static _fileHistoryView: FileHistoryView | undefined;\n    static get fileHistoryView() {\n        if (this._fileHistoryView === undefined) {\n            this._context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n\n        return this._fileHistoryView;\n    }\n\n    private static _git: GitService;\n    static get git() {\n        return this._git;\n    }\n\n    private static _keyboard: Keyboard;\n    static get keyboard() {\n        return this._keyboard;\n    }\n\n    private static _lineAnnotationController: LineAnnotationController;\n    static get lineAnnotations() {\n        return this._lineAnnotationController;\n    }\n\n    private static _lineHistoryView: LineHistoryView | undefined;\n    static get lineHistoryView() {\n        if (this._lineHistoryView === undefined) {\n            this._context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n\n        return this._lineHistoryView;\n    }\n\n    private static _lineHoverController: LineHoverController;\n    static get lineHovers() {\n        return this._lineHoverController;\n    }\n\n    private static _lineTracker: GitLineTracker;\n    static get lineTracker() {\n        return this._lineTracker;\n    }\n\n    private static _repositoriesView: RepositoriesView | undefined;\n    static get repositoriesView(): RepositoriesView {\n        return this._repositoriesView!;\n    }\n\n    private static _searchView: SearchView | undefined;\n    static get searchView() {\n        if (this._searchView === undefined) {\n            this._context.subscriptions.push((this._searchView = new SearchView()));\n        }\n\n        return this._searchView;\n    }\n\n    private static _settingsEditor: SettingsEditor;\n    static get settingsEditor() {\n        return this._settingsEditor;\n    }\n\n    private static _statusBarController: StatusBarController;\n    static get statusBar() {\n        return this._statusBarController;\n    }\n\n    private static _tracker: GitDocumentTracker;\n    static get tracker() {\n        return this._tracker;\n    }\n\n    private static _viewCommands: ViewCommands | undefined;\n    static get viewCommands() {\n        if (this._viewCommands === undefined) {\n            this._context.subscriptions.push((this._viewCommands = new ViewCommands()));\n        }\n        return this._viewCommands;\n    }\n\n    private static _vsls: VslsController;\n    static get vsls() {\n        return this._vsls;\n    }\n\n    private static _welcomeEditor: WelcomeEditor;\n    static get welcomeEditor() {\n        return this._welcomeEditor;\n    }\n\n    static resetConfig() {\n        this._config = undefined;\n    }\n\n    private static applyMode(config: Config) {\n        if (!config.mode.active) return config;\n\n        const mode = config.modes[config.mode.active];\n        if (mode == null) return config;\n\n        if (mode.codeLens != null) {\n            config.codeLens.enabled = mode.codeLens;\n        }\n\n        if (mode.currentLine != null) {\n            config.currentLine.enabled = mode.currentLine;\n        }\n\n        if (mode.hovers != null) {\n            config.hovers.enabled = mode.hovers;\n        }\n\n        if (mode.statusBar != null) {\n            config.statusBar.enabled = mode.statusBar;\n        }\n\n        if (mode.views != null) {\n            config.views.compare.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.fileHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.lineHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.repositories.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.search.enabled = mode.views;\n        }\n\n        return config;\n    }\n}\n","'use strict';\nexport * from './ui/config';\n\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Uri,\n    workspace\n} from 'vscode';\nimport { extensionId } from './constants';\nimport { Container } from './container';\nimport { clearGravatarCache } from './git/gitService';\nimport { Functions } from './system';\nimport { Config } from './ui/config';\n\nconst emptyConfig: any = new Proxy<any>({} as Config, {\n    get(target, propKey, receiver) {\n        return emptyConfig;\n    }\n});\n\nexport class Configuration {\n    static configure(context: ExtensionContext) {\n        context.subscriptions.push(\n            workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration)\n        );\n    }\n\n    private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n    get onDidChange(): Event<ConfigurationChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private readonly _configAffectedByMode: string[];\n\n    constructor() {\n        this._configAffectedByMode = [\n            `gitlens.${this.name('mode').value}`,\n            `gitlens.${this.name('modes').value}`,\n            `gitlens.${this.name('codeLens').value}`,\n            `gitlens.${this.name('currentLine').value}`,\n            `gitlens.${this.name('hovers').value}`,\n            `gitlens.${this.name('statusBar').value}`,\n            `gitlens.${this.name('views')('compare').value}`,\n            `gitlens.${this.name('views')('fileHistory').value}`,\n            `gitlens.${this.name('views')('lineHistory').value}`,\n            `gitlens.${this.name('views')('repositories').value}`,\n            `gitlens.${this.name('views')('search').value}`\n        ];\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!e.affectsConfiguration(extensionId, null!)) return;\n\n        Container.resetConfig();\n\n        if (configuration.changed(e, configuration.name('defaultGravatarsStyle').value)) {\n            clearGravatarCache();\n        }\n\n        if (\n            configuration.changed(e, configuration.name('mode').value) ||\n            configuration.changed(e, configuration.name('modes').value)\n        ) {\n            const original = e.affectsConfiguration;\n            e = {\n                ...e,\n                affectsConfiguration: (section: string, resource?: Uri) => {\n                    if (this._configAffectedByMode.some(n => section.startsWith(n))) {\n                        return true;\n                    }\n\n                    return original(section, resource);\n                }\n            } as ConfigurationChangeEvent;\n        }\n\n        this._onDidChange.fire(e);\n    }\n\n    readonly initializingChangeEvent: ConfigurationChangeEvent = {\n        affectsConfiguration: (section: string, resource?: Uri) => true\n    };\n\n    get<T>(section?: string, resource?: Uri | null, defaultValue?: T) {\n        return defaultValue === undefined\n            ? workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section)!\n            : workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section, defaultValue)!;\n    }\n\n    changed(e: ConfigurationChangeEvent, section: string, resource?: Uri | null) {\n        return e.affectsConfiguration(`${extensionId}.${section}`, resource!);\n    }\n\n    initializing(e: ConfigurationChangeEvent) {\n        return e === this.initializingChangeEvent;\n    }\n\n    inspect(section?: string, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n            .inspect(section === undefined ? extensionId : section);\n    }\n\n    async migrate<TFrom, TTo>(\n        from: string,\n        to: string,\n        options: { fallbackValue?: TTo; migrationFn?(value: TFrom): TTo } = {}\n    ): Promise<boolean> {\n        const inspection = configuration.inspect(from);\n        if (inspection === undefined) return false;\n\n        let migrated = false;\n        if (inspection.globalValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn ? options.migrationFn(inspection.globalValue as TFrom) : inspection.globalValue,\n                ConfigurationTarget.Global\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Global);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceValue as TFrom)\n                    : inspection.workspaceValue,\n                ConfigurationTarget.Workspace\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceFolderValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceFolderValue as TFrom)\n                    : inspection.workspaceFolderValue,\n                ConfigurationTarget.WorkspaceFolder\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (!migrated && options.fallbackValue !== undefined) {\n            await this.update(to, options.fallbackValue, ConfigurationTarget.Global);\n            migrated = true;\n        }\n\n        return migrated;\n    }\n\n    async migrateIfMissing<TFrom, TTo>(from: string, to: string, options: { migrationFn?(value: TFrom): TTo } = {}) {\n        const fromInspection = configuration.inspect(from);\n        if (fromInspection === undefined) return;\n\n        const toInspection = configuration.inspect(to);\n        if (fromInspection.globalValue !== undefined) {\n            if (toInspection === undefined || toInspection.globalValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.globalValue as TFrom)\n                        : fromInspection.globalValue,\n                    ConfigurationTarget.Global\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Global);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceValue as TFrom)\n                        : fromInspection.workspaceValue,\n                    ConfigurationTarget.Workspace\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceFolderValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceFolderValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceFolderValue as TFrom)\n                        : fromInspection.workspaceFolderValue,\n                    ConfigurationTarget.WorkspaceFolder\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n    }\n\n    name<K extends keyof Config>(name: K) {\n        return Functions.propOf(emptyConfig as Config, name);\n    }\n\n    update(section: string, value: any, target: ConfigurationTarget, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(extensionId, target === ConfigurationTarget.Global ? undefined : resource!)\n            .update(section, value, target);\n    }\n\n    async updateEffective(section: string, value: any, resource: Uri | null = null) {\n        const inspect = await configuration.inspect(section, resource)!;\n        if (inspect.workspaceFolderValue !== undefined) {\n            if (value === inspect.workspaceFolderValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.WorkspaceFolder, resource);\n        }\n\n        if (inspect.workspaceValue !== undefined) {\n            if (value === inspect.workspaceValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.Workspace);\n        }\n\n        if (inspect.globalValue === value || (inspect.globalValue === undefined && value === inspect.defaultValue)) {\n            return;\n        }\n\n        return await configuration.update(\n            section,\n            value === inspect.defaultValue ? undefined : value,\n            ConfigurationTarget.Global\n        );\n    }\n}\n\nexport const configuration = new Configuration();\n","'use strict';\nimport { commands, TextEditor, TextEditorEdit, Uri, window } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, EditorCommand } from './common';\n\n@command()\nexport class ClearFileAnnotationsCommand extends EditorCommand {\n    constructor() {\n        super([Commands.ClearFileAnnotations, Commands.ComputingFileAnnotations]);\n    }\n\n    async execute(editor: TextEditor, edit: TextEditorEdit, uri?: Uri): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            return Container.fileAnnotations.clear(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ClearFileAnnotationsCommand');\n            return Messages.showGenericErrorMessage('Unable to clear file annotations');\n        }\n    }\n}\n\nexport interface ToggleFileBlameCommandArgs {\n    sha?: string;\n    type?: FileAnnotationType;\n}\n\n@command()\nexport class ToggleFileBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            if (args.type === undefined) {\n                args = { ...args, type: FileAnnotationType.Blame };\n            }\n\n            return Container.fileAnnotations.toggle(\n                editor,\n                args.type!,\n                args.sha !== undefined ? args.sha : editor && editor.selection.active.line\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleFileBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle file ${args.type} annotations. See output channel for more details`\n            );\n        }\n    }\n}\n\n@command()\nexport class ToggleFileHeatmapCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileHeatmap);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            type: FileAnnotationType.Heatmap\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleFileRecentChangesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileRecentChanges);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            type: FileAnnotationType.RecentChanges\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleLineBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleLineBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        try {\n            return Container.lineAnnotations.toggle(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleLineBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle line blame annotations. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { TextEditorComparer, UriComparer } from '../comparers';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Functions } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt } from './common';\n\nexport interface CloseUnchangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class CloseUnchangedFilesCommand extends ActiveEditorCommand {\n    private _onEditorChangedFn: ((editor: TextEditor | undefined) => void) | undefined;\n\n    constructor() {\n        super(Commands.CloseUnchangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CloseUnchangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Close all files except those changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to close unchanged files`);\n\n                args.uris = status.files.map(f => f.uri);\n            }\n\n            if (args.uris.length === 0) return commands.executeCommand(BuiltInCommands.CloseAllEditors);\n\n            const disposable = window.onDidChangeActiveTextEditor(\n                Functions.debounce(\n                    (e: TextEditor | undefined) => this._onEditorChangedFn && this._onEditorChangedFn(e),\n                    50\n                )\n            );\n\n            editor = window.activeTextEditor;\n\n            let count = 0;\n            let loopCount = 0;\n            const editors: TextEditor[] = [];\n\n            // Find out how many editors there are\n            while (true) {\n                if (editor != null) {\n                    let found = false;\n                    for (const e of editors) {\n                        if (TextEditorComparer.equals(e, editor, { useId: true, usePosition: true })) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found) break;\n\n                    // Start counting at the first real editor\n                    count++;\n                    editors.push(editor);\n                }\n                else {\n                    if (count !== 0) {\n                        count++;\n                    }\n                }\n\n                editor = await this.nextEditor();\n\n                loopCount++;\n                // Break out if we've looped 4 times and haven't found any editors\n                if (loopCount >= 4 && editors.length === 0) break;\n            }\n\n            if (editors.length) {\n                editor = window.activeTextEditor;\n\n                for (let i = 0; i <= count; i++) {\n                    if (\n                        editor == null ||\n                        (editor.document !== undefined &&\n                            (editor.document.isDirty ||\n                                args.uris.some(uri =>\n                                    UriComparer.equals(uri, editor!.document && editor!.document.uri)\n                                )))\n                    ) {\n                        editor = await this.nextEditor();\n                    }\n                    else {\n                        editor = await this.closeEditor();\n                    }\n                }\n            }\n\n            disposable.dispose();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'CloseUnchangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to close all unchanged files');\n        }\n    }\n\n    private async closeEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.CloseActiveEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private async nextEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.NextEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private waitForEditorChange(timeout: number = 500): Promise<TextEditor | undefined> {\n        return new Promise<TextEditor>((resolve, reject) => {\n            let timer: NodeJS.Timer | undefined;\n\n            this._onEditorChangedFn = (editor: TextEditor | undefined) => {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = undefined;\n\n                    resolve(editor);\n                }\n            };\n\n            timer = setTimeout(() => {\n                timer = undefined;\n\n                resolve(window.activeTextEditor);\n            }, timeout);\n        });\n    }\n}\n","'use strict';\nimport * as clipboard from 'clipboardy';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyMessageToClipboardCommandArgs {\n    message?: string;\n    sha?: string;\n}\n\n@command()\nexport class CopyMessageToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyMessageToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the message of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.message = Iterables.first(log.commits.values()).message;\n            }\n            else if (args.message === undefined) {\n                const gitUri = await GitUri.fromUri(uri);\n\n                if (args.sha === undefined) {\n                    const blameline = (editor && editor.selection.active.line) || 0;\n                    if (blameline < 0) return undefined;\n\n                    try {\n                        const blame =\n                            editor && editor.document && editor.document.isDirty\n                                ? await Container.git.getBlameForLineContents(\n                                      gitUri,\n                                      blameline,\n                                      editor.document.getText()\n                                  )\n                                : await Container.git.getBlameForLine(gitUri, blameline);\n                        if (!blame) return undefined;\n\n                        if (blame.commit.isUncommitted) return undefined;\n\n                        args.sha = blame.commit.sha;\n                        if (!gitUri.repoPath) {\n                            gitUri.repoPath = blame.commit.repoPath;\n                        }\n                    }\n                    catch (ex) {\n                        Logger.error(ex, 'CopyMessageToClipboardCommand', `getBlameForLine(${blameline})`);\n                        return Messages.showGenericErrorMessage('Unable to copy message');\n                    }\n                }\n\n                // Get the full commit message -- since blame only returns the summary\n                const commit = await Container.git.getLogCommit(gitUri.repoPath!, args.sha);\n                if (commit === undefined) return undefined;\n\n                args.message = commit.message;\n            }\n\n            void (await clipboard.write(args.message));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy message, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyMessageToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy message');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyRemoteFileUrlToClipboardCommandArgs {\n    branch?: string;\n    range?: boolean;\n}\n\n@command()\nexport class CopyRemoteFileUrlToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyRemoteFileUrlToClipboard);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        return commands.executeCommand(Commands.OpenFileInRemote, uri, { ...args, clipboard: true });\n    }\n}\n","'use strict';\nimport * as clipboard from 'clipboardy';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyShaToClipboardCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class CopyShaToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyShaToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the sha of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.sha = Iterables.first(log.commits.values()).sha;\n            }\n            else if (args.sha === undefined) {\n                const blameline = (editor && editor.selection.active.line) || 0;\n                if (blameline < 0) return undefined;\n\n                try {\n                    const gitUri = await GitUri.fromUri(uri);\n                    const blame =\n                        editor && editor.document && editor.document.isDirty\n                            ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                            : await Container.git.getBlameForLine(gitUri, blameline);\n                    if (blame === undefined) return undefined;\n\n                    args.sha = blame.commit.sha;\n                }\n                catch (ex) {\n                    Logger.error(ex, 'CopyShaToClipboardCommand', `getBlameForLine(${blameline})`);\n                    return Messages.showGenericErrorMessage('Unable to copy commit id');\n                }\n            }\n\n            void (await clipboard.write(args.sha));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy commit id, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyShaToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy commit id');\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt\n} from './common';\n\nexport interface DiffBranchWithBranchCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffBranchWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffHeadWithBranch, Commands.DiffWorkingWithBranch]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffHeadWithBranch:\n                args.ref2 = 'HEAD';\n                break;\n\n            case Commands.DiffWorkingWithBranch:\n                args.ref2 = '';\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        if (args.ref2 === undefined) return;\n\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare with branch or tag in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                let placeHolder;\n                switch (args.ref2) {\n                    case '':\n                        placeHolder = `Compare Working Tree with${GlyphChars.Ellipsis}`;\n                        break;\n                    case 'HEAD':\n                        placeHolder = `Compare HEAD with${GlyphChars.Ellipsis}`;\n                        break;\n                    default:\n                        placeHolder = `Compare ${args.ref2} with${GlyphChars.Ellipsis}`;\n                        break;\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(placeHolder, {\n                    allowCommitId: true\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.compareView.compare(repoPath, args.ref1, args.ref2);\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffBranchWithBranchCommand');\n            return Messages.showGenericErrorMessage('Unable to open branch compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { CompareResultsNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRef\n} from './common';\n\nexport interface DiffDirectoryCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffDirectoryCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffDirectory,\n            Commands.DiffDirectoryWithHead,\n            Commands.ViewsOpenDirectoryDiff,\n            Commands.ViewsOpenDirectoryDiffWithWorking\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffDirectoryWithHead:\n                args.ref1 = 'HEAD';\n                args.ref2 = undefined;\n                break;\n\n            case Commands.ViewsOpenDirectoryDiff:\n                if (context.type === 'viewItem' && context.node instanceof CompareResultsNode) {\n                    args.ref1 = context.node.ref1.ref;\n                    args.ref2 = context.node.ref2.ref;\n                }\n                break;\n\n            case Commands.ViewsOpenDirectoryDiffWithWorking:\n                if (isCommandViewContextWithRef(context)) {\n                    args.ref1 = context.node.ref;\n                    args.ref2 = undefined;\n                }\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare directory in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Compare Working Tree with${GlyphChars.Ellipsis}`,\n                    { allowCommitId: true }\n                );\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.git.openDirectoryDiff(repoPath, args.ref1, args.ref2);\n            return undefined;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (msg === 'No diff tool found') {\n                const result = await window.showWarningMessage(\n                    `Unable to open directory compare because there is no Git diff tool configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            Logger.error(ex, 'DiffDirectoryCommand');\n            return Messages.showGenericErrorMessage('Unable to open directory compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithPrevious);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined && status.indexStatus !== undefined) {\n                        args.commit = args.commit.with({\n                            sha: GitService.stagedUncommittedSha\n                        });\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithPreviousCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    args.commit = args.commit.with({\n                        sha:\n                            status !== undefined && status.indexStatus !== undefined\n                                ? GitService.stagedUncommittedSha\n                                : args.commit.previousSha!,\n                        fileName: args.commit.previousFileName!,\n                        originalFileName: null,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                    args.line = blame.line.line + 1;\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithWorkingCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri, ViewColumn } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface DiffWithCommandArgsRevision {\n    sha: string;\n    uri: Uri;\n    title?: string;\n}\n\nexport interface DiffWithCommandArgs {\n    lhs?: DiffWithCommandArgsRevision;\n    rhs?: DiffWithCommandArgsRevision;\n    repoPath?: string;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: DiffWithCommandArgs): string;\n    static getMarkdownCommandArgs(commit1: GitCommit, commit2: GitCommit): string;\n    static getMarkdownCommandArgs(argsOrCommit1: DiffWithCommandArgs | GitCommit, commit2?: GitCommit): string {\n        let args: DiffWithCommandArgs | GitCommit;\n        if (argsOrCommit1 instanceof GitCommit) {\n            const commit1 = argsOrCommit1;\n\n            if (commit2 === undefined) {\n                if (commit1.isUncommitted) {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha: 'HEAD',\n                            uri: commit1.uri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: commit1.uri\n                        }\n                    };\n                }\n                else {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha:\n                                commit1.previousSha !== undefined\n                                    ? commit1.previousSha\n                                    : GitService.deletedOrMissingSha,\n                            uri: commit1.previousUri!\n                        },\n                        rhs: {\n                            sha: commit1.sha,\n                            uri: commit1.uri\n                        }\n                    };\n                }\n            }\n            else {\n                args = {\n                    repoPath: commit1.repoPath,\n                    lhs: {\n                        sha: commit1.sha,\n                        uri: commit1.uri\n                    },\n                    rhs: {\n                        sha: commit2.sha,\n                        uri: commit2.uri\n                    }\n                };\n            }\n        }\n        else {\n            args = argsOrCommit1;\n        }\n\n        return super.getMarkdownCommandArgsCore<DiffWithCommandArgs>(Commands.DiffWith, args);\n    }\n\n    constructor() {\n        super(Commands.DiffWith);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithCommandArgs = {}): Promise<any> {\n        args = {\n            ...args,\n            lhs: { ...args.lhs },\n            rhs: { ...args.rhs },\n            showOptions: { ...args.showOptions }\n        } as DiffWithCommandArgs;\n        if (args.repoPath === undefined || args.lhs === undefined || args.rhs === undefined) return undefined;\n\n        try {\n            let lhsSha = args.lhs.sha;\n            let rhsSha = args.rhs.sha;\n\n            [args.lhs.sha, args.rhs.sha] = await Promise.all([\n                await Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri),\n                await Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri)\n            ]);\n\n            if (args.lhs.sha !== GitService.deletedOrMissingSha) {\n                lhsSha = args.lhs.sha;\n            }\n\n            if (args.rhs.sha && args.rhs.sha !== GitService.deletedOrMissingSha) {\n                // Ensure that the file still exists in this commit\n                const status = await Container.git.getFileStatusForCommit(\n                    args.repoPath,\n                    args.rhs.uri.fsPath,\n                    args.rhs.sha\n                );\n                if (status !== undefined && status.status === 'D') {\n                    args.rhs.sha = GitService.deletedOrMissingSha;\n                }\n                else {\n                    rhsSha = args.rhs.sha;\n                }\n            }\n\n            const [lhs, rhs] = await Promise.all([\n                Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),\n                Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)\n            ]);\n\n            let rhsSuffix = GitService.shortenSha(rhsSha, { uncommitted: 'Working Tree' }) || '';\n            if (rhs === undefined) {\n                if (GitService.isUncommitted(args.rhs.sha)) {\n                    rhsSuffix = 'deleted';\n                }\n                else if (rhsSuffix.length === 0 && args.rhs.sha === GitService.deletedOrMissingSha) {\n                    rhsSuffix = 'not in Working Tree';\n                }\n                else {\n                    rhsSuffix = `deleted in ${rhsSuffix}`;\n                }\n            }\n            else if (lhs === undefined) {\n                rhsSuffix = `added in ${rhsSuffix}`;\n            }\n\n            let lhsSuffix = args.lhs.sha !== GitService.deletedOrMissingSha ? GitService.shortenSha(lhsSha) || '' : '';\n            if (lhs === undefined && args.rhs.sha.length === 0) {\n                if (rhs !== undefined) {\n                    lhsSuffix = `not in ${lhsSuffix}`;\n                    rhsSuffix = '';\n                }\n                else {\n                    lhsSuffix = `deleted in ${lhsSuffix})`;\n                }\n            }\n\n            if (args.lhs.title === undefined && (lhs !== undefined || lhsSuffix.length !== 0)) {\n                args.lhs.title = `${paths.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ''}`;\n            }\n            if (args.rhs.title === undefined) {\n                args.rhs.title = `${paths.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ''}`;\n            }\n\n            const title =\n                args.lhs.title !== undefined && args.rhs.title !== undefined\n                    ? `${args.lhs.title} ${GlyphChars.ArrowLeftRightLong} ${args.rhs.title}`\n                    : args.lhs.title || args.rhs.title;\n\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n\n            if (args.showOptions.viewColumn === undefined) {\n                args.showOptions.viewColumn = ViewColumn.Active;\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            return await commands.executeCommand(\n                BuiltInCommands.Diff,\n                lhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.lhs.uri.fsPath, args.repoPath)\n                    : lhs,\n                rhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.rhs.uri.fsPath, args.repoPath)\n                    : rhs,\n                title,\n                args.showOptions\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithCommand', 'getVersionedFile');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithBranchCommandArgs {\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithBranch);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithBranchCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return Messages.showNoRepositoryWarningMessage(`Unable to open file compare`);\n\n        const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n            `Compare ${paths.basename(gitUri.fsPath)} with${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                goBack: args.goBackCommand\n            }\n        );\n        if (pick === undefined) return undefined;\n\n        if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n        const ref = pick.ref;\n        if (ref === undefined) return undefined;\n\n        let renamedUri: Uri | undefined;\n        let renamedTitle: string | undefined;\n\n        // Check to see if this file has been renamed\n        const files = await Container.git.getDiffStatus(gitUri.repoPath, 'HEAD', ref, { filter: 'R' });\n        if (files !== undefined) {\n            const fileName = Strings.normalizePath(paths.relative(gitUri.repoPath, gitUri.fsPath));\n            const rename = files.find(s => s.fileName === fileName);\n            if (rename !== undefined && rename.originalFileName !== undefined) {\n                renamedUri = GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);\n                renamedTitle = `${paths.basename(rename.originalFileName)} (${ref})`;\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: gitUri.repoPath,\n            lhs: {\n                sha: pick.remote ? `remotes/${ref}` : ref,\n                uri: renamedUri || (gitUri as Uri),\n                title: renamedTitle || `${paths.basename(gitUri.fsPath)} (${ref})`\n            },\n            rhs: {\n                sha: '',\n                uri: gitUri as Uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitLogCommit, GitService, GitStatusFile, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithNextCommandArgs {\n    commit?: GitLogCommit;\n    range?: Range;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithNextCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithNext);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithNextCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        let status: GitStatusFile | undefined;\n\n        if (args.commit === undefined || !(args.commit instanceof GitLogCommit) || args.range !== undefined) {\n            try {\n                const sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n\n                if (GitService.isStagedUncommitted(sha!)) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath!,\n                        lhs: {\n                            sha: sha!,\n                            uri: gitUri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: sha !== undefined ? undefined : 2,\n                    range: args.range!,\n                    renames: true\n                });\n                if (log === undefined) {\n                    const fileName = await Container.git.findNextFileName(gitUri.repoPath!, gitUri.fsPath);\n                    if (fileName !== undefined) {\n                        log = await Container.git.getLogForFile(gitUri.repoPath, fileName, {\n                            maxCount: sha !== undefined ? undefined : 2,\n                            range: args.range!,\n                            renames: true\n                        });\n                    }\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n                }\n\n                args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n\n                // If the sha is missing or the file is uncommitted, treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) return commands.executeCommand(Commands.DiffWithWorking, uri);\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithNextCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        if (args.commit.nextSha === undefined) {\n            // Check if the file is staged\n            status = status || (await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath));\n            if (status !== undefined && status.indexStatus === 'M') {\n                const diffArgs: DiffWithCommandArgs = {\n                    repoPath: args.commit.repoPath,\n                    lhs: {\n                        sha: args.commit.sha,\n                        uri: args.commit.uri\n                    },\n                    rhs: {\n                        sha: GitService.stagedUncommittedSha,\n                        uri: args.commit.uri\n                    },\n                    line: args.line,\n                    showOptions: args.showOptions\n                };\n\n                return commands.executeCommand(Commands.DiffWith, diffArgs);\n            }\n\n            return commands.executeCommand(Commands.DiffWithWorking, uri);\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: args.commit.nextSha,\n                uri: args.commit.nextUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { DiffWithWorkingCommandArgs } from './diffWithWorking';\n\nexport interface DiffWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    inDiffEditor?: boolean;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithPrevious, Commands.DiffWithPreviousInDiff]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.DiffWithPreviousInDiff) {\n            args.inDiffEditor = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || !args.commit.isFile) {\n            const gitUri = await GitUri.fromUri(uri);\n\n            try {\n                let sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n                if (sha === GitService.deletedOrMissingSha) {\n                    return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                }\n\n                // If we are a fake \"staged\" sha, remove it\n                let isStagedUncommitted = false;\n                if (GitService.isStagedUncommitted(sha!)) {\n                    gitUri.sha = sha = undefined;\n                    isStagedUncommitted = true;\n                }\n\n                // If we are in a diff editor, assume we are on the right side, and need to move back 2 revisions\n                const originalSha = sha;\n                if (args.inDiffEditor && sha !== undefined) {\n                    sha = `${sha}^`;\n                }\n\n                args.commit = undefined;\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: 2,\n                    ref: sha,\n                    renames: true\n                });\n\n                if (log !== undefined) {\n                    args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n                }\n                else {\n                    // Only kick out if we aren't looking for the previous sha -- since renames won't return a log above\n                    if (sha === undefined || !sha.endsWith('^')) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    // Check for renames\n                    log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                        maxCount: 3,\n                        ref: originalSha,\n                        renames: true\n                    });\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    args.commit =\n                        Iterables.next(Iterables.skip(log.commits.values(), 1)) ||\n                        Iterables.first(log.commits.values());\n\n                    if (args.commit.sha === originalSha) {\n                        return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                    }\n                }\n\n                // If the sha is missing (i.e. working tree), check the file status\n                // If file is uncommitted, then treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) {\n                        if (isStagedUncommitted) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor\n                                        ? args.commit.previousSha || GitService.deletedOrMissingSha\n                                        : args.commit.sha,\n                                    uri: args.inDiffEditor ? args.commit.previousUri : args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        // Check if the file is staged\n                        if (status.indexStatus !== undefined) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? GitService.stagedUncommittedSha : '',\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        if (!args.inDiffEditor) {\n                            return commands.executeCommand(Commands.DiffWithWorking, uri, {\n                                commit: args.commit,\n                                showOptions: args.showOptions\n                            } as DiffWithWorkingCommandArgs);\n                        }\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithPreviousCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRevisionCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithRevision);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRevisionCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        const placeHolder = `Compare ${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''} with revision${\n            GlyphChars.Ellipsis\n        }`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n        try {\n            const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                maxCount: args.maxCount,\n                ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n            });\n            if (log === undefined) {\n                if (args.branchOrTag) {\n                    return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                }\n                return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n            }\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.DiffWithRevision,\n                    [uri, { ...args } as DiffWithRevisionCommandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.DiffWithRevision,\n                        [new GitUri(uri, last), { ...args, nextPageCommand: npc } as DiffWithRevisionCommandArgs]\n                    );\n                }\n            }\n\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${gitUri.getFormattedPath()}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                                ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                : ''\n                    }`\n                },\n                Commands.DiffWithRevision,\n                [uri, { ...args }]\n            );\n\n            const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                pickerOnly: true,\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand: log.truncated\n                    ? new CommandQuickPickItem(\n                          {\n                              label: `$(sync) Show All Commits`,\n                              description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                          },\n                          Commands.DiffWithRevision,\n                          [uri, { ...args, maxCount: 0 } as DiffWithRevisionCommandArgs]\n                      )\n                    : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            let ref: string;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.DiffWithRevision, gitUri, {\n                    ...args,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as DiffWithRevisionCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                ref = pick.commit.sha;\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: gitUri.repoPath,\n                lhs: {\n                    sha: ref,\n                    uri: gitUri as Uri\n                },\n                rhs: {\n                    sha: '',\n                    uri: gitUri as Uri\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return await commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            // If the sha is missing, just let the user know the file matches\n            if (gitUri.sha === undefined) return window.showInformationMessage('File matches the working tree');\n            if (gitUri.sha === GitService.deletedOrMissingSha) {\n                return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n            }\n\n            // If we are a fake \"staged\" sha, check the status\n            if (GitService.isStagedUncommitted(gitUri.sha!)) {\n                gitUri.sha = undefined;\n\n                const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                if (status !== undefined && status.indexStatus !== undefined) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath,\n                        lhs: {\n                            sha: GitService.stagedUncommittedSha,\n                            uri: gitUri.documentUri()\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri.documentUri()\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n            }\n\n            try {\n                args.commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    ref: gitUri.sha,\n                    firstIfNotFound: true\n                });\n                if (args.commit === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n            }\n            catch (ex) {\n                Logger.error(\n                    ex,\n                    'DiffWithWorkingCommand',\n                    `getLogCommit(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n                );\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const [workingFileName] = await Container.git.findWorkingFileName(gitUri.fsPath, gitUri.repoPath);\n        if (workingFileName === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        args.commit.workingFileName = workingFileName;\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, SourceControlResourceState, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFileCommit,\n    isCommandViewContextWithFileRefs\n} from './common';\n\nenum Status {\n    INDEX_MODIFIED,\n    INDEX_ADDED,\n    INDEX_DELETED,\n    INDEX_RENAMED,\n    INDEX_COPIED,\n\n    MODIFIED,\n    DELETED,\n    UNTRACKED,\n    IGNORED,\n\n    ADDED_BY_US,\n    ADDED_BY_THEM,\n    DELETED_BY_US,\n    DELETED_BY_THEM,\n    BOTH_ADDED,\n    BOTH_DELETED,\n    BOTH_MODIFIED\n}\n\nenum ResourceGroupType {\n    Merge,\n    Index,\n    WorkingTree\n}\n\ninterface Resource extends SourceControlResourceState {\n    readonly resourceGroupType: ResourceGroupType;\n    readonly type: Status;\n}\n\ninterface ExternalDiffFile {\n    uri: Uri;\n    staged: boolean;\n    ref1?: string;\n    ref2?: string;\n}\n\nexport interface ExternalDiffCommandArgs {\n    files?: ExternalDiffFile[];\n}\n\n@command()\nexport class ExternalDiffCommand extends Command {\n    constructor() {\n        super([Commands.ExternalDiff, Commands.ExternalDiffAll]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ExternalDiffCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFileCommit(context)) {\n            args = { ...args };\n\n            const ref1 = GitService.isUncommitted(context.node.commit.previousFileSha)\n                ? ''\n                : context.node.commit.previousFileSha;\n            const ref2 = context.node.commit.isUncommitted ? '' : context.node.commit.sha;\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.commit.isStagedUncommitted || context.node.file.indexStatus !== undefined,\n                    ref1: ref1,\n                    ref2: ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (isCommandViewContextWithFileRefs(context)) {\n            args = { ...args };\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.file.indexStatus !== undefined,\n                    ref1: context.node.ref1,\n                    ref2: context.node.ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (args.files === undefined) {\n            if (context.type === 'scm-states') {\n                args = { ...args };\n                args.files = context.scmResourceStates.map(r => ({\n                    uri: r.resourceUri,\n                    staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                }));\n            }\n            else if (context.type === 'scm-groups') {\n                args = { ...args };\n                args.files = Arrays.filterMap(context.scmResourceGroups[0].resourceStates, r =>\n                    this.isModified(r)\n                        ? {\n                              uri: r.resourceUri,\n                              staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                          }\n                        : undefined\n                );\n            }\n        }\n\n        if (context.command === Commands.ExternalDiffAll) {\n            if (args.files === undefined) {\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open changes from which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The repository doesn't have any changes\");\n                }\n\n                args.files = [];\n\n                for (const file of status.files) {\n                    if (file.indexStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: true });\n                    }\n\n                    if (file.workingTreeStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: false });\n                    }\n                }\n            }\n        }\n\n        return this.execute(args);\n    }\n\n    private isModified(resource: SourceControlResourceState) {\n        const status = (resource as Resource).type;\n        return status === Status.BOTH_MODIFIED || status === Status.INDEX_MODIFIED || status === Status.MODIFIED;\n    }\n\n    async execute(args: ExternalDiffCommandArgs = {}) {\n        try {\n            let repoPath;\n            if (args.files === undefined) {\n                const editor = window.activeTextEditor;\n                if (editor === undefined) return undefined;\n\n                repoPath = await Container.git.getRepoPathOrActive(undefined, editor);\n                if (!repoPath) return undefined;\n\n                const uri = editor.document.uri;\n                const status = await Container.git.getStatusForFile(repoPath, uri.fsPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The current file doesn't have any changes\");\n                }\n\n                args.files = [];\n                if (status.indexStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: true });\n                }\n\n                if (status.workingTreeStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: false });\n                }\n            }\n            else {\n                repoPath = await Container.git.getRepoPath(args.files[0].uri.fsPath);\n                if (!repoPath) return undefined;\n            }\n\n            const tool = await Container.git.getDiffTool(repoPath);\n            if (tool === undefined) {\n                const result = await window.showWarningMessage(\n                    `Unable to open changes in diff tool. No Git diff tool is configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            for (const file of args.files) {\n                void Container.git.openDiffTool(repoPath, file.uri, {\n                    ref1: file.ref1,\n                    ref2: file.ref2,\n                    staged: file.staged,\n                    tool: tool\n                });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ExternalDiffCommand');\n            return Messages.showGenericErrorMessage('Unable to open changes in diff tool');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchesInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchesInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchesInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchesInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchesInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branches on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branches'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchesInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open branches on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithBranch\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchInRemoteCommandArgs {\n    branch?: string;\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithBranch(context)) {\n            args = { ...args };\n            args.branch = context.node.branch.name;\n            args.remote = context.node.branch.getRemote();\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branch on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            if (args.branch === undefined) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Open which branch on remote${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branch',\n                    branch: args.branch || 'HEAD'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchInRemoteCommandArgs');\n            return window.showErrorMessage(\n                `Unable to open branch on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt, openEditor } from './common';\n\nexport interface OpenChangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class OpenChangedFilesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenChangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenChangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open all files changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to open changed files`);\n\n                args.uris = Arrays.filterMap(status.files, f => (f.status !== 'D' ? f.uri : undefined));\n            }\n\n            for (const uri of args.uris) {\n                await openEditor(uri, { preserveFocus: true, preview: false } as TextDocumentShowOptions);\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenChangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to open all changed files');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenCommitInRemoteCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class OpenCommitInRemoteCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: OpenCommitInRemoteCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: OpenCommitInRemoteCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<OpenCommitInRemoteCommandArgs>(Commands.OpenCommitInRemote, args);\n    }\n\n    constructor() {\n        super(Commands.OpenCommitInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenCommitInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenCommitInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            if (args.sha === undefined) {\n                const blameline = editor == null ? 0 : editor.selection.active.line;\n                if (blameline < 0) return undefined;\n\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage(\n                        'Unable to open commit on remote provider'\n                    );\n                }\n\n                let commit = blame.commit;\n                // If the line is uncommitted, find the previous commit\n                if (commit.isUncommitted) {\n                    commit = commit.with({\n                        sha: commit.previousSha,\n                        fileName: commit.previousFileName,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                }\n\n                args.sha = commit.sha;\n            }\n\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'commit',\n                    sha: args.sha\n                },\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenCommitInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open commit on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenFileInRemoteCommandArgs {\n    branch?: string;\n    range?: boolean;\n    clipboard?: boolean;\n}\n\n@command()\nexport class OpenFileInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenFileInRemote);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: OpenFileInRemoteCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        if (args.branch === undefined) {\n            const branch = await Container.git.getBranch(gitUri.repoPath);\n            if (branch === undefined || branch.tracking === undefined) {\n                const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n                    args.clipboard\n                        ? `Copy url for ${gitUri.getRelativePath()} to clipboard for which branch${GlyphChars.Ellipsis}`\n                        : `Open ${gitUri.getRelativePath()} on remote for which branch${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n            else {\n                args.branch = branch.name;\n            }\n        }\n\n        try {\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n            const range =\n                args.range && editor != null\n                    ? new Range(\n                          editor.selection.start.with({ line: editor.selection.start.line + 1 }),\n                          editor.selection.end.with({ line: editor.selection.end.line + 1 })\n                      )\n                    : undefined;\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: gitUri.sha === undefined ? 'file' : 'revision',\n                    branch: args.branch || 'HEAD',\n                    fileName: gitUri.getRelativePath(),\n                    range: range,\n                    sha: gitUri.sha\n                },\n                remotes,\n                clipboard: args.clipboard\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open file on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    uri?: Uri;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenFileRevisionCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: OpenFileRevisionCommandArgs): string;\n    static getMarkdownCommandArgs(uri: Uri, annotationType?: FileAnnotationType, line?: number): string;\n    static getMarkdownCommandArgs(\n        argsOrUri: OpenFileRevisionCommandArgs | Uri,\n        annotationType?: FileAnnotationType,\n        line?: number\n    ): string {\n        let args: OpenFileRevisionCommandArgs | Uri;\n        if (argsOrUri instanceof Uri) {\n            const uri = argsOrUri;\n\n            args = {\n                uri: uri,\n                line: line,\n                annotationType: annotationType\n            };\n        }\n        else {\n            args = argsOrUri;\n        }\n\n        return super.getMarkdownCommandArgsCore<OpenFileRevisionCommandArgs>(Commands.OpenFileRevision, args);\n    }\n\n    constructor() {\n        super(Commands.OpenFileRevision);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenFileRevisionCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        let progressCancellation: CancellationTokenSource | undefined;\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                const gitUri = await GitUri.fromUri(uri);\n\n                const placeHolder = `Open revision of ${gitUri.getFormattedPath({\n                    suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n                })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}${\n                    GlyphChars.Ellipsis\n                }`;\n\n                progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n                const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n                }\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n                if (log.truncated) {\n                    const npc = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-right) Show Next Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                        },\n                        Commands.OpenFileRevision,\n                        [uri, { ...args } as OpenFileRevisionCommandArgs]\n                    );\n\n                    const last = Iterables.last(log.commits.values());\n                    if (last != null) {\n                        previousPageCommand = new CommandQuickPickItem(\n                            {\n                                label: `$(arrow-left) Show Previous Commits`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                            },\n                            Commands.OpenFileRevision,\n                            [new GitUri(uri, last), { ...args, nextPageCommand: npc } as OpenFileRevisionCommandArgs]\n                        );\n                    }\n                }\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${gitUri.getFormattedPath()}${\n                            args.branchOrTag\n                                ? ` from ${GlyphChars.Space}${\n                                      args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                                  } ${args.branchOrTag.name}`\n                                : gitUri.sha\n                                    ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                    : ''\n                        }`\n                    },\n                    Commands.OpenFileRevision,\n                    [uri, { ...args }]\n                );\n\n                const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                    pickerOnly: true,\n                    progressCancellation: progressCancellation,\n                    currentCommand: currentCommand,\n                    nextPageCommand: args.nextPageCommand,\n                    previousPageCommand: previousPageCommand,\n                    showAllCommand: log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.OpenFileRevision,\n                              [uri, { ...args, maxCount: 0 } as OpenFileRevisionCommandArgs]\n                          )\n                        : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                    const branchOrTag = await pick.execute();\n                    if (branchOrTag === undefined) return undefined;\n                    if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                    return commands.executeCommand(Commands.OpenFileRevision, gitUri, {\n                        ...args,\n                        branchOrTag: branchOrTag.item,\n                        goBackCommand: currentCommand\n                    } as OpenFileRevisionCommandArgs);\n                }\n                else {\n                    if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                    args.uri = GitUri.toRevisionUri(pick.commit.sha, pick.commit.uri.fsPath, pick.commit.repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri!, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open file revision');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitLogCommit, GitRemote, GitService, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, OpenRemoteCommandQuickPickItem, RemotesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface OpenInRemoteCommandArgs {\n    remote?: string;\n    remotes?: GitRemote[];\n    resource?: RemoteResource;\n    clipboard?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenInRemote);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenInRemoteCommandArgs = {}) {\n        args = { ...args };\n        if (args.remotes === undefined || args.resource === undefined) return undefined;\n\n        if (args.remote !== undefined) {\n            const remotes = args.remotes.filter(r => r.name === args.remote);\n            // Only filter if we get some results\n            if (remotes.length > 0) {\n                args.remotes = remotes;\n            }\n        }\n\n        try {\n            if (args.remotes.length === 1) {\n                this.ensureRemoteBranchName(args);\n                const command = new OpenRemoteCommandQuickPickItem(args.remotes[0], args.resource, args.clipboard);\n                return await command.execute();\n            }\n\n            const verb = args.clipboard ? 'Copy url for' : 'Open';\n            const suffix = args.clipboard ? `to clipboard from${GlyphChars.Ellipsis}` : `on${GlyphChars.Ellipsis}`;\n            let placeHolder = '';\n            switch (args.resource.type) {\n                case RemoteResourceType.Branch:\n                    this.ensureRemoteBranchName(args);\n                    placeHolder = `${verb} ${args.resource.branch} branch ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Commit:\n                    const shortSha = GitService.shortenSha(args.resource.sha);\n                    placeHolder = `${verb} commit ${shortSha} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.File:\n                    placeHolder = `${verb} ${args.resource.fileName} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Revision:\n                    if (args.resource.commit !== undefined && args.resource.commit instanceof GitLogCommit) {\n                        if (args.resource.commit.status === 'D') {\n                            args.resource.sha = args.resource.commit.previousSha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.previousShortSha\n                            } ${suffix}`;\n                        }\n                        else {\n                            args.resource.sha = args.resource.commit.sha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.shortSha\n                            } ${suffix}`;\n                        }\n                    }\n                    else {\n                        const shortFileSha =\n                            args.resource.sha === undefined ? '' : GitService.shortenSha(args.resource.sha);\n                        const shaSuffix = shortFileSha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${shortFileSha}` : '';\n\n                        placeHolder = `${verb} ${args.resource.fileName}${shaSuffix} ${suffix}`;\n                    }\n                    break;\n            }\n\n            const pick = await RemotesQuickPick.show(\n                args.remotes,\n                placeHolder,\n                args.resource,\n                args.clipboard,\n                args.goBackCommand\n            );\n            if (pick === undefined) return undefined;\n\n            return await pick.execute();\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenInRemoteCommand');\n            return Messages.showGenericErrorMessage('Unable to open in remote provider');\n        }\n    }\n\n    private ensureRemoteBranchName(args: OpenInRemoteCommandArgs) {\n        if (args.remotes === undefined || args.resource === undefined || args.resource.type !== 'branch') return;\n\n        // Check to see if the remote is in the branch\n        const index = args.resource.branch.indexOf('/');\n        if (index >= 0) {\n            const remoteName = args.resource.branch.substring(0, index);\n            const remote = args.remotes.find(r => r.name === remoteName);\n            if (remote !== undefined) {\n                args.resource.branch = args.resource.branch.substring(index + 1);\n                args.remotes = [remote];\n            }\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenRepoInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenRepoInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenRepoInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenRepoInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenRepoInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open which repository on remote${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'repo'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenRepoInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open repository on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenWorkingFileCommandArgs {\n    uri?: Uri;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n}\n\n@command()\nexport class OpenWorkingFileCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenWorkingFile);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenWorkingFileCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                args.uri = await GitUri.fromUri(uri);\n                if (args.uri instanceof GitUri && args.uri.sha) {\n                    const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                        args.uri.fsPath,\n                        args.uri.repoPath\n                    );\n                    if (fileName === undefined) {\n                        return window.showWarningMessage(\n                            'Unable to open working file. File could not be found in the working tree'\n                        );\n                    }\n\n                    args.uri = new GitUri(GitUri.resolveToUri(fileName, repoPath), repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenWorkingFileCommand');\n            return Messages.showGenericErrorMessage('Unable to open working file');\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class FetchRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.FetchRepositories);\n    }\n\n    async execute() {\n        return Container.git.fetchAll();\n    }\n}\n\n@command()\nexport class PullRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PullRepositories);\n    }\n\n    async execute() {\n        return Container.git.pullAll();\n    }\n}\n\n@command()\nexport class PushRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PushRepositories);\n    }\n\n    async execute() {\n        return Container.git.pushAll();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ResetSuppressedWarningsCommand extends Command {\n    constructor() {\n        super(Commands.ResetSuppressedWarnings);\n    }\n\n    async execute() {\n        await configuration.update(\n            configuration.name('advanced')('messages').value,\n            undefined,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { commands, InputBoxOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitRepoSearchBy, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitsQuickPick, ShowCommitSearchResultsInViewQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRepo\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nconst searchByRegex = /^([@~=:#])/;\nconst symbolToSearchByMap = new Map<string, GitRepoSearchBy>([\n    ['@', GitRepoSearchBy.Author],\n    ['~', GitRepoSearchBy.ChangedLines],\n    ['=', GitRepoSearchBy.Changes],\n    [':', GitRepoSearchBy.Files],\n    ['#', GitRepoSearchBy.Sha]\n]);\n\nconst searchByToSymbolMap = new Map<GitRepoSearchBy, string>([\n    [GitRepoSearchBy.Author, '@'],\n    [GitRepoSearchBy.ChangedLines, '~'],\n    [GitRepoSearchBy.Changes, '='],\n    [GitRepoSearchBy.Files, ':'],\n    [GitRepoSearchBy.Sha, '#']\n]);\n\nexport interface SearchCommitsCommandArgs {\n    search?: string;\n    searchBy?: GitRepoSearchBy;\n    maxCount?: number;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class SearchCommitsCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.SearchCommits, Commands.SearchCommitsInView]);\n    }\n\n    protected async preExecute(context: CommandContext, args: SearchCommitsCommandArgs = {}) {\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.showInView = true;\n\n            if (isCommandViewContextWithRepo(context)) {\n                return this.execute(context.editor, context.node.uri, args);\n            }\n        }\n        else if (context.command === Commands.SearchCommitsInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n        else {\n            // TODO: Add a user setting (default to view?)\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: SearchCommitsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Search for commits in which repository${GlyphChars.Ellipsis}`,\n            args.goBackCommand\n        );\n        if (!repoPath) return undefined;\n\n        args = { ...args };\n        const originalArgs = { ...args };\n\n        if (!args.search || args.searchBy == null) {\n            let selection;\n            if (!args.search && args.searchBy != null) {\n                args.search = searchByToSymbolMap.get(args.searchBy);\n                selection = [1, 1];\n            }\n\n            if (args.showInView) {\n                await Container.searchView.show();\n            }\n\n            args.search = await window.showInputBox({\n                value: args.search,\n                prompt: `Please enter a search string`,\n                placeHolder: `Search commits by message, author (@<pattern>), files (:<path/glob>), commit id (#<sha>), changes (=<pattern>), changed lines (~<pattern>)`,\n                valueSelection: selection\n            } as InputBoxOptions);\n            if (args.search === undefined) {\n                return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n            }\n\n            originalArgs.search = args.search;\n\n            const match = searchByRegex.exec(args.search);\n            if (match && match[1]) {\n                args.searchBy = symbolToSearchByMap.get(match[1]);\n                args.search = args.search.substring(args.search[1] === ' ' ? 2 : 1);\n            }\n            else if (GitService.isShaLike(args.search)) {\n                args.searchBy = GitRepoSearchBy.Sha;\n            }\n            else {\n                args.searchBy = GitRepoSearchBy.Message;\n            }\n        }\n\n        if (args.searchBy === undefined) {\n            args.searchBy = GitRepoSearchBy.Message;\n        }\n\n        let searchLabel: string | undefined = undefined;\n        switch (args.searchBy) {\n            case GitRepoSearchBy.Author:\n                searchLabel = `commits with an author matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.ChangedLines:\n                searchLabel = `commits with changed lines matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Changes:\n                searchLabel = `commits with changes matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Files:\n                searchLabel = `commits with files matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Message:\n                searchLabel = args.search ? `commits with a message matching '${args.search}'` : 'all commits';\n                break;\n\n            case GitRepoSearchBy.Sha:\n                searchLabel = `commits with an id matching '${args.search}'`;\n                break;\n        }\n\n        if (args.showInView) {\n            void Container.searchView.search(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount,\n                label: { label: searchLabel! }\n            });\n\n            return;\n        }\n\n        const progressCancellation = CommitsQuickPick.showProgress(searchLabel!);\n        try {\n            const log = await Container.git.getLogForSearch(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount\n            });\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let goBackCommand: CommandQuickPickItem | undefined =\n                args.goBackCommand ||\n                new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to commit search`\n                    },\n                    Commands.SearchCommits,\n                    [uri, originalArgs]\n                );\n\n            let commit;\n            if (args.searchBy !== GitRepoSearchBy.Sha || log === undefined || log.count !== 1) {\n                const pick = await CommitsQuickPick.show(log, searchLabel!, progressCancellation, {\n                    goBackCommand: goBackCommand,\n                    showAllCommand:\n                        log !== undefined && log.truncated\n                            ? new CommandQuickPickItem(\n                                  {\n                                      label: `$(sync) Show All Commits`,\n                                      description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                                  },\n                                  Commands.SearchCommits,\n                                  [uri, { ...args, maxCount: 0, goBackCommand: goBackCommand }]\n                              )\n                            : undefined,\n                    showInViewCommand:\n                        log !== undefined\n                            ? new ShowCommitSearchResultsInViewQuickPickItem(log, { label: searchLabel! })\n                            : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                commit = pick.commit;\n                goBackCommand = undefined;\n            }\n            else {\n                commit = Iterables.first(log.commits.values());\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, commit.toGitUri(), {\n                sha: commit.sha,\n                commit: commit,\n                goBackCommand:\n                    goBackCommand ||\n                    new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} to search for ${searchLabel}`\n                        },\n                        Commands.SearchCommits,\n                        [uri, args]\n                    )\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowCommitSearchCommand');\n            return Messages.showGenericErrorMessage('Unable to find commits');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { command, Command, Commands, getLastCommand } from './common';\n\n@command()\nexport class ShowLastQuickPickCommand extends Command {\n    constructor() {\n        super(Commands.ShowLastQuickPick);\n    }\n\n    async execute() {\n        const command = getLastCommand();\n        if (command === undefined) return undefined;\n\n        try {\n            return commands.executeCommand(command.command, ...command.args);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowLastQuickPickCommand');\n            return Messages.showGenericErrorMessage('Unable to show last quick pick');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, BranchHistoryQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickBranchHistoryCommandArgs {\n    branch?: string;\n    log?: GitLog;\n    maxCount?: number;\n    repoPath?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        args = { ...args };\n\n        let progressCancellation =\n            args.branch === undefined ? undefined : BranchHistoryQuickPick.showProgress(args.branch);\n        try {\n            const repoPath =\n                args.repoPath ||\n                (await getRepoPathOrActiveOrPrompt(\n                    gitUri,\n                    editor,\n                    `Show branch history in which repository${GlyphChars.Ellipsis}`\n                ));\n            if (!repoPath) return undefined;\n\n            if (args.branch === undefined) {\n                let goBackCommand;\n                if (!(await Container.git.getRepoPathOrActive(uri, editor))) {\n                    goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to which repository`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [uri, args]\n                    );\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Show history for branch${GlyphChars.Ellipsis}`,\n                    {\n                        goBack: goBackCommand,\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined) return undefined;\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.branch = pick.ref;\n                if (args.branch === undefined) return undefined;\n\n                progressCancellation = BranchHistoryQuickPick.showProgress(args.branch);\n            }\n\n            if (args.log === undefined) {\n                args.log = await Container.git.getLog(repoPath, {\n                    maxCount: args.maxCount,\n                    ref: (gitUri && gitUri.sha) || args.branch\n                });\n                if (args.log === undefined) return window.showWarningMessage(`Unable to show branch history`);\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            const pick = await BranchHistoryQuickPick.show(\n                args.log,\n                gitUri,\n                args.branch,\n                progressCancellation!,\n                args.goBackCommand,\n                args.nextPageCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                        args.branch\n                    } history`\n                },\n                Commands.ShowQuickBranchHistory,\n                [uri, { ...args }]\n            );\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                sha: pick.commit.sha,\n                commit: pick.commit,\n                repoLog: args.log,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitRepoSearchBy, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitQuickPick, CommitWithFileStatusQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickCommitDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    repoLog?: GitLog;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitDetailsCommandArgs>(\n            Commands.ShowQuickCommitDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowCommitInView, Commands.ShowQuickCommitDetails]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickCommitDetailsCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowCommitInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        let repoPath = gitUri.repoPath;\n        let workingFileName = repoPath ? paths.relative(repoPath, gitUri.fsPath) : gitUri.fsPath;\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit details');\n                }\n\n                args.sha = blame.commit.sha;\n                repoPath = blame.commit.repoPath;\n                workingFileName = blame.commit.fileName;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitDetailsCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to show commit details');\n            }\n        }\n\n        try {\n            if (args.commit === undefined || args.commit.isFile) {\n                if (args.repoLog !== undefined) {\n                    args.commit = args.repoLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the repoLog\n                    if (args.commit === undefined) {\n                        args.repoLog = undefined;\n                    }\n                }\n\n                if (args.repoLog === undefined) {\n                    const log = await Container.git.getLog(repoPath!, { maxCount: 2, ref: args.sha });\n                    if (log === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n                    }\n\n                    args.commit = log.commits.get(args.sha!);\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n            }\n\n            if (args.commit.workingFileName === undefined) {\n                args.commit.workingFileName = workingFileName;\n            }\n\n            if (args.showInView) {\n                void (await Container.searchView.search(repoPath!, args.commit.sha, GitRepoSearchBy.Sha, {\n                    label: { label: `commits with an id matching '${args.commit.shortSha}'` }\n                }));\n\n                return undefined;\n            }\n\n            if (args.goBackCommand === undefined) {\n                const branch = await Container.git.getBranch(args.commit.repoPath);\n                if (branch !== undefined) {\n                    // Create a command to get back to the branch history\n                    args.goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${branch.name} history`\n                        },\n                        Commands.ShowQuickCurrentBranchHistory,\n                        [args.commit.toGitUri()]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(git-commit) ${args.commit.shortSha}`\n                },\n                Commands.ShowQuickCommitDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.repoLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (!(pick instanceof CommitWithFileStatusQuickPickItem)) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit details');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitFileQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickCommitFileDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    fileLog?: GitLog;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitFileDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitFileDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitFileDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitFileDetailsCommandArgs>(\n            Commands.ShowQuickCommitFileDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowQuickCommitFileDetails, Commands.ShowQuickRevisionDetails]);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: ShowQuickCommitFileDetailsCommandArgs = {}\n    ): Promise<any> {\n        if (context.command === Commands.ShowQuickRevisionDetails && context.editor !== undefined) {\n            args = { ...args };\n\n            const gitUri = await GitUri.fromUri(context.editor.document.uri);\n            args.sha = gitUri.sha;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        let workingFileName = args.commit && args.commit.workingFileName;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit file details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit file details');\n                }\n\n                args.sha = blame.commit.sha;\n\n                args.commit = blame.commit;\n                workingFileName = paths.relative(args.commit.repoPath, gitUri.fsPath);\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitFileDetailsCommand', `getBlameForLine(${blameline})`);\n                return window.showErrorMessage(\n                    `Unable to show commit file details. See output channel for more details`\n                );\n            }\n        }\n\n        try {\n            if (args.commit === undefined || !args.commit.isFile) {\n                if (args.commit !== undefined) {\n                    workingFileName = undefined;\n                }\n\n                if (args.fileLog !== undefined) {\n                    args.commit = args.fileLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the fileLog\n                    if (args.commit === undefined) {\n                        args.fileLog = undefined;\n                    }\n                }\n\n                if (args.fileLog === undefined) {\n                    args.commit = await Container.git.getLogCommitForFile(\n                        args.commit === undefined ? gitUri.repoPath : args.commit.repoPath,\n                        gitUri.fsPath,\n                        { ref: args.sha }\n                    );\n                    if (args.commit === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n                    }\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n            }\n\n            // Attempt to the most recent commit -- so that we can find the real working filename if there was a rename\n            args.commit.workingFileName = workingFileName;\n            [args.commit.workingFileName] = await Container.git.findWorkingFileName(args.commit);\n\n            const shortSha = GitService.shortenSha(args.sha!);\n\n            if (args.goBackCommand === undefined) {\n                // Create a command to get back to the commit details\n                args.goBackCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                            GlyphChars.Space\n                        }$(git-commit) ${shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        args.commit.toGitUri(),\n                        {\n                            commit: args.commit,\n                            sha: args.sha\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                );\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(args.commit.fileName)} in ${\n                        GlyphChars.Space\n                    }$(git-commit) ${shortSha}`\n                },\n                Commands.ShowQuickCommitFileDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitFileQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.fileLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitFileDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit file details');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickBranchHistoryCommandArgs } from './showQuickBranchHistory';\n\nexport interface ShowQuickCurrentBranchHistoryCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCurrentBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickCurrentBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCurrentBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show current branch history for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const branch = await Container.git.getBranch(repoPath);\n            if (branch === undefined) return undefined;\n\n            return commands.executeCommand(Commands.ShowQuickBranchHistory, uri, {\n                branch: branch.name,\n                repoPath: repoPath,\n                goBackCommand: args.goBackCommand\n            } as ShowQuickBranchHistoryCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCurrentBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitLog, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    FileHistoryQuickPick,\n    ShowFileHistoryInViewQuickPickItem\n} from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickFileHistoryCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    log?: GitLog;\n    maxCount?: number;\n    range?: Range;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickFileHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.ShowFileHistoryInView, Commands.ShowQuickFileHistory]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickFileHistoryCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowFileHistoryInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickFileHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return commands.executeCommand(Commands.ShowQuickCurrentBranchHistory);\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        if (args.showInView) {\n            await Container.fileHistoryView.showHistoryForUri(gitUri);\n\n            return undefined;\n        }\n\n        args = { ...args };\n\n        const placeHolder = `${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n        try {\n            if (args.log === undefined) {\n                args.log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    range: args.range,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (args.log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show file history');\n                }\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (args.log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${args.log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [gitUri, { ...args, log: undefined } as ShowQuickFileHistoryCommandArgs]\n                );\n\n                const last = Iterables.last(args.log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${\n                                args.log.maxCount\n                            } older commits`\n                        },\n                        Commands.ShowQuickFileHistory,\n                        [\n                            new GitUri(uri, last),\n                            { ...args, log: undefined, nextPageCommand: npc } as ShowQuickFileHistoryCommandArgs\n                        ]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(gitUri.fsPath)}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.ShowQuickFileHistory,\n                [uri, args]\n            );\n\n            const pick = await FileHistoryQuickPick.show(args.log, gitUri, placeHolder, {\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand:\n                    args.log !== undefined && args.log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.ShowQuickFileHistory,\n                              [uri, { ...args, log: undefined, maxCount: 0 }]\n                          )\n                        : undefined,\n                showInViewCommand:\n                    args.log !== undefined\n                        ? new ShowFileHistoryInViewQuickPickItem(\n                              gitUri,\n                              (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                          )\n                        : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.ShowQuickFileHistory, gitUri, {\n                    ...args,\n                    log: undefined,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as ShowQuickFileHistoryCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                fileLog: args.log,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickFileHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show file history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, RepoStatusQuickPick } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\n\nexport interface ShowQuickRepoStatusCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickRepoStatusCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickRepoStatus);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickRepoStatusCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show status for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const status = await Container.git.getStatusForRepo(repoPath);\n            if (status === undefined) return window.showWarningMessage(`Unable to show repository status`);\n\n            const pick = await RepoStatusQuickPick.show(status, args.goBackCommand);\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickRepoStatusCommand');\n            return Messages.showGenericErrorMessage('Unable to show repository status');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickStashListCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickStashListCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickStashList);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickStashListCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const progressCancellation = StashListQuickPick.showProgress('list');\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show stashed changes for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const stash = await Container.git.getStashList(repoPath);\n            if (stash === undefined) return window.showWarningMessage(`Unable to show stashed changes`);\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to stashed changes`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    uri,\n                    {\n                        goBackCommand: args.goBackCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            );\n\n            const pick = await StashListQuickPick.show(\n                stash,\n                'list',\n                progressCancellation,\n                args.goBackCommand,\n                currentCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickStashListCommand');\n            return Messages.showGenericErrorMessage('Unable to show stashed changes');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, CommandContext, Commands } from './common';\n\n@command()\nexport class ShowViewCommand extends Command {\n    constructor() {\n        super([\n            Commands.ShowCompareView,\n            Commands.ShowFileHistoryView,\n            Commands.ShowLineHistoryView,\n            Commands.ShowRepositoriesView,\n            Commands.ShowSearchView\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext): Promise<any> {\n        return this.execute(context.command as Commands);\n    }\n\n    execute(command: Commands) {\n        switch (command) {\n            case Commands.ShowCompareView:\n                return Container.compareView.show();\n            case Commands.ShowFileHistoryView:\n                return Container.fileHistoryView.show();\n            case Commands.ShowLineHistoryView:\n                return Container.lineHistoryView.show();\n            case Commands.ShowRepositoriesView:\n                return Container.repositoriesView.show();\n            case Commands.ShowSearchView:\n                return Container.searchView.show();\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithCommit,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashApplyCommandArgs {\n    confirm?: boolean;\n    deleteAfter?: boolean;\n    repoPath?: string;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashApplyCommand extends Command {\n    constructor() {\n        super(Commands.StashApply);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }\n    ) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        args = { ...args };\n\n        if (args.stashItem === undefined || args.stashItem.stashName === undefined) {\n            if (args.repoPath === undefined) {\n                args.repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Apply stashed changes from which repository${GlyphChars.Ellipsis}`,\n                    args.goBackCommand\n                );\n            }\n            if (!args.repoPath) return undefined;\n\n            const progressCancellation = StashListQuickPick.showProgress('apply');\n\n            try {\n                const stash = await Container.git.getStashList(args.repoPath);\n                if (stash === undefined) return window.showInformationMessage(`There are no stashed changes`);\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to apply stashed changes`\n                    },\n                    Commands.StashApply,\n                    [args]\n                );\n\n                const pick = await StashListQuickPick.show(\n                    stash,\n                    'apply',\n                    progressCancellation,\n                    args.goBackCommand,\n                    currentCommand\n                );\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n                if (pick === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.goBackCommand = currentCommand;\n                args.stashItem = pick.commit as GitStashCommit;\n            }\n            finally {\n                progressCancellation.cancel();\n            }\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Apply stashed changes '${message}' to your working tree?`,\n                    { title: 'Yes, delete after applying' } as MessageItem,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title === 'No') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.deleteAfter = result.title !== 'Yes';\n            }\n\n            return await Container.git.stashApply(args.stashItem.repoPath, args.stashItem.stashName, args.deleteAfter);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashApplyCommand');\n            if (ex.message.includes('Your local changes to the following files would be overwritten by merge')) {\n                return window.showWarningMessage(\n                    `Unable to apply stash. Your working tree changes would be overwritten.`\n                );\n            }\n            else if (ex.message.includes('Auto-merging') && ex.message.includes('CONFLICT')) {\n                return window.showInformationMessage(`Stash applied with conflicts`);\n            }\n            else {\n                return Messages.showGenericErrorMessage('Unable to apply stash');\n            }\n        }\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithCommit } from './common';\n\nexport interface StashDeleteCommandArgs {\n    confirm?: boolean;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashDeleteCommand extends Command {\n    constructor() {\n        super(Commands.StashDelete);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashDeleteCommandArgs = { confirm: true }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashDeleteCommandArgs = { confirm: true }) {\n        args = { ...args };\n        if (\n            args.stashItem === undefined ||\n            args.stashItem.stashName === undefined ||\n            args.stashItem.repoPath === undefined\n        ) {\n            return undefined;\n        }\n\n        if (args.confirm === undefined) {\n            args.confirm = true;\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Delete stashed changes '${message}'?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title !== 'Yes') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashDelete(args.stashItem.repoPath, args.stashItem.stashName);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashDeleteCommand');\n            return Messages.showGenericErrorMessage('Unable to delete stash');\n        }\n    }\n}\n","'use strict';\nimport { InputBoxOptions, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFile,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashSaveCommandArgs {\n    message?: string;\n    repoPath?: string;\n    uris?: Uri[];\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashSaveCommand extends Command {\n    constructor() {\n        super(Commands.StashSave);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashSaveCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFile(context)) {\n            args = { ...args };\n            args.uris = [GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath)];\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n        else if (context.type === 'scm-states') {\n            args = { ...args };\n            args.uris = context.scmResourceStates.map(s => s.resourceUri);\n        }\n        else if (context.type === 'scm-groups') {\n            args = { ...args };\n            args.uris = context.scmResourceGroups.reduce<Uri[]>(\n                (a, b) => a.concat(b.resourceStates.map(s => s.resourceUri)),\n                []\n            );\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashSaveCommandArgs = {}) {\n        args = { ...args };\n\n        const uri = args.uris !== undefined && args.uris.length !== 0 ? args.uris[0] : undefined;\n        if (args.repoPath === undefined) {\n            args.repoPath = await getRepoPathOrPrompt(\n                uri,\n                `Stash changes for which repository${GlyphChars.Ellipsis}`,\n                args.goBackCommand\n            );\n        }\n        if (!args.repoPath) return undefined;\n\n        try {\n            if (args.message == null) {\n                args.message = await window.showInputBox({\n                    prompt: `Please provide a stash message`,\n                    placeHolder: `Stash message`\n                } as InputBoxOptions);\n                if (args.message === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashSave(args.repoPath, args.message, args.uris);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashSaveCommand');\n\n            const msg = ex && ex.message;\n            if (msg.includes('newer version of Git')) {\n                return window.showErrorMessage(`Unable to save stash. ${msg}`);\n            }\n            return Messages.showGenericErrorMessage('Unable to save stash');\n        }\n    }\n}\n","'use strict';\nimport { Messages } from '../messages';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SupportGitLensCommand extends Command {\n    constructor() {\n        super(Commands.SupportGitLens);\n    }\n\n    async execute() {\n        return Messages.showSupportGitLensMessage();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { ModesQuickPick } from '../quickpicks';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SwitchModeCommand extends Command {\n    constructor() {\n        super(Commands.SwitchMode);\n    }\n\n    async execute() {\n        const pick = await ModesQuickPick.show();\n        if (pick === undefined) return;\n\n        await configuration.update(configuration.name('mode')('active').value, pick.key, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleReviewModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleReviewMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('review')) return;\n\n        const mode = Container.config.mode.active === 'review' ? undefined : 'review';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleZenModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleZenMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('zen')) return;\n\n        const mode = Container.config.mode.active === 'zen' ? undefined : 'zen';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\n\nexport interface ModesQuickPickItem extends QuickPickItem {\n    key: string | undefined;\n}\n\nexport class ModesQuickPick {\n    static async show(): Promise<ModesQuickPickItem | undefined> {\n        const modes = Object.keys(Container.config.modes);\n        if (modes.length === 0) return undefined;\n\n        const mode = Container.config.mode.active;\n\n        const items = modes.map(key => {\n            const modeCfg = Container.config.modes[key];\n            return {\n                label: `${mode === key ? '$(check)\\u00a0\\u00a0' : '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0'}${\n                    modeCfg.name\n                } mode`,\n                description: modeCfg.description ? `\\u00a0${GlyphChars.Dash}\\u00a0 ${modeCfg.description}` : '',\n                key: key\n            } as ModesQuickPickItem;\n        });\n\n        if (mode) {\n            items.splice(0, 0, {\n                label: `Exit ${Container.config.modes[mode].name} mode`,\n                key: undefined\n            } as ModesQuickPickItem);\n        }\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: 'select a GitLens mode to enter'\n        } as QuickPickOptions);\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ToggleCodeLensCommand extends Command {\n    constructor() {\n        super(Commands.ToggleCodeLens);\n    }\n\n    execute() {\n        return Container.codeLens.toggleCodeLens();\n    }\n}\n","'use strict';\nimport { commands, ExtensionContext, extensions, window, workspace } from 'vscode';\nimport { Commands, registerCommands } from './commands';\nimport { Config, configuration, Configuration } from './configuration';\nimport { CommandContext, extensionQualifiedId, GlobalState, GlyphChars, setCommandContext } from './constants';\nimport { Container } from './container';\nimport { GitCommit, GitService, GitUri } from './git/gitService';\nimport { Logger } from './logger';\nimport { Messages } from './messages';\nimport { Strings, Versions } from './system';\nimport { ModeConfig } from './ui/config';\n// import { Telemetry } from './telemetry';\n\nexport async function activate(context: ExtensionContext) {\n    const start = process.hrtime();\n\n    // Pretend we are enabled (until we know otherwise) and set the view contexts to reduce flashing on load\n    setCommandContext(CommandContext.Enabled, true);\n\n    Logger.configure(context, o => {\n        if (o instanceof GitUri) {\n            return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ''}${\n                o.sha ? ` sha=${o.sha}` : ''\n            })`;\n        }\n\n        if (o instanceof GitCommit) {\n            return `GitCommit(${o.sha ? ` sha=${o.sha}` : ''}${o.repoPath ? ` repoPath=${o.repoPath}` : ''})`;\n        }\n\n        return undefined;\n    });\n\n    const gitlens = extensions.getExtension(extensionQualifiedId)!;\n    const gitlensVersion = gitlens.packageJSON.version;\n\n    const enabled = workspace.getConfiguration('git', null!).get<boolean>('enabled', true);\n    if (!enabled) {\n        Logger.log(`GitLens(v${gitlensVersion}) was NOT activated -- \"git.enabled\": false`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        void Messages.showGitDisabledErrorMessage();\n\n        return;\n    }\n\n    Configuration.configure(context);\n\n    const cfg = configuration.get<Config>();\n\n    const previousVersion = context.globalState.get<string>(GlobalState.GitLensVersion);\n    await migrateSettings(context, previousVersion);\n\n    try {\n        await GitService.initialize();\n    }\n    catch (ex) {\n        Logger.error(ex, `GitLens(v${gitlensVersion}).activate`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        if (ex.message.includes('Unable to find git')) {\n            await window.showErrorMessage(\n                `GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.`\n            );\n        }\n\n        return;\n    }\n\n    Container.initialize(context, cfg);\n\n    registerCommands(context);\n\n    const gitVersion = GitService.getGitVersion();\n\n    // Telemetry.configure(ApplicationInsightsKey);\n\n    // const telemetryContext: { [id: string]: any } = Object.create(null);\n    // telemetryContext.version = gitlensVersion;\n    // telemetryContext['git.version'] = gitVersion;\n    // Telemetry.setContext(telemetryContext);\n\n    notifyOnUnsupportedGitVersion(gitVersion);\n    void showWelcomePage(gitlensVersion, previousVersion);\n\n    context.globalState.update(GlobalState.GitLensVersion, gitlensVersion);\n\n    // Constantly over my data cap so stop collecting initialized event\n    // Telemetry.trackEvent('initialized', Objects.flatten(cfg, 'config', true));\n\n    Logger.log(`GitLens(v${gitlensVersion}) activated ${GlyphChars.Dot} ${Strings.getDurationMilliseconds(start)} ms`);\n}\n\nexport function deactivate() {}\n\nasync function migrateSettings(context: ExtensionContext, previousVersion: string | undefined) {\n    if (previousVersion === undefined) return;\n\n    const previous = Versions.fromString(previousVersion);\n\n    try {\n        if (Versions.compare(previous, Versions.from(9, 0, 0)) !== 1) {\n            await configuration.migrate(\n                'gitExplorer.autoRefresh',\n                configuration.name('views')('repositories')('autoRefresh').value\n            );\n            await configuration.migrate(\n                'gitExplorer.branches.layout',\n                configuration.name('views')('repositories')('branches')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.enabled',\n                configuration.name('views')('repositories')('enabled').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.compact',\n                configuration.name('views')('repositories')('files')('compact').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.layout',\n                configuration.name('views')('repositories')('files')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.threshold',\n                configuration.name('views')('repositories')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'gitExplorer.includeWorkingTree',\n                configuration.name('views')('repositories')('includeWorkingTree').value\n            );\n            await configuration.migrate(\n                'gitExplorer.location',\n                configuration.name('views')('repositories')('location').value\n            );\n            await configuration.migrate(\n                'gitExplorer.showTrackingBranch',\n                configuration.name('views')('repositories')('showTrackingBranch').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('fileHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('fileHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('fileHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('lineHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('lineHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('lineHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('compare')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('compare')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('compare')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('compare')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('search')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('search')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('search')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('search')('location').value\n            );\n\n            await configuration.migrate('explorers.avatars', configuration.name('views')('avatars').value);\n            await configuration.migrate(\n                'explorers.commitFileFormat',\n                configuration.name('views')('commitFileFormat').value\n            );\n            await configuration.migrate('explorers.commitFormat', configuration.name('views')('commitFormat').value);\n            await configuration.migrate(\n                'explorers.defaultItemLimit',\n                configuration.name('views')('defaultItemLimit').value\n            );\n            await configuration.migrate(\n                'explorers.files.compact',\n                configuration.name('views')('files')('compact').value\n            );\n            await configuration.migrate('explorers.files.layout', configuration.name('views')('files')('layout').value);\n            await configuration.migrate(\n                'explorers.files.threshold',\n                configuration.name('views')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'explorers.stashFileFormat',\n                configuration.name('views')('stashFileFormat').value\n            );\n            await configuration.migrate('explorers.stashFormat', configuration.name('views')('stashFormat').value);\n            await configuration.migrate(\n                'explorers.statusFileFormat',\n                configuration.name('views')('statusFileFormat').value\n            );\n\n            await configuration.migrate<\n                {\n                    [key: string]: {\n                        name: string;\n                        statusBarItemName?: string;\n                        description?: string;\n                        codeLens?: boolean;\n                        currentLine?: boolean;\n                        explorers?: boolean;\n                        hovers?: boolean;\n                        statusBar?: boolean;\n                    };\n                },\n                {\n                    [key: string]: ModeConfig;\n                }\n            >('modes', configuration.name('modes').value, {\n                migrationFn: v => {\n                    const modes = Object.create(null);\n\n                    for (const k in v) {\n                        const { explorers, ...mode } = v[k];\n                        modes[k] = { ...mode, views: explorers };\n                    }\n\n                    return modes;\n                }\n            });\n        }\n    }\n    catch (ex) {\n        Logger.error(ex, 'migrateSettings');\n    }\n}\n\nfunction notifyOnUnsupportedGitVersion(version: string) {\n    if (GitService.compareGitVersion('2.2.0') !== -1) return;\n\n    // If git is less than v2.2.0\n    void Messages.showGitVersionUnsupportedErrorMessage(version);\n}\n\nasync function showWelcomePage(version: string, previousVersion: string | undefined) {\n    if (previousVersion === undefined) {\n        Logger.log(`GitLens first-time install`);\n\n        if (Container.config.showWhatsNewAfterUpgrades) {\n            await commands.executeCommand(Commands.ShowWelcomePage);\n        }\n\n        return;\n    }\n\n    if (previousVersion !== version) {\n        Logger.log(`GitLens upgraded from v${previousVersion} to v${version}`);\n    }\n\n    const [major, minor] = version.split('.');\n    const [prevMajor, prevMinor] = previousVersion.split('.');\n    if (\n        (major === prevMajor && minor === prevMinor) ||\n        // Don't notify on downgrades\n        (major < prevMajor || (major === prevMajor && minor < prevMinor))\n    ) {\n        return;\n    }\n\n    if (Container.config.showWhatsNewAfterUpgrades && major !== prevMajor) {\n        await commands.executeCommand(Commands.ShowWelcomePage);\n    }\n    else {\n        await Messages.showWhatsNewMessage(version);\n    }\n}\n"],"sourceRoot":""}