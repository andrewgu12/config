<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string></string>
	<key>fileTypes</key>
	<array>
		<string>lisp</string>
		<string>cl</string>
		<string>l</string>
		<string>mud</string>
		<string>el</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\(</string>
	<key>foldingStopMarker</key>
	<string>\)</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>Lisp</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(;).*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defgeneric|define-compiler-macro|define-method-combination|define-modify-macro|define-setf-expander|defmacro|defmethod|defsetf|defun||define-\S+))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
			<key>name</key>
			<string>meta.function.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:deftype|defstruct|define-condition|defpackage|defclass))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defvar|defconstant|defparameter|define-symbol-macro))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)(\w|[\\+-=&lt;&gt;'"&amp;#])+</string>
			<key>name</key>
			<string>constant.character.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(\*)(\S*)(\*)(?=$|\s|[()])</string>
			<key>name</key>
			<string>variable.other.global.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()]):(\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])*</string>
			<key>name</key>
			<string>keyword.constant.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=\()(?i:block|case|ccase|ecase|typecase|etypecase|ctypecase|catch|cond|destructuring-bind|do|do*|dolist|dotimes|eval-when|flet|labels|macrolet|generic-flet|generic-labels|handler-case|restart-case|if|lambda|let|let*|handler-bind|restart-bind|locally|multiple-value-bind|multiple-value-call|multiple-value-prog1|prog|prog*|prog1|prog2|progn|progv|return|return-from|symbol-macrolet|tagbody|throw|unless|unwind-protect|when|with-accessors|with-condition-restarts|with-open-file|with-output-to-string|with-slots|with-standard-io-syntax|loop|declare|declaim|proclaim|setq|setf|quote|with-\S+)(?=\s+)</string>
			<key>name</key>
			<string>keyword.control.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(?i:nil|t)(?=$|\s|[()])</string>
			<key>name</key>
			<string>constant.language.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.lisp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.lisp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.lisp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.lisp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.lisp</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.lisp</string>
	<key>uuid</key>
	<string>00D451C9-6B1D-11D9-8DFA-000D93589AF6</string>
</dict>
</plist>
